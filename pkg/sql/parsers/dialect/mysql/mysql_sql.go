// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const VECF32 = 57530
const VECF64 = 57531
const GEOMETRY = 57532
const POINT = 57533
const LINESTRING = 57534
const POLYGON = 57535
const GEOMETRYCOLLECTION = 57536
const MULTIPOINT = 57537
const MULTILINESTRING = 57538
const MULTIPOLYGON = 57539
const INT1 = 57540
const INT2 = 57541
const INT3 = 57542
const INT4 = 57543
const INT8 = 57544
const S3OPTION = 57545
const STAGEOPTION = 57546
const SQL_SMALL_RESULT = 57547
const SQL_BIG_RESULT = 57548
const SQL_BUFFER_RESULT = 57549
const LOW_PRIORITY = 57550
const HIGH_PRIORITY = 57551
const DELAYED = 57552
const CREATE = 57553
const ALTER = 57554
const DROP = 57555
const RENAME = 57556
const ANALYZE = 57557
const ADD = 57558
const RETURNS = 57559
const SCHEMA = 57560
const TABLE = 57561
const SEQUENCE = 57562
const INDEX = 57563
const VIEW = 57564
const TO = 57565
const IGNORE = 57566
const IF = 57567
const PRIMARY = 57568
const COLUMN = 57569
const CONSTRAINT = 57570
const SPATIAL = 57571
const FULLTEXT = 57572
const FOREIGN = 57573
const KEY_BLOCK_SIZE = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const MAXVALUE = 57583
const PARTITION = 57584
const REORGANIZE = 57585
const LESS = 57586
const THAN = 57587
const PROCEDURE = 57588
const TRIGGER = 57589
const STATUS = 57590
const VARIABLES = 57591
const ROLE = 57592
const PROXY = 57593
const AVG_ROW_LENGTH = 57594
const STORAGE = 57595
const DISK = 57596
const MEMORY = 57597
const CHECKSUM = 57598
const COMPRESSION = 57599
const DATA = 57600
const DIRECTORY = 57601
const DELAY_KEY_WRITE = 57602
const ENCRYPTION = 57603
const ENGINE = 57604
const MAX_ROWS = 57605
const MIN_ROWS = 57606
const PACK_KEYS = 57607
const ROW_FORMAT = 57608
const STATS_AUTO_RECALC = 57609
const STATS_PERSISTENT = 57610
const STATS_SAMPLE_PAGES = 57611
const DYNAMIC = 57612
const COMPRESSED = 57613
const REDUNDANT = 57614
const COMPACT = 57615
const FIXED = 57616
const COLUMN_FORMAT = 57617
const AUTO_RANDOM = 57618
const ENGINE_ATTRIBUTE = 57619
const SECONDARY_ENGINE_ATTRIBUTE = 57620
const INSERT_METHOD = 57621
const RESTRICT = 57622
const CASCADE = 57623
const ACTION = 57624
const PARTIAL = 57625
const SIMPLE = 57626
const CHECK = 57627
const ENFORCED = 57628
const RANGE = 57629
const LIST = 57630
const ALGORITHM = 57631
const LINEAR = 57632
const PARTITIONS = 57633
const SUBPARTITION = 57634
const SUBPARTITIONS = 57635
const CLUSTER = 57636
const TYPE = 57637
const ANY = 57638
const SOME = 57639
const EXTERNAL = 57640
const LOCALFILE = 57641
const URL = 57642
const PREPARE = 57643
const DEALLOCATE = 57644
const RESET = 57645
const EXTENSION = 57646
const INCREMENT = 57647
const CYCLE = 57648
const MINVALUE = 57649
const PUBLICATION = 57650
const SUBSCRIPTIONS = 57651
const PUBLICATIONS = 57652
const PROPERTIES = 57653
const PARSER = 57654
const VISIBLE = 57655
const INVISIBLE = 57656
const BTREE = 57657
const HASH = 57658
const RTREE = 57659
const BSI = 57660
const IVFFLAT = 57661
const ZONEMAP = 57662
const LEADING = 57663
const BOTH = 57664
const TRAILING = 57665
const UNKNOWN = 57666
const LISTS = 57667
const SIMILARITY_FUNCTION = 57668
const EXPIRE = 57669
const ACCOUNT = 57670
const ACCOUNTS = 57671
const UNLOCK = 57672
const DAY = 57673
const NEVER = 57674
const PUMP = 57675
const MYSQL_COMPATIBILITY_MODE = 57676
const MODIFY = 57677
const CHANGE = 57678
const SECOND = 57679
const ASCII = 57680
const COALESCE = 57681
const COLLATION = 57682
const HOUR = 57683
const MICROSECOND = 57684
const MINUTE = 57685
const MONTH = 57686
const QUARTER = 57687
const REPEAT = 57688
const REVERSE = 57689
const ROW_COUNT = 57690
const WEEK = 57691
const REVOKE = 57692
const FUNCTION = 57693
const PRIVILEGES = 57694
const TABLESPACE = 57695
const EXECUTE = 57696
const SUPER = 57697
const GRANT = 57698
const OPTION = 57699
const REFERENCES = 57700
const REPLICATION = 57701
const SLAVE = 57702
const CLIENT = 57703
const USAGE = 57704
const RELOAD = 57705
const FILE = 57706
const TEMPORARY = 57707
const ROUTINE = 57708
const EVENT = 57709
const SHUTDOWN = 57710
const NULLX = 57711
const AUTO_INCREMENT = 57712
const APPROXNUM = 57713
const SIGNED = 57714
const UNSIGNED = 57715
const ZEROFILL = 57716
const ENGINES = 57717
const LOW_CARDINALITY = 57718
const AUTOEXTEND_SIZE = 57719
const ADMIN_NAME = 57720
const RANDOM = 57721
const SUSPEND = 57722
const ATTRIBUTE = 57723
const HISTORY = 57724
const REUSE = 57725
const CURRENT = 57726
const OPTIONAL = 57727
const FAILED_LOGIN_ATTEMPTS = 57728
const PASSWORD_LOCK_TIME = 57729
const UNBOUNDED = 57730
const SECONDARY = 57731
const RESTRICTED = 57732
const USER = 57733
const IDENTIFIED = 57734
const CIPHER = 57735
const ISSUER = 57736
const X509 = 57737
const SUBJECT = 57738
const SAN = 57739
const REQUIRE = 57740
const SSL = 57741
const NONE = 57742
const PASSWORD = 57743
const SHARED = 57744
const EXCLUSIVE = 57745
const MAX_QUERIES_PER_HOUR = 57746
const MAX_UPDATES_PER_HOUR = 57747
const MAX_CONNECTIONS_PER_HOUR = 57748
const MAX_USER_CONNECTIONS = 57749
const FORMAT = 57750
const VERBOSE = 57751
const CONNECTION = 57752
const TRIGGERS = 57753
const PROFILES = 57754
const LOAD = 57755
const INLINE = 57756
const INFILE = 57757
const TERMINATED = 57758
const OPTIONALLY = 57759
const ENCLOSED = 57760
const ESCAPED = 57761
const STARTING = 57762
const LINES = 57763
const ROWS = 57764
const IMPORT = 57765
const DISCARD = 57766
const MODUMP = 57767
const OVER = 57768
const PRECEDING = 57769
const FOLLOWING = 57770
const GROUPS = 57771
const DATABASES = 57772
const TABLES = 57773
const SEQUENCES = 57774
const EXTENDED = 57775
const FULL = 57776
const PROCESSLIST = 57777
const FIELDS = 57778
const COLUMNS = 57779
const OPEN = 57780
const ERRORS = 57781
const WARNINGS = 57782
const INDEXES = 57783
const SCHEMAS = 57784
const NODE = 57785
const LOCKS = 57786
const ROLES = 57787
const TABLE_NUMBER = 57788
const COLUMN_NUMBER = 57789
const TABLE_VALUES = 57790
const TABLE_SIZE = 57791
const NAMES = 57792
const GLOBAL = 57793
const PERSIST = 57794
const SESSION = 57795
const ISOLATION = 57796
const LEVEL = 57797
const READ = 57798
const WRITE = 57799
const ONLY = 57800
const REPEATABLE = 57801
const COMMITTED = 57802
const UNCOMMITTED = 57803
const SERIALIZABLE = 57804
const LOCAL = 57805
const EVENTS = 57806
const PLUGINS = 57807
const CURRENT_TIMESTAMP = 57808
const DATABASE = 57809
const CURRENT_TIME = 57810
const LOCALTIME = 57811
const LOCALTIMESTAMP = 57812
const UTC_DATE = 57813
const UTC_TIME = 57814
const UTC_TIMESTAMP = 57815
const REPLACE = 57816
const CONVERT = 57817
const SEPARATOR = 57818
const TIMESTAMPDIFF = 57819
const CURRENT_DATE = 57820
const CURRENT_USER = 57821
const CURRENT_ROLE = 57822
const SECOND_MICROSECOND = 57823
const MINUTE_MICROSECOND = 57824
const MINUTE_SECOND = 57825
const HOUR_MICROSECOND = 57826
const HOUR_SECOND = 57827
const HOUR_MINUTE = 57828
const DAY_MICROSECOND = 57829
const DAY_SECOND = 57830
const DAY_MINUTE = 57831
const DAY_HOUR = 57832
const YEAR_MONTH = 57833
const SQL_TSI_HOUR = 57834
const SQL_TSI_DAY = 57835
const SQL_TSI_WEEK = 57836
const SQL_TSI_MONTH = 57837
const SQL_TSI_QUARTER = 57838
const SQL_TSI_YEAR = 57839
const SQL_TSI_SECOND = 57840
const SQL_TSI_MINUTE = 57841
const RECURSIVE = 57842
const CONFIG = 57843
const DRAINER = 57844
const SOURCE = 57845
const STREAM = 57846
const HEADERS = 57847
const CONNECTOR = 57848
const CONNECTORS = 57849
const DAEMON = 57850
const PAUSE = 57851
const CANCEL = 57852
const TASK = 57853
const RESUME = 57854
const MATCH = 57855
const AGAINST = 57856
const BOOLEAN = 57857
const LANGUAGE = 57858
const WITH = 57859
const QUERY = 57860
const EXPANSION = 57861
const WITHOUT = 57862
const VALIDATION = 57863
const ADDDATE = 57864
const BIT_AND = 57865
const BIT_OR = 57866
const BIT_XOR = 57867
const CAST = 57868
const COUNT = 57869
const APPROX_COUNT = 57870
const APPROX_COUNT_DISTINCT = 57871
const APPROX_PERCENTILE = 57872
const CURDATE = 57873
const CURTIME = 57874
const DATE_ADD = 57875
const DATE_SUB = 57876
const EXTRACT = 57877
const GROUP_CONCAT = 57878
const MAX = 57879
const MID = 57880
const MIN = 57881
const NOW = 57882
const POSITION = 57883
const SESSION_USER = 57884
const STD = 57885
const STDDEV = 57886
const MEDIAN = 57887
const STDDEV_POP = 57888
const STDDEV_SAMP = 57889
const SUBDATE = 57890
const SUBSTR = 57891
const SUBSTRING = 57892
const SUM = 57893
const SYSDATE = 57894
const SYSTEM_USER = 57895
const TRANSLATE = 57896
const TRIM = 57897
const VARIANCE = 57898
const VAR_POP = 57899
const VAR_SAMP = 57900
const AVG = 57901
const RANK = 57902
const ROW_NUMBER = 57903
const DENSE_RANK = 57904
const BIT_CAST = 57905
const NEXTVAL = 57906
const SETVAL = 57907
const CURRVAL = 57908
const LASTVAL = 57909
const ARROW = 57910
const ROW = 57911
const OUTFILE = 57912
const HEADER = 57913
const MAX_FILE_SIZE = 57914
const FORCE_QUOTE = 57915
const PARALLEL = 57916
const UNUSED = 57917
const BINDINGS = 57918
const DO = 57919
const DECLARE = 57920
const LOOP = 57921
const WHILE = 57922
const LEAVE = 57923
const ITERATE = 57924
const UNTIL = 57925
const CALL = 57926
const PREV = 57927
const SLIDING = 57928
const FILL = 57929
const SPBEGIN = 57930
const BACKEND = 57931
const SERVERS = 57932
const HANDLER = 57933
const KILL = 57934
const BACKUP = 57935
const FILESYSTEM = 57936
const QUERY_RESULT = 57937

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"STAGEOPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"IVFFLAT",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"LISTS",
	"SIMILARITY_FUNCTION",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"CONNECTORS",
	"DAEMON",
	"PAUSE",
	"CANCEL",
	"TASK",
	"RESUME",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"PREV",
	"SLIDING",
	"FILL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"HANDLER",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10708

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 117,
	11, 690,
	21, 690,
	-2, 683,
	-1, 137,
	236, 1071,
	238, 980,
	-2, 1028,
	-1, 161,
	42, 519,
	238, 519,
	265, 526,
	266, 526,
	458, 519,
	-2, 552,
	-1, 200,
	616, 1795,
	-2, 435,
	-1, 550,
	317, 133,
	431, 133,
	432, 133,
	-2, 1701,
	-1, 614,
	81, 1493,
	-2, 1850,
	-1, 615,
	81, 1511,
	-2, 1821,
	-1, 619,
	81, 1512,
	-2, 1849,
	-1, 645,
	81, 1423,
	-2, 1920,
	-1, 646,
	81, 1424,
	-2, 1919,
	-1, 647,
	81, 1425,
	-2, 1909,
	-1, 648,
	81, 1883,
	-2, 1904,
	-1, 649,
	81, 1884,
	-2, 1905,
	-1, 650,
	81, 1885,
	-2, 1911,
	-1, 651,
	81, 1886,
	-2, 1893,
	-1, 652,
	81, 1887,
	-2, 1902,
	-1, 653,
	81, 1888,
	-2, 1912,
	-1, 654,
	81, 1889,
	-2, 1913,
	-1, 655,
	81, 1890,
	-2, 1918,
	-1, 656,
	81, 1891,
	-2, 1923,
	-1, 657,
	81, 1892,
	-2, 1924,
	-1, 659,
	81, 1490,
	-2, 1687,
	-1, 663,
	81, 1495,
	-2, 1702,
	-1, 666,
	81, 1499,
	-2, 1720,
	-1, 670,
	81, 1503,
	-2, 1764,
	-1, 671,
	81, 1504,
	-2, 1845,
	-1, 679,
	81, 1514,
	-2, 1830,
	-1, 680,
	81, 1515,
	-2, 1875,
	-1, 681,
	81, 1516,
	-2, 1840,
	-1, 682,
	81, 1517,
	-2, 1865,
	-1, 693,
	81, 1401,
	-2, 1914,
	-1, 694,
	81, 1402,
	-2, 1915,
	-1, 695,
	81, 1403,
	-2, 1916,
	-1, 779,
	453, 552,
	454, 552,
	-2, 520,
	-1, 825,
	122, 1687,
	133, 1687,
	153, 1687,
	-2, 1661,
	-1, 934,
	21, 717,
	-2, 666,
	-1, 1035,
	11, 690,
	21, 690,
	-2, 1298,
	-1, 1108,
	21, 717,
	-2, 666,
	-1, 1419,
	81, 1561,
	-2, 1847,
	-1, 1420,
	81, 1562,
	-2, 1848,
	-1, 1559,
	82, 866,
	-2, 872,
	-1, 1962,
	105, 1018,
	149, 1018,
	188, 1018,
	191, 1018,
	278, 1018,
	-2, 1011,
	-1, 2102,
	11, 690,
	21, 690,
	-2, 810,
	-1, 2134,
	82, 1647,
	154, 1647,
	-2, 1832,
	-1, 2135,
	82, 1647,
	154, 1647,
	-2, 1831,
	-1, 2136,
	82, 1623,
	154, 1623,
	-2, 1818,
	-1, 2137,
	82, 1624,
	154, 1624,
	-2, 1823,
	-1, 2138,
	82, 1625,
	154, 1625,
	-2, 1752,
	-1, 2139,
	82, 1626,
	154, 1626,
	-2, 1746,
	-1, 2140,
	82, 1627,
	154, 1627,
	-2, 1677,
	-1, 2141,
	82, 1628,
	154, 1628,
	-2, 1820,
	-1, 2142,
	82, 1629,
	154, 1629,
	-2, 1750,
	-1, 2143,
	82, 1630,
	154, 1630,
	-2, 1745,
	-1, 2144,
	82, 1631,
	154, 1631,
	-2, 1734,
	-1, 2145,
	82, 1647,
	154, 1647,
	-2, 1735,
	-1, 2146,
	82, 1647,
	154, 1647,
	-2, 1736,
	-1, 2148,
	82, 1636,
	154, 1636,
	-2, 1865,
	-1, 2149,
	82, 1614,
	154, 1614,
	-2, 1850,
	-1, 2150,
	82, 1645,
	154, 1645,
	-2, 1821,
	-1, 2151,
	82, 1645,
	154, 1645,
	-2, 1849,
	-1, 2152,
	82, 1645,
	154, 1645,
	-2, 1703,
	-1, 2153,
	82, 1643,
	154, 1643,
	-2, 1840,
	-1, 2154,
	82, 1640,
	154, 1640,
	-2, 1725,
	-1, 2155,
	81, 1595,
	82, 1595,
	154, 1595,
	389, 1595,
	390, 1595,
	391, 1595,
	-2, 1676,
	-1, 2156,
	81, 1596,
	82, 1596,
	154, 1596,
	389, 1596,
	390, 1596,
	391, 1596,
	-2, 1678,
	-1, 2157,
	81, 1599,
	82, 1599,
	154, 1599,
	389, 1599,
	390, 1599,
	391, 1599,
	-2, 1822,
	-1, 2158,
	81, 1601,
	82, 1601,
	154, 1601,
	389, 1601,
	390, 1601,
	391, 1601,
	-2, 1804,
	-1, 2159,
	81, 1603,
	82, 1603,
	154, 1603,
	389, 1603,
	390, 1603,
	391, 1603,
	-2, 1751,
	-1, 2160,
	81, 1605,
	82, 1605,
	154, 1605,
	389, 1605,
	390, 1605,
	391, 1605,
	-2, 1730,
	-1, 2161,
	81, 1606,
	82, 1606,
	154, 1606,
	389, 1606,
	390, 1606,
	391, 1606,
	-2, 1731,
	-1, 2162,
	81, 1608,
	82, 1608,
	154, 1608,
	389, 1608,
	390, 1608,
	391, 1608,
	-2, 1675,
	-1, 2163,
	82, 1650,
	154, 1650,
	389, 1650,
	390, 1650,
	391, 1650,
	-2, 1708,
	-1, 2164,
	82, 1650,
	154, 1650,
	389, 1650,
	390, 1650,
	391, 1650,
	-2, 1721,
	-1, 2165,
	82, 1653,
	154, 1653,
	389, 1653,
	390, 1653,
	391, 1653,
	-2, 1704,
	-1, 2166,
	82, 1653,
	154, 1653,
	389, 1653,
	390, 1653,
	391, 1653,
	-2, 1767,
	-1, 2167,
	82, 1650,
	154, 1650,
	389, 1650,
	390, 1650,
	391, 1650,
	-2, 1788,
	-1, 2351,
	105, 1018,
	149, 1018,
	188, 1018,
	191, 1018,
	278, 1018,
	-2, 1012,
	-1, 2364,
	79, 611,
	154, 611,
	-2, 1184,
	-1, 2712,
	191, 1018,
	302, 1266,
	-2, 1238,
	-1, 2861,
	105, 1018,
	149, 1018,
	188, 1018,
	191, 1018,
	-2, 1127,
	-1, 2863,
	105, 1018,
	149, 1018,
	188, 1018,
	191, 1018,
	-2, 1127,
	-1, 2873,
	79, 611,
	154, 611,
	-2, 1185,
	-1, 2881,
	191, 1018,
	302, 1266,
	-2, 1239,
	-1, 3015,
	105, 1018,
	149, 1018,
	188, 1018,
	191, 1018,
	-2, 1128,
	-1, 3402,
	82, 1089,
	154, 1089,
	-2, 1018,
	-1, 3406,
	82, 1089,
	154, 1089,
	-2, 1018,
	-1, 3420,
	82, 1093,
	154, 1093,
	-2, 1018,
	-1, 3425,
	82, 1094,
	154, 1094,
	-2, 1018,
}

const yyPrivate = 57344

const yyLast = 39386

var yyAct = [...]int{
	581, 1640, 3406, 3405, 3414, 3385, 191, 559, 1399, 3269,
	561, 3333, 583, 3355, 554, 3277, 3295, 3278, 2730, 3197,
	3182, 569, 2957, 1249, 3056, 2895, 2217, 2796, 1068, 3173,
	3003, 2963, 1395, 3201, 3000, 3002, 1335, 3093, 3082, 2797,
	463, 611, 935, 3130, 1325, 1188, 2961, 824, 2321, 2831,
	473, 3183, 478, 478, 3185, 2952, 563, 1592, 478, 494,
	503, 2848, 2882, 503, 3007, 3014, 1594, 2367, 3021, 1402,
	2979, 2004, 2684, 2644, 2794, 1729, 2483, 3017, 2673, 2484,
	2837, 2466, 2406, 2727, 2716, 2864, 2709, 2545, 2482, 2476,
	176, 514, 2782, 1832, 1694, 1455, 1702, 2007, 2505, 2642,
	2132, 2130, 2762, 1797, 508, 2479, 2341, 2654, 2690, 2652,
	2657, 1242, 1972, 2645, 552, 2096, 2352, 928, 2080, 2715,
	1939, 1930, 1726, 1744, 558, 1828, 1817, 2518, 2200, 2588,
	1929, 1539, 1806, 1798, 1771, 1321, 1326, 1805, 2034, 1163,
	755, 2183, 2528, 1329, 1722, 1827, 1697, 2097, 477, 477,
	2085, 553, 1695, 1161, 485, 55, 2330, 2388, 2325, 2005,
	1622, 1632, 2359, 187, 8, 463, 818, 186, 7, 6,
	1971, 2252, 2128, 1569, 880, 1862, 1334, 1393, 1829, 562,
	1258, 1351, 1288, 116, 35, 2000, 1314, 1953, 472, 1228,
	1839, 191, 2647, 191, 1603, 871, 872, 1398, 1449, 1604,
	1433, 551, 2283, 865, 866, 2646, 462, 490, 870, 787,
	1384, 2282, 26, 570, 15, 946, 1804, 13, 1787, 1801,
	1295, 14, 1392, 1761, 817, 32, 1227, 754, 1568, 487,
	2104, 2386, 1225, 1197, 1456, 697, 517, 516, 1177, 553,
	1281, 1189, 36, 23, 177, 16, 1287, 10, 732, 167,
	502, 752, 1106, 1173, 1069, 173, 737, 1836, 868, 2851,
	1846, 2240, 3124, 2311, 2311, 2311, 1140, 2789, 774, 2189,
	2187, 499, 2186, 495, 2184, 1552, 497, 1302, 1298, 863,
	498, 867, 864, 869, 496, 864, 175, 474, 1125, 3340,
	864, 1210, 560, 1546, 1121, 2885, 2304, 2302, 1300, 2950,
	2541, 500, 2539, 1776, 3089, 483, 1004, 1005, 1006, 1003,
	3083, 2953, 2795, 506, 1004, 1005, 1006, 1003, 1814, 3187,
	1800, 1063, 698, 2042, 833, 174, 51, 163, 138, 709,
	2320, 2989, 967, 2897, 1126, 2226, 2306, 3260, 3141, 8,
	852, 174, 174, 7, 174, 862, 2888, 1833, 174, 2322,
	174, 2980, 830, 832, 1964, 174, 2883, 174, 51, 163,
	138, 2905, 2906, 174, 3110, 3220, 1349, 2884, 1342, 2234,
	1268, 1267, 1266, 174, 51, 163, 138, 836, 834, 835,
	1135, 1563, 3142, 2612, 513, 1844, 1153, 512, 1385, 2560,
	2553, 1389, 115, 806, 168, 1127, 1346, 1957, 1339, 2122,
	1369, 3112, 1206, 115, 2889, 1207, 699, 700, 1001, 1739,
	168, 168, 2123, 168, 1229, 1388, 1231, 1348, 982, 1341,
	2511, 983, 2110, 1706, 168, 2109, 168, 688, 2111, 687,
	689, 690, 168, 691, 692, 975, 3316, 710, 977, 2512,
	2513, 2201, 168, 1707, 1708, 1553, 1554, 1195, 1196, 985,
	1193, 1185, 796, 2327, 1192, 1195, 1196, 3281, 3282, 3314,
	2972, 1618, 994, 2328, 1401, 999, 978, 827, 826, 3190,
	3251, 3189, 3250, 3188, 3249, 3190, 3189, 478, 3188, 1920,
	3253, 3091, 847, 842, 837, 841, 845, 478, 939, 3299,
	3300, 1209, 2798, 2546, 3175, 3257, 3175, 1390, 2904, 2547,
	2008, 2548, 3178, 1405, 3086, 503, 503, 2798, 478, 1134,
	850, 2326, 2221, 940, 840, 3094, 3095, 3096, 3097, 1848,
	1387, 2422, 1723, 3194, 2811, 2893, 2838, 980, 1713, 1380,
	1840, 1301, 1299, 2845, 2658, 949, 802, 800, 2074, 801,
	1784, 137, 2307, 172, 971, 2994, 743, 2890, 2894, 2892,
	2891, 2314, 2907, 1717, 1308, 1307, 2666, 1951, 2040, 3255,
	997, 998, 874, 161, 949, 848, 2576, 2951, 996, 973,
	1007, 2668, 851, 930, 828, 829, 3262, 3263, 2333, 1036,
	3118, 976, 979, 937, 2231, 2899, 2900, 1045, 3258, 3259,
	981, 970, 838, 2540, 2578, 2971, 2470, 932, 3121, 2662,
	2991, 1037, 2973, 962, 958, 2077, 547, 972, 3280, 549,
	1052, 2663, 2664, 939, 548, 849, 2076, 1404, 1403, 1490,
	2081, 3309, 745, 2691, 746, 807, 2682, 2665, 2728, 2729,
	2907, 3146, 3212, 3207, 2360, 1845, 1386, 2345, 2347, 2348,
	2349, 2346, 2886, 987, 3138, 803, 988, 1183, 2898, 833,
	1208, 505, 2305, 2919, 2475, 839, 1959, 1737, 1738, 504,
	727, 1137, 1136, 1219, 2912, 3202, 984, 3318, 3399, 1072,
	992, 993, 3415, 740, 990, 736, 3346, 830, 832, 1124,
	3313, 3267, 3268, 974, 3271, 3353, 1198, 3271, 1851, 1853,
	1854, 3106, 1172, 2922, 3107, 2023, 2732, 3193, 3047, 942,
	943, 2003, 2025, 3379, 499, 499, 495, 495, 805, 497,
	497, 2660, 1834, 498, 498, 1834, 2051, 496, 496, 938,
	833, 1132, 473, 3123, 2814, 2582, 2310, 1834, 951, 950,
	2050, 846, 3036, 2964, 500, 500, 2339, 934, 953, 1104,
	3042, 1238, 1109, 2071, 2072, 3358, 959, 3109, 830, 832,
	1237, 960, 986, 1170, 755, 955, 956, 951, 950, 2024,
	1169, 864, 3386, 864, 864, 1187, 1186, 864, 843, 2010,
	844, 944, 864, 864, 1168, 501, 3140, 2903, 3108, 3416,
	3261, 2865, 3422, 2322, 804, 1043, 3131, 1847, 3147, 1835,
	991, 501, 2185, 3057, 3058, 3059, 3062, 3061, 3060, 929,
	1303, 3139, 742, 478, 735, 1221, 1194, 2125, 1195, 1196,
	2629, 463, 463, 739, 738, 989, 3410, 1863, 2003, 1191,
	463, 463, 3113, 2948, 1253, 1253, 698, 478, 2801, 3172,
	721, 1195, 1196, 1141, 728, 512, 52, 2303, 1226, 169,
	170, 2659, 171, 2902, 1073, 2990, 2020, 139, 1255, 503,
	1282, 473, 52, 1724, 1291, 1291, 1251, 1251, 1039, 1040,
	1041, 1042, 967, 139, 139, 191, 139, 1184, 1290, 1290,
	139, 1260, 139, 744, 463, 1081, 1082, 139, 734, 139,
	2669, 3359, 733, 2235, 2332, 139, 3254, 2731, 720, 3119,
	933, 829, 726, 3319, 2724, 139, 961, 1166, 2423, 1217,
	2424, 2425, 1171, 2579, 2227, 2114, 2009, 2995, 2661, 1181,
	1133, 2011, 724, 2038, 1714, 1381, 1837, 1200, 1201, 1146,
	1203, 1204, 1205, 1259, 1309, 1333, 2581, 1336, 1852, 745,
	1151, 746, 1344, 1247, 1248, 1150, 1411, 1414, 1415, 1716,
	2336, 2337, 2450, 2728, 2729, 3409, 1149, 1412, 966, 743,
	2523, 2524, 1108, 1367, 507, 2335, 1110, 2825, 2013, 3421,
	3049, 2725, 2420, 2507, 2509, 2012, 1158, 1253, 2313, 1253,
	939, 3043, 3044, 1849, 1850, 725, 1350, 1233, 1235, 3038,
	1139, 2590, 2589, 3037, 1935, 1934, 1245, 1246, 1933, 2010,
	2013, 1130, 1142, 1143, 1144, 1145, 3102, 1147, 2441, 2442,
	3184, 1557, 1152, 716, 1220, 1160, 1179, 1180, 749, 750,
	751, 1556, 3356, 3357, 1362, 1363, 1932, 1406, 1407, 1408,
	1409, 1410, 1128, 1129, 747, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1323, 1324, 1283,
	1304, 1444, 1445, 1211, 1212, 1199, 2063, 1555, 1202, 1236,
	1454, 741, 2019, 712, 715, 2802, 2017, 1328, 718, 717,
	1332, 1451, 1452, 1453, 1503, 713, 1331, 3022, 1312, 1487,
	1315, 1316, 797, 1004, 1005, 1006, 1003, 1497, 1595, 1942,
	3361, 1317, 1318, 483, 833, 1261, 1512, 1002, 833, 2014,
	731, 1274, 1955, 3428, 1397, 1493, 1494, 1495, 1595, 1280,
	2365, 1292, 1943, 1944, 2759, 1382, 1366, 1895, 1509, 1293,
	1894, 1510, 3427, 1138, 1365, 2094, 2037, 1764, 967, 2610,
	2440, 2014, 1541, 939, 1519, 1520, 2009, 2003, 2008, 2508,
	2006, 2011, 936, 2203, 1416, 1282, 2755, 1378, 2828, 3418,
	2813, 1566, 3400, 1253, 1571, 1572, 3395, 1574, 1575, 478,
	1537, 1488, 1358, 478, 1383, 799, 1253, 499, 798, 495,
	755, 2726, 497, 1593, 1394, 1002, 498, 1375, 1253, 1372,
	496, 1340, 1371, 1923, 1221, 1347, 1413, 1353, 2226, 494,
	744, 965, 1002, 1540, 1002, 2012, 936, 500, 808, 2451,
	2453, 2454, 2455, 2452, 3389, 2734, 1502, 1376, 1374, 1617,
	1373, 1400, 1370, 1391, 1396, 1613, 1954, 1623, 1623, 3388,
	1221, 3419, 1221, 1221, 1842, 2095, 478, 478, 3396, 1566,
	1566, 3366, 2696, 1253, 1691, 1692, 1704, 964, 3335, 1565,
	1485, 1486, 2633, 1489, 1621, 2759, 2631, 1573, 2366, 2095,
	463, 1504, 1253, 1435, 3289, 1576, 2095, 3283, 1609, 1580,
	797, 855, 860, 861, 1511, 1762, 1513, 1541, 702, 703,
	704, 705, 1541, 1541, 1616, 3230, 1842, 1619, 1620, 2526,
	478, 1566, 1253, 2316, 1749, 1002, 478, 478, 478, 1754,
	1755, 1842, 702, 703, 704, 705, 1759, 1760, 3165, 3164,
	1543, 1766, 967, 1842, 2680, 1642, 2308, 2366, 191, 2844,
	3336, 191, 191, 965, 191, 3160, 1740, 1686, 1687, 1601,
	1602, 1774, 1629, 1630, 1777, 2216, 3290, 1780, 1514, 3127,
	1782, 3159, 2208, 3158, 1442, 1443, 1611, 1612, 2125, 1105,
	1718, 1833, 1705, 799, 1264, 1998, 798, 3127, 3157, 1928,
	1570, 1538, 1503, 1503, 1808, 1710, 1899, 1712, 1824, 1503,
	1503, 1544, 1988, 1585, 1548, 1735, 1819, 1730, 1731, 1746,
	3166, 1976, 3126, 1159, 1748, 1598, 1745, 1725, 1624, 1818,
	1732, 1733, 1745, 1745, 1745, 1560, 1447, 3127, 1239, 3106,
	1593, 3383, 3107, 3337, 1253, 1831, 2876, 1590, 1775, 2697,
	1589, 1778, 1779, 3127, 1781, 3127, 1813, 3101, 2983, 1751,
	1752, 1753, 1561, 1562, 707, 1564, 1627, 1628, 1606, 1626,
	3127, 1605, 2530, 1607, 1608, 2368, 1577, 1578, 1579, 2926,
	1570, 1610, 1600, 2681, 2229, 2228, 2220, 1614, 707, 2701,
	1993, 1890, 1875, 1615, 3127, 3109, 3071, 1825, 1004, 1005,
	1006, 1003, 857, 858, 859, 2857, 2743, 2502, 1860, 1861,
	1809, 1690, 1174, 1178, 1178, 1178, 1693, 1596, 1597, 1709,
	1823, 1711, 1866, 1769, 1719, 1870, 3108, 1757, 2289, 1394,
	2984, 1355, 1049, 1856, 1803, 1625, 1174, 1174, 1874, 952,
	931, 1803, 926, 2281, 1987, 2242, 2224, 584, 594, 924,
	2924, 2125, 2212, 1734, 1747, 1019, 585, 833, 593, 586,
	590, 589, 587, 588, 833, 1881, 714, 1004, 1005, 1006,
	1003, 2573, 2210, 1888, 2205, 1772, 1770, 2858, 2744, 2095,
	1175, 2787, 2198, 2196, 2194, 830, 832, 2192, 2692, 1492,
	1491, 1901, 830, 832, 1975, 1815, 1906, 1907, 1908, 1789,
	1002, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 3375,
	1924, 591, 1900, 1873, 1902, 1002, 1905, 1002, 1976, 552,
	1904, 1909, 478, 478, 2206, 478, 1812, 1821, 1810, 1893,
	1884, 1883, 499, 1882, 495, 3362, 1822, 497, 478, 478,
	478, 498, 1841, 592, 2211, 496, 2206, 1241, 1359, 3208,
	1973, 2106, 833, 1826, 2199, 2197, 2193, 1492, 1491, 2193,
	1980, 1221, 500, 1164, 2693, 3023, 1976, 1165, 1476, 2868,
	1977, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1019, 1864,
	830, 832, 1923, 2866, 1243, 2035, 1221, 3125, 1002, 3098,
	719, 1855, 1002, 3209, 3040, 1244, 1176, 3039, 1857, 1525,
	2030, 1002, 1002, 1002, 2996, 1002, 2850, 1868, 2694, 3024,
	2760, 1435, 2753, 2869, 1842, 2748, 2745, 2675, 1946, 1947,
	1360, 1949, 2472, 931, 2343, 1441, 2312, 2867, 1982, 1983,
	2239, 2209, 2184, 2249, 1965, 1966, 1967, 2116, 1985, 1986,
	1155, 1438, 1440, 1437, 3102, 1439, 1240, 1154, 3103, 941,
	2036, 1022, 1023, 1024, 1025, 1026, 1019, 2178, 1773, 1450,
	2099, 2099, 1704, 2099, 1515, 1516, 1517, 1518, 2532, 1521,
	1522, 1523, 1524, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 463, 463, 1006, 1003, 1541, 1925, 1541, 1450, 939,
	1869, 1858, 1859, 1567, 3248, 1253, 478, 1919, 1921, 1922,
	1003, 1004, 1005, 1006, 1003, 1541, 1541, 1004, 1005, 1006,
	1003, 478, 2790, 1296, 1989, 1773, 2788, 939, 2168, 473,
	1936, 1956, 3052, 1291, 3051, 1704, 2549, 2120, 2173, 1472,
	2175, 2412, 2411, 2394, 191, 1469, 2392, 1290, 3031, 1471,
	1468, 1470, 1474, 1475, 1997, 1072, 2041, 1473, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 1981, 2103, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 1507, 2064,
	2065, 2066, 2067, 2068, 3404, 2069, 2101, 3392, 2105, 3378,
	2015, 2016, 1508, 2021, 2222, 1994, 2002, 1831, 2170, 1051,
	1948, 1886, 1259, 2112, 1253, 2113, 1253, 2177, 1253, 2001,
	2997, 2998, 1050, 939, 1984, 3347, 3342, 1745, 2992, 1990,
	2842, 2241, 1991, 2117, 2118, 1174, 3341, 833, 2342, 2172,
	1992, 2462, 2460, 3273, 2179, 2458, 3239, 3210, 2232, 1178,
	1004, 1005, 1006, 1003, 2127, 1253, 2268, 3150, 2078, 2251,
	3377, 1178, 3143, 2447, 2250, 830, 832, 1233, 1235, 3084,
	3026, 2275, 3025, 2269, 2270, 2107, 1253, 1885, 2267, 2870,
	2841, 2272, 2273, 2667, 2993, 2277, 2843, 1251, 2569, 1004,
	1005, 1006, 1003, 2544, 2278, 2543, 2121, 2461, 2459, 2276,
	2188, 2457, 2124, 1004, 1005, 1006, 1003, 2603, 1251, 2445,
	1479, 1480, 1481, 1482, 1483, 1484, 1477, 1478, 1541, 2446,
	2444, 2443, 939, 2279, 2435, 2171, 939, 2169, 2429, 478,
	1004, 1005, 1006, 1003, 2428, 1253, 2427, 2426, 2340, 2180,
	1073, 2309, 1927, 1792, 1566, 1004, 1005, 1006, 1003, 1791,
	1790, 2364, 2253, 2253, 1297, 1786, 1785, 2370, 2238, 1004,
	1005, 1006, 1003, 2233, 1743, 1742, 2602, 1296, 2133, 1741,
	2247, 1356, 1123, 2849, 2380, 2214, 2477, 2653, 3365, 2300,
	3308, 939, 2374, 2375, 2223, 2225, 2218, 2219, 3307, 2391,
	3274, 2230, 1004, 1005, 1006, 1003, 939, 939, 939, 1623,
	547, 3304, 939, 549, 2402, 2403, 2404, 939, 548, 2408,
	2409, 1394, 2410, 2958, 2243, 2244, 1004, 1005, 1006, 1003,
	2353, 3301, 3196, 3001, 2256, 2323, 3181, 3170, 2258, 3154,
	3149, 2373, 2354, 3148, 3122, 2099, 2376, 1027, 1028, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1019, 2362, 3120, 2463,
	2361, 2371, 3085, 3033, 2236, 3010, 1642, 463, 1004, 1005,
	1006, 1003, 1566, 939, 1704, 1704, 1704, 1704, 2956, 2954,
	2329, 1004, 1005, 1006, 1003, 939, 1704, 2382, 2933, 2099,
	2319, 2930, 2928, 2324, 2389, 2467, 3200, 2840, 2389, 2839,
	2836, 2274, 2819, 2754, 2385, 1253, 2284, 2285, 2318, 2975,
	2750, 2372, 2290, 2741, 3217, 2740, 478, 478, 2338, 2396,
	2377, 2378, 1004, 1005, 1006, 1003, 2676, 2637, 8, 2636,
	2635, 2363, 7, 1931, 2369, 1004, 1005, 1006, 1003, 2583,
	2580, 2542, 1570, 2516, 2456, 2448, 2246, 2438, 2381, 2436,
	2384, 511, 2432, 2431, 2387, 2430, 644, 643, 2393, 2215,
	1794, 2498, 1788, 2317, 1551, 2418, 2419, 2133, 1550, 2400,
	1357, 191, 3417, 1080, 1076, 1075, 191, 927, 2966, 2433,
	2434, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1008, 2536,
	711, 2538, 2437, 1004, 1005, 1006, 1003, 1503, 174, 1503,
	163, 138, 2559, 2469, 1004, 1005, 1006, 1003, 3213, 1541,
	3099, 2568, 2520, 2521, 1541, 2987, 2379, 1253, 2965, 2976,
	2575, 1818, 2468, 2863, 2527, 2473, 2486, 2487, 2488, 2489,
	2862, 2916, 2499, 2471, 2497, 2861, 2501, 2827, 2397, 2398,
	2500, 2823, 2818, 2401, 1004, 1005, 1006, 1003, 2407, 2803,
	2514, 2517, 2793, 2792, 2778, 2777, 2586, 1004, 1005, 1006,
	1003, 2533, 2702, 2640, 2390, 2630, 2537, 168, 2769, 2608,
	1540, 2601, 3374, 2510, 2593, 2558, 2592, 1323, 1324, 2607,
	1017, 1027, 1028, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1019, 1328, 2587, 2525, 1332, 2315, 2195, 2596, 1178, 2598,
	1331, 2556, 2191, 1878, 2485, 2190, 2534, 2562, 1910, 2572,
	2531, 939, 1316, 1903, 2535, 1898, 2485, 2577, 1896, 1892,
	2656, 1891, 1317, 1318, 1889, 1880, 2552, 2550, 1877, 2555,
	2671, 1876, 2563, 2565, 2564, 478, 2557, 2816, 1793, 1536,
	2259, 1872, 2571, 1535, 1534, 1506, 2685, 939, 939, 939,
	1505, 833, 1496, 174, 1265, 1263, 1704, 1973, 833, 2700,
	2585, 2584, 3368, 1004, 1005, 1006, 1003, 3354, 923, 919,
	920, 921, 922, 3351, 2264, 2591, 2263, 2262, 2260, 2714,
	3349, 2717, 3238, 2717, 2717, 2599, 2600, 1070, 939, 2597,
	3167, 2679, 3156, 3151, 2632, 1004, 1005, 1006, 1003, 1311,
	2721, 3066, 2736, 3050, 3046, 2941, 2939, 2914, 2639, 1253,
	1253, 2913, 2910, 2733, 2909, 1004, 1005, 1006, 1003, 2353,
	2852, 2650, 168, 2634, 2735, 2606, 2649, 2638, 1322, 2703,
	1313, 2677, 2737, 2738, 2704, 2705, 2594, 2595, 2554, 2605,
	1327, 1251, 1251, 2261, 1330, 2561, 2687, 2688, 2689, 2672,
	2698, 1004, 1005, 1006, 1003, 478, 1319, 1162, 2678, 2464,
	2656, 2395, 2358, 2713, 2357, 1004, 1005, 1006, 1003, 2699,
	2695, 1566, 1566, 2722, 2356, 2355, 2299, 2712, 2604, 2204,
	2707, 2115, 2613, 2614, 2298, 2070, 596, 117, 2615, 2616,
	2617, 2618, 117, 2619, 2620, 2621, 2622, 2623, 2624, 2625,
	2626, 2723, 2718, 2719, 1004, 1005, 1006, 1003, 2297, 2706,
	1004, 1005, 1006, 1003, 1974, 1945, 1926, 939, 1436, 3229,
	2296, 2268, 168, 1756, 1559, 1547, 1379, 1343, 1320, 833,
	2791, 2295, 1122, 1107, 1004, 1005, 1006, 1003, 1103, 1102,
	2758, 1101, 484, 1100, 1099, 117, 1004, 1005, 1006, 1003,
	1098, 1745, 1097, 1096, 1095, 2770, 2294, 1004, 1005, 1006,
	1003, 2293, 1094, 1093, 1092, 3227, 1091, 2747, 2746, 1090,
	1089, 2752, 478, 2749, 2751, 2292, 2756, 2757, 2742, 2265,
	2266, 2767, 1004, 1005, 1006, 1003, 1088, 1004, 1005, 1006,
	1003, 1087, 1086, 2771, 1085, 2774, 2775, 2776, 1084, 1083,
	1079, 1004, 1005, 1006, 1003, 2291, 1871, 1078, 2815, 1077,
	1074, 1067, 1066, 1064, 2786, 2817, 2708, 2288, 2780, 1018,
	1017, 1027, 1028, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1019, 1004, 1005, 1006, 1003, 1063, 2822, 3393, 1897, 1062,
	2832, 939, 2806, 1004, 1005, 1006, 1003, 2804, 1061, 1060,
	1059, 2720, 2809, 3225, 2805, 831, 2810, 1058, 1057, 1056,
	2820, 1055, 117, 1054, 1053, 1048, 1047, 1046, 2812, 969,
	925, 2763, 2764, 2856, 3223, 2768, 2911, 117, 2287, 117,
	1004, 1005, 1006, 1003, 1979, 1961, 2099, 1704, 2873, 957,
	1018, 1017, 1027, 1028, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1019, 939, 3324, 1004, 1005, 1006, 1003, 2286, 3322,
	3279, 2714, 2491, 2766, 2344, 939, 2280, 2126, 1796, 2824,
	2087, 2090, 2091, 2092, 2088, 939, 2089, 2093, 968, 2496,
	1253, 2091, 2092, 2494, 1004, 1005, 1006, 1003, 2495, 2490,
	2834, 3403, 1004, 1005, 1006, 1003, 1566, 2213, 2133, 2271,
	939, 2492, 2847, 2925, 1541, 2874, 2493, 2943, 2875, 2207,
	1156, 102, 1251, 2877, 2944, 1541, 1587, 1588, 2938, 2674,
	2710, 2940, 2711, 2567, 2908, 1004, 1005, 1006, 1003, 191,
	2901, 2872, 2039, 2878, 1582, 1583, 1584, 833, 2946, 2921,
	54, 2935, 939, 2781, 833, 2915, 2248, 833, 2082, 2920,
	2917, 2871, 53, 475, 1446, 2807, 2808, 2923, 2853, 2854,
	2855, 2947, 1678, 2942, 2859, 2860, 2927, 480, 2929, 939,
	1305, 2932, 1004, 1005, 1006, 1003, 2937, 2202, 2945, 2936,
	1004, 1005, 1006, 1003, 2934, 2087, 2090, 2091, 2092, 2088,
	2237, 2089, 2093, 939, 1253, 1253, 481, 1352, 2974, 2685,
	2218, 2219, 2414, 3016, 1337, 3016, 479, 1952, 482, 2415,
	2416, 2417, 2931, 1758, 963, 2651, 2981, 3006, 2959, 2949,
	2648, 2960, 2641, 2383, 2826, 1996, 1251, 3008, 1969, 1591,
	1253, 2829, 1558, 3032, 2835, 1492, 1491, 1118, 1119, 1116,
	1117, 3292, 2982, 1114, 1115, 3153, 2988, 2739, 478, 2079,
	939, 939, 1112, 1113, 939, 939, 3012, 3013, 2075, 1689,
	1214, 1213, 3008, 995, 2773, 2519, 2978, 3069, 1820, 3020,
	1167, 3011, 3019, 1148, 1190, 3068, 3369, 3063, 3027, 3028,
	1593, 2875, 3076, 2879, 3030, 3054, 3055, 3029, 3265, 3064,
	3065, 3080, 3081, 2908, 3034, 3245, 2918, 2529, 3243, 2901,
	3203, 3180, 1215, 1216, 3179, 1218, 2407, 1222, 1223, 1224,
	3177, 2985, 2986, 3168, 3079, 3078, 2955, 2821, 2800, 2799,
	2784, 3073, 2026, 1354, 2783, 2832, 1595, 2570, 117, 117,
	831, 2485, 3105, 1963, 3072, 3326, 3325, 3074, 1879, 1269,
	1270, 1271, 1272, 1273, 3053, 1275, 1276, 1277, 1278, 1279,
	954, 3325, 3326, 1285, 1286, 3048, 3087, 3133, 2779, 3372,
	3129, 936, 3100, 178, 3, 3104, 702, 703, 704, 705,
	2967, 936, 1182, 2485, 3114, 62, 3117, 2, 3338, 3339,
	1, 2301, 3115, 3116, 1545, 1120, 706, 701, 1230, 3128,
	2108, 1736, 1257, 1549, 708, 2503, 2504, 2772, 2506, 1838,
	2474, 1035, 2073, 3070, 3136, 3134, 3135, 939, 1950, 2670,
	3144, 1253, 1018, 1017, 1027, 1028, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1019, 3004, 1157, 748, 1498, 1364, 854,
	3152, 948, 1361, 947, 3162, 945, 1448, 598, 1799, 2465,
	2439, 3075, 3161, 1251, 3291, 3332, 3237, 3294, 1377, 582,
	3171, 3192, 3090, 3241, 3092, 2962, 1843, 1000, 2551, 770,
	635, 609, 1065, 3186, 1052, 1345, 3169, 1338, 939, 2611,
	3176, 3174, 856, 608, 3204, 2846, 2334, 2522, 3137, 853,
	771, 3004, 3004, 1783, 3088, 3004, 3004, 1306, 1310, 1995,
	3145, 3413, 3402, 3384, 3367, 3199, 3270, 939, 3198, 3195,
	1476, 3398, 3312, 3352, 1253, 2970, 3214, 3232, 3235, 2968,
	3206, 2969, 3345, 3266, 518, 1715, 461, 3222, 3224, 3226,
	3228, 3215, 815, 3067, 1795, 519, 1978, 3231, 3256, 3155,
	3211, 3236, 3221, 729, 1960, 730, 1251, 1111, 722, 2351,
	3244, 3240, 3246, 3247, 3242, 758, 1253, 2350, 1417, 1009,
	3163, 1434, 2627, 2628, 1044, 557, 1867, 3275, 2331, 2896,
	2515, 61, 60, 59, 58, 1765, 199, 3264, 600, 3272,
	198, 2999, 3234, 3296, 580, 579, 578, 577, 1251, 3298,
	576, 2086, 2084, 2083, 1699, 1698, 1763, 2683, 3284, 2405,
	3285, 3297, 3286, 2399, 3287, 2022, 3288, 2027, 1631, 3276,
	3218, 3219, 3045, 2449, 1581, 2018, 939, 1648, 3302, 3303,
	3186, 2421, 1645, 3205, 757, 1644, 1004, 1005, 1006, 1003,
	2413, 3041, 3035, 1675, 797, 2830, 3015, 2880, 2881, 2887,
	1968, 3331, 3216, 3320, 3323, 3321, 879, 875, 3004, 3315,
	3317, 877, 878, 3334, 3327, 3328, 3329, 3330, 876, 2257,
	3343, 1999, 939, 2643, 1941, 1940, 1938, 1937, 1131, 3191,
	3344, 1472, 3348, 3252, 3350, 2977, 1262, 1469, 2131, 2129,
	484, 1471, 1468, 1470, 1474, 1475, 2765, 3298, 3364, 1473,
	3360, 2761, 1807, 1816, 2566, 1700, 1696, 1962, 3111, 3297,
	939, 1586, 939, 3363, 723, 1476, 1958, 99, 3371, 3004,
	3373, 117, 3376, 152, 48, 89, 88, 799, 98, 150,
	798, 47, 3334, 3380, 183, 939, 182, 3382, 185, 3387,
	184, 181, 2181, 3391, 3394, 2182, 180, 3397, 3004, 1294,
	179, 3018, 696, 38, 37, 33, 3305, 3306, 12, 11,
	34, 21, 3401, 22, 3408, 20, 1368, 783, 3412, 19,
	3411, 25, 31, 30, 110, 759, 3420, 109, 29, 108,
	107, 106, 3408, 3425, 3424, 117, 105, 3412, 104, 117,
	28, 18, 42, 41, 40, 9, 1750, 97, 95, 27,
	96, 117, 761, 93, 94, 92, 90, 73, 72, 71,
	86, 117, 85, 84, 3423, 83, 82, 81, 79, 3426,
	80, 769, 70, 69, 68, 67, 66, 91, 77, 87,
	78, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1479, 1480, 1481, 1482, 1483, 1484, 1477, 1478,
	76, 75, 74, 65, 64, 63, 136, 3310, 135, 134,
	133, 132, 130, 131, 129, 782, 781, 128, 127, 126,
	125, 124, 43, 44, 45, 46, 1472, 146, 145, 147,
	149, 151, 1469, 148, 153, 780, 1471, 1468, 1470, 1474,
	1475, 1030, 143, 1034, 1473, 141, 756, 144, 142, 140,
	56, 100, 17, 1400, 24, 4, 0, 760, 792, 1031,
	1033, 1029, 0, 1032, 1018, 1017, 1027, 1028, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1019, 0, 0, 0, 897,
	0, 788, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1400, 0, 1400, 0, 529, 528, 535, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 532, 533, 0,
	534, 538, 0, 0, 520, 0, 1400, 789, 793, 0,
	0, 0, 0, 0, 543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 777, 0, 775, 779,
	796, 0, 0, 0, 776, 773, 772, 0, 778, 763,
	764, 762, 765, 766, 767, 768, 0, 794, 0, 795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	790, 791, 0, 0, 0, 0, 1457, 1458, 1459, 1460,
	1461, 1462, 1463, 1464, 1465, 1466, 1467, 1479, 1480, 1481,
	1482, 1483, 1484, 1477, 1478, 0, 0, 0, 0, 883,
	0, 0, 0, 873, 0, 0, 0, 786, 0, 0,
	0, 0, 0, 785, 0, 0, 3370, 0, 0, 905,
	909, 911, 913, 915, 916, 918, 0, 923, 919, 920,
	921, 922, 1703, 900, 901, 902, 903, 881, 882, 906,
	0, 884, 0, 885, 886, 887, 888, 889, 890, 891,
	892, 893, 896, 898, 894, 895, 904, 2245, 0, 0,
	0, 0, 0, 0, 908, 910, 912, 914, 917, 1018,
	1017, 1027, 1028, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1019, 1018, 1017, 1027, 1028, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1019, 0, 0, 784, 0, 0, 0, 0,
	0, 0, 899, 0, 117, 0, 0, 117, 117, 0,
	117, 521, 523, 522, 0, 0, 0, 0, 0, 0,
	0, 527, 0, 0, 0, 0, 2609, 0, 0, 0,
	0, 0, 0, 531, 0, 0, 0, 0, 0, 0,
	546, 0, 0, 0, 0, 0, 0, 524, 831, 616,
	0, 0, 0, 0, 0, 831, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 0,
	0, 571, 0, 0, 0, 291, 0, 0, 320, 1018,
	1017, 1027, 1028, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1019, 455, 0, 456, 0, 0, 607, 0, 460, 381,
	334, 0, 0, 0, 0, 667, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 564, 0, 0,
	597, 644, 643, 584, 594, 0, 0, 266, 197, 457,
	0, 458, 585, 0, 593, 586, 590, 589, 587, 588,
	0, 659, 0, 1035, 0, 0, 0, 0, 555, 568,
	0, 572, 0, 0, 526, 530, 536, 0, 537, 539,
	0, 0, 540, 541, 542, 0, 0, 544, 545, 0,
	0, 0, 0, 0, 0, 565, 566, 0, 0, 0,
	0, 617, 0, 567, 0, 0, 612, 591, 595, 0,
	0, 0, 0, 256, 386, 403, 267, 377, 416, 272,
	384, 262, 349, 373, 0, 0, 258, 401, 383, 331,
	310, 311, 257, 0, 368, 289, 302, 286, 347, 592,
	615, 619, 285, 681, 613, 411, 260, 0, 410, 346,
	397, 402, 332, 326, 259, 399, 330, 325, 314, 293,
	682, 315, 316, 306, 358, 324, 359, 307, 336, 335,
	337, 0, 0, 0, 0, 0, 439, 440, 1018, 1017,
	1027, 1028, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1019,
	0, 610, 0, 0, 0, 413, 0, 0, 665, 0,
	0, 907, 385, 0, 0, 317, 0, 0, 0, 614,
	0, 371, 352, 678, 556, 0, 369, 322, 398, 360,
	404, 387, 412, 365, 361, 251, 388, 288, 333, 263,
	265, 283, 290, 292, 294, 295, 342, 343, 355, 376,
	389, 390, 391, 287, 273, 370, 274, 304, 275, 252,
	279, 278, 280, 378, 281, 254, 356, 395, 0, 300,
	366, 329, 255, 328, 357, 394, 393, 264, 420, 426,
	427, 0, 0, 432, 0, 0, 0, 441, 446, 447,
	448, 450, 451, 452, 453, 0, 0, 0, 0, 434,
	0, 0, 0, 0, 1500, 1499, 1501, 425, 318, 319,
	298, 248, 249, 470, 663, 348, 0, 0, 0, 1865,
	677, 658, 660, 661, 664, 668, 669, 670, 671, 672,
	674, 676, 680, 469, 0, 0, 0, 0, 2102, 466,
	354, 0, 375, 1018, 1017, 1027, 1028, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1019, 382, 406, 418, 435, 438,
	0, 0, 0, 0, 253, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 679, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 618, 0, 0, 338, 339, 340,
	341, 666, 0, 271, 436, 364, 0, 0, 0, 0,
	0, 1703, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 0, 430, 431, 297, 303, 449, 305,
	270, 353, 299, 415, 312, 0, 442, 0, 443, 0,
	0, 0, 0, 345, 308, 309, 379, 313, 323, 367,
	414, 351, 372, 268, 405, 380, 327, 0, 897, 688,
	662, 687, 689, 690, 686, 691, 692, 673, 575, 0,
	622, 684, 683, 685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 246, 276,
	277, 282, 467, 464, 396, 468, 0, 250, 0, 321,
	0, 362, 296, 0, 0, 651, 628, 629, 630, 573,
	631, 625, 626, 627, 652, 620, 648, 649, 599, 623,
	632, 647, 633, 650, 653, 654, 693, 694, 639, 695,
	636, 655, 646, 645, 634, 621, 656, 657, 606, 601,
	637, 638, 624, 640, 641, 642, 574, 602, 603, 604,
	605, 0, 0, 0, 421, 422, 423, 445, 407, 0,
	465, 0, 0, 0, 0, 0, 0, 0, 883, 0,
	0, 0, 0, 0, 0, 0, 471, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 905, 909,
	911, 913, 915, 916, 918, 0, 923, 919, 920, 921,
	922, 0, 900, 901, 902, 903, 881, 882, 906, 0,
	884, 117, 885, 886, 887, 888, 889, 890, 891, 892,
	893, 896, 898, 894, 895, 904, 0, 897, 0, 0,
	0, 0, 0, 908, 910, 912, 914, 917, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 528, 535, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 532, 533, 0, 534,
	538, 899, 0, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1703, 1703, 1703, 1703, 0, 0, 547, 0, 0, 549,
	0, 0, 1703, 0, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 883, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 905, 909, 911,
	913, 915, 916, 918, 0, 923, 919, 920, 921, 922,
	0, 900, 901, 902, 903, 881, 882, 906, 0, 884,
	0, 885, 886, 887, 888, 889, 890, 891, 892, 893,
	896, 898, 894, 895, 904, 0, 0, 2254, 2255, 0,
	0, 0, 908, 910, 912, 914, 917, 117, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 0, 0, 117,
	899, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	521, 523, 522, 0, 0, 0, 0, 0, 0, 0,
	527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 0, 0, 0, 0, 0, 0, 546,
	0, 0, 0, 0, 616, 0, 524, 0, 0, 0,
	515, 0, 0, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 571, 0, 0, 0,
	291, 1542, 0, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 455, 0, 456, 0,
	907, 607, 0, 460, 381, 334, 0, 0, 0, 0,
	667, 675, 0, 0, 0, 0, 0, 0, 0, 1727,
	0, 0, 564, 0, 0, 597, 644, 643, 584, 594,
	0, 0, 266, 197, 457, 0, 458, 585, 0, 593,
	586, 590, 589, 587, 588, 0, 659, 0, 0, 0,
	0, 0, 1703, 555, 568, 0, 572, 0, 0, 0,
	0, 0, 0, 526, 530, 536, 0, 537, 539, 0,
	117, 540, 541, 542, 0, 0, 544, 545, 0, 0,
	565, 566, 0, 0, 0, 0, 617, 0, 567, 0,
	0, 1728, 591, 595, 0, 0, 0, 0, 256, 386,
	403, 267, 377, 416, 272, 384, 262, 349, 373, 0,
	0, 258, 401, 383, 331, 310, 311, 257, 0, 368,
	289, 302, 286, 347, 592, 615, 619, 285, 681, 613,
	411, 260, 0, 410, 346, 397, 402, 332, 326, 259,
	399, 330, 325, 314, 293, 682, 315, 316, 306, 358,
	324, 359, 307, 336, 335, 337, 0, 0, 0, 0,
	0, 439, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 610, 0, 0, 907,
	413, 0, 0, 665, 0, 0, 0, 385, 0, 0,
	317, 0, 0, 0, 614, 0, 371, 352, 678, 556,
	0, 369, 322, 398, 360, 404, 387, 412, 365, 361,
	251, 388, 288, 333, 263, 265, 283, 290, 292, 294,
	295, 342, 343, 355, 376, 389, 390, 391, 287, 273,
	370, 274, 304, 275, 252, 279, 278, 280, 378, 281,
	254, 356, 395, 0, 300, 366, 329, 255, 328, 357,
	394, 393, 264, 420, 426, 427, 0, 0, 432, 0,
	0, 0, 441, 446, 447, 448, 450, 451, 452, 453,
	0, 0, 0, 0, 434, 0, 0, 0, 0, 0,
	0, 0, 425, 318, 319, 298, 248, 249, 470, 663,
	348, 0, 0, 0, 0, 677, 658, 660, 661, 664,
	668, 669, 670, 671, 672, 674, 676, 680, 469, 0,
	0, 0, 0, 0, 466, 354, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	382, 406, 418, 435, 438, 117, 0, 0, 117, 253,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 618,
	0, 0, 338, 339, 340, 341, 666, 0, 271, 436,
	364, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1703, 0, 0, 0, 0, 0, 430,
	431, 297, 303, 449, 305, 270, 353, 299, 415, 312,
	0, 442, 0, 443, 0, 0, 0, 0, 345, 308,
	309, 379, 313, 323, 367, 414, 351, 372, 268, 405,
	380, 327, 0, 0, 688, 662, 687, 689, 690, 686,
	691, 692, 673, 575, 0, 622, 684, 683, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 246, 276, 277, 282, 467, 464, 396,
	468, 0, 250, 0, 321, 117, 362, 296, 0, 0,
	651, 628, 629, 630, 573, 631, 625, 626, 627, 652,
	620, 648, 649, 599, 623, 632, 647, 633, 650, 653,
	654, 693, 694, 639, 695, 636, 655, 646, 645, 634,
	621, 656, 657, 606, 601, 637, 638, 624, 640, 641,
	642, 574, 602, 603, 604, 605, 174, 616, 0, 421,
	422, 423, 445, 407, 0, 465, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 571,
	0, 471, 459, 291, 0, 0, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 455,
	0, 456, 0, 0, 1038, 0, 460, 381, 334, 0,
	0, 0, 0, 667, 675, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 564, 0, 0, 597, 644,
	643, 584, 594, 0, 0, 266, 197, 457, 0, 458,
	585, 0, 593, 586, 590, 589, 587, 588, 0, 659,
	0, 0, 0, 0, 0, 0, 555, 568, 0, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 565, 566, 0, 0, 0, 0, 617,
	0, 567, 0, 0, 612, 591, 595, 0, 0, 0,
	0, 256, 386, 403, 267, 377, 416, 272, 384, 262,
	349, 373, 0, 0, 258, 401, 383, 331, 310, 311,
	257, 0, 368, 289, 302, 286, 347, 592, 615, 619,
	285, 681, 613, 411, 260, 0, 410, 346, 397, 402,
	332, 326, 259, 399, 330, 325, 314, 293, 682, 315,
	316, 306, 358, 324, 359, 307, 336, 335, 337, 0,
	0, 0, 0, 0, 439, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 610,
	0, 0, 0, 413, 0, 0, 665, 0, 0, 0,
	385, 0, 0, 317, 0, 0, 0, 614, 0, 371,
	352, 678, 556, 0, 369, 322, 398, 360, 404, 387,
	412, 365, 361, 251, 388, 288, 333, 263, 265, 283,
	290, 292, 294, 295, 342, 343, 355, 376, 389, 390,
	391, 287, 273, 370, 274, 304, 275, 252, 279, 278,
	280, 378, 281, 254, 356, 395, 0, 300, 366, 329,
	255, 328, 357, 394, 393, 264, 420, 426, 427, 0,
	0, 432, 0, 0, 0, 441, 446, 447, 448, 450,
	451, 452, 453, 0, 0, 0, 0, 434, 0, 0,
	0, 0, 0, 0, 0, 425, 318, 319, 298, 248,
	249, 470, 663, 348, 0, 0, 0, 0, 677, 658,
	660, 661, 664, 668, 669, 670, 671, 672, 674, 676,
	680, 469, 0, 0, 0, 0, 0, 466, 354, 0,
	375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 406, 418, 435, 438, 0, 0,
	0, 0, 253, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 679, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 618, 0, 0, 338, 339, 340, 341, 666,
	0, 271, 436, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 431, 297, 303, 449, 305, 270, 353,
	299, 415, 312, 0, 442, 0, 443, 0, 0, 0,
	0, 345, 308, 309, 379, 313, 323, 367, 414, 351,
	372, 268, 405, 380, 327, 0, 0, 688, 662, 687,
	689, 690, 686, 691, 692, 673, 575, 0, 622, 684,
	683, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 246, 276, 277, 282,
	467, 464, 396, 468, 0, 250, 0, 321, 139, 362,
	296, 0, 0, 651, 628, 629, 630, 573, 631, 625,
	626, 627, 652, 620, 648, 649, 599, 623, 632, 647,
	633, 650, 653, 654, 693, 694, 639, 695, 636, 655,
	646, 645, 634, 621, 656, 657, 606, 601, 637, 638,
	624, 640, 641, 642, 574, 602, 603, 604, 605, 0,
	616, 0, 421, 422, 423, 445, 407, 0, 465, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 571, 0, 471, 459, 291, 3381, 0, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 455, 0, 456, 0, 0, 607, 0, 460,
	381, 334, 0, 0, 0, 0, 667, 675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 564, 0,
	0, 597, 644, 643, 584, 594, 0, 0, 266, 197,
	457, 0, 458, 585, 0, 593, 586, 590, 589, 587,
	588, 0, 659, 0, 0, 0, 0, 0, 0, 555,
	568, 0, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 565, 566, 0, 0,
	0, 0, 617, 0, 567, 0, 0, 612, 591, 595,
	0, 0, 0, 0, 256, 386, 403, 267, 377, 416,
	272, 384, 262, 349, 373, 0, 0, 258, 401, 383,
	331, 310, 311, 257, 0, 368, 289, 302, 286, 347,
	592, 615, 619, 285, 681, 613, 411, 260, 0, 410,
	346, 397, 402, 332, 326, 259, 399, 330, 325, 314,
	293, 682, 315, 316, 306, 358, 324, 359, 307, 336,
	335, 337, 0, 0, 0, 0, 0, 439, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 0, 0, 0, 413, 0, 0, 665,
	0, 0, 0, 385, 0, 0, 317, 0, 0, 0,
	614, 0, 371, 352, 678, 556, 0, 369, 322, 398,
	360, 404, 387, 412, 365, 361, 251, 388, 288, 333,
	263, 265, 283, 290, 292, 294, 295, 342, 343, 355,
	376, 389, 390, 391, 287, 273, 370, 274, 304, 275,
	252, 279, 278, 280, 378, 281, 254, 356, 395, 0,
	300, 366, 329, 255, 328, 357, 394, 393, 264, 420,
	426, 427, 0, 0, 432, 0, 0, 0, 441, 446,
	447, 448, 450, 451, 452, 453, 0, 0, 0, 0,
	434, 0, 0, 0, 0, 0, 0, 0, 425, 318,
	319, 298, 248, 249, 470, 663, 348, 0, 0, 0,
	0, 677, 658, 660, 661, 664, 668, 669, 670, 671,
	672, 674, 676, 680, 469, 0, 0, 0, 0, 0,
	466, 354, 0, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 406, 418, 435,
	438, 0, 0, 0, 0, 253, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 618, 0, 0, 338, 339,
	340, 341, 666, 0, 271, 436, 364, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 430, 431, 297, 303, 449,
	305, 270, 353, 299, 415, 312, 0, 442, 0, 443,
	0, 0, 0, 0, 345, 308, 309, 379, 313, 323,
	367, 414, 351, 372, 268, 405, 380, 327, 0, 0,
	688, 662, 687, 689, 690, 686, 691, 692, 673, 575,
	0, 622, 684, 683, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 246,
	276, 277, 282, 467, 464, 396, 468, 0, 250, 0,
	321, 0, 362, 296, 0, 0, 651, 628, 629, 630,
	573, 631, 625, 626, 627, 652, 620, 648, 649, 599,
	623, 632, 647, 633, 650, 653, 654, 693, 694, 639,
	695, 636, 655, 646, 645, 634, 621, 656, 657, 606,
	601, 637, 638, 624, 640, 641, 642, 574, 602, 603,
	604, 605, 0, 616, 0, 421, 422, 423, 445, 407,
	0, 465, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 571, 0, 471, 459, 291,
	1542, 0, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 455, 0, 456, 0, 0,
	607, 0, 460, 381, 334, 0, 0, 0, 0, 667,
	675, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 564, 0, 0, 597, 644, 643, 584, 594, 0,
	0, 266, 197, 457, 0, 458, 585, 0, 593, 586,
	590, 589, 587, 588, 0, 659, 0, 0, 0, 0,
	0, 0, 555, 568, 0, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 565,
	566, 0, 0, 0, 0, 617, 0, 567, 0, 0,
	612, 591, 595, 0, 0, 0, 0, 256, 386, 403,
	267, 377, 416, 272, 384, 262, 349, 373, 0, 0,
	258, 401, 383, 331, 310, 311, 257, 0, 368, 289,
	302, 286, 347, 592, 615, 619, 285, 681, 613, 411,
	260, 0, 410, 346, 397, 402, 332, 326, 259, 399,
	330, 325, 314, 293, 682, 315, 316, 306, 358, 324,
	359, 307, 336, 335, 337, 0, 0, 0, 0, 0,
	439, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 610, 0, 0, 0, 413,
	0, 0, 665, 0, 0, 0, 385, 0, 0, 317,
	0, 0, 0, 614, 0, 371, 352, 678, 556, 0,
	369, 322, 398, 360, 404, 387, 412, 365, 361, 251,
	388, 288, 333, 263, 265, 283, 290, 292, 294, 295,
	342, 343, 355, 376, 389, 390, 391, 287, 273, 370,
	274, 304, 275, 252, 279, 278, 280, 378, 281, 254,
	356, 395, 0, 300, 366, 329, 255, 328, 357, 394,
	393, 264, 420, 426, 427, 0, 0, 432, 0, 0,
	0, 441, 446, 447, 448, 450, 451, 452, 453, 0,
	0, 0, 0, 434, 0, 0, 0, 0, 0, 0,
	0, 425, 318, 319, 298, 248, 249, 470, 663, 348,
	0, 0, 0, 0, 677, 658, 660, 661, 664, 668,
	669, 670, 671, 672, 674, 676, 680, 469, 0, 0,
	0, 0, 0, 466, 354, 0, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 382,
	406, 418, 435, 438, 0, 0, 0, 0, 253, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 679, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 618, 0,
	0, 338, 339, 340, 341, 666, 0, 271, 436, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 431,
	297, 303, 449, 305, 270, 353, 299, 415, 312, 0,
	442, 0, 443, 0, 0, 0, 0, 345, 308, 309,
	379, 313, 323, 367, 414, 351, 372, 268, 405, 380,
	327, 0, 0, 688, 662, 687, 689, 690, 686, 691,
	692, 673, 575, 0, 622, 684, 683, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 246, 276, 277, 282, 467, 464, 396, 468,
	0, 250, 0, 321, 0, 362, 296, 0, 0, 651,
	628, 629, 630, 573, 631, 625, 626, 627, 652, 620,
	648, 649, 599, 623, 632, 647, 633, 650, 653, 654,
	693, 694, 639, 695, 636, 655, 646, 645, 634, 621,
	656, 657, 606, 601, 637, 638, 624, 640, 641, 642,
	574, 602, 603, 604, 605, 0, 616, 0, 421, 422,
	423, 445, 407, 0, 465, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 571, 0,
	471, 459, 291, 0, 0, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 455, 0,
	456, 0, 0, 607, 0, 460, 381, 334, 0, 0,
	0, 0, 667, 675, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 0, 0, 597, 644, 643,
	584, 594, 0, 0, 266, 197, 457, 0, 458, 585,
	0, 593, 586, 590, 589, 587, 588, 0, 659, 0,
	0, 0, 0, 0, 0, 555, 568, 0, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 565, 566, 1289, 0, 0, 0, 617, 0,
	567, 0, 0, 612, 591, 595, 0, 0, 0, 0,
	256, 386, 403, 267, 377, 416, 272, 384, 262, 349,
	373, 0, 0, 258, 401, 383, 331, 310, 311, 257,
	0, 368, 289, 302, 286, 347, 592, 615, 619, 285,
	681, 613, 411, 260, 0, 410, 346, 397, 402, 332,
	326, 259, 399, 330, 325, 314, 293, 682, 315, 316,
	306, 358, 324, 359, 307, 336, 335, 337, 0, 0,
	0, 0, 0, 439, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 0,
	0, 0, 413, 0, 0, 665, 0, 0, 0, 385,
	0, 0, 317, 0, 0, 0, 614, 0, 371, 352,
	678, 556, 0, 369, 322, 398, 360, 404, 387, 412,
	365, 361, 251, 388, 288, 333, 263, 265, 283, 290,
	292, 294, 295, 342, 343, 355, 376, 389, 390, 391,
	287, 273, 370, 274, 304, 275, 252, 279, 278, 280,
	378, 281, 254, 356, 395, 0, 300, 366, 329, 255,
	328, 357, 394, 393, 264, 420, 426, 427, 0, 0,
	432, 0, 0, 0, 441, 446, 447, 448, 450, 451,
	452, 453, 0, 0, 0, 0, 434, 0, 0, 0,
	0, 0, 0, 0, 425, 318, 319, 298, 248, 249,
	470, 663, 348, 0, 0, 0, 0, 677, 658, 660,
	661, 664, 668, 669, 670, 671, 672, 674, 676, 680,
	469, 0, 0, 0, 0, 0, 466, 354, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 406, 418, 435, 438, 0, 0, 0,
	0, 253, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 618, 0, 0, 338, 339, 340, 341, 666, 0,
	271, 436, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 431, 297, 303, 449, 305, 270, 353, 299,
	415, 312, 0, 442, 0, 443, 0, 0, 0, 0,
	345, 308, 309, 379, 313, 323, 367, 414, 351, 372,
	268, 405, 380, 327, 0, 0, 688, 662, 687, 689,
	690, 686, 691, 692, 673, 575, 0, 622, 684, 683,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 246, 276, 277, 282, 467,
	464, 396, 468, 0, 250, 0, 321, 0, 362, 296,
	0, 0, 651, 628, 629, 630, 573, 631, 625, 626,
	627, 652, 620, 648, 649, 599, 623, 632, 647, 633,
	650, 653, 654, 693, 694, 639, 695, 636, 655, 646,
	645, 634, 621, 656, 657, 606, 601, 637, 638, 624,
	640, 641, 642, 574, 602, 603, 604, 605, 0, 0,
	0, 421, 422, 423, 445, 407, 616, 465, 0, 1887,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 0, 471, 459, 0, 0, 0, 571, 0,
	0, 0, 291, 0, 0, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 455, 0,
	456, 0, 0, 607, 0, 460, 381, 334, 0, 0,
	0, 0, 667, 675, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 0, 0, 597, 644, 643,
	584, 594, 0, 0, 266, 197, 457, 0, 458, 585,
	0, 593, 586, 590, 589, 587, 588, 0, 659, 0,
	0, 0, 0, 0, 0, 555, 568, 0, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 565, 566, 0, 0, 0, 0, 617, 0,
	567, 0, 0, 612, 591, 595, 0, 0, 0, 0,
	256, 386, 403, 267, 377, 416, 272, 384, 262, 349,
	373, 0, 0, 258, 401, 383, 331, 310, 311, 257,
	0, 368, 289, 302, 286, 347, 592, 615, 619, 285,
	681, 613, 411, 260, 0, 410, 346, 397, 402, 332,
	326, 259, 399, 330, 325, 314, 293, 682, 315, 316,
	306, 358, 324, 359, 307, 336, 335, 337, 0, 0,
	0, 0, 0, 439, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 0,
	0, 0, 413, 0, 0, 665, 0, 0, 0, 385,
	0, 0, 317, 0, 0, 0, 614, 0, 371, 352,
	678, 556, 0, 369, 322, 398, 360, 404, 387, 412,
	365, 361, 251, 388, 288, 333, 263, 265, 283, 290,
	292, 294, 295, 342, 343, 355, 376, 389, 390, 391,
	287, 273, 370, 274, 304, 275, 252, 279, 278, 280,
	378, 281, 254, 356, 395, 0, 300, 366, 329, 255,
	328, 357, 394, 393, 264, 420, 426, 427, 0, 0,
	432, 0, 0, 0, 441, 446, 447, 448, 450, 451,
	452, 453, 0, 0, 0, 0, 434, 0, 0, 0,
	0, 0, 0, 0, 425, 318, 319, 298, 248, 249,
	470, 663, 348, 0, 0, 0, 0, 677, 658, 660,
	661, 664, 668, 669, 670, 671, 672, 674, 676, 680,
	469, 0, 0, 0, 0, 0, 466, 354, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 406, 418, 435, 438, 0, 0, 0,
	0, 253, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 618, 0, 0, 338, 339, 340, 341, 666, 0,
	271, 436, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 431, 297, 303, 449, 305, 270, 353, 299,
	415, 312, 0, 442, 0, 443, 0, 0, 0, 0,
	345, 308, 309, 379, 313, 323, 367, 414, 351, 372,
	268, 405, 380, 327, 0, 0, 688, 662, 687, 689,
	690, 686, 691, 692, 673, 575, 0, 622, 684, 683,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 246, 276, 277, 282, 467,
	464, 396, 468, 0, 250, 0, 321, 0, 362, 296,
	0, 0, 651, 628, 629, 630, 573, 631, 625, 626,
	627, 652, 620, 648, 649, 599, 623, 632, 647, 633,
	650, 653, 654, 693, 694, 639, 695, 636, 655, 646,
	645, 634, 621, 656, 657, 606, 601, 637, 638, 624,
	640, 641, 642, 574, 602, 603, 604, 605, 0, 616,
	0, 421, 422, 423, 445, 407, 0, 465, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 571, 0, 471, 459, 291, 0, 0, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 455, 0, 456, 0, 0, 607, 0, 460, 381,
	334, 0, 0, 0, 0, 667, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 564, 0, 0,
	597, 644, 643, 584, 594, 0, 0, 266, 197, 457,
	0, 458, 585, 0, 593, 586, 590, 589, 587, 588,
	0, 659, 0, 0, 0, 0, 0, 0, 555, 568,
	0, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 565, 566, 0, 0, 0,
	0, 617, 0, 567, 0, 0, 612, 591, 595, 0,
	0, 0, 0, 256, 386, 403, 267, 377, 416, 272,
	384, 262, 349, 373, 0, 0, 258, 401, 383, 331,
	310, 311, 257, 0, 368, 289, 302, 286, 347, 592,
	615, 619, 285, 681, 613, 411, 260, 0, 410, 346,
	397, 402, 332, 326, 259, 399, 330, 325, 314, 293,
	682, 315, 316, 306, 358, 324, 359, 307, 336, 335,
	337, 0, 0, 0, 0, 0, 439, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 610, 0, 0, 0, 413, 0, 0, 665, 0,
	0, 0, 385, 0, 0, 317, 0, 0, 0, 614,
	0, 371, 352, 678, 556, 0, 369, 322, 398, 360,
	404, 387, 412, 365, 361, 251, 388, 288, 333, 263,
	265, 283, 290, 292, 294, 295, 342, 343, 355, 376,
	389, 390, 391, 287, 273, 370, 274, 304, 275, 252,
	279, 278, 280, 378, 281, 254, 356, 395, 0, 300,
	366, 329, 255, 328, 357, 394, 393, 264, 420, 426,
	427, 0, 0, 432, 0, 0, 0, 441, 446, 447,
	448, 450, 451, 452, 453, 0, 0, 0, 0, 434,
	0, 0, 0, 0, 0, 0, 0, 425, 318, 319,
	298, 248, 249, 470, 663, 348, 0, 0, 0, 0,
	677, 658, 660, 661, 664, 668, 669, 670, 671, 672,
	674, 676, 680, 469, 0, 0, 0, 0, 0, 466,
	354, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 406, 418, 435, 438,
	0, 0, 0, 0, 253, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 679, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 618, 0, 0, 338, 339, 340,
	341, 666, 0, 271, 436, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 431, 297, 303, 449, 305,
	270, 353, 299, 415, 312, 0, 442, 0, 443, 0,
	0, 0, 0, 345, 308, 309, 379, 313, 323, 367,
	414, 351, 372, 268, 405, 380, 327, 0, 0, 688,
	662, 687, 689, 690, 686, 691, 692, 673, 575, 0,
	622, 684, 683, 685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 246, 276,
	277, 282, 467, 464, 396, 468, 0, 250, 0, 321,
	0, 362, 296, 0, 0, 651, 628, 629, 630, 573,
	631, 625, 626, 627, 652, 620, 648, 649, 599, 623,
	632, 647, 633, 650, 653, 654, 693, 694, 639, 695,
	636, 655, 646, 645, 634, 621, 656, 657, 606, 601,
	637, 638, 624, 640, 641, 642, 574, 602, 603, 604,
	605, 0, 616, 0, 421, 422, 423, 445, 407, 0,
	465, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	1418, 0, 0, 0, 571, 0, 471, 459, 291, 0,
	0, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 455, 0, 456, 0, 0, 607,
	0, 460, 381, 334, 0, 0, 0, 0, 667, 675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	564, 0, 0, 597, 644, 643, 584, 594, 0, 0,
	266, 197, 457, 0, 458, 585, 0, 593, 586, 590,
	589, 587, 588, 0, 659, 0, 0, 0, 0, 0,
	0, 0, 568, 0, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 565, 566,
	0, 0, 0, 0, 617, 0, 567, 0, 0, 612,
	591, 595, 0, 0, 0, 0, 256, 386, 403, 267,
	377, 416, 272, 384, 262, 349, 373, 0, 0, 258,
	401, 383, 331, 310, 311, 257, 0, 368, 289, 302,
	286, 347, 592, 615, 619, 285, 681, 613, 411, 260,
	0, 410, 346, 397, 402, 332, 326, 259, 399, 330,
	325, 314, 293, 682, 315, 316, 306, 358, 324, 359,
	307, 336, 335, 337, 0, 0, 0, 0, 0, 439,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 0, 0, 0, 413, 0,
	0, 665, 0, 0, 0, 385, 0, 0, 317, 0,
	0, 0, 614, 0, 371, 352, 678, 0, 0, 369,
	322, 398, 360, 404, 387, 412, 365, 361, 251, 388,
	288, 333, 263, 265, 283, 290, 292, 294, 295, 342,
	343, 355, 376, 389, 390, 391, 287, 273, 370, 274,
	304, 275, 252, 279, 278, 280, 378, 281, 254, 356,
	395, 0, 300, 366, 329, 255, 328, 357, 394, 393,
	264, 420, 1419, 1420, 0, 0, 432, 0, 0, 0,
	441, 446, 447, 448, 450, 451, 452, 453, 0, 0,
	0, 0, 434, 0, 0, 0, 0, 0, 0, 0,
	425, 318, 319, 298, 248, 249, 470, 663, 348, 0,
	0, 0, 0, 677, 658, 660, 661, 664, 668, 669,
	670, 671, 672, 674, 676, 680, 469, 0, 0, 0,
	0, 0, 466, 354, 0, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 406,
	418, 435, 438, 0, 0, 0, 0, 253, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 618, 0, 0,
	338, 339, 340, 341, 666, 0, 271, 436, 364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 431, 297,
	303, 449, 305, 270, 353, 299, 415, 312, 0, 442,
	0, 443, 0, 0, 0, 0, 345, 308, 309, 379,
	313, 323, 367, 414, 351, 372, 268, 405, 380, 327,
	0, 0, 688, 662, 687, 689, 690, 686, 691, 692,
	673, 575, 0, 622, 684, 683, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 246, 276, 277, 282, 467, 464, 396, 468, 0,
	250, 0, 321, 0, 362, 296, 0, 0, 651, 628,
	629, 630, 573, 631, 625, 626, 627, 652, 620, 648,
	649, 599, 623, 632, 647, 633, 650, 653, 654, 693,
	694, 639, 695, 636, 655, 646, 645, 634, 621, 656,
	657, 606, 601, 637, 638, 624, 640, 641, 642, 574,
	602, 603, 604, 605, 0, 616, 0, 421, 422, 423,
	445, 407, 0, 465, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 571, 0, 471,
	459, 291, 0, 0, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 455, 0, 456,
	0, 0, 607, 0, 460, 381, 334, 0, 0, 0,
	0, 667, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 597, 644, 643, 584,
	594, 0, 0, 266, 197, 457, 0, 458, 585, 0,
	593, 586, 590, 589, 587, 588, 0, 659, 0, 0,
	0, 0, 0, 0, 555, 568, 0, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 565, 566, 0, 0, 0, 0, 617, 0, 567,
	0, 0, 612, 591, 595, 0, 0, 0, 0, 256,
	386, 403, 267, 377, 416, 272, 384, 262, 349, 373,
	0, 0, 258, 401, 383, 331, 310, 311, 257, 0,
	368, 289, 302, 286, 347, 592, 615, 619, 285, 681,
	613, 411, 260, 0, 410, 346, 397, 402, 332, 326,
	259, 399, 330, 325, 314, 293, 682, 315, 316, 306,
	358, 324, 359, 307, 336, 335, 337, 0, 0, 0,
	0, 0, 439, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 610, 0, 0,
	0, 413, 0, 0, 665, 0, 0, 0, 385, 0,
	0, 317, 0, 0, 0, 614, 0, 371, 352, 678,
	556, 0, 369, 322, 398, 360, 404, 387, 412, 365,
	361, 251, 388, 288, 333, 263, 265, 283, 290, 292,
	294, 295, 342, 343, 355, 376, 389, 390, 391, 287,
	273, 370, 274, 304, 275, 252, 279, 278, 280, 378,
	281, 254, 356, 395, 0, 300, 366, 329, 255, 328,
	357, 394, 393, 264, 420, 426, 427, 0, 0, 432,
	0, 0, 0, 441, 446, 447, 448, 450, 451, 452,
	453, 0, 0, 0, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 425, 318, 319, 298, 248, 249, 470,
	663, 348, 0, 0, 0, 0, 677, 658, 660, 661,
	664, 668, 669, 670, 671, 672, 674, 676, 680, 469,
	0, 0, 0, 0, 0, 466, 354, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 406, 418, 435, 438, 0, 0, 0, 0,
	253, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	679, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	618, 0, 0, 338, 339, 340, 341, 666, 0, 271,
	436, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 431, 297, 303, 449, 305, 270, 353, 299, 415,
	312, 0, 442, 0, 443, 0, 0, 0, 0, 345,
	308, 309, 379, 313, 323, 367, 414, 351, 372, 268,
	405, 380, 327, 0, 0, 688, 662, 687, 689, 690,
	686, 691, 692, 673, 575, 0, 622, 684, 683, 685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 246, 276, 277, 282, 467, 464,
	396, 468, 0, 250, 0, 321, 0, 362, 296, 0,
	0, 651, 628, 629, 630, 573, 631, 625, 626, 627,
	652, 620, 648, 649, 599, 623, 632, 647, 633, 650,
	653, 654, 693, 694, 639, 695, 636, 655, 646, 645,
	634, 621, 656, 657, 606, 601, 637, 638, 624, 640,
	641, 642, 574, 602, 603, 604, 605, 0, 616, 0,
	421, 422, 423, 445, 407, 0, 465, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	571, 0, 471, 459, 291, 0, 0, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	455, 0, 456, 0, 0, 607, 0, 460, 381, 334,
	0, 0, 0, 0, 667, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 0, 0, 597,
	644, 643, 584, 594, 0, 0, 266, 197, 457, 0,
	458, 585, 0, 593, 586, 590, 589, 587, 588, 0,
	659, 0, 0, 0, 0, 0, 0, 0, 568, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 565, 566, 0, 0, 0, 0,
	617, 0, 567, 0, 0, 612, 591, 595, 0, 0,
	0, 0, 256, 386, 403, 267, 377, 416, 272, 384,
	262, 349, 373, 0, 0, 258, 401, 383, 331, 310,
	311, 257, 0, 368, 289, 302, 286, 347, 592, 615,
	619, 285, 681, 613, 411, 260, 0, 410, 346, 397,
	402, 332, 326, 259, 399, 330, 325, 314, 293, 682,
	315, 316, 306, 358, 324, 359, 307, 336, 335, 337,
	0, 0, 0, 0, 0, 439, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 0, 0, 0, 413, 0, 0, 665, 0, 0,
	0, 385, 0, 0, 317, 0, 0, 0, 614, 0,
	371, 352, 678, 0, 0, 369, 322, 398, 360, 404,
	387, 412, 365, 361, 251, 388, 288, 333, 263, 265,
	283, 290, 292, 294, 295, 342, 343, 355, 376, 389,
	390, 391, 287, 273, 370, 274, 304, 275, 252, 279,
	278, 280, 378, 281, 254, 356, 395, 0, 300, 366,
	329, 255, 328, 357, 394, 393, 264, 420, 426, 427,
	0, 0, 432, 0, 0, 0, 441, 446, 447, 448,
	450, 451, 452, 453, 0, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 425, 318, 319, 298,
	248, 249, 470, 663, 348, 0, 0, 0, 0, 677,
	658, 660, 661, 664, 668, 669, 670, 671, 672, 674,
	676, 680, 469, 0, 0, 0, 0, 0, 466, 354,
	0, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 406, 418, 435, 438, 0,
	0, 0, 0, 253, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 618, 0, 0, 338, 339, 340, 341,
	666, 0, 271, 436, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 431, 297, 303, 449, 305, 270,
	353, 299, 415, 312, 0, 442, 0, 443, 0, 0,
	0, 0, 345, 308, 309, 379, 313, 323, 367, 414,
	351, 372, 268, 405, 380, 327, 0, 0, 688, 662,
	687, 689, 690, 686, 691, 692, 673, 575, 0, 622,
	684, 683, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 246, 276, 277,
	282, 467, 464, 396, 468, 0, 250, 0, 321, 0,
	362, 296, 0, 0, 651, 628, 629, 630, 573, 631,
	625, 626, 627, 652, 620, 648, 649, 599, 623, 632,
	647, 633, 650, 653, 654, 693, 694, 639, 695, 636,
	655, 646, 645, 634, 621, 656, 657, 606, 601, 637,
	638, 624, 640, 641, 642, 574, 602, 603, 604, 605,
	0, 0, 0, 421, 422, 423, 445, 407, 0, 465,
	174, 51, 163, 138, 0, 0, 0, 0, 0, 0,
	350, 0, 0, 0, 0, 471, 459, 0, 164, 0,
	0, 0, 0, 0, 0, 156, 0, 291, 0, 165,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 455, 0, 456, 0, 0, 115, 0,
	460, 381, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 0, 0, 0, 0, 0, 168,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 457, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 386, 403, 267, 377,
	416, 272, 384, 262, 349, 373, 0, 0, 258, 401,
	383, 331, 310, 311, 257, 0, 368, 289, 302, 286,
	347, 0, 400, 428, 285, 419, 0, 411, 260, 0,
	410, 346, 397, 402, 332, 326, 259, 399, 330, 325,
	314, 293, 444, 315, 316, 306, 358, 324, 359, 307,
	336, 335, 337, 0, 0, 0, 0, 0, 439, 440,
	0, 0, 0, 0, 0, 0, 137, 162, 172, 0,
	101, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	189, 0, 0, 0, 385, 0, 0, 317, 161, 155,
	154, 429, 0, 371, 352, 57, 0, 0, 369, 322,
	398, 360, 404, 387, 412, 365, 361, 251, 388, 288,
	333, 263, 265, 283, 290, 292, 294, 295, 342, 343,
	355, 376, 389, 390, 391, 287, 273, 370, 274, 304,
	275, 252, 279, 278, 280, 378, 281, 254, 356, 395,
	0, 300, 366, 329, 255, 328, 357, 394, 393, 264,
	420, 426, 427, 0, 0, 432, 157, 158, 159, 441,
	446, 447, 448, 450, 451, 452, 453, 0, 0, 0,
	0, 434, 0, 0, 0, 0, 0, 0, 0, 425,
	318, 319, 298, 248, 249, 408, 284, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	424, 192, 0, 0, 454, 200, 0, 0, 0, 160,
	0, 201, 354, 0, 375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 382, 406, 418,
	435, 438, 0, 0, 0, 0, 253, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 433, 0, 0, 338,
	339, 340, 341, 301, 0, 271, 436, 364, 113, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 0, 0, 0, 0, 0, 430, 431, 297, 303,
	449, 305, 270, 353, 299, 415, 312, 0, 442, 0,
	443, 0, 0, 0, 0, 345, 308, 309, 379, 313,
	323, 367, 414, 351, 372, 268, 405, 380, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	246, 276, 277, 282, 363, 261, 396, 374, 0, 250,
	0, 321, 139, 362, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 0, 0, 247, 242,
	243, 244, 245, 0, 350, 0, 421, 422, 423, 445,
	407, 0, 202, 39, 190, 193, 195, 194, 0, 49,
	0, 291, 0, 5, 320, 0, 0, 118, 203, 459,
	0, 0, 0, 0, 0, 0, 0, 455, 0, 456,
	0, 0, 0, 0, 460, 381, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1071, 0, 0, 196, 0, 0, 584,
	594, 0, 0, 266, 197, 457, 0, 458, 585, 0,
	593, 586, 590, 589, 587, 588, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 591, 0, 0, 0, 0, 0, 256,
	386, 403, 267, 377, 416, 272, 384, 262, 349, 373,
	0, 0, 258, 401, 383, 331, 310, 311, 257, 0,
	368, 289, 302, 286, 347, 592, 400, 428, 285, 419,
	0, 411, 260, 0, 410, 346, 397, 402, 332, 326,
	259, 399, 330, 325, 314, 293, 444, 315, 316, 306,
	358, 324, 359, 307, 336, 335, 337, 0, 0, 0,
	0, 0, 439, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 317, 0, 0, 0, 429, 0, 371, 352, 0,
	0, 0, 369, 322, 398, 360, 404, 387, 412, 365,
	361, 251, 388, 288, 333, 263, 265, 283, 290, 292,
	294, 295, 342, 343, 355, 376, 389, 390, 391, 287,
	273, 370, 274, 304, 275, 252, 279, 278, 280, 378,
	281, 254, 356, 395, 0, 300, 366, 329, 255, 328,
	357, 394, 393, 264, 420, 426, 427, 0, 0, 432,
	0, 0, 0, 441, 446, 447, 448, 450, 451, 452,
	453, 0, 0, 0, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 425, 318, 319, 298, 248, 249, 470,
	284, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 424, 0, 0, 0, 454, 469,
	0, 0, 0, 0, 0, 466, 354, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 406, 418, 435, 438, 0, 0, 0, 0,
	253, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	433, 0, 0, 338, 339, 340, 341, 301, 0, 271,
	436, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 431, 297, 303, 449, 305, 270, 353, 299, 415,
	312, 0, 442, 0, 443, 0, 0, 0, 0, 345,
	308, 309, 379, 313, 323, 367, 414, 351, 372, 268,
	405, 380, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 246, 276, 277, 282, 467, 464,
	396, 468, 0, 250, 0, 321, 0, 362, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	0, 0, 247, 242, 243, 244, 245, 0, 0, 0,
	421, 422, 423, 445, 407, 0, 465, 174, 51, 163,
	138, 0, 0, 0, 0, 0, 0, 350, 488, 0,
	0, 0, 471, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	455, 0, 456, 0, 0, 0, 0, 460, 381, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 493, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 266, 197, 457, 0,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 386, 403, 267, 377, 416, 272, 384,
	262, 349, 373, 0, 0, 258, 401, 383, 331, 310,
	311, 257, 0, 368, 289, 302, 286, 347, 0, 400,
	428, 285, 419, 0, 411, 260, 0, 410, 346, 397,
	402, 332, 326, 259, 399, 330, 325, 314, 293, 444,
	315, 316, 306, 358, 324, 359, 307, 336, 335, 337,
	0, 0, 0, 0, 0, 439, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 385, 0, 0, 317, 0, 0, 0, 429, 0,
	371, 352, 0, 0, 0, 369, 322, 398, 360, 404,
	387, 412, 365, 361, 251, 388, 288, 333, 263, 265,
	283, 290, 292, 294, 295, 342, 343, 355, 376, 389,
	390, 391, 287, 273, 370, 274, 304, 275, 252, 279,
	278, 280, 378, 281, 254, 356, 395, 0, 300, 366,
	329, 255, 328, 357, 394, 393, 264, 420, 426, 427,
	0, 0, 432, 0, 0, 0, 441, 446, 447, 448,
	450, 451, 452, 453, 0, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 425, 318, 319, 298,
	248, 249, 470, 284, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 424, 0, 0,
	0, 454, 469, 0, 0, 0, 0, 0, 466, 354,
	0, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 406, 418, 435, 438, 0,
	0, 0, 0, 253, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 433, 0, 0, 338, 339, 340, 341,
	489, 491, 271, 436, 364, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 431, 297, 303, 449, 305, 270,
	353, 299, 415, 312, 0, 442, 0, 443, 0, 0,
	0, 0, 345, 308, 309, 379, 313, 323, 367, 414,
	351, 372, 268, 405, 380, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 246, 276, 277,
	282, 467, 464, 396, 468, 0, 250, 0, 321, 139,
	362, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 0, 350, 247, 242, 243, 244, 245,
	0, 0, 897, 421, 422, 423, 445, 407, 0, 465,
	0, 291, 0, 0, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 459, 455, 0, 456,
	0, 0, 0, 0, 460, 381, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 457, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 883, 0, 0, 0, 0, 0, 0, 256,
	386, 403, 267, 377, 416, 272, 384, 262, 349, 373,
	0, 0, 2155, 2157, 2158, 2159, 2160, 2161, 2162, 0,
	2167, 2163, 2164, 2165, 2166, 0, 2150, 2151, 2152, 2153,
	881, 2134, 2156, 0, 2135, 346, 2136, 2137, 2138, 2139,
	2140, 2141, 2142, 2143, 2144, 2147, 2148, 2145, 2146, 2154,
	358, 324, 359, 307, 336, 335, 337, 908, 910, 912,
	914, 917, 439, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 317, 0, 0, 0, 2149, 0, 371, 352, 0,
	0, 0, 369, 322, 398, 360, 404, 387, 412, 365,
	361, 251, 388, 288, 333, 263, 265, 283, 290, 292,
	294, 295, 342, 343, 355, 376, 389, 390, 391, 287,
	273, 370, 274, 304, 275, 252, 279, 278, 280, 378,
	281, 254, 356, 395, 0, 300, 366, 329, 255, 328,
	357, 394, 393, 264, 420, 426, 427, 0, 0, 432,
	0, 0, 0, 441, 446, 447, 448, 450, 451, 452,
	453, 0, 0, 0, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 425, 318, 319, 298, 248, 249, 470,
	284, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 424, 0, 0, 0, 454, 469,
	0, 0, 0, 0, 0, 466, 354, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 406, 418, 435, 438, 0, 0, 0, 0,
	253, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	433, 0, 0, 338, 339, 340, 341, 301, 0, 271,
	436, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 431, 297, 303, 449, 305, 270, 353, 299, 415,
	312, 0, 442, 0, 443, 0, 0, 0, 0, 345,
	308, 309, 379, 313, 323, 367, 414, 351, 372, 268,
	405, 380, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 246, 276, 277, 282, 467, 464,
	396, 468, 0, 250, 907, 321, 0, 362, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	0, 350, 247, 242, 243, 244, 245, 0, 0, 0,
	421, 422, 423, 445, 407, 0, 465, 0, 291, 0,
	0, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 459, 455, 0, 456, 0, 0, 0,
	0, 460, 381, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	266, 197, 457, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 2010, 2013, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 386, 403, 267,
	377, 416, 272, 384, 262, 349, 373, 0, 0, 258,
	401, 383, 331, 310, 311, 257, 0, 368, 289, 302,
	286, 347, 0, 400, 428, 285, 419, 0, 411, 260,
	0, 410, 346, 397, 402, 332, 326, 259, 399, 330,
	325, 314, 293, 444, 315, 316, 306, 358, 324, 359,
	307, 336, 335, 337, 0, 0, 0, 0, 0, 439,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2014, 413, 0,
	0, 0, 2009, 0, 2008, 385, 2006, 2011, 317, 0,
	0, 0, 429, 0, 371, 352, 0, 0, 0, 369,
	322, 398, 360, 404, 387, 412, 365, 361, 251, 388,
	288, 333, 263, 265, 283, 290, 292, 294, 295, 342,
	343, 355, 376, 389, 390, 391, 287, 273, 370, 274,
	304, 275, 252, 279, 278, 280, 378, 281, 254, 356,
	395, 2012, 300, 366, 329, 255, 328, 357, 394, 393,
	264, 420, 426, 427, 0, 0, 432, 0, 0, 0,
	441, 446, 447, 448, 450, 451, 452, 453, 0, 0,
	0, 0, 434, 0, 0, 0, 0, 0, 0, 0,
	425, 318, 319, 298, 248, 249, 470, 284, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 424, 0, 0, 0, 454, 469, 0, 0, 0,
	0, 0, 466, 354, 0, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 406,
	418, 435, 438, 0, 0, 0, 0, 253, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 433, 0, 0,
	338, 339, 340, 341, 301, 0, 271, 436, 364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 431, 297,
	303, 449, 305, 270, 353, 299, 415, 312, 0, 442,
	0, 443, 0, 0, 0, 0, 345, 308, 309, 379,
	313, 323, 367, 414, 351, 372, 268, 405, 380, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 246, 276, 277, 282, 467, 464, 396, 468, 0,
	250, 0, 321, 0, 362, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 0, 0, 247,
	242, 243, 244, 245, 350, 0, 0, 421, 422, 423,
	445, 407, 0, 465, 0, 0, 1767, 0, 0, 0,
	0, 291, 0, 0, 320, 0, 0, 0, 0, 471,
	459, 0, 0, 0, 0, 0, 0, 455, 0, 456,
	0, 0, 0, 0, 460, 381, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 1768,
	0, 0, 0, 266, 197, 457, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	1004, 1005, 1006, 1003, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	386, 403, 267, 377, 416, 272, 384, 262, 349, 373,
	0, 0, 258, 401, 383, 331, 310, 311, 257, 0,
	368, 289, 302, 286, 347, 0, 400, 428, 285, 419,
	0, 411, 260, 0, 410, 346, 397, 402, 332, 326,
	259, 399, 330, 325, 314, 293, 444, 315, 316, 306,
	358, 324, 359, 307, 336, 335, 337, 0, 0, 0,
	0, 0, 439, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 317, 0, 0, 0, 429, 0, 371, 352, 0,
	0, 0, 369, 322, 398, 360, 404, 387, 412, 365,
	361, 251, 388, 288, 333, 263, 265, 283, 290, 292,
	294, 295, 342, 343, 355, 376, 389, 390, 391, 287,
	273, 370, 274, 304, 275, 252, 279, 278, 280, 378,
	281, 254, 356, 395, 0, 300, 366, 329, 255, 328,
	357, 394, 393, 264, 420, 426, 427, 0, 0, 432,
	0, 0, 0, 441, 446, 447, 448, 450, 451, 452,
	453, 0, 0, 0, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 425, 318, 319, 298, 248, 249, 470,
	284, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 424, 0, 0, 0, 454, 469,
	0, 0, 0, 0, 0, 466, 354, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 406, 418, 435, 438, 0, 0, 0, 0,
	253, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	433, 0, 0, 338, 339, 340, 341, 301, 0, 271,
	436, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 431, 297, 303, 449, 305, 270, 353, 299, 415,
	312, 0, 442, 0, 443, 0, 0, 0, 0, 345,
	308, 309, 379, 313, 323, 367, 414, 351, 372, 268,
	405, 380, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 246, 276, 277, 282, 467, 464,
	396, 468, 0, 250, 0, 321, 0, 362, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	0, 350, 247, 242, 243, 244, 245, 0, 0, 0,
	421, 422, 423, 445, 407, 0, 465, 0, 291, 814,
	0, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 459, 455, 0, 456, 0, 0, 0,
	0, 460, 381, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 821, 822, 0, 0, 0, 0,
	266, 197, 457, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 825, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 386, 809, 267,
	377, 416, 272, 384, 262, 349, 373, 0, 0, 258,
	401, 383, 331, 310, 311, 257, 0, 368, 289, 302,
	286, 347, 0, 400, 428, 285, 419, 799, 411, 260,
	798, 410, 346, 397, 402, 332, 326, 259, 399, 330,
	325, 314, 293, 444, 315, 316, 306, 358, 324, 359,
	307, 336, 335, 337, 0, 0, 0, 0, 0, 439,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 317, 0,
	0, 0, 429, 0, 371, 352, 0, 0, 0, 369,
	322, 398, 360, 404, 387, 412, 812, 361, 251, 388,
	288, 333, 263, 265, 283, 290, 292, 294, 295, 342,
	343, 355, 376, 389, 390, 391, 287, 273, 370, 274,
	304, 275, 252, 279, 278, 280, 378, 281, 254, 356,
	395, 0, 300, 366, 329, 255, 328, 357, 394, 393,
	264, 420, 426, 427, 0, 0, 432, 0, 0, 0,
	441, 446, 447, 448, 450, 451, 452, 453, 0, 0,
	0, 0, 434, 0, 0, 0, 0, 0, 0, 0,
	425, 318, 319, 298, 248, 249, 470, 284, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 424, 0, 0, 0, 454, 469, 0, 0, 0,
	0, 0, 466, 354, 0, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 406,
	418, 435, 438, 0, 0, 0, 0, 253, 437, 0,
	0, 0, 0, 0, 0, 813, 0, 409, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 816, 0, 0,
	338, 339, 340, 341, 301, 0, 271, 436, 364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 431, 297,
	303, 449, 305, 270, 353, 299, 415, 312, 0, 442,
	0, 443, 0, 0, 0, 0, 823, 810, 819, 811,
	313, 323, 367, 414, 351, 372, 268, 405, 380, 820,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 246, 276, 277, 282, 467, 464, 396, 468, 0,
	250, 0, 321, 0, 362, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 0, 350, 247,
	242, 243, 244, 245, 0, 0, 0, 421, 422, 423,
	445, 407, 0, 465, 0, 291, 0, 0, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	459, 455, 0, 456, 0, 0, 0, 0, 460, 381,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 266, 197, 457,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 2029, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 386, 403, 267, 377, 416, 272,
	384, 262, 349, 373, 0, 0, 258, 401, 383, 331,
	310, 311, 257, 0, 368, 289, 302, 286, 347, 0,
	400, 428, 285, 419, 0, 411, 260, 0, 410, 346,
	397, 402, 332, 326, 259, 399, 330, 325, 314, 293,
	444, 315, 316, 306, 358, 324, 359, 307, 336, 335,
	337, 0, 0, 0, 0, 0, 439, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2028, 413, 0, 0, 0, 2033,
	2031, 0, 385, 0, 2032, 317, 0, 0, 0, 429,
	0, 371, 352, 0, 0, 0, 369, 322, 398, 360,
	404, 387, 412, 365, 361, 251, 388, 288, 333, 263,
	265, 283, 290, 292, 294, 295, 342, 343, 355, 376,
	389, 390, 391, 287, 273, 370, 274, 304, 275, 252,
	279, 278, 280, 378, 281, 254, 356, 395, 0, 300,
	366, 329, 255, 328, 357, 394, 393, 264, 420, 426,
	427, 0, 0, 432, 0, 0, 0, 441, 446, 447,
	448, 450, 451, 452, 453, 0, 0, 0, 0, 434,
	0, 0, 0, 0, 0, 0, 0, 425, 318, 319,
	298, 248, 249, 470, 284, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 424, 0,
	0, 0, 454, 469, 0, 0, 0, 0, 0, 466,
	354, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 406, 418, 435, 438,
	0, 0, 0, 0, 253, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 433, 0, 0, 338, 339, 340,
	341, 301, 0, 271, 436, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 431, 297, 303, 449, 305,
	270, 353, 299, 415, 312, 0, 442, 0, 443, 0,
	0, 0, 0, 345, 308, 309, 379, 313, 323, 367,
	414, 351, 372, 268, 405, 380, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 246, 276,
	277, 282, 467, 464, 396, 468, 0, 250, 0, 321,
	0, 362, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 174, 0, 0, 247, 242, 243, 244,
	245, 0, 0, 350, 421, 422, 423, 445, 407, 0,
	465, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 320, 0, 0, 471, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 455, 0, 456, 0,
	0, 115, 0, 460, 381, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 1811, 0, 196, 0, 0, 0, 0,
	0, 0, 266, 197, 457, 0, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 386,
	403, 267, 377, 416, 272, 384, 262, 349, 373, 0,
	0, 258, 401, 383, 331, 310, 311, 257, 0, 368,
	289, 302, 286, 347, 0, 400, 428, 285, 419, 0,
	411, 260, 0, 410, 346, 397, 402, 332, 326, 259,
	399, 330, 325, 314, 293, 444, 315, 316, 306, 358,
	324, 359, 307, 336, 335, 337, 0, 0, 0, 0,
	0, 439, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	317, 0, 0, 0, 429, 0, 371, 352, 0, 0,
	0, 369, 322, 398, 360, 404, 387, 412, 365, 361,
	251, 388, 288, 333, 263, 265, 283, 290, 292, 294,
	295, 342, 343, 355, 376, 389, 390, 391, 287, 273,
	370, 274, 304, 275, 252, 279, 278, 280, 378, 281,
	254, 356, 395, 0, 300, 366, 329, 255, 328, 357,
	394, 393, 264, 420, 426, 427, 0, 0, 432, 0,
	0, 0, 441, 446, 447, 448, 450, 451, 452, 453,
	0, 0, 0, 0, 434, 0, 0, 0, 0, 0,
	0, 0, 425, 318, 319, 298, 248, 249, 470, 284,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 424, 0, 0, 0, 454, 469, 0,
	0, 0, 0, 0, 466, 354, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 406, 418, 435, 438, 0, 0, 0, 0, 253,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 433,
	0, 0, 338, 339, 340, 341, 301, 0, 271, 436,
	364, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	431, 297, 303, 449, 305, 270, 353, 299, 415, 312,
	0, 442, 0, 443, 0, 0, 0, 0, 345, 308,
	309, 379, 313, 323, 367, 414, 351, 372, 268, 405,
	380, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 246, 276, 277, 282, 467, 464, 396,
	468, 0, 250, 0, 321, 139, 362, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 174, 0,
	0, 247, 242, 243, 244, 245, 0, 0, 350, 421,
	422, 423, 445, 407, 0, 465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 320, 0,
	0, 471, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 455, 0, 456, 0, 0, 115, 0, 460, 381,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 1802, 0,
	196, 0, 0, 0, 0, 0, 0, 266, 197, 457,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 386, 403, 267, 377, 416, 272,
	384, 262, 349, 373, 0, 0, 258, 401, 383, 331,
	310, 311, 257, 0, 368, 289, 302, 286, 347, 0,
	400, 428, 285, 419, 0, 411, 260, 0, 410, 346,
	397, 402, 332, 326, 259, 399, 330, 325, 314, 293,
	444, 315, 316, 306, 358, 324, 359, 307, 336, 335,
	337, 0, 0, 0, 0, 0, 439, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 317, 0, 0, 0, 429,
	0, 371, 352, 0, 0, 0, 369, 322, 398, 360,
	404, 387, 412, 365, 361, 251, 388, 288, 333, 263,
	265, 283, 290, 292, 294, 295, 342, 343, 355, 376,
	389, 390, 391, 287, 273, 370, 274, 304, 275, 252,
	279, 278, 280, 378, 281, 254, 356, 395, 0, 300,
	366, 329, 255, 328, 357, 394, 393, 264, 420, 426,
	427, 0, 0, 432, 0, 0, 0, 441, 446, 447,
	448, 450, 451, 452, 453, 0, 0, 0, 0, 434,
	0, 0, 0, 0, 0, 0, 0, 425, 318, 319,
	298, 248, 249, 470, 284, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 424, 0,
	0, 0, 454, 469, 0, 0, 0, 0, 0, 466,
	354, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 406, 418, 435, 438,
	0, 0, 0, 0, 253, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 433, 0, 0, 338, 339, 340,
	341, 301, 0, 271, 436, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 431, 297, 303, 449, 305,
	270, 353, 299, 415, 312, 0, 442, 0, 443, 0,
	0, 0, 0, 345, 308, 309, 379, 313, 323, 367,
	414, 351, 372, 268, 405, 380, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 246, 276,
	277, 282, 467, 464, 396, 468, 0, 250, 0, 321,
	139, 362, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 174, 0, 0, 247, 242, 243, 244,
	245, 0, 0, 350, 421, 422, 423, 445, 407, 0,
	465, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 320, 0, 0, 471, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 455, 0, 456, 0,
	0, 115, 0, 460, 381, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1701, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 266, 197, 457, 0, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 386,
	403, 267, 377, 416, 272, 384, 262, 349, 373, 0,
	0, 258, 401, 383, 331, 310, 311, 257, 0, 368,
	289, 302, 286, 347, 0, 400, 428, 285, 419, 0,
	411, 260, 0, 410, 346, 397, 402, 332, 326, 259,
	399, 330, 325, 314, 293, 444, 315, 316, 306, 358,
	324, 359, 307, 336, 335, 337, 0, 0, 0, 0,
	0, 439, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	317, 0, 0, 0, 429, 0, 371, 352, 0, 0,
	0, 369, 322, 398, 360, 404, 387, 412, 365, 361,
	251, 388, 288, 333, 263, 265, 283, 290, 292, 294,
	295, 342, 343, 355, 376, 389, 390, 391, 287, 273,
	370, 274, 304, 275, 252, 279, 278, 280, 378, 281,
	254, 356, 395, 0, 300, 366, 329, 255, 328, 357,
	394, 393, 264, 420, 426, 427, 0, 0, 432, 0,
	0, 0, 441, 446, 447, 448, 450, 451, 452, 453,
	0, 0, 0, 0, 434, 0, 0, 0, 0, 0,
	0, 0, 425, 318, 319, 298, 248, 249, 470, 284,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 424, 0, 0, 0, 454, 469, 0,
	0, 0, 0, 0, 466, 354, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 406, 418, 435, 438, 0, 0, 0, 0, 253,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 433,
	0, 0, 338, 339, 340, 341, 301, 0, 271, 436,
	364, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	431, 297, 303, 449, 305, 270, 353, 299, 415, 312,
	0, 442, 0, 443, 0, 0, 0, 0, 345, 308,
	309, 379, 313, 323, 367, 414, 351, 372, 268, 405,
	380, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 246, 276, 277, 282, 467, 464, 396,
	468, 0, 250, 0, 321, 139, 362, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	350, 247, 242, 243, 244, 245, 0, 0, 0, 421,
	422, 423, 445, 407, 0, 465, 0, 291, 0, 0,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 459, 455, 0, 456, 0, 0, 0, 0,
	460, 381, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 821, 822, 0, 0, 0, 0, 266,
	197, 457, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 386, 403, 267, 377,
	416, 272, 384, 262, 349, 373, 0, 0, 258, 401,
	383, 331, 310, 311, 257, 0, 368, 289, 302, 286,
	347, 0, 400, 428, 285, 419, 799, 411, 260, 798,
	410, 346, 397, 402, 332, 326, 259, 399, 330, 325,
	314, 293, 444, 315, 316, 306, 358, 324, 359, 307,
	336, 335, 337, 0, 0, 0, 0, 0, 439, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 317, 0, 0,
	0, 429, 0, 371, 352, 0, 0, 0, 369, 322,
	398, 360, 404, 387, 412, 365, 361, 251, 388, 288,
	333, 263, 265, 283, 290, 292, 294, 295, 342, 343,
	355, 376, 389, 390, 391, 287, 273, 370, 274, 304,
	275, 252, 279, 278, 280, 378, 281, 254, 356, 395,
	0, 300, 366, 329, 255, 328, 357, 394, 393, 264,
	420, 426, 427, 0, 0, 432, 0, 0, 0, 441,
	446, 447, 448, 450, 451, 452, 453, 0, 0, 0,
	0, 434, 0, 0, 0, 0, 0, 0, 0, 425,
	318, 319, 298, 248, 249, 470, 284, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	424, 0, 0, 0, 454, 469, 0, 0, 0, 0,
	0, 466, 354, 0, 375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 382, 406, 418,
	435, 438, 0, 0, 0, 0, 253, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 433, 0, 0, 338,
	339, 340, 341, 301, 0, 271, 436, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 431, 297, 303,
	449, 305, 270, 353, 299, 415, 312, 0, 442, 0,
	443, 0, 0, 0, 0, 823, 1720, 819, 1721, 313,
	323, 367, 414, 351, 372, 268, 405, 380, 820, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	246, 276, 277, 282, 467, 464, 396, 468, 0, 250,
	0, 321, 0, 362, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 0, 0, 247, 242,
	243, 244, 245, 0, 350, 0, 421, 422, 423, 445,
	407, 0, 465, 2478, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 320, 0, 0, 0, 471, 459,
	0, 0, 0, 0, 0, 0, 0, 455, 0, 456,
	0, 0, 0, 0, 460, 381, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 457, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	386, 403, 267, 377, 416, 272, 384, 262, 349, 373,
	0, 0, 258, 401, 383, 331, 310, 311, 257, 0,
	368, 289, 302, 286, 347, 0, 400, 428, 285, 419,
	0, 411, 260, 0, 410, 346, 397, 402, 332, 326,
	259, 399, 330, 325, 314, 293, 444, 315, 316, 306,
	358, 324, 359, 307, 336, 335, 337, 0, 0, 0,
	0, 0, 439, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 2481, 0, 0, 2480, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 317, 0, 0, 0, 429, 0, 371, 352, 0,
	0, 0, 369, 322, 398, 360, 404, 387, 412, 365,
	361, 251, 388, 288, 333, 263, 265, 283, 290, 292,
	294, 295, 342, 343, 355, 376, 389, 390, 391, 287,
	273, 370, 274, 304, 275, 252, 279, 278, 280, 378,
	281, 254, 356, 395, 0, 300, 366, 329, 255, 328,
	357, 394, 393, 264, 420, 426, 427, 0, 0, 432,
	0, 0, 0, 441, 446, 447, 448, 450, 451, 452,
	453, 0, 0, 0, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 425, 318, 319, 298, 248, 249, 470,
	284, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 424, 0, 0, 0, 454, 469,
	0, 0, 0, 0, 0, 466, 354, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 406, 418, 435, 438, 0, 0, 0, 0,
	253, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	433, 0, 0, 338, 339, 340, 341, 301, 0, 271,
	436, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 431, 297, 303, 449, 305, 270, 353, 299, 415,
	312, 0, 442, 0, 443, 0, 0, 0, 0, 345,
	308, 309, 379, 313, 323, 367, 414, 351, 372, 268,
	405, 380, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 246, 276, 277, 282, 467, 464,
	396, 468, 0, 250, 0, 321, 0, 362, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	0, 350, 247, 242, 243, 244, 245, 0, 0, 0,
	421, 422, 423, 445, 407, 0, 465, 0, 291, 1256,
	0, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 459, 455, 0, 456, 0, 0, 0,
	0, 460, 381, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 1254, 0, 0, 0,
	266, 197, 457, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1252,
	0, 0, 0, 0, 0, 0, 256, 386, 403, 267,
	377, 416, 272, 384, 262, 349, 373, 0, 0, 258,
	401, 383, 331, 310, 311, 257, 0, 368, 289, 302,
	286, 347, 0, 400, 428, 285, 419, 0, 411, 260,
	0, 410, 346, 397, 402, 332, 326, 259, 399, 330,
	325, 314, 293, 444, 315, 316, 306, 358, 324, 359,
	307, 336, 335, 337, 0, 0, 0, 0, 0, 439,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 317, 0,
	0, 0, 429, 0, 371, 352, 0, 0, 0, 369,
	322, 398, 360, 404, 387, 412, 365, 361, 251, 388,
	288, 333, 263, 265, 283, 290, 292, 294, 295, 342,
	343, 355, 376, 389, 390, 391, 287, 273, 370, 274,
	304, 275, 252, 279, 278, 280, 378, 281, 254, 356,
	395, 0, 300, 366, 329, 255, 328, 357, 394, 393,
	264, 420, 426, 427, 0, 0, 432, 0, 0, 0,
	441, 446, 447, 448, 450, 451, 452, 453, 0, 0,
	0, 0, 434, 0, 0, 0, 0, 0, 0, 0,
	425, 318, 319, 298, 248, 249, 470, 284, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 424, 0, 0, 0, 454, 469, 0, 0, 0,
	0, 0, 466, 354, 0, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 406,
	418, 435, 438, 0, 0, 0, 0, 253, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 433, 0, 0,
	338, 339, 340, 341, 301, 0, 271, 436, 364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 431, 297,
	303, 449, 305, 270, 353, 299, 415, 312, 0, 442,
	0, 443, 0, 0, 0, 0, 345, 308, 309, 379,
	313, 323, 367, 414, 351, 372, 268, 405, 380, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 246, 276, 277, 282, 467, 464, 396, 468, 0,
	250, 0, 321, 0, 362, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 0, 350, 247,
	242, 243, 244, 245, 0, 0, 0, 421, 422, 423,
	445, 407, 0, 465, 0, 291, 1250, 0, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	459, 455, 0, 456, 0, 0, 0, 0, 460, 381,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 1254, 0, 0, 0, 266, 197, 457,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1252, 0, 0, 0,
	0, 0, 0, 256, 386, 403, 267, 377, 416, 272,
	384, 262, 349, 373, 0, 0, 258, 401, 383, 331,
	310, 311, 257, 0, 368, 289, 302, 286, 347, 0,
	400, 428, 285, 419, 0, 411, 260, 0, 410, 346,
	397, 402, 332, 326, 259, 399, 330, 325, 314, 293,
	444, 315, 316, 306, 358, 324, 359, 307, 336, 335,
	337, 0, 0, 0, 0, 0, 439, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 317, 0, 0, 0, 429,
	0, 371, 352, 0, 0, 0, 369, 322, 398, 360,
	404, 387, 412, 365, 361, 251, 388, 288, 333, 263,
	265, 283, 290, 292, 294, 295, 342, 343, 355, 376,
	389, 390, 391, 287, 273, 370, 274, 304, 275, 252,
	279, 278, 280, 378, 281, 254, 356, 395, 0, 300,
	366, 329, 255, 328, 357, 394, 393, 264, 420, 426,
	427, 0, 0, 432, 0, 0, 0, 441, 446, 447,
	448, 450, 451, 452, 453, 0, 0, 0, 0, 434,
	0, 0, 0, 0, 0, 0, 0, 425, 318, 319,
	298, 248, 249, 470, 284, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 424, 0,
	0, 0, 454, 469, 0, 0, 0, 0, 0, 466,
	354, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 406, 418, 435, 438,
	0, 0, 0, 0, 253, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 433, 0, 0, 338, 339, 340,
	341, 301, 0, 271, 436, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 431, 297, 303, 449, 305,
	270, 353, 299, 415, 312, 0, 442, 0, 443, 0,
	0, 0, 0, 345, 308, 309, 379, 313, 323, 367,
	414, 351, 372, 268, 405, 380, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 246, 276,
	277, 282, 467, 464, 396, 468, 0, 250, 0, 321,
	0, 362, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 0, 350, 247, 242, 243, 244,
	245, 0, 0, 0, 421, 422, 423, 445, 407, 0,
	465, 0, 291, 0, 0, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 459, 455, 0,
	456, 0, 0, 0, 0, 460, 381, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3293, 0, 196, 644, 0,
	0, 0, 0, 0, 266, 197, 457, 0, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 386, 403, 267, 377, 416, 272, 384, 262, 349,
	373, 0, 0, 258, 401, 383, 331, 310, 311, 257,
	0, 368, 289, 302, 286, 347, 0, 400, 428, 285,
	419, 0, 411, 260, 0, 410, 346, 397, 402, 332,
	326, 259, 399, 330, 325, 314, 293, 444, 315, 316,
	306, 358, 324, 359, 307, 336, 335, 337, 0, 0,
	0, 0, 0, 439, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 317, 0, 0, 0, 429, 0, 371, 352,
	0, 0, 0, 369, 322, 398, 360, 404, 387, 412,
	365, 361, 251, 388, 288, 333, 263, 265, 283, 290,
	292, 294, 295, 342, 343, 355, 376, 389, 390, 391,
	287, 273, 370, 274, 304, 275, 252, 279, 278, 280,
	378, 281, 254, 356, 395, 0, 300, 366, 329, 255,
	328, 357, 394, 393, 264, 420, 426, 427, 0, 0,
	432, 0, 0, 0, 441, 446, 447, 448, 450, 451,
	452, 453, 0, 0, 0, 0, 434, 0, 0, 0,
	0, 0, 0, 0, 425, 318, 319, 298, 248, 249,
	470, 284, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 424, 0, 0, 0, 454,
	469, 0, 0, 0, 0, 0, 466, 354, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 406, 418, 435, 438, 0, 0, 0,
	0, 253, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 433, 0, 0, 338, 339, 340, 341, 301, 0,
	271, 436, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 431, 297, 303, 449, 305, 270, 353, 299,
	415, 312, 0, 442, 0, 443, 0, 0, 0, 0,
	345, 308, 309, 379, 313, 323, 367, 414, 351, 372,
	268, 405, 380, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 246, 276, 277, 282, 467,
	464, 396, 468, 0, 250, 0, 321, 0, 362, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 0, 350, 247, 242, 243, 244, 245, 0, 0,
	0, 421, 422, 423, 445, 407, 0, 465, 0, 291,
	0, 0, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 459, 455, 0, 456, 0, 0,
	0, 0, 460, 381, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 1254, 0, 0,
	0, 266, 197, 457, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1252, 0, 0, 0, 0, 0, 0, 256, 386, 403,
	267, 377, 416, 272, 384, 262, 349, 373, 0, 0,
	258, 401, 383, 331, 310, 311, 257, 0, 368, 289,
	302, 286, 347, 0, 400, 428, 285, 419, 0, 411,
	260, 0, 410, 346, 397, 402, 332, 326, 259, 399,
	330, 325, 314, 293, 444, 315, 316, 306, 358, 324,
	359, 307, 336, 335, 337, 0, 0, 0, 0, 0,
	439, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 317,
	0, 0, 0, 429, 0, 371, 352, 0, 0, 0,
	369, 322, 398, 360, 404, 387, 412, 365, 361, 251,
	388, 288, 333, 263, 265, 283, 290, 292, 294, 295,
	342, 343, 355, 376, 389, 390, 391, 287, 273, 370,
	274, 304, 275, 252, 279, 278, 280, 378, 281, 254,
	356, 395, 0, 300, 366, 329, 255, 328, 357, 394,
	393, 264, 420, 426, 427, 0, 0, 432, 0, 0,
	0, 441, 446, 447, 448, 450, 451, 452, 453, 0,
	0, 0, 0, 434, 0, 0, 0, 0, 0, 0,
	0, 425, 318, 319, 298, 248, 249, 470, 284, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 424, 0, 0, 0, 454, 469, 0, 0,
	0, 0, 0, 466, 354, 0, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 382,
	406, 418, 435, 438, 0, 0, 0, 0, 253, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 433, 0,
	0, 338, 339, 340, 341, 301, 0, 271, 436, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 431,
	297, 303, 449, 305, 270, 353, 299, 415, 312, 0,
	442, 0, 443, 0, 0, 0, 0, 345, 308, 309,
	379, 313, 323, 367, 414, 351, 372, 268, 405, 380,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 246, 276, 277, 282, 467, 464, 396, 468,
	0, 250, 0, 321, 0, 362, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 0, 350,
	247, 242, 243, 244, 245, 0, 0, 0, 421, 422,
	423, 445, 407, 0, 465, 0, 291, 0, 0, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 459, 455, 0, 456, 0, 0, 0, 0, 460,
	381, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 1254, 0, 0, 0, 266, 197,
	457, 0, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3009, 0, 0,
	0, 0, 0, 0, 256, 386, 403, 267, 377, 416,
	272, 384, 262, 349, 373, 0, 0, 258, 401, 383,
	331, 310, 311, 257, 0, 368, 289, 302, 286, 347,
	0, 400, 428, 285, 419, 0, 411, 260, 0, 410,
	346, 397, 402, 332, 326, 259, 399, 330, 325, 314,
	293, 444, 315, 316, 306, 358, 324, 359, 307, 336,
	335, 337, 0, 0, 0, 0, 0, 439, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 317, 0, 0, 0,
	429, 0, 371, 352, 0, 0, 0, 369, 322, 398,
	360, 404, 387, 412, 365, 361, 251, 388, 288, 333,
	263, 265, 283, 290, 292, 294, 295, 342, 343, 355,
	376, 389, 390, 391, 287, 273, 370, 274, 304, 275,
	252, 279, 278, 280, 378, 281, 254, 356, 395, 0,
	300, 366, 329, 255, 328, 357, 394, 393, 264, 420,
	426, 427, 0, 0, 432, 0, 0, 0, 441, 446,
	447, 448, 450, 451, 452, 453, 0, 0, 0, 0,
	434, 0, 0, 0, 0, 0, 0, 0, 425, 318,
	319, 298, 248, 249, 470, 284, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 424,
	0, 0, 0, 454, 469, 0, 0, 0, 0, 0,
	466, 354, 0, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 406, 418, 435,
	438, 0, 0, 0, 0, 253, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 433, 0, 0, 338, 339,
	340, 341, 301, 0, 271, 436, 364, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 430, 431, 297, 303, 449,
	305, 270, 353, 299, 415, 312, 0, 442, 0, 443,
	0, 0, 0, 0, 345, 308, 309, 379, 313, 323,
	367, 414, 351, 372, 268, 405, 380, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 246,
	276, 277, 282, 467, 464, 396, 468, 0, 250, 0,
	321, 0, 362, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 0, 0, 247, 242, 243,
	244, 245, 350, 0, 0, 421, 422, 423, 445, 407,
	0, 465, 0, 0, 2098, 0, 0, 0, 0, 291,
	0, 0, 320, 0, 0, 0, 0, 471, 459, 0,
	0, 0, 0, 0, 0, 455, 0, 456, 0, 0,
	0, 0, 460, 381, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 2100, 0, 0,
	0, 266, 197, 457, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 386, 403,
	267, 377, 416, 272, 384, 262, 349, 373, 0, 0,
	258, 401, 383, 331, 310, 311, 257, 0, 368, 289,
	302, 286, 347, 0, 400, 428, 285, 419, 0, 411,
	260, 0, 410, 346, 397, 402, 332, 326, 259, 399,
	330, 325, 314, 293, 444, 315, 316, 306, 358, 324,
	359, 307, 336, 335, 337, 0, 0, 0, 0, 0,
	439, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 317,
	0, 0, 0, 429, 0, 371, 352, 0, 0, 0,
	369, 322, 398, 360, 404, 387, 412, 365, 361, 251,
	388, 288, 333, 263, 265, 283, 290, 292, 294, 295,
	342, 343, 355, 376, 389, 390, 391, 287, 273, 370,
	274, 304, 275, 252, 279, 278, 280, 378, 281, 254,
	356, 395, 0, 300, 366, 329, 255, 328, 357, 394,
	393, 264, 420, 426, 427, 0, 0, 432, 0, 0,
	0, 441, 446, 447, 448, 450, 451, 452, 453, 0,
	0, 0, 0, 434, 0, 0, 0, 0, 0, 0,
	0, 425, 318, 319, 298, 248, 249, 470, 284, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 424, 0, 0, 0, 454, 469, 0, 0,
	0, 0, 0, 466, 354, 0, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 382,
	406, 418, 435, 438, 0, 0, 0, 0, 253, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 433, 0,
	0, 338, 339, 340, 341, 301, 0, 271, 436, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 431,
	297, 303, 449, 305, 270, 353, 299, 415, 312, 0,
	442, 0, 443, 0, 0, 0, 0, 345, 308, 309,
	379, 313, 323, 367, 414, 351, 372, 268, 405, 380,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 246, 276, 277, 282, 467, 464, 396, 468,
	0, 250, 0, 321, 0, 362, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 0, 350,
	247, 242, 243, 244, 245, 0, 0, 0, 421, 422,
	423, 445, 407, 0, 465, 0, 291, 2119, 0, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 459, 455, 0, 456, 0, 0, 0, 0, 460,
	381, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 1254, 0, 0, 0, 266, 197,
	457, 0, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 386, 403, 267, 377, 416,
	272, 384, 262, 349, 373, 0, 0, 258, 401, 383,
	331, 310, 311, 257, 0, 368, 289, 302, 286, 347,
	0, 400, 428, 285, 419, 0, 411, 260, 0, 410,
	346, 397, 402, 332, 326, 259, 399, 330, 325, 314,
	293, 444, 315, 316, 306, 358, 324, 359, 307, 336,
	335, 337, 0, 0, 0, 0, 0, 439, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 317, 0, 0, 0,
	429, 0, 371, 352, 0, 0, 0, 369, 322, 398,
	360, 404, 387, 412, 365, 361, 251, 388, 288, 333,
	263, 265, 283, 290, 292, 294, 295, 342, 343, 355,
	376, 389, 390, 391, 287, 273, 370, 274, 304, 275,
	252, 279, 278, 280, 378, 281, 254, 356, 395, 0,
	300, 366, 329, 255, 328, 357, 394, 393, 264, 420,
	426, 427, 0, 0, 432, 0, 0, 0, 441, 446,
	447, 448, 450, 451, 452, 453, 0, 0, 0, 0,
	434, 0, 0, 0, 0, 0, 0, 0, 425, 318,
	319, 298, 248, 249, 470, 284, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 424,
	0, 0, 0, 454, 469, 0, 0, 0, 0, 0,
	466, 354, 0, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 406, 418, 435,
	438, 0, 0, 0, 0, 253, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 433, 0, 0, 338, 339,
	340, 341, 301, 0, 271, 436, 364, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 430, 431, 297, 303, 449,
	305, 270, 353, 299, 415, 312, 0, 442, 0, 443,
	0, 0, 0, 0, 345, 308, 309, 379, 313, 323,
	367, 414, 351, 372, 268, 405, 380, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 246,
	276, 277, 282, 467, 464, 396, 468, 0, 250, 0,
	321, 0, 362, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 0, 350, 247, 242, 243,
	244, 245, 0, 0, 0, 421, 422, 423, 445, 407,
	0, 465, 0, 291, 0, 0, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 459, 455,
	0, 456, 0, 0, 0, 0, 460, 381, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3390, 0, 196, 0,
	0, 0, 0, 0, 0, 266, 197, 457, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 386, 403, 267, 377, 416, 272, 384, 262,
	349, 373, 0, 0, 258, 401, 383, 331, 310, 311,
	257, 0, 368, 289, 302, 286, 347, 0, 400, 428,
	285, 419, 0, 411, 260, 0, 410, 346, 397, 402,
	332, 326, 259, 399, 330, 325, 314, 293, 444, 315,
	316, 306, 358, 324, 359, 307, 336, 335, 337, 0,
	0, 0, 0, 0, 439, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 317, 0, 0, 0, 429, 0, 371,
	352, 0, 0, 0, 369, 322, 398, 360, 404, 387,
	412, 365, 361, 251, 388, 288, 333, 263, 265, 283,
	290, 292, 294, 295, 342, 343, 355, 376, 389, 390,
	391, 287, 273, 370, 274, 304, 275, 252, 279, 278,
	280, 378, 281, 254, 356, 395, 0, 300, 366, 329,
	255, 328, 357, 394, 393, 264, 420, 426, 427, 0,
	0, 432, 0, 0, 0, 441, 446, 447, 448, 450,
	451, 452, 453, 0, 0, 0, 0, 434, 0, 0,
	0, 0, 0, 0, 0, 425, 318, 319, 298, 248,
	249, 470, 284, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 424, 0, 0, 0,
	454, 469, 0, 0, 0, 0, 0, 466, 354, 0,
	375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 406, 418, 435, 438, 0, 0,
	0, 0, 253, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 433, 0, 0, 338, 339, 340, 341, 301,
	0, 271, 436, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 431, 297, 303, 449, 305, 270, 353,
	299, 415, 312, 0, 442, 0, 443, 0, 0, 0,
	0, 345, 308, 309, 379, 313, 323, 367, 414, 351,
	372, 268, 405, 380, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 246, 276, 277, 282,
	467, 464, 396, 468, 0, 250, 0, 321, 0, 362,
	296, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 0, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 0, 0, 350, 247, 242, 243, 244, 245, 0,
	0, 0, 421, 422, 423, 445, 407, 0, 465, 0,
	291, 0, 0, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 459, 455, 0, 456, 0,
	0, 0, 0, 460, 381, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 644, 0, 0, 0,
	0, 0, 266, 197, 457, 0, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 386,
	403, 267, 377, 416, 272, 384, 262, 349, 373, 0,
	0, 258, 401, 383, 331, 310, 311, 257, 0, 368,
	289, 302, 286, 347, 0, 400, 428, 285, 419, 0,
	411, 260, 0, 410, 346, 397, 402, 332, 326, 259,
	399, 330, 325, 314, 293, 444, 315, 316, 306, 358,
	324, 359, 307, 336, 335, 337, 0, 0, 0, 0,
	0, 439, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	317, 0, 0, 0, 429, 0, 371, 352, 0, 0,
	0, 369, 322, 398, 360, 404, 387, 412, 365, 361,
	251, 388, 288, 333, 263, 265, 283, 290, 292, 294,
	295, 342, 343, 355, 376, 389, 390, 391, 287, 273,
	370, 274, 304, 275, 252, 279, 278, 280, 378, 281,
	254, 356, 395, 0, 300, 366, 329, 255, 328, 357,
	394, 393, 264, 420, 426, 427, 0, 0, 432, 0,
	0, 0, 441, 446, 447, 448, 450, 451, 452, 453,
	0, 0, 0, 0, 434, 0, 0, 0, 0, 0,
	0, 0, 425, 318, 319, 298, 248, 249, 470, 284,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 424, 0, 0, 0, 454, 469, 0,
	0, 0, 0, 0, 466, 354, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 406, 418, 435, 438, 0, 0, 0, 0, 253,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 433,
	0, 0, 338, 339, 340, 341, 301, 0, 271, 436,
	364, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	431, 297, 303, 449, 305, 270, 353, 299, 415, 312,
	0, 442, 0, 443, 0, 0, 0, 0, 345, 308,
	309, 379, 313, 323, 367, 414, 351, 372, 268, 405,
	380, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 246, 276, 277, 282, 467, 464, 396,
	468, 0, 250, 0, 321, 0, 362, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	350, 247, 242, 243, 244, 245, 0, 0, 0, 421,
	422, 423, 445, 407, 0, 465, 0, 291, 0, 0,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 459, 455, 0, 456, 0, 0, 0, 0,
	460, 381, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3311,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 457, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 386, 403, 267, 377,
	416, 272, 384, 262, 349, 373, 0, 0, 258, 401,
	383, 331, 310, 311, 257, 0, 368, 289, 302, 286,
	347, 0, 400, 428, 285, 419, 0, 411, 260, 0,
	410, 346, 397, 402, 332, 326, 259, 399, 330, 325,
	314, 293, 444, 315, 316, 306, 358, 324, 359, 307,
	336, 335, 337, 0, 0, 0, 0, 0, 439, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 317, 0, 0,
	0, 429, 0, 371, 352, 0, 0, 0, 369, 322,
	398, 360, 404, 387, 412, 365, 361, 251, 388, 288,
	333, 263, 265, 283, 290, 292, 294, 295, 342, 343,
	355, 376, 389, 390, 391, 287, 273, 370, 274, 304,
	275, 252, 279, 278, 280, 378, 281, 254, 356, 395,
	0, 300, 366, 329, 255, 328, 357, 394, 393, 264,
	420, 426, 427, 0, 0, 432, 0, 0, 0, 441,
	446, 447, 448, 450, 451, 452, 453, 0, 0, 0,
	0, 434, 0, 0, 0, 0, 0, 0, 0, 425,
	318, 319, 298, 248, 249, 470, 284, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	424, 0, 0, 0, 454, 469, 0, 0, 0, 0,
	0, 466, 354, 0, 375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 382, 406, 418,
	435, 438, 0, 0, 0, 0, 253, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 433, 0, 0, 338,
	339, 340, 341, 301, 0, 271, 436, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 431, 297, 303,
	449, 305, 270, 353, 299, 415, 312, 0, 442, 0,
	443, 0, 0, 0, 0, 345, 308, 309, 379, 313,
	323, 367, 414, 351, 372, 268, 405, 380, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	246, 276, 277, 282, 467, 464, 396, 468, 0, 250,
	0, 321, 0, 362, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 0, 350, 247, 242,
	243, 244, 245, 0, 0, 0, 421, 422, 423, 445,
	407, 0, 465, 0, 291, 0, 0, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 459,
	455, 0, 456, 0, 0, 0, 0, 460, 381, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 266, 197, 457, 0,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 386, 403, 267, 377, 416, 272, 384,
	262, 349, 373, 0, 0, 258, 401, 383, 331, 310,
	311, 257, 0, 368, 289, 302, 286, 347, 0, 400,
	428, 285, 419, 0, 411, 260, 0, 410, 346, 397,
	402, 332, 326, 259, 399, 330, 325, 314, 293, 444,
	315, 316, 306, 358, 324, 359, 307, 336, 335, 337,
	0, 0, 0, 0, 0, 439, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 3233, 0,
	0, 385, 0, 0, 317, 0, 0, 0, 429, 0,
	371, 352, 0, 0, 0, 369, 322, 398, 360, 404,
	387, 412, 365, 361, 251, 388, 288, 333, 263, 265,
	283, 290, 292, 294, 295, 342, 343, 355, 376, 389,
	390, 391, 287, 273, 370, 274, 304, 275, 252, 279,
	278, 280, 378, 281, 254, 356, 395, 0, 300, 366,
	329, 255, 328, 357, 394, 393, 264, 420, 426, 427,
	0, 0, 432, 0, 0, 0, 441, 446, 447, 448,
	450, 451, 452, 453, 0, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 425, 318, 319, 298,
	248, 249, 470, 284, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 424, 0, 0,
	0, 454, 469, 0, 0, 0, 0, 0, 466, 354,
	0, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 406, 418, 435, 438, 0,
	0, 0, 0, 253, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 433, 0, 0, 338, 339, 340, 341,
	301, 0, 271, 436, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 431, 297, 303, 449, 305, 270,
	353, 299, 415, 312, 0, 442, 0, 443, 0, 0,
	0, 0, 345, 308, 309, 379, 313, 323, 367, 414,
	351, 372, 268, 405, 380, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 246, 276, 277,
	282, 467, 464, 396, 468, 0, 250, 0, 321, 0,
	362, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 0, 350, 247, 242, 243, 244, 245,
	0, 0, 0, 421, 422, 423, 445, 407, 0, 465,
	0, 291, 0, 0, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 459, 455, 0, 456,
	0, 0, 0, 0, 460, 381, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3005, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 457, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	386, 403, 267, 377, 416, 272, 384, 262, 349, 373,
	0, 0, 258, 401, 383, 331, 310, 311, 257, 0,
	368, 289, 302, 286, 347, 0, 400, 428, 285, 419,
	0, 411, 260, 0, 410, 346, 397, 402, 332, 326,
	259, 399, 330, 325, 314, 293, 444, 315, 316, 306,
	358, 324, 359, 307, 336, 335, 337, 0, 0, 0,
	0, 0, 439, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 317, 0, 0, 0, 429, 0, 371, 352, 0,
	0, 0, 369, 322, 398, 360, 404, 387, 412, 365,
	361, 251, 388, 288, 333, 263, 265, 283, 290, 292,
	294, 295, 342, 343, 355, 376, 389, 390, 391, 287,
	273, 370, 274, 304, 275, 252, 279, 278, 280, 378,
	281, 254, 356, 395, 0, 300, 366, 329, 255, 328,
	357, 394, 393, 264, 420, 426, 427, 0, 0, 432,
	0, 0, 0, 441, 446, 447, 448, 450, 451, 452,
	453, 0, 0, 0, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 425, 318, 319, 298, 248, 249, 470,
	284, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 424, 0, 0, 0, 454, 469,
	0, 0, 0, 0, 0, 466, 354, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 406, 418, 435, 438, 0, 0, 0, 0,
	253, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	433, 0, 0, 338, 339, 340, 341, 301, 0, 271,
	436, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 431, 297, 303, 449, 305, 270, 353, 299, 415,
	312, 0, 442, 0, 443, 0, 0, 0, 0, 345,
	308, 309, 379, 313, 323, 367, 414, 351, 372, 268,
	405, 380, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 246, 276, 277, 282, 467, 464,
	396, 468, 0, 250, 0, 321, 0, 362, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	0, 350, 247, 242, 243, 244, 245, 0, 0, 0,
	421, 422, 423, 445, 407, 0, 465, 0, 291, 0,
	0, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 459, 455, 0, 456, 0, 0, 0,
	0, 460, 381, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 2833, 0, 0, 0,
	266, 197, 457, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 386, 403, 267,
	377, 416, 272, 384, 262, 349, 373, 0, 0, 258,
	401, 383, 331, 310, 311, 257, 0, 368, 289, 302,
	286, 347, 0, 400, 428, 285, 419, 0, 411, 260,
	0, 410, 346, 397, 402, 332, 326, 259, 399, 330,
	325, 314, 293, 444, 315, 316, 306, 358, 324, 359,
	307, 336, 335, 337, 0, 0, 0, 0, 0, 439,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 317, 0,
	0, 0, 429, 0, 371, 352, 0, 0, 0, 369,
	322, 398, 360, 404, 387, 412, 365, 361, 251, 388,
	288, 333, 263, 265, 283, 290, 292, 294, 295, 342,
	343, 355, 376, 389, 390, 391, 287, 273, 370, 274,
	304, 275, 252, 279, 278, 280, 378, 281, 254, 356,
	395, 0, 300, 366, 329, 255, 328, 357, 394, 393,
	264, 420, 426, 427, 0, 0, 432, 0, 0, 0,
	441, 446, 447, 448, 450, 451, 452, 453, 0, 0,
	0, 0, 434, 0, 0, 0, 0, 0, 0, 0,
	425, 318, 319, 298, 248, 249, 470, 284, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 424, 0, 0, 0, 454, 469, 0, 0, 0,
	0, 0, 466, 354, 0, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 406,
	418, 435, 438, 0, 0, 0, 0, 253, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 433, 0, 0,
	338, 339, 340, 341, 301, 0, 271, 436, 364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 431, 297,
	303, 449, 305, 270, 353, 299, 415, 312, 0, 442,
	0, 443, 0, 0, 0, 0, 345, 308, 309, 379,
	313, 323, 367, 414, 351, 372, 268, 405, 380, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 246, 276, 277, 282, 467, 464, 396, 468, 0,
	250, 0, 321, 0, 362, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 0, 350, 247,
	242, 243, 244, 245, 0, 0, 0, 421, 422, 423,
	445, 407, 0, 465, 0, 291, 0, 0, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	459, 455, 0, 456, 0, 0, 0, 0, 460, 381,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 266, 197, 457,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 386, 403, 267, 377, 416, 272,
	384, 262, 349, 373, 0, 0, 258, 401, 383, 331,
	310, 311, 257, 0, 368, 289, 302, 286, 347, 0,
	400, 428, 285, 419, 0, 411, 260, 0, 410, 346,
	397, 402, 332, 326, 259, 399, 330, 325, 314, 293,
	444, 315, 316, 306, 358, 324, 359, 307, 336, 335,
	337, 0, 0, 0, 0, 0, 439, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 3077,
	0, 0, 385, 0, 0, 317, 0, 0, 0, 429,
	0, 371, 352, 0, 0, 0, 369, 322, 398, 360,
	404, 387, 412, 365, 361, 251, 388, 288, 333, 263,
	265, 283, 290, 292, 294, 295, 342, 343, 355, 376,
	389, 390, 391, 287, 273, 370, 274, 304, 275, 252,
	279, 278, 280, 378, 281, 254, 356, 395, 0, 300,
	366, 329, 255, 328, 357, 394, 393, 264, 420, 426,
	427, 0, 0, 432, 0, 0, 0, 441, 446, 447,
	448, 450, 451, 452, 453, 0, 0, 0, 0, 434,
	0, 0, 0, 0, 0, 0, 0, 425, 318, 319,
	298, 248, 249, 470, 284, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 424, 0,
	0, 0, 454, 469, 0, 0, 0, 0, 0, 466,
	354, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 406, 418, 435, 438,
	0, 0, 0, 0, 253, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 433, 0, 0, 338, 339, 340,
	341, 301, 0, 271, 436, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 431, 297, 303, 449, 305,
	270, 353, 299, 415, 312, 0, 442, 0, 443, 0,
	0, 0, 0, 345, 308, 309, 379, 313, 323, 367,
	414, 351, 372, 268, 405, 380, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 246, 276,
	277, 282, 467, 464, 396, 468, 0, 250, 0, 321,
	0, 362, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 0, 350, 247, 242, 243, 244,
	245, 0, 0, 0, 421, 422, 423, 445, 407, 0,
	465, 0, 291, 0, 0, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 459, 455, 0,
	456, 0, 0, 0, 0, 460, 381, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	2686, 0, 0, 0, 266, 197, 457, 0, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 386, 403, 267, 377, 416, 272, 384, 262, 349,
	373, 0, 0, 258, 401, 383, 331, 310, 311, 257,
	0, 368, 289, 302, 286, 347, 0, 400, 428, 285,
	419, 0, 411, 260, 0, 410, 346, 397, 402, 332,
	326, 259, 399, 330, 325, 314, 293, 444, 315, 316,
	306, 358, 324, 359, 307, 336, 335, 337, 0, 0,
	0, 0, 0, 439, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 317, 0, 0, 0, 429, 0, 371, 352,
	0, 0, 0, 369, 322, 398, 360, 404, 387, 412,
	365, 361, 251, 388, 288, 333, 263, 265, 283, 290,
	292, 294, 295, 342, 343, 355, 376, 389, 390, 391,
	287, 273, 370, 274, 304, 275, 252, 279, 278, 280,
	378, 281, 254, 356, 395, 0, 300, 366, 329, 255,
	328, 357, 394, 393, 264, 420, 426, 427, 0, 0,
	432, 0, 0, 0, 441, 446, 447, 448, 450, 451,
	452, 453, 0, 0, 0, 0, 434, 0, 0, 0,
	0, 0, 0, 0, 425, 318, 319, 298, 248, 249,
	470, 284, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 424, 0, 0, 0, 454,
	469, 0, 0, 0, 0, 0, 466, 354, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 406, 418, 435, 438, 0, 0, 0,
	0, 253, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 433, 0, 0, 338, 339, 340, 341, 301, 0,
	271, 436, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 431, 297, 303, 449, 305, 270, 353, 299,
	415, 312, 0, 442, 0, 443, 0, 0, 0, 0,
	345, 308, 309, 379, 313, 323, 367, 414, 351, 372,
	268, 405, 380, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 246, 276, 277, 282, 467,
	464, 396, 468, 0, 250, 0, 321, 0, 362, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 0, 350, 247, 242, 243, 244, 245, 0, 0,
	0, 421, 422, 423, 445, 407, 0, 465, 0, 291,
	0, 0, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 459, 455, 0, 456, 0, 0,
	0, 0, 460, 381, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 266, 197, 457, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 386, 403,
	267, 377, 416, 272, 384, 262, 349, 373, 0, 0,
	258, 401, 383, 331, 310, 311, 257, 0, 368, 289,
	302, 286, 347, 0, 400, 428, 285, 419, 0, 411,
	260, 0, 410, 346, 397, 402, 332, 326, 259, 399,
	330, 325, 314, 293, 444, 315, 316, 306, 358, 324,
	359, 307, 336, 335, 337, 0, 0, 0, 0, 0,
	439, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 317,
	0, 0, 0, 429, 0, 371, 352, 0, 0, 0,
	369, 322, 398, 360, 404, 387, 412, 365, 361, 251,
	388, 288, 333, 263, 265, 283, 290, 292, 294, 295,
	342, 343, 355, 376, 389, 390, 391, 287, 273, 370,
	274, 304, 275, 252, 279, 278, 280, 378, 281, 254,
	356, 395, 0, 300, 366, 329, 255, 328, 357, 394,
	393, 264, 420, 426, 427, 0, 0, 432, 0, 0,
	0, 441, 446, 447, 448, 450, 451, 452, 453, 0,
	0, 0, 0, 434, 0, 0, 0, 0, 0, 0,
	0, 425, 318, 319, 298, 248, 249, 470, 284, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 424, 0, 0, 0, 454, 469, 0, 0,
	0, 0, 0, 466, 354, 0, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 382,
	406, 418, 435, 438, 0, 0, 0, 0, 253, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 433, 0,
	0, 338, 339, 340, 341, 301, 0, 271, 436, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 431,
	297, 303, 449, 305, 270, 353, 299, 415, 312, 0,
	442, 0, 443, 0, 0, 0, 0, 345, 308, 309,
	379, 313, 323, 367, 414, 351, 372, 268, 405, 380,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 246, 276, 277, 282, 467, 464, 396, 468,
	0, 250, 0, 321, 0, 362, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 0, 350,
	247, 242, 243, 244, 245, 0, 0, 0, 421, 422,
	423, 445, 407, 0, 465, 0, 291, 0, 0, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 459, 455, 0, 456, 0, 0, 0, 0, 460,
	381, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1701, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 266, 197,
	457, 0, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 386, 403, 267, 377, 416,
	272, 384, 262, 349, 373, 0, 0, 258, 401, 383,
	331, 310, 311, 257, 0, 368, 289, 302, 286, 347,
	0, 400, 428, 285, 419, 0, 411, 260, 0, 410,
	346, 397, 402, 332, 326, 259, 399, 330, 325, 314,
	293, 444, 315, 316, 306, 358, 324, 359, 307, 336,
	335, 337, 0, 0, 0, 0, 0, 439, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 317, 0, 0, 0,
	429, 0, 371, 352, 0, 0, 0, 369, 322, 398,
	360, 404, 387, 412, 365, 361, 251, 388, 288, 333,
	263, 265, 283, 290, 292, 294, 295, 342, 343, 355,
	376, 389, 390, 391, 287, 273, 370, 274, 304, 275,
	252, 279, 278, 280, 378, 281, 254, 356, 395, 0,
	300, 366, 329, 255, 328, 357, 394, 393, 264, 420,
	426, 427, 0, 0, 432, 0, 0, 0, 441, 446,
	447, 448, 450, 451, 452, 453, 0, 0, 0, 0,
	434, 0, 0, 0, 0, 0, 0, 0, 425, 318,
	319, 298, 248, 249, 470, 284, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 424,
	0, 0, 0, 454, 469, 0, 0, 0, 0, 0,
	466, 354, 0, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 406, 418, 435,
	438, 0, 0, 0, 0, 253, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 433, 0, 0, 338, 339,
	340, 341, 301, 0, 271, 436, 364, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 430, 431, 297, 303, 449,
	305, 270, 353, 299, 415, 312, 0, 442, 0, 443,
	0, 0, 0, 0, 345, 308, 309, 379, 313, 323,
	367, 414, 351, 372, 268, 405, 380, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 246,
	276, 277, 282, 467, 464, 396, 468, 0, 250, 0,
	321, 0, 362, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 0, 350, 247, 242, 243,
	244, 245, 0, 0, 0, 421, 422, 423, 445, 407,
	0, 465, 0, 291, 0, 0, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 459, 455,
	0, 456, 0, 0, 0, 0, 460, 381, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 266, 197, 457, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 386, 403, 267, 377, 416, 272, 384, 262,
	349, 373, 0, 0, 258, 401, 383, 331, 310, 311,
	257, 0, 368, 289, 302, 286, 347, 0, 400, 428,
	285, 419, 0, 411, 260, 0, 410, 346, 397, 402,
	332, 326, 259, 399, 330, 325, 314, 293, 444, 315,
	316, 306, 358, 324, 359, 307, 336, 335, 337, 0,
	0, 0, 0, 0, 439, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 317, 0, 0, 0, 429, 0, 371,
	352, 0, 0, 0, 369, 322, 398, 360, 404, 387,
	412, 365, 361, 251, 388, 288, 333, 263, 265, 283,
	290, 292, 294, 295, 342, 343, 355, 376, 389, 390,
	391, 287, 273, 370, 274, 304, 275, 252, 279, 278,
	280, 378, 281, 254, 356, 395, 0, 300, 366, 329,
	255, 328, 357, 394, 393, 264, 420, 426, 427, 0,
	0, 432, 0, 0, 0, 441, 446, 447, 448, 450,
	451, 452, 453, 0, 0, 0, 0, 434, 0, 0,
	0, 0, 0, 0, 0, 425, 318, 319, 298, 248,
	249, 470, 284, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 424, 0, 0, 0,
	454, 469, 0, 0, 0, 0, 0, 466, 354, 0,
	375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 406, 418, 435, 438, 0, 0,
	0, 0, 253, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 433, 0, 0, 338, 339, 340, 341, 301,
	0, 271, 436, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 431, 297, 303, 449, 305, 270, 353,
	299, 415, 312, 0, 442, 0, 443, 0, 0, 0,
	0, 345, 308, 309, 379, 313, 323, 367, 414, 351,
	372, 268, 405, 380, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 246, 276, 277, 282,
	467, 464, 396, 468, 0, 250, 0, 321, 0, 362,
	296, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 0, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 0, 0, 350, 247, 242, 243, 244, 245, 0,
	0, 0, 421, 422, 423, 445, 407, 0, 465, 0,
	291, 0, 0, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 459, 455, 0, 456, 0,
	0, 0, 0, 460, 381, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 2655, 0,
	0, 0, 266, 197, 457, 0, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 386,
	403, 267, 377, 416, 272, 384, 262, 349, 373, 0,
	0, 258, 401, 383, 331, 310, 311, 257, 0, 368,
	289, 302, 286, 347, 0, 400, 428, 285, 419, 0,
	411, 260, 0, 410, 346, 397, 402, 332, 326, 259,
	399, 330, 325, 314, 293, 444, 315, 316, 306, 358,
	324, 359, 307, 336, 335, 337, 0, 0, 0, 0,
	0, 439, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	317, 0, 0, 0, 429, 0, 371, 352, 0, 0,
	0, 369, 322, 398, 360, 404, 387, 412, 365, 361,
	251, 388, 288, 333, 263, 265, 283, 290, 292, 294,
	295, 342, 343, 355, 376, 389, 390, 391, 287, 273,
	370, 274, 304, 275, 252, 279, 278, 280, 378, 281,
	254, 356, 395, 0, 300, 366, 329, 255, 328, 357,
	394, 393, 264, 420, 426, 427, 0, 0, 432, 0,
	0, 0, 441, 446, 447, 448, 450, 451, 452, 453,
	0, 0, 0, 0, 434, 0, 0, 0, 0, 0,
	0, 0, 425, 318, 319, 298, 248, 249, 470, 284,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 424, 0, 0, 0, 454, 469, 0,
	0, 0, 0, 0, 466, 354, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 406, 418, 435, 438, 0, 0, 0, 0, 253,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 433,
	0, 0, 338, 339, 340, 341, 301, 0, 271, 436,
	364, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	431, 297, 303, 449, 305, 270, 353, 299, 415, 312,
	0, 442, 0, 443, 0, 0, 0, 0, 345, 308,
	309, 379, 313, 323, 367, 414, 351, 372, 268, 405,
	380, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 246, 276, 277, 282, 467, 464, 396,
	468, 0, 250, 0, 321, 0, 362, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	350, 247, 242, 243, 244, 245, 0, 0, 0, 421,
	422, 423, 445, 407, 0, 465, 0, 291, 0, 0,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 459, 455, 0, 456, 0, 0, 0, 0,
	460, 381, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 457, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 386, 403, 267, 377,
	416, 272, 384, 262, 349, 373, 0, 0, 258, 401,
	383, 331, 310, 311, 257, 0, 368, 289, 302, 286,
	347, 0, 400, 428, 285, 419, 0, 411, 260, 0,
	410, 346, 397, 402, 332, 326, 259, 399, 330, 325,
	314, 293, 444, 315, 316, 306, 358, 324, 359, 307,
	336, 335, 337, 0, 0, 0, 0, 0, 439, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 317, 0, 0,
	0, 429, 0, 371, 352, 0, 0, 0, 369, 322,
	398, 360, 404, 387, 412, 365, 361, 251, 388, 288,
	333, 263, 265, 283, 290, 292, 294, 295, 342, 343,
	355, 376, 389, 390, 391, 287, 273, 370, 274, 304,
	275, 252, 279, 278, 280, 378, 281, 254, 356, 395,
	0, 300, 366, 329, 255, 328, 357, 394, 393, 264,
	420, 426, 427, 0, 0, 432, 0, 0, 0, 441,
	446, 447, 448, 450, 451, 452, 453, 0, 0, 0,
	0, 434, 0, 0, 0, 0, 0, 0, 0, 425,
	318, 319, 298, 248, 249, 470, 284, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	424, 0, 0, 0, 454, 469, 0, 0, 0, 0,
	0, 466, 354, 0, 375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 382, 406, 418,
	435, 438, 0, 0, 0, 0, 253, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 433, 0, 0, 338,
	339, 340, 341, 301, 0, 271, 436, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 431, 297, 303,
	449, 305, 270, 353, 299, 415, 312, 0, 442, 0,
	443, 0, 0, 0, 0, 345, 308, 309, 379, 313,
	323, 367, 414, 351, 372, 268, 405, 380, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	246, 276, 277, 282, 467, 464, 396, 468, 0, 250,
	0, 321, 0, 362, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 0, 350, 247, 242,
	243, 244, 245, 0, 0, 0, 421, 422, 423, 445,
	407, 0, 465, 0, 291, 0, 0, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 459,
	455, 0, 456, 0, 0, 0, 0, 460, 381, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 1254, 0, 0, 0, 266, 197, 457, 0,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 386, 403, 267, 377, 416, 272, 384,
	262, 349, 373, 0, 0, 258, 401, 383, 331, 310,
	311, 257, 0, 368, 289, 302, 286, 347, 0, 400,
	428, 285, 419, 0, 411, 260, 0, 410, 346, 397,
	402, 332, 326, 259, 399, 330, 325, 314, 293, 444,
	315, 316, 306, 358, 324, 359, 307, 336, 335, 337,
	0, 0, 0, 0, 0, 439, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 385, 0, 0, 317, 0, 0, 0, 429, 0,
	371, 352, 0, 0, 0, 369, 322, 398, 360, 404,
	387, 412, 365, 361, 251, 388, 288, 333, 263, 265,
	283, 290, 292, 294, 295, 342, 343, 355, 376, 389,
	390, 391, 287, 273, 370, 274, 304, 275, 252, 279,
	278, 280, 378, 281, 254, 356, 395, 0, 300, 366,
	329, 255, 328, 357, 394, 393, 264, 420, 426, 427,
	0, 0, 432, 0, 0, 0, 441, 446, 447, 448,
	450, 451, 452, 453, 0, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 425, 318, 319, 298,
	248, 249, 470, 284, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 424, 0, 0,
	0, 454, 469, 0, 0, 0, 0, 0, 466, 354,
	0, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 406, 418, 435, 438, 0,
	0, 0, 0, 253, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 433, 0, 0, 338, 339, 340, 341,
	301, 0, 271, 436, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 431, 297, 303, 449, 305, 270,
	353, 299, 415, 312, 0, 442, 0, 443, 0, 0,
	0, 0, 345, 308, 309, 379, 313, 323, 367, 414,
	351, 372, 268, 405, 380, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 246, 276, 277,
	282, 467, 464, 396, 468, 0, 250, 0, 321, 0,
	362, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 0, 350, 247, 242, 243, 244, 245,
	0, 0, 0, 421, 422, 423, 445, 407, 0, 465,
	0, 291, 0, 0, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 459, 455, 0, 456,
	0, 0, 0, 0, 460, 381, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 2100,
	0, 0, 0, 266, 197, 457, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	386, 403, 267, 377, 416, 272, 384, 262, 349, 373,
	0, 0, 258, 401, 383, 331, 310, 311, 257, 0,
	368, 289, 302, 286, 347, 0, 400, 428, 285, 419,
	0, 411, 260, 0, 410, 346, 397, 402, 332, 326,
	259, 399, 330, 325, 314, 293, 444, 315, 316, 306,
	358, 324, 359, 307, 336, 335, 337, 0, 0, 0,
	0, 0, 439, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 317, 0, 0, 0, 429, 0, 371, 352, 0,
	0, 0, 369, 322, 398, 360, 404, 387, 412, 365,
	361, 251, 388, 288, 333, 263, 265, 283, 290, 292,
	294, 295, 342, 343, 355, 376, 389, 390, 391, 287,
	273, 370, 274, 304, 275, 252, 279, 278, 280, 378,
	281, 254, 356, 395, 0, 300, 366, 329, 255, 328,
	357, 394, 393, 264, 420, 426, 427, 0, 0, 432,
	0, 0, 0, 441, 446, 447, 448, 450, 451, 452,
	453, 0, 0, 0, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 425, 318, 319, 298, 248, 249, 470,
	284, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 424, 0, 0, 0, 454, 469,
	0, 0, 0, 0, 0, 466, 354, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 406, 418, 435, 438, 0, 0, 0, 0,
	253, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	433, 0, 0, 338, 339, 340, 341, 301, 0, 271,
	436, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 431, 297, 303, 449, 305, 270, 353, 299, 415,
	312, 0, 442, 0, 443, 0, 0, 0, 0, 345,
	308, 309, 379, 313, 323, 367, 414, 351, 372, 268,
	405, 380, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 246, 276, 277, 282, 467, 464,
	396, 468, 0, 250, 0, 321, 0, 362, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	0, 350, 247, 242, 243, 244, 245, 0, 0, 0,
	421, 422, 423, 445, 407, 0, 465, 0, 291, 0,
	0, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 459, 455, 0, 456, 0, 0, 0,
	0, 460, 381, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	266, 197, 457, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 386, 403, 267,
	377, 416, 272, 384, 262, 349, 373, 0, 0, 258,
	401, 383, 331, 310, 311, 257, 0, 368, 289, 302,
	286, 347, 0, 400, 428, 285, 419, 0, 411, 260,
	0, 410, 346, 397, 402, 332, 326, 259, 399, 330,
	325, 314, 293, 444, 315, 316, 306, 358, 324, 359,
	307, 336, 335, 337, 0, 0, 0, 0, 0, 439,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 317, 0,
	0, 0, 429, 0, 371, 352, 0, 0, 0, 369,
	322, 398, 360, 404, 387, 412, 365, 361, 251, 388,
	288, 333, 263, 265, 283, 290, 292, 294, 295, 342,
	343, 355, 376, 389, 390, 391, 287, 273, 370, 274,
	304, 275, 252, 279, 278, 280, 378, 281, 254, 356,
	395, 0, 300, 366, 329, 255, 328, 357, 394, 393,
	264, 420, 426, 427, 0, 0, 432, 0, 0, 0,
	441, 446, 447, 448, 450, 451, 452, 453, 0, 0,
	0, 0, 434, 0, 0, 0, 0, 0, 0, 0,
	425, 318, 319, 298, 248, 249, 470, 284, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 424, 0, 0, 0, 454, 469, 0, 0, 0,
	0, 0, 466, 354, 0, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 406,
	418, 435, 438, 0, 0, 0, 0, 253, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 433, 0, 0,
	338, 339, 340, 341, 301, 0, 271, 436, 364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 431, 297,
	303, 449, 305, 270, 353, 299, 415, 312, 0, 442,
	0, 443, 0, 0, 0, 0, 345, 308, 309, 379,
	313, 323, 367, 414, 351, 372, 268, 405, 380, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 246, 276, 277, 282, 467, 464, 396, 468, 0,
	250, 0, 321, 0, 362, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 0, 350, 247,
	242, 243, 244, 245, 0, 0, 0, 421, 422, 423,
	445, 407, 0, 465, 0, 291, 0, 0, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	459, 455, 0, 456, 0, 0, 0, 0, 460, 381,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 266, 197, 457,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 386, 403, 267, 377, 416, 272,
	384, 262, 349, 373, 0, 0, 258, 401, 383, 331,
	310, 311, 257, 0, 368, 289, 302, 286, 347, 0,
	400, 428, 285, 419, 0, 411, 260, 0, 410, 346,
	397, 402, 332, 326, 259, 399, 330, 325, 314, 293,
	444, 315, 316, 306, 358, 324, 359, 307, 336, 335,
	337, 0, 0, 0, 0, 0, 439, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 317, 0, 0, 0, 429,
	0, 371, 352, 0, 0, 0, 369, 322, 398, 360,
	404, 387, 412, 365, 361, 251, 388, 288, 333, 263,
	265, 283, 290, 292, 294, 295, 342, 343, 355, 376,
	389, 390, 391, 287, 273, 370, 274, 304, 275, 252,
	279, 278, 280, 378, 281, 254, 356, 395, 0, 300,
	366, 329, 255, 328, 357, 394, 393, 264, 420, 426,
	427, 0, 0, 432, 0, 0, 0, 441, 446, 447,
	448, 450, 451, 452, 453, 0, 0, 0, 0, 434,
	0, 0, 0, 0, 0, 0, 0, 425, 318, 319,
	298, 248, 249, 470, 284, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 424, 0,
	0, 0, 454, 469, 0, 0, 0, 0, 0, 466,
	354, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 406, 418, 435, 438,
	0, 0, 0, 0, 253, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 433, 0, 0, 338, 339, 340,
	341, 301, 0, 271, 436, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 431, 297, 303, 449, 305,
	270, 353, 299, 415, 312, 0, 442, 0, 443, 0,
	0, 0, 0, 345, 308, 309, 379, 313, 323, 367,
	414, 351, 372, 268, 405, 380, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 246, 276,
	277, 282, 467, 464, 396, 468, 0, 250, 0, 321,
	0, 362, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 0, 350, 247, 242, 243, 244,
	245, 0, 0, 0, 421, 422, 423, 445, 407, 0,
	465, 0, 291, 0, 0, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 459, 455, 0,
	456, 0, 0, 0, 0, 460, 381, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	2174, 0, 0, 0, 266, 197, 457, 0, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 386, 403, 267, 377, 416, 272, 384, 262, 349,
	373, 0, 0, 258, 401, 383, 331, 310, 311, 257,
	0, 368, 289, 302, 286, 347, 0, 400, 428, 285,
	419, 0, 411, 260, 0, 410, 346, 397, 402, 332,
	326, 259, 399, 330, 325, 314, 293, 444, 315, 316,
	306, 358, 324, 359, 307, 336, 335, 337, 0, 0,
	0, 0, 0, 439, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 317, 0, 0, 0, 429, 0, 371, 352,
	0, 0, 0, 369, 322, 398, 360, 404, 387, 412,
	365, 361, 251, 388, 288, 333, 263, 265, 283, 290,
	292, 294, 295, 342, 343, 355, 376, 389, 390, 391,
	287, 273, 370, 274, 304, 275, 252, 279, 278, 280,
	378, 281, 254, 356, 395, 0, 300, 366, 329, 255,
	328, 357, 394, 393, 264, 420, 426, 427, 0, 0,
	432, 0, 0, 0, 441, 446, 447, 448, 450, 451,
	452, 453, 0, 0, 0, 0, 434, 0, 0, 0,
	0, 0, 0, 0, 425, 318, 319, 298, 248, 249,
	470, 284, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 424, 0, 0, 0, 454,
	469, 0, 0, 0, 0, 0, 466, 354, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 406, 418, 435, 438, 0, 0, 0,
	0, 253, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 433, 0, 0, 338, 339, 340, 341, 301, 0,
	271, 436, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 431, 297, 303, 449, 305, 270, 353, 299,
	415, 312, 0, 442, 0, 443, 0, 0, 0, 0,
	345, 308, 309, 379, 313, 323, 367, 414, 351, 372,
	268, 405, 380, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 246, 276, 277, 282, 467,
	464, 396, 468, 0, 250, 0, 321, 0, 362, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 0, 1970, 247, 242, 243, 244, 245, 350, 0,
	0, 421, 422, 423, 445, 407, 0, 465, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 320, 0,
	0, 0, 0, 471, 459, 0, 0, 0, 0, 0,
	0, 455, 0, 456, 0, 0, 0, 0, 460, 381,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 266, 197, 457,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 386, 403, 267, 377, 416, 272,
	384, 262, 349, 373, 0, 0, 258, 401, 383, 331,
	310, 311, 257, 0, 368, 289, 302, 286, 347, 0,
	400, 428, 285, 419, 0, 411, 260, 0, 410, 346,
	397, 402, 332, 326, 259, 399, 330, 325, 314, 293,
	444, 315, 316, 306, 358, 324, 359, 307, 336, 335,
	337, 0, 0, 0, 0, 0, 439, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 317, 0, 0, 0, 429,
	0, 371, 352, 0, 0, 0, 369, 322, 398, 360,
	404, 387, 412, 365, 361, 251, 388, 288, 333, 263,
	265, 283, 290, 292, 294, 295, 342, 343, 355, 376,
	389, 390, 391, 287, 273, 370, 274, 304, 275, 252,
	279, 278, 280, 378, 281, 254, 356, 395, 0, 300,
	366, 329, 255, 328, 357, 394, 393, 264, 420, 426,
	427, 0, 0, 432, 0, 0, 0, 441, 446, 447,
	448, 450, 451, 452, 453, 0, 0, 0, 0, 434,
	0, 0, 0, 0, 0, 0, 0, 425, 318, 319,
	298, 248, 249, 470, 284, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 424, 0,
	0, 0, 454, 469, 0, 0, 0, 0, 0, 466,
	354, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 406, 418, 435, 438,
	0, 0, 0, 0, 253, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 433, 0, 0, 338, 339, 340,
	341, 301, 0, 271, 436, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 431, 297, 303, 449, 305,
	270, 353, 299, 415, 312, 0, 442, 0, 443, 0,
	0, 0, 0, 345, 308, 309, 379, 313, 323, 367,
	414, 351, 372, 268, 405, 380, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 246, 276,
	277, 282, 467, 464, 396, 468, 0, 250, 0, 321,
	0, 362, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 0, 350, 247, 242, 243, 244,
	245, 0, 0, 1688, 421, 422, 423, 445, 407, 0,
	465, 0, 291, 0, 0, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 459, 455, 0,
	456, 0, 0, 0, 0, 460, 381, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 266, 197, 457, 0, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 386, 403, 267, 377, 416, 272, 384, 262, 349,
	373, 0, 0, 258, 401, 383, 331, 310, 311, 257,
	0, 368, 289, 302, 286, 347, 0, 400, 428, 285,
	419, 0, 411, 260, 0, 410, 346, 397, 402, 332,
	326, 259, 399, 330, 325, 314, 293, 444, 315, 316,
	306, 358, 324, 359, 307, 336, 335, 337, 0, 0,
	0, 0, 0, 439, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 317, 0, 0, 0, 429, 0, 371, 352,
	0, 0, 0, 369, 322, 398, 360, 404, 387, 412,
	365, 361, 251, 388, 288, 333, 263, 265, 283, 290,
	292, 294, 295, 342, 343, 355, 376, 389, 390, 391,
	287, 273, 370, 274, 304, 275, 252, 279, 278, 280,
	378, 281, 254, 356, 395, 0, 300, 366, 329, 255,
	328, 357, 394, 393, 264, 420, 426, 427, 0, 0,
	432, 0, 0, 0, 441, 446, 447, 448, 450, 451,
	452, 453, 0, 0, 0, 0, 434, 0, 0, 0,
	0, 0, 0, 0, 425, 318, 319, 298, 248, 249,
	470, 284, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 424, 0, 0, 0, 454,
	469, 0, 0, 0, 0, 0, 466, 354, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 406, 418, 435, 438, 0, 0, 0,
	0, 253, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 433, 0, 0, 338, 339, 340, 341, 301, 0,
	271, 436, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 431, 297, 303, 449, 305, 270, 353, 299,
	415, 312, 0, 442, 0, 443, 0, 0, 0, 0,
	345, 308, 309, 379, 313, 323, 367, 414, 351, 372,
	268, 405, 380, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 246, 276, 277, 282, 467,
	464, 396, 468, 0, 250, 0, 321, 0, 362, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 0, 350, 247, 242, 243, 244, 245, 0, 0,
	0, 421, 422, 423, 445, 407, 0, 465, 0, 291,
	0, 0, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 459, 455, 0, 456, 0, 0,
	0, 0, 460, 381, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 1254, 0, 0,
	0, 266, 197, 457, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 386, 403,
	267, 377, 416, 272, 384, 262, 349, 373, 0, 0,
	258, 401, 383, 331, 310, 311, 257, 0, 368, 289,
	302, 286, 347, 0, 400, 428, 285, 419, 0, 411,
	260, 0, 410, 346, 397, 402, 332, 326, 259, 399,
	330, 325, 314, 293, 444, 315, 316, 306, 358, 324,
	359, 307, 336, 335, 337, 0, 0, 0, 0, 0,
	439, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 317,
	0, 0, 0, 429, 0, 371, 352, 0, 0, 0,
	369, 322, 398, 360, 404, 387, 412, 1599, 361, 251,
	388, 288, 333, 263, 265, 283, 290, 292, 294, 295,
	342, 343, 355, 376, 389, 390, 391, 287, 273, 370,
	274, 304, 275, 252, 279, 278, 280, 378, 281, 254,
	356, 395, 0, 300, 366, 329, 255, 328, 357, 394,
	393, 264, 420, 426, 427, 0, 0, 432, 0, 0,
	0, 441, 446, 447, 448, 450, 451, 452, 453, 0,
	0, 0, 0, 434, 0, 0, 0, 0, 0, 0,
	0, 425, 318, 319, 298, 248, 249, 470, 284, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 424, 0, 0, 0, 454, 469, 0, 0,
	0, 0, 0, 466, 354, 0, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 382,
	406, 418, 435, 438, 0, 0, 0, 0, 253, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 433, 0,
	0, 338, 339, 340, 341, 301, 0, 271, 436, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 431,
	297, 303, 449, 305, 270, 353, 299, 415, 312, 0,
	442, 0, 443, 0, 0, 0, 0, 345, 308, 309,
	379, 313, 323, 367, 414, 351, 372, 268, 405, 380,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 246, 276, 277, 282, 467, 464, 396, 468,
	0, 250, 0, 321, 0, 362, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 0, 350,
	247, 242, 243, 244, 245, 0, 0, 0, 421, 422,
	423, 445, 407, 0, 465, 0, 291, 0, 0, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 459, 455, 0, 456, 0, 0, 0, 0, 460,
	381, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 266, 197,
	457, 0, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 386, 403, 267, 377, 416,
	272, 384, 262, 349, 373, 0, 0, 258, 401, 383,
	331, 310, 311, 257, 0, 368, 289, 302, 286, 347,
	0, 400, 428, 285, 419, 0, 411, 260, 0, 410,
	346, 397, 402, 332, 326, 259, 399, 330, 325, 314,
	293, 444, 315, 316, 306, 358, 324, 359, 307, 336,
	335, 337, 0, 0, 0, 0, 0, 439, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 1284,
	0, 0, 0, 385, 0, 0, 317, 0, 0, 0,
	429, 0, 371, 352, 0, 0, 0, 369, 322, 398,
	360, 404, 387, 412, 365, 361, 251, 388, 288, 333,
	263, 265, 283, 290, 292, 294, 295, 342, 343, 355,
	376, 389, 390, 391, 287, 273, 370, 274, 304, 275,
	252, 279, 278, 280, 378, 281, 254, 356, 395, 0,
	300, 366, 329, 255, 328, 357, 394, 393, 264, 420,
	426, 427, 0, 0, 432, 0, 0, 0, 441, 446,
	447, 448, 450, 451, 452, 453, 0, 0, 0, 0,
	434, 0, 0, 0, 0, 0, 0, 0, 425, 318,
	319, 298, 248, 249, 470, 284, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 424,
	0, 0, 0, 454, 469, 0, 0, 0, 0, 0,
	466, 354, 0, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 406, 418, 435,
	438, 0, 0, 0, 0, 253, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 433, 0, 0, 338, 339,
	340, 341, 301, 0, 271, 436, 364, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 430, 431, 297, 303, 449,
	305, 270, 353, 299, 415, 312, 0, 442, 0, 443,
	0, 0, 0, 0, 345, 308, 309, 379, 313, 323,
	367, 414, 351, 372, 268, 405, 380, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 246,
	276, 277, 282, 467, 464, 396, 468, 0, 250, 0,
	321, 0, 362, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 0, 350, 247, 242, 243,
	244, 245, 0, 0, 0, 421, 422, 423, 445, 407,
	0, 465, 0, 291, 0, 0, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 459, 455,
	0, 456, 0, 0, 0, 0, 460, 381, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 266, 197, 457, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 386, 403, 267, 377, 416, 272, 384, 262,
	349, 373, 0, 0, 258, 401, 383, 331, 310, 311,
	257, 0, 368, 289, 302, 286, 347, 0, 400, 428,
	285, 419, 0, 411, 260, 0, 410, 346, 397, 402,
	332, 326, 259, 399, 330, 325, 314, 293, 444, 315,
	316, 306, 358, 324, 359, 307, 336, 335, 337, 0,
	0, 0, 0, 0, 439, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 317, 0, 0, 0, 429, 0, 371,
	352, 0, 0, 0, 369, 322, 398, 360, 404, 387,
	412, 365, 361, 251, 388, 288, 333, 263, 265, 283,
	290, 292, 294, 295, 342, 343, 355, 376, 389, 390,
	391, 287, 273, 370, 274, 304, 275, 252, 279, 278,
	280, 378, 281, 254, 356, 395, 0, 300, 366, 329,
	255, 328, 357, 394, 393, 264, 420, 426, 427, 0,
	0, 432, 0, 0, 0, 441, 446, 447, 448, 450,
	451, 452, 453, 0, 0, 0, 0, 434, 0, 0,
	0, 0, 0, 0, 0, 425, 318, 319, 298, 248,
	249, 470, 284, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 424, 0, 0, 0,
	454, 469, 0, 0, 0, 0, 0, 466, 354, 0,
	375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 406, 418, 435, 438, 0, 0,
	0, 0, 253, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 433, 0, 0, 338, 339, 340, 341, 301,
	0, 271, 436, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 431, 297, 303, 449, 305, 270, 353,
	299, 415, 312, 0, 442, 0, 443, 0, 0, 0,
	0, 345, 308, 309, 379, 313, 323, 367, 414, 351,
	372, 268, 405, 380, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 753, 0, 0, 392, 0, 246, 276, 277, 282,
	467, 464, 396, 468, 0, 250, 0, 321, 0, 362,
	296, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 0, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 0, 0, 350, 247, 242, 243, 244, 245, 0,
	0, 0, 421, 422, 423, 445, 407, 0, 465, 0,
	291, 0, 0, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 459, 455, 0, 456, 0,
	0, 0, 0, 460, 381, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 266, 197, 457, 0, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 386,
	403, 267, 377, 416, 272, 384, 262, 349, 373, 0,
	0, 258, 401, 383, 331, 310, 311, 257, 0, 368,
	289, 302, 286, 347, 0, 400, 428, 285, 419, 0,
	411, 260, 0, 410, 346, 397, 402, 332, 326, 259,
	399, 330, 325, 314, 293, 444, 315, 316, 306, 358,
	324, 359, 307, 336, 335, 337, 0, 0, 0, 0,
	0, 439, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	317, 0, 0, 0, 429, 0, 371, 352, 0, 0,
	0, 369, 322, 398, 360, 404, 387, 412, 509, 361,
	251, 388, 288, 333, 263, 265, 283, 290, 292, 294,
	295, 342, 343, 355, 376, 389, 390, 391, 287, 273,
	370, 274, 304, 275, 252, 279, 278, 280, 378, 281,
	254, 356, 395, 0, 300, 366, 329, 255, 328, 357,
	394, 393, 264, 420, 426, 427, 0, 0, 432, 0,
	0, 0, 441, 446, 447, 448, 450, 451, 452, 453,
	0, 0, 0, 0, 434, 0, 0, 0, 0, 0,
	0, 0, 425, 318, 319, 298, 248, 249, 470, 284,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 424, 0, 0, 0, 454, 469, 0,
	0, 0, 0, 0, 466, 354, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 406, 418, 435, 438, 0, 0, 0, 0, 253,
	437, 0, 0, 0, 0, 0, 0, 510, 0, 409,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 433,
	0, 0, 338, 339, 340, 341, 301, 0, 271, 436,
	364, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	431, 297, 303, 449, 305, 270, 353, 299, 415, 312,
	0, 442, 0, 443, 0, 0, 0, 0, 345, 308,
	309, 379, 313, 323, 367, 414, 351, 372, 268, 405,
	380, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 246, 276, 277, 282, 467, 464, 396,
	468, 0, 250, 0, 321, 0, 362, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	350, 247, 242, 243, 244, 245, 0, 0, 0, 421,
	422, 423, 445, 407, 0, 465, 0, 291, 0, 0,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 459, 455, 0, 456, 0, 0, 0, 0,
	460, 381, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 457, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 386, 403, 267, 377,
	416, 272, 384, 262, 349, 373, 0, 0, 258, 401,
	383, 331, 310, 311, 257, 0, 368, 289, 302, 286,
	347, 0, 400, 428, 285, 419, 0, 411, 260, 0,
	410, 346, 397, 402, 332, 326, 259, 399, 330, 325,
	314, 293, 444, 315, 316, 306, 358, 324, 359, 307,
	336, 335, 337, 0, 0, 0, 0, 0, 439, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 486, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 317, 0, 0,
	0, 429, 0, 371, 352, 0, 0, 0, 369, 322,
	398, 360, 404, 387, 412, 365, 361, 251, 388, 288,
	333, 263, 265, 283, 290, 292, 294, 295, 342, 343,
	355, 376, 389, 390, 391, 287, 273, 370, 274, 304,
	275, 252, 279, 278, 280, 378, 281, 254, 356, 395,
	0, 300, 366, 329, 255, 328, 357, 394, 393, 264,
	420, 426, 427, 0, 0, 432, 0, 0, 0, 441,
	446, 447, 448, 450, 451, 452, 453, 0, 0, 0,
	0, 434, 0, 0, 0, 0, 0, 0, 0, 425,
	318, 319, 298, 248, 249, 470, 284, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	424, 0, 0, 0, 454, 469, 0, 0, 0, 0,
	0, 466, 354, 0, 375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 382, 406, 418,
	435, 438, 0, 0, 0, 0, 253, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 433, 0, 0, 338,
	339, 340, 341, 301, 0, 271, 436, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 431, 297, 303,
	449, 305, 270, 353, 299, 415, 312, 0, 442, 0,
	443, 0, 0, 0, 0, 345, 308, 309, 379, 313,
	323, 367, 414, 351, 372, 268, 405, 380, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	246, 276, 277, 282, 467, 464, 396, 468, 0, 250,
	0, 321, 0, 362, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 0, 350, 247, 242,
	243, 244, 245, 0, 0, 0, 421, 422, 423, 445,
	407, 0, 465, 476, 291, 0, 0, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 459,
	455, 0, 456, 0, 0, 0, 0, 460, 381, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 266, 197, 457, 0,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 386, 403, 267, 377, 416, 272, 384,
	262, 349, 373, 0, 0, 258, 401, 383, 331, 310,
	311, 257, 0, 368, 289, 302, 286, 347, 0, 400,
	428, 285, 419, 0, 411, 260, 0, 410, 346, 397,
	402, 332, 326, 259, 399, 330, 325, 314, 293, 444,
	315, 316, 306, 358, 324, 359, 307, 336, 335, 337,
	0, 0, 0, 0, 0, 439, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 385, 0, 0, 317, 0, 0, 0, 429, 0,
	371, 352, 0, 0, 0, 369, 322, 398, 360, 404,
	387, 412, 365, 361, 251, 388, 288, 333, 263, 265,
	283, 290, 292, 294, 295, 342, 343, 355, 376, 389,
	390, 391, 287, 273, 370, 274, 304, 275, 252, 279,
	278, 280, 378, 281, 254, 356, 395, 0, 300, 366,
	329, 255, 328, 357, 394, 393, 264, 420, 426, 427,
	0, 0, 432, 0, 0, 0, 441, 446, 447, 448,
	450, 451, 452, 453, 0, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 425, 318, 319, 298,
	248, 249, 470, 284, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 424, 0, 0,
	0, 454, 469, 0, 0, 0, 0, 0, 466, 354,
	0, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 406, 418, 435, 438, 0,
	0, 0, 0, 253, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 433, 0, 0, 338, 339, 340, 341,
	301, 0, 271, 436, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 431, 297, 303, 449, 305, 270,
	353, 299, 415, 312, 0, 442, 0, 443, 0, 0,
	0, 0, 345, 308, 309, 379, 313, 323, 367, 414,
	351, 372, 268, 405, 380, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 246, 276, 277,
	282, 467, 464, 396, 468, 0, 250, 0, 321, 0,
	362, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 0, 350, 247, 242, 243, 244, 245,
	0, 0, 0, 421, 422, 423, 445, 407, 0, 465,
	0, 291, 0, 0, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 459, 455, 0, 456,
	0, 0, 0, 0, 460, 381, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 457, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	386, 403, 267, 377, 416, 272, 384, 262, 349, 373,
	0, 0, 258, 401, 383, 331, 310, 311, 257, 0,
	368, 289, 302, 286, 347, 0, 400, 428, 285, 419,
	0, 411, 260, 0, 410, 346, 397, 402, 332, 326,
	259, 399, 330, 325, 314, 293, 444, 315, 316, 306,
	358, 324, 359, 307, 336, 335, 337, 0, 0, 0,
	0, 0, 439, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 317, 0, 0, 0, 429, 0, 371, 352, 0,
	0, 0, 369, 322, 398, 360, 404, 387, 412, 365,
	361, 251, 388, 288, 333, 263, 265, 283, 290, 292,
	294, 295, 342, 343, 355, 376, 389, 390, 391, 287,
	273, 370, 274, 304, 275, 252, 279, 278, 280, 378,
	281, 254, 356, 395, 0, 300, 366, 329, 255, 328,
	357, 394, 393, 264, 420, 426, 427, 0, 0, 432,
	0, 0, 0, 441, 446, 447, 448, 450, 451, 452,
	453, 0, 0, 0, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 425, 318, 319, 298, 248, 249, 470,
	284, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 424, 0, 0, 0, 454, 469,
	0, 0, 0, 0, 0, 466, 354, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 406, 418, 435, 438, 0, 0, 0, 0,
	253, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	433, 0, 0, 338, 339, 340, 341, 301, 0, 271,
	436, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 431, 297, 303, 449, 305, 270, 353, 299, 415,
	312, 0, 442, 0, 443, 0, 0, 0, 0, 345,
	308, 309, 379, 313, 323, 367, 414, 351, 372, 268,
	405, 380, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 246, 276, 277, 282, 467, 464,
	396, 468, 0, 250, 0, 321, 0, 362, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	0, 350, 247, 242, 243, 244, 245, 0, 0, 0,
	421, 422, 423, 445, 407, 0, 465, 0, 291, 0,
	0, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 459, 455, 0, 456, 0, 0, 0,
	0, 460, 381, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	266, 197, 457, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 386, 1234, 267,
	377, 416, 272, 384, 262, 349, 373, 0, 0, 258,
	401, 383, 331, 310, 311, 257, 0, 368, 289, 302,
	286, 347, 0, 400, 428, 285, 419, 0, 411, 260,
	0, 410, 346, 397, 402, 332, 326, 259, 399, 330,
	325, 314, 293, 444, 315, 316, 306, 358, 324, 359,
	307, 336, 335, 337, 0, 0, 0, 0, 0, 439,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 317, 0,
	0, 0, 429, 0, 371, 352, 0, 0, 0, 369,
	322, 398, 360, 404, 387, 412, 365, 361, 251, 388,
	288, 333, 263, 265, 283, 290, 292, 294, 295, 342,
	343, 355, 376, 389, 390, 391, 287, 273, 370, 274,
	304, 275, 252, 279, 278, 280, 378, 281, 254, 356,
	395, 0, 300, 366, 329, 255, 328, 357, 394, 393,
	264, 420, 426, 427, 0, 0, 432, 0, 0, 0,
	441, 446, 447, 448, 450, 451, 452, 453, 0, 0,
	0, 0, 434, 0, 0, 0, 0, 0, 0, 0,
	425, 318, 319, 298, 248, 249, 470, 284, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 424, 0, 0, 0, 454, 469, 0, 0, 0,
	0, 0, 466, 354, 0, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 406,
	418, 435, 438, 0, 0, 0, 0, 253, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 433, 0, 0,
	338, 339, 340, 341, 301, 0, 271, 436, 364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 431, 297,
	303, 449, 305, 270, 353, 299, 415, 312, 0, 442,
	0, 443, 0, 0, 0, 0, 345, 308, 309, 379,
	313, 323, 367, 414, 351, 372, 268, 405, 380, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 246, 276, 277, 282, 467, 464, 396, 468, 0,
	250, 0, 321, 0, 362, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 0, 350, 247,
	242, 243, 244, 245, 0, 0, 0, 421, 422, 423,
	445, 407, 0, 465, 0, 291, 0, 0, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	459, 455, 0, 456, 0, 0, 0, 0, 460, 381,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 266, 197, 457,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 386, 1232, 267, 377, 416, 272,
	384, 262, 349, 373, 0, 0, 258, 401, 383, 331,
	310, 311, 257, 0, 368, 289, 302, 286, 347, 0,
	400, 428, 285, 419, 0, 411, 260, 0, 410, 346,
	397, 402, 332, 326, 259, 399, 330, 325, 314, 293,
	444, 315, 316, 306, 358, 324, 359, 307, 336, 335,
	337, 0, 0, 0, 0, 0, 439, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 317, 0, 0, 0, 429,
	0, 371, 352, 0, 0, 0, 369, 322, 398, 360,
	404, 387, 412, 365, 361, 251, 388, 288, 333, 263,
	265, 283, 290, 292, 294, 295, 342, 343, 355, 376,
	389, 390, 391, 287, 273, 370, 274, 304, 275, 252,
	279, 278, 280, 378, 281, 254, 356, 395, 0, 300,
	366, 329, 255, 328, 357, 394, 393, 264, 420, 426,
	427, 0, 0, 432, 0, 0, 0, 441, 446, 447,
	448, 450, 451, 452, 453, 0, 0, 0, 0, 434,
	0, 0, 0, 0, 0, 0, 0, 425, 318, 319,
	298, 248, 249, 470, 284, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 424, 0,
	0, 0, 454, 469, 0, 0, 0, 0, 0, 466,
	354, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 406, 418, 435, 438,
	0, 0, 0, 0, 253, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 433, 0, 0, 338, 339, 340,
	341, 301, 0, 271, 436, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 431, 297, 303, 449, 305,
	270, 353, 299, 415, 312, 0, 442, 0, 443, 0,
	0, 0, 0, 345, 308, 309, 379, 313, 323, 367,
	414, 351, 372, 268, 405, 380, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 246, 276,
	277, 282, 467, 464, 396, 468, 0, 250, 0, 321,
	0, 362, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 0, 350, 247, 242, 243, 244,
	245, 0, 0, 0, 421, 422, 423, 445, 407, 0,
	465, 0, 291, 0, 0, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 459, 455, 0,
	456, 0, 0, 0, 0, 460, 381, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 266, 197, 457, 0, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 386, 403, 267, 377, 416, 272, 384, 262, 349,
	373, 0, 0, 258, 401, 383, 331, 310, 311, 257,
	0, 368, 289, 302, 286, 347, 0, 400, 428, 285,
	419, 0, 411, 260, 0, 410, 346, 397, 402, 332,
	326, 259, 399, 330, 325, 314, 293, 444, 315, 316,
	306, 358, 324, 359, 307, 336, 335, 337, 0, 0,
	0, 0, 0, 439, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 317, 0, 0, 0, 429, 0, 371, 352,
	0, 0, 0, 369, 322, 398, 360, 404, 387, 412,
	365, 361, 251, 388, 288, 333, 263, 265, 550, 290,
	292, 294, 295, 342, 343, 355, 376, 389, 390, 391,
	287, 273, 370, 274, 304, 275, 252, 279, 278, 280,
	378, 281, 254, 356, 395, 0, 300, 366, 329, 255,
	328, 357, 394, 393, 264, 420, 426, 427, 0, 0,
	432, 0, 0, 0, 441, 446, 447, 448, 450, 451,
	452, 453, 0, 0, 0, 0, 434, 0, 0, 0,
	0, 0, 0, 0, 425, 318, 319, 298, 248, 249,
	470, 284, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 424, 0, 0, 0, 454,
	469, 0, 0, 0, 0, 0, 466, 354, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 406, 418, 435, 438, 0, 0, 0,
	0, 253, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 433, 0, 0, 338, 339, 340, 341, 301, 0,
	271, 436, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 431, 297, 303, 449, 305, 270, 353, 299,
	415, 312, 0, 442, 0, 443, 0, 0, 0, 0,
	345, 308, 309, 379, 313, 323, 367, 414, 351, 372,
	268, 405, 380, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 246, 276, 277, 282, 467,
	464, 396, 468, 0, 250, 0, 321, 0, 362, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 0, 0, 247, 242, 243, 244, 245, 0, 0,
	0, 421, 422, 423, 445, 407, 0, 465, 174, 51,
	163, 138, 0, 0, 0, 0, 0, 0, 1676, 0,
	0, 0, 0, 471, 459, 0, 164, 0, 0, 0,
	0, 0, 0, 156, 0, 0, 0, 165, 0, 174,
	51, 163, 138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1678, 0, 0, 0, 115, 164, 0, 0,
	0, 0, 0, 0, 156, 0, 0, 0, 165, 0,
	0, 103, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 0, 3407, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 1653, 0, 0, 0, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 528, 535, 525, 0, 0, 0,
	0, 0, 0, 0, 0, 532, 533, 0, 534, 538,
	0, 0, 520, 120, 121, 0, 122, 123, 0, 0,
	0, 0, 543, 0, 0, 0, 0, 0, 0, 0,
	1669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 120, 121, 0, 122, 123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 547, 0, 0, 549, 0,
	0, 0, 0, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 162, 172, 0, 101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 155, 154, 0,
	1657, 0, 0, 57, 0, 137, 162, 172, 0, 101,
	0, 1663, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 155, 154,
	0, 1651, 1685, 0, 57, 1652, 1654, 1656, 0, 1658,
	1659, 1660, 1664, 1665, 1666, 1668, 1671, 1672, 1673, 0,
	0, 0, 0, 0, 1676, 0, 1661, 1670, 1662, 0,
	0, 0, 0, 0, 157, 158, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1678, 0,
	1677, 0, 0, 166, 0, 157, 158, 159, 0, 521,
	523, 522, 0, 0, 0, 0, 0, 0, 0, 527,
	0, 0, 0, 111, 0, 0, 0, 160, 0, 112,
	0, 531, 0, 0, 166, 1676, 0, 0, 546, 0,
	1638, 0, 1674, 0, 0, 524, 0, 0, 0, 1653,
	0, 0, 0, 0, 111, 0, 0, 0, 160, 1650,
	112, 0, 0, 0, 0, 0, 1649, 0, 0, 1678,
	1647, 0, 0, 0, 0, 0, 0, 0, 0, 1679,
	1680, 0, 0, 0, 0, 0, 113, 0, 0, 0,
	1667, 0, 0, 0, 0, 0, 0, 0, 50, 1655,
	0, 0, 0, 0, 0, 1646, 0, 0, 0, 0,
	0, 0, 3132, 0, 0, 0, 1669, 113, 0, 0,
	1653, 0, 0, 0, 0, 0, 0, 0, 0, 50,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 0, 0,
	0, 0, 526, 530, 536, 0, 537, 539, 0, 0,
	540, 541, 542, 0, 1676, 544, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 0,
	0, 0, 169, 170, 0, 171, 0, 1669, 0, 0,
	139, 0, 0, 0, 0, 0, 1657, 0, 1678, 0,
	0, 0, 0, 0, 0, 0, 0, 1663, 0, 0,
	0, 0, 0, 169, 170, 0, 171, 0, 0, 0,
	0, 139, 0, 0, 0, 0, 0, 1651, 1685, 0,
	0, 1652, 1654, 1656, 0, 1658, 1659, 1660, 1664, 1665,
	1666, 1668, 1671, 1672, 1673, 0, 0, 0, 0, 1653,
	114, 39, 1661, 1670, 1662, 0, 0, 49, 1637, 1639,
	1636, 5, 1633, 0, 0, 118, 119, 1657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1663, 0,
	0, 114, 39, 0, 0, 0, 1677, 0, 49, 0,
	0, 0, 0, 0, 0, 0, 118, 119, 1651, 1685,
	0, 0, 1652, 1654, 1656, 0, 1658, 1659, 1660, 1664,
	1665, 1666, 1668, 1671, 1672, 1673, 1669, 0, 0, 0,
	0, 0, 0, 1661, 1670, 1662, 0, 0, 1674, 0,
	0, 0, 0, 0, 0, 1641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1650, 0, 0, 0, 0,
	0, 0, 1649, 0, 0, 0, 0, 1677, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1667, 0, 0, 0,
	0, 1634, 1635, 0, 0, 1655, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1657, 0, 0, 1674,
	0, 0, 0, 0, 0, 0, 0, 1663, 0, 0,
	0, 0, 0, 0, 0, 0, 1650, 0, 0, 0,
	0, 0, 0, 1649, 0, 0, 0, 1651, 1685, 0,
	0, 1652, 1654, 1656, 0, 1658, 1659, 1660, 1664, 1665,
	1666, 1668, 1671, 1672, 1673, 0, 0, 1667, 0, 0,
	0, 0, 1661, 1670, 1662, 0, 1655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1682,
	1681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1677, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1643, 0, 0, 0, 0, 0, 0, 1674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1650, 0, 0, 0, 0,
	0, 0, 1649, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1684, 0, 0, 1683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1667, 0, 0, 0,
	0, 0, 0, 0, 0, 1655,
}

var yyPact = [...]int{
	38456, -1000, -1000, -1000, -327, 10498, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 36202,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 36202,
	-325, 35645, 35645, -1000, -1000, 2196, -1000, 35088, 11645, 36202,
	341, 333, 36202, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 718, -1000, 34531, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 593, 4502, 37873, 8196, -264, -1000, 1276, -98, 2113,
	891, 906, 892, 892, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 567, 783, 33974,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3179, 300, 783, 13879, 20, 19, 1276, 343, -147,
	-146, -148, 247, -1000, 1220, 38487, 160, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8196, 8196,
	10498, -358, 10498, 8196, 36202, 36202, -1000, -1000, -1000, -1000,
	593, 4502, 8196, 2113, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -146, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -147, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -148, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3539, -1000, 1336, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2599, 1329, 2100, 540, 36202, -1000, 1327, 540,
	-1000, -1000, -1000, 1276, 3020, -1000, 36202, 36202, 86, 1567,
	-1000, 361, 345, 332, 1326, -1000, -1000, -1000, -1000, -1000,
	-1000, 463, 2994, -1000, 36202, 36202, 2620, 36202, -1000, 1936,
	484, 38581, 2839, 1149, 708, 2660, -1000, -1000, 2598, -1000,
	222, 199, 182, 407, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 223, -1000, 2897, -1000, -1000, 194, -1000, -1000, 183,
	-1000, -1000, -1000, 17, -1000, -1000, -1000, -1000, -1000, -1000,
	-72, -1000, -1000, 933, 1983, 8196, -1000, 2069, -1000, 3419,
	-1000, -1000, -1000, -1000, 5324, 9915, 9915, 9915, 9915, -1000,
	-1000, 2451, 8196, 2596, 2595, 2594, -1000, -1000, -1000, -1000,
	-1000, 1319, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1742, -1000, -1000, -1000, 9342, -1000, 2593, 2592, 2590,
	2588, 2587, 2586, 2579, 2578, 2577, 2568, 2564, 2542, 2541,
	2540, 2316, 11062, 2539, 2098, 2097, 2538, 2536, 2529, 2096,
	2316, 2316, 2528, 2527, 2523, 2521, 2520, 2515, 2499, 2498,
	2495, 2493, 2492, 2491, 2483, 2482, 2481, 2479, 2473, 2472,
	2470, 2468, 2467, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1175, -1000, 2462, 3010,
	2351, -1000, 2881, 2872, 2868, 2866, -309, 2461, 1896, -1000,
	-1000, 68, -1000, -139, -1000, -1000, 857, -1000, 824, -1000,
	36202, 36202, 141, 874, 591, 591, 591, 591, 591, 681,
	591, 2910, 710, 699, 694, 591, -105, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1565, 1558, 2712, 797, -1000, -1000,
	-1000, -1000, 1209, 36202, -1000, 2386, 1473, 1473, 2907, 509,
	495, 488, 1473, 387, -1000, 1504, 1504, 1504, 1504, 1473,
	409, 500, 2913, 2913, 2, 1504, 1, 1473, 1473, 1,
	1473, 1473, 1473, 166, -316, -1000, -1000, -1000, -1000, 1504,
	1504, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2891, 2890,
	593, 593, 36202, 145, 36202, 593, 593, 593, 597, -57,
	37316, 36759, 1936, 483, 474, 1224, 1564, -1000, 1502, 36202,
	36202, 1502, 1502, 18366, 17809, -1000, 36202, -1000, 3010, 2351,
	2283, 1252, 2282, 2351, -156, -157, -158, 593, 593, 593,
	593, 593, 164, 593, 593, 593, 593, 593, 36202, 36202,
	33417, 593, 593, 7043, 7043, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 10498, 1871, 1857, 159, -65, -323,
	206, -1000, -1000, 36202, 2790, 165, -1000, -1000, -1000, 2328,
	-1000, 2359, 2359, 2359, 2359, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2359, 2359, 2385, 2457, -1000, -1000,
	2357, 2357, 2357, 2328, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2369,
	2369, 2373, 2373, 2369, 36202, 8196, 36202, 2826, 338, 2456,
	-1000, 36202, 336, 3010, 2819, 2913, 2963, -1000, -1000, 1318,
	1895, 2093, -1000, -1000, 361, 1506, -1000, 912, -1000, -1000,
	-1000, -1000, 36202, -72, 313, -1000, -1000, 2081, 2455, -1000,
	498, 1027, 1138, -1000, 152, 3573, 28955, 1936, 28955, 36202,
	-1000, -1000, -1000, -1000, -1000, -1000, 16, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	186, -1000, 8196, 8196, 8196, 8196, 8196, -1000, 835, 8769,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 9915, 9915, 9915,
	9915, 9915, 9915, 9915, 9915, 9915, 9915, 9915, 9915, 2447,
	1551, 9915, 9915, 9915, 9915, 1252, 2732, 1222, 240, -1000,
	-1000, -1000, -1000, -1000, 1583, 1983, 8196, 8196, 8196, 36202,
	-1000, -1000, 3168, 8196, 8196, 2973, 8196, 2864, 8196, 8196,
	8196, 2280, 3826, 36202, 8196, -1000, 2278, 2273, -1000, -1000,
	1726, 8196, -1000, -1000, 8196, -1000, -1000, 8196, 9915, 8196,
	-1000, -1000, -1000, 1421, 2864, 2864, 1566, 8196, 8196, 2864,
	2864, 2864, 1498, 2864, 2864, 2864, 2864, 2864, 2864, 2864,
	2864, 2272, 2271, 2267, 2913, -264, -1000, 6470, 2819, 2913,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-311, 2454, 36202, 2091, 2087, -339, -29, 884, 845, 836,
	-1000, 2858, -1000, 2453, 36202, 591, 591, -140, 591, -1000,
	36202, 1621, 28955, 36202, 36202, 1936, 36202, 36202, 36202, 591,
	591, 591, 36202, -1000, 2742, 28955, 2721, 597, -1000, 36202,
	1209, 2855, 36202, 2969, 9915, 9915, -1000, 32860, 1504, 1473,
	1473, -1000, -1000, 36202, -1000, -1000, -1000, 1504, 36202, 1504,
	1504, 2969, 1504, -1000, -1000, -1000, 1473, 1473, -1000, -1000,
	8196, -1000, -1000, 1504, 1504, -1000, -1000, 2969, 36202, 13,
	2969, 2969, -6, -1000, -1000, -1000, 36202, 36202, 591, 36202,
	-1000, 36202, 36202, -1000, -1000, 36202, 36202, 38829, 36202, 32303,
	2889, -1000, 28955, 36202, 36202, 26727, -1000, 1178, -1000, -49,
	-1000, -31, -57, 1502, -57, 1502, -1000, 497, 522, 16688,
	435, 28955, 4751, -1000, -1000, 1502, 1502, 4751, 4751, 1344,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1201, -1000, 184,
	2913, -1000, -1000, -1000, -1000, -1000, 1893, 1889, 1888, 36202,
	36202, 28955, 1936, 36202, 593, 36202, 36202, 36202, 36202, 36202,
	-1000, 2452, 1314, -1000, 2838, 36202, 36202, 1101, -1000, -1000,
	13322, 1310, 1101, -1000, 1637, -1000, 8196, 10498, -293, 8196,
	10498, 10498, 8196, 10498, -1000, 8196, 149, -1000, -1000, -1000,
	-1000, 1880, -1000, 1879, -1000, -1000, -1000, -1000, -1000, 2085,
	2085, -1000, 1874, -1000, -1000, -1000, -1000, 1873, -1000, -1000,
	1867, -1000, -1000, -1000, 2266, 933, -1000, 2083, 2650, -266,
	-1000, 15566, 36202, 36202, -1000, -1000, -266, -1000, 15001, 36202,
	2913, -1000, -269, 2819, 8196, 36202, -1000, 2905, -1000, 361,
	303, -1000, -1000, -1000, -1000, -1000, -1000, 1307, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1194, -1000, 36202,
	-1000, -1000, 152, 28955, 30069, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 193, -1000, -1000, 172, -1000, 676, 121, 1500,
	-1000, -1000, 144, 173, 94, 753, 1983, -1000, 1613, 1613,
	1629, -1000, 587, -1000, -1000, -1000, -1000, 2451, -1000, -1000,
	-1000, 1920, 2154, -1000, 1550, 1550, 1349, 1349, 1349, 1349,
	1349, 1472, 1472, -1000, -1000, -1000, 5324, 2447, 9915, 9915,
	9915, 9915, 563, 563, 3913, 4068, -1000, 8196, 1612, -1000,
	8196, 2582, 2317, 1399, 1279, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2259, 2256, 2297, 2982, 2253,
	8196, -1000, -1000, 1491, 1489, 1488, -1000, 1815, 7623, -1000,
	-1000, -1000, 2252, 1278, 2249, -1000, -1000, -1000, 2247, 1487,
	1028, 2246, 2494, 2243, 1192, 8196, 8196, 8196, 2241, 1478,
	1474, 8196, 8196, 8196, 8196, 2236, 8196, 8196, 8196, 8196,
	8196, 8196, 8196, 8196, 36, 36, 36, -1000, -1000, 1468,
	-1000, 1983, -1000, -1000, 2819, -1000, 2445, 1866, 1185, -1000,
	-1000, -1000, 2056, -1000, -1000, 852, 821, 818, 36202, 947,
	2444, 36202, 36202, 591, 36202, 162, -1000, 2832, 1052, -1000,
	121, -87, 339, 964, 2616, 2977, -180, 36202, 36202, 36202,
	2854, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 31746,
	-1000, 2443, 1452, -1000, -1000, 8196, -1000, -1000, 2615, 36202,
	36202, 2969, 2969, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1504, 2969, 2969, 1330, 1473, 1504, -1000, -1000, 1504, -1000,
	-1000, 1504, -1000, 1277, -1000, 36202, -1000, -1000, -1000, 2851,
	2386, 1181, -1000, 883, 574, 574, 812, 457, 2962, 14436,
	-1000, 1503, 967, 673, 2750, 188, -1000, 1503, -215, 1503,
	1503, 1503, 1503, 1503, 1503, 1503, 454, 440, 1503, 1503,
	1503, 1503, 1503, 1503, 1503, 1503, 1503, 1503, 1503, 887,
	1503, 1503, 1503, 1503, 1503, -1000, 1503, 2414, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 472, 143, 2888, 265, 254,
	1052, 2879, 275, 2778, 1085, -1000, -1000, -1000, -1000, 20600,
	20600, 16131, 20600, -1000, 1510, -57, -51, -1000, -1000, 1178,
	4751, 1178, 4751, -1000, -1000, 665, -1000, -1000, 964, -1000,
	36202, 36202, -1000, -1000, 2410, 1555, -1000, -1000, 11062, -1000,
	4751, 4751, -1000, -1000, 21157, 36202, -1000, -81, -1000, -62,
	2819, -1000, -1000, -1000, 1174, -1000, -1000, 1177, 964, 2649,
	36202, 1174, 1174, 1174, -1000, -1000, 12202, 36202, 36202, -1000,
	-1000, 2969, 7043, -1000, 26727, -1000, -1000, 31183, -1000, 30626,
	2969, 1578, -1000, 10498, 1842, 154, -1000, 198, -328, 151,
	1801, 150, 1983, -1000, -1000, 2233, 2230, 1445, -1000, 1442,
	2224, 1441, 1440, -1000, -12, -1000, 2798, 979, -1000, 2408,
	-1000, 1432, 2709, -1000, 1168, -1000, 1549, 1430, -1000, 979,
	1410, 2697, 1168, 2819, 2082, -1000, 1161, -1000, 1970, 1273,
	85, -1000, -1000, 36202, 2081, 1404, 30069, 1024, -1000, 664,
	1272, 1271, -1000, 28955, 211, 28955, -1000, 28955, -1000, -1000,
	349, -1000, 36202, 2812, -1000, -1000, -1000, 2056, 1548, -353,
	36202, -1000, -1000, -1000, -1000, -1000, 1403, -1000, 563, 563,
	3913, 3636, -1000, 9915, -1000, 9915, 2724, 1554, -1000, 8196,
	1762, 4278, 4278, 2200, 19480, 36202, -1000, -1000, 8196, 8196,
	-1000, 2677, -1000, -1000, -1000, -1000, 8196, 8196, 2095, -1000,
	36202, -1000, -1000, -1000, -1000, 19480, -1000, 9915, -1000, 8196,
	1121, 2644, 1401, 36, 36, 36, 2636, 2606, 2545, 1386,
	36, 2533, 2503, 2489, 2484, 2459, 2448, 2436, 2412, -1000,
	2405, -1000, -1000, 6470, -1000, -1000, 235, 1142, 1865, 111,
	-1000, 1544, -1000, -1000, -1000, 801, 170, 2223, 1119, -1000,
	-1000, 36202, -1000, -1000, -1000, 12202, 2386, 249, 36202, 2386,
	56, 1503, -1000, 537, 28955, 469, -1000, 36202, 1764, 1542,
	2646, 305, 2782, 36202, 2404, 2403, 2393, 2391, 312, 4457,
	36202, 1084, -1000, 1262, 38487, -1000, 36202, 1983, -1000, 1936,
	-1000, 1473, -1000, -1000, 2969, -1000, -1000, 8196, 8196, 2969,
	1473, 1473, 1504, 36202, -1000, 312, 4457, 2849, 38829, -1000,
	36202, -1000, -1000, -1000, 663, -1000, 851, 591, 36202, 1669,
	851, 1666, 2390, -1000, -1000, 36202, 36202, 36202, 36202, -1000,
	-1000, 36202, -1000, 36202, 36202, 36202, 36202, -1000, 36202, 36202,
	-1000, 36202, 1665, 1664, 2822, -1000, 1503, 1503, 771, -1000,
	-1000, 481, -1000, 1861, 1860, 1858, 1852, 2078, 2076, 2075,
	1503, 1503, 1848, 2072, 29512, 2070, 954, 1845, 1844, 1833,
	1843, 2068, 902, -1000, 2067, 1825, 1822, 1821, 36202, 2388,
	2018, -1000, -1000, 56, 1503, 245, 36202, 1540, 537, 337,
	1905, 17252, 36202, 26727, 26727, 26727, 26727, -1000, 2682, 2655,
	-1000, 2694, 2676, 2672, 36202, 26727, 2386, -1000, 29512, -1000,
	-1000, -1000, 1252, 1365, 2663, 888, 8196, -1000, -1000, -53,
	-38, -1000, -1000, -1000, 28955, 2066, 435, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2902, 36202, 36202, 653, 2221, 1115,
	-1000, -1000, -1000, 4457, 2359, 2359, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2359, 2359, 2385, -1000, -1000,
	2357, 2357, 2357, 2328, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2369, 2369, 2373, 2373, 2369, -1000, -1000,
	2939, -1000, 1092, -1000, -1000, 1259, -1000, 2939, 1593, -331,
	10498, 1580, 1552, -1000, 8196, 10498, 8196, -294, 230, -297,
	-1000, -1000, -1000, 2064, -1000, -1000, -1000, 1819, -1000, 1817,
	55, 66, 1659, -266, 6470, 330, 36202, -266, 36202, 6470,
	-1000, 36202, 329, -266, 2902, -12, 8196, 2740, -1000, -1000,
	36202, 1812, -1000, -1000, -1000, 2971, 28955, 1936, 1370, 28398,
	-1000, 192, -1000, 181, 507, 2063, -1000, 690, 110, 2062,
	2056, -1000, -1000, -1000, -1000, 9915, -1000, -1000, -1000, -1000,
	1983, 8196, 2220, -1000, 807, 807, 2204, 2202, -1000, 2359,
	2359, -1000, 2328, 2357, 2328, 807, 807, 2199, -1000, 1904,
	2406, -1000, 2367, 2353, 8196, -1000, 2197, 3734, 965, -110,
	36, 36, -1000, -1000, -1000, -1000, 36, 36, 36, 36,
	-1000, 36, 36, 36, 36, 36, 36, 36, 36, 551,
	-1000, 2193, 1082, -1000, -1000, -1000, -1000, -1000, 2973, 1078,
	-1000, 2056, 2053, -1000, 2052, 2050, 947, 4457, 2191, 2848,
	12759, 2846, 2355, 2350, 2841, 1906, -1000, -1000, -1000, 27841,
	443, -1000, -1000, -1000, 559, 212, 1807, 475, -1000, 36202,
	275, 2728, 1535, 2049, 36202, -1000, -1000, -1000, -1000, -1000,
	-1000, 2782, -1000, 1145, 301, 25613, 12759, 12759, 12759, 299,
	1508, -1000, 540, 1143, 1236, 26727, 36202, -1000, 26170, 2190,
	-1000, 964, 2969, -1000, 1983, 1983, -1000, 2969, 2969, 1473,
	-1000, 299, -1000, 351, -1000, 2736, 4457, -1000, 36202, -1000,
	36202, -1000, 36202, 36202, 591, 8196, 2736, 36202, 654, -1000,
	-1000, 931, 298, 584, 584, 1041, -1000, 2824, -1000, -1000,
	-1000, 36202, -1000, -1000, -1000, -1000, -1000, -1000, 19480, 19480,
	2877, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2038, 2036, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 36202, 1364, -1000, 1534, 1906, 27841,
	1533, 1502, 2033, 443, 1764, 1530, -1000, 2026, -1000, 982,
	36202, 36202, -1000, 1081, -1000, 1528, 2603, 2645, 2603, -1000,
	-1000, -1000, -1000, 2618, -1000, 2211, -1000, -1000, 1081, -1000,
	-1000, -1000, -1000, -1000, 888, -1000, 2901, 851, 851, 851,
	2183, -1000, -1000, -1000, 1024, 2182, -1000, -1000, -1000, 3004,
	-1000, -1000, -1000, -1000, -1000, -1000, 12202, 2763, 2965, 2960,
	27284, 2965, -1000, -331, 1402, -1000, 1639, 148, 1633, 36202,
	-1000, -1000, -1000, 2181, 2180, -276, 74, 2959, 2958, 814,
	-1000, 2177, 1019, -266, -1000, -1000, 979, -1000, -1000, -1000,
	-266, -1000, 979, -1000, 55, -1000, -1000, 2771, -1000, -1000,
	1936, -1000, 178, -1000, -1000, -1000, -1000, -1000, -1000, 106,
	-1000, 36202, -1000, 986, 109, -1000, 1983, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 8196, -1000, -1000, -1000, 2265, -1000, -1000,
	8196, 2170, 2025, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3010, -1000, 2957,
	-1000, 8196, 2169, 2973, -1000, -1000, -1000, -1000, -1000, -1000,
	723, 351, 2165, 984, -1000, -1000, -1000, -1000, 351, 24499,
	12759, 351, -1000, 2023, 117, -1000, -1000, -1000, 2022, 2020,
	1804, -1000, -1000, 1810, 1147, 132, -1000, -1000, -1000, -1000,
	-1000, -1000, 1905, 1902, 1524, -355, -1000, 2349, -1000, 1503,
	1503, 1503, 36202, 1363, -1000, 1503, 1503, 2163, 2158, 2151,
	523, 1527, 1513, -1000, 1803, 20600, 26727, 26170, 1061, -1000,
	1233, -1000, -1000, -1000, -1000, -1000, 2969, 523, -1000, -1000,
	-1000, 36202, 255, 2343, -1000, 2341, 2607, 352, 2340, 2336,
	36202, 2159, -1000, 2736, 36202, 613, 2759, -1000, -1000, -1000,
	-1000, -1000, 390, -1000, 36202, -1000, -1000, 1341, -1000, 19480,
	-1000, -1000, 1337, -1000, 2018, 2015, -1000, 117, 2014, 4751,
	-1000, -1000, 2728, 2011, -1000, 36202, 982, 982, 3010, 36202,
	6470, -1000, -1000, 8196, 2335, -1000, 8196, -1000, -1000, -1000,
	-1000, -1000, 2334, 2756, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1400, -1000, 8196, 8196, -1000, -1000, 581, 10498, -298,
	204, -1000, -1000, -1000, -278, 2002, -1000, -1000, 2956, 2001,
	1946, 36202, -1000, -1000, 979, 979, -276, -1000, -1000, 964,
	-1000, -1000, -6, 458, -1000, 2146, -1000, 2106, 36, -1000,
	156, 8196, 2037, -1000, 2147, 4457, -183, -185, 12759, -1000,
	1316, -1000, 1503, 1503, 2143, -183, -1000, -1000, 311, -1000,
	-1000, 252, -1000, -1000, 1808, 505, -1000, -1000, -1000, 1522,
	1738, 1956, 23942, 19480, 20037, 1988, -1000, -1000, 25613, 1400,
	1400, 38958, 186, 38958, 909, 1509, -1000, 1796, -1000, 1794,
	-1000, 2969, 1061, 1233, -1000, -1000, 1288, -1000, 909, -1000,
	-1000, 255, -1000, -1000, 1677, 9915, -1000, -1000, 1986, 20037,
	692, 1515, 1512, 700, 2333, -1000, 396, 3001, -1000, -1000,
	-1000, 769, 2332, -1000, 1657, 1655, -1000, 36202, -1000, 23942,
	23942, 461, 461, 23942, 23942, 2330, 584, -1000, -1000, 9915,
	-1000, -1000, -1000, -1000, 1503, 1287, -1000, -1000, -1000, -1000,
	-1000, -1000, 1902, -1000, -1000, 2913, -1000, -1000, 1983, 36202,
	1983, 25056, -1000, 2955, 2954, -1000, 1983, 933, -1000, -331,
	36202, 36202, -280, 1793, -1000, 1985, 69, -1000, -1000, 950,
	-278, -287, 43, 82, 1507, -1000, -1000, -1000, 2138, -1000,
	1283, -1000, -1000, -1000, 933, -1000, -1000, -169, -1000, -1000,
	342, -1000, -1000, -1000, 24499, 1400, 1400, -185, -1000, 493,
	1981, -1000, -1000, 250, -1000, -1000, 1967, -1000, -1000, 108,
	-1000, 1505, 1280, -1000, 2328, 8196, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 527, 38758, -1000, 967, -1000, -6,
	527, 478, 242, -1000, 1786, -1000, -1000, 3010, -1000, 465,
	-1000, -1000, 3913, -1000, -1000, -1000, -1000, -1000, -1000, 1966,
	1963, -1000, -1000, -1000, -1000, -1000, 1781, 2322, -56, 2875,
	1962, -1000, -1000, 2321, 1256, 1241, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1239, 1223, 23942, -1000, -1000, 3913,
	19480, 1503, -1000, -1000, 1207, 1206, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2319, -1000, -1000, 2953, -280, -1000, 1960,
	588, 59, 82, -1000, 2950, 67, 2944, 2941, 1959, -1000,
	-1000, 595, -267, 34, 32, 31, -1000, -1000, -1000, 8196,
	36202, 395, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 105,
	-1000, -1000, -1000, -1000, 1956, 1955, -1000, 23942, 2824, 2024,
	354, 2940, 38958, -1000, 1503, -1000, 354, -1000, 310, -1000,
	1493, -1000, 1771, -1000, 2913, -1000, 309, -1000, -1000, -1000,
	2136, 8196, 2316, 1503, 2042, -165, 23942, 2605, 2584, 2496,
	2450, 1183, -1000, 19480, -1000, -1000, 23385, 36202, 1946, -1000,
	-1000, 2311, 1770, 74, 57, 2938, -1000, 1946, 2935, 1946,
	1946, -1000, 1623, -1000, 29, 27, 25, -1000, -1000, -1000,
	-1000, 446, -1000, 185, -1000, -1000, -1000, 246, -1000, -1000,
	2824, -1000, 2928, 377, -1000, 19480, -1000, -1000, -1000, 1767,
	-1000, -1000, -1000, -1000, 1928, -1000, 36202, -1000, 2642, -1000,
	157, 1165, 246, 461, 246, 461, 246, 461, 246, 461,
	177, -1000, -1000, -1000, 1162, -1000, -1000, 2871, 18923, 51,
	-1000, -1000, -1000, 1954, -1000, 1946, -1000, -1000, 595, -1000,
	-1000, -1000, 1934, -1000, -1000, -1000, -1000, 1503, 1503, 1921,
	1913, 292, -1000, -1000, -1000, 22828, 372, 378, 355, -1000,
	560, -1000, -1000, -1000, 584, -1000, -1000, 2641, 2635, 2981,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	36202, -1000, 36202, -1000, 1146, -1000, -1000, -1000, 1230, -1000,
	-1000, -1000, -1000, -1000, -319, 1760, 1750, -1000, -1000, 36202,
	-1000, 36202, 367, 1749, 9915, 2309, 9915, 2302, 379, 2296,
	-1000, -1000, 2998, -1000, 2996, 715, 715, 246, 246, 246,
	246, -1000, 926, -1000, 1453, -1000, 22271, 36202, -1000, -1000,
	1911, -1000, -1000, -1000, 1139, 2291, 2916, -1000, 3624, 36202,
	2937, 36202, 2201, 1427, 9915, -1000, -1000, -1000, 1779, 404,
	-1000, 36202, 5897, -1000, 1228, -1000, -1000, -1000, 503, 380,
	-1000, 1127, -1000, 1112, 21714, 1721, 2565, -1000, -1000, -1000,
	-1000, -1000, 1983, 36202, 1064, -1000, 36202, 358, -1000, -1000,
	-1000, 1060, -1000, -1000, -1000, -1000, 503, 2691, -1000, 1718,
	-1000, -1000, 38472, 684, -1000, -1000, 38472, 363, -1000, 517,
	2101, -1000, -1000, 1057, -1000, 36202, 701, 8196, -1000, 363,
	38958, -1000, 8196, 1030, -1000, 38958, 1011, -1000, -1000,
}

var yyPgo = [...]int{
	0, 169, 3023, 244, 167, 3545, 90, 247, 217, 214,
	245, 3544, 3542, 3541, 2812, 2800, 3540, 3539, 3538, 3537,
	3535, 3532, 3524, 3523, 3521, 3520, 3519, 3518, 3517, 3515,
	3514, 3513, 3512, 3511, 3510, 3509, 3508, 3507, 3504, 3503,
	3502, 3501, 3500, 3499, 3498, 3496, 243, 3495, 3494, 3493,
	3492, 3491, 3490, 3470, 3469, 3468, 3467, 3466, 3465, 3464,
	3463, 3462, 3461, 3460, 3458, 3457, 3456, 3455, 3453, 3452,
	3450, 3449, 3448, 3447, 3446, 3445, 3444, 3443, 3440, 212,
	3439, 2771, 3438, 3437, 3435, 3434, 3433, 3432, 3431, 207,
	3430, 3428, 3426, 3421, 3420, 3419, 3418, 3417, 3414, 3413,
	3412, 225, 3411, 3409, 3406, 3405, 3403, 3401, 221, 3400,
	163, 184, 3399, 3398, 3395, 3394, 3393, 3392, 235, 181,
	69, 3391, 46, 3390, 220, 3389, 134, 3386, 141, 3385,
	3382, 3381, 3380, 3378, 3376, 3374, 3371, 3369, 3368, 3366,
	3365, 3364, 3363, 3357, 3356, 89, 3354, 256, 3351, 70,
	3348, 3347, 118, 242, 183, 249, 2496, 255, 246, 182,
	170, 94, 3346, 2813, 3345, 152, 230, 146, 26, 3344,
	126, 3343, 252, 42, 45, 241, 132, 57, 153, 117,
	3342, 219, 105, 102, 3341, 3336, 127, 240, 172, 3329,
	101, 3328, 3325, 3323, 3319, 3318, 201, 188, 3317, 3316,
	120, 3315, 3314, 99, 3313, 73, 205, 159, 192, 3311,
	96, 112, 123, 113, 171, 3309, 100, 3308, 3302, 3301,
	3297, 174, 3296, 3290, 129, 62, 3289, 3288, 3287, 65,
	3286, 48, 3285, 23, 3283, 64, 3282, 3281, 3280, 3275,
	3272, 3271, 3267, 3265, 3264, 3263, 3262, 55, 3261, 3260,
	13, 15, 17, 3259, 25, 3258, 161, 3257, 3255, 3253,
	86, 82, 3249, 83, 1, 49, 72, 3247, 3246, 223,
	66, 92, 142, 3245, 407, 3244, 3243, 3242, 150, 3241,
	619, 3240, 3237, 3236, 3235, 3234, 231, 3233, 218, 38,
	3232, 121, 130, 3231, 34, 47, 199, 194, 3230, 3228,
	3226, 138, 185, 115, 32, 0, 3225, 147, 3224, 3223,
	3222, 250, 3221, 229, 238, 160, 139, 268, 233, 3220,
	3219, 71, 3218, 156, 56, 54, 124, 7, 21, 292,
	3216, 14, 175, 3215, 200, 3214, 176, 36, 133, 3213,
	3212, 28, 254, 3211, 3209, 3208, 116, 3207, 3199, 266,
	77, 3198, 3195, 3194, 3193, 35, 3189, 30, 19, 3188,
	91, 3186, 236, 3185, 197, 125, 177, 173, 145, 222,
	228, 79, 76, 3184, 1506, 144, 93, 18, 3183, 224,
	3182, 166, 111, 3176, 122, 3175, 237, 384, 210, 3174,
	178, 8, 43, 33, 3173, 9, 3172, 211, 202, 3171,
	3169, 20, 51, 3165, 31, 3163, 3162, 3161, 3156, 5,
	3154, 3153, 3152, 2, 4, 3151, 3, 213, 162, 108,
	85, 68, 3150, 3149, 44, 186, 3148, 135, 136, 143,
	3147, 74, 3144, 3143, 3140, 2161, 3139, 248, 3138, 3137,
	3136, 3135, 3133, 3132, 3129, 3127, 3125, 103, 41, 3122,
	3121, 3120, 3119, 75, 131, 3118, 3117, 3116, 3115, 37,
	128, 3114, 22, 3113, 27, 29, 39, 3112, 87, 3110,
	12, 179, 3109, 3108, 16, 3107, 3106, 10, 11, 3105,
	3104, 119, 3101, 84, 24, 157, 97, 3100, 3099, 81,
	216, 137, 3098, 3097, 95, 234, 198, 3096, 155, 227,
	251, 3095, 215, 3093, 3092, 3091, 3089, 3088, 3087, 1024,
	3086, 3085, 232, 67, 88, 107, 3069, 3068, 3062, 80,
	158, 109, 110, 61, 78, 3060, 106, 190, 3059, 187,
	3058, 3057, 98, 3056, 3055, 3054, 3053, 180, 3052, 3051,
	189, 226, 3050, 3048, 406, 3047, 3046, 3045, 3044, 3041,
	3040, 3039, 3038, 3037, 3035, 253, 686, 3032,
}

//line mysql_sql.y:10708
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) alterTypeOptionUnion() *tree.TypeOption {
	v, _ := st.union.(*tree.TypeOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionUnion() *tree.ConnectorOption {
	v, _ := st.union.(*tree.ConnectorOption)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) connectorOptionsUnion() []*tree.ConnectorOption {
	v, _ := st.union.([]*tree.ConnectorOption)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) cycleOptionUnion() *tree.CycleOption {
	v, _ := st.union.(*tree.CycleOption)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fillModeUnion() tree.FillMode {
	v, _ := st.union.(tree.FillMode)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) timeFillUnion() *tree.Fill {
	v, _ := st.union.(*tree.Fill)
	return v
}

func (st *yySymType) timeIntervalUnion() *tree.Interval {
	v, _ := st.union.(*tree.Interval)
	return v
}

func (st *yySymType) timeSlidingUnion() *tree.Sliding {
	v, _ := st.union.(*tree.Sliding)
	return v
}

func (st *yySymType) timeWindowUnion() *tree.TimeWindow {
	v, _ := st.union.(*tree.TimeWindow)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 550, 553, 553, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 116, 116, 115, 535, 535, 535, 536,
	536, 112, 133, 132, 135, 135, 134, 134, 131, 131,
	127, 130, 130, 129, 129, 128, 123, 125, 125, 124,
	126, 126, 113, 101, 114, 480, 480, 479, 479, 478,
	478, 432, 432, 477, 477, 477, 476, 476, 476, 475,
	475, 474, 474, 473, 473, 471, 471, 472, 470, 469,
	469, 469, 467, 467, 467, 463, 463, 465, 464, 464,
	466, 458, 458, 461, 461, 459, 459, 459, 459, 462,
	457, 457, 457, 456, 456, 100, 100, 100, 376, 376,
	99, 99, 390, 390, 390, 390, 390, 388, 388, 388,
	388, 388, 388, 387, 387, 386, 386, 391, 391, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 90,
	90, 90, 90, 90, 95, 95, 95, 541, 541, 540,
	540, 542, 542, 542, 542, 543, 543, 93, 93, 93,
	94, 385, 385, 385, 91, 92, 92, 375, 375, 380,
	380, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 384, 384, 384, 382, 382, 381,
	381, 383, 383, 84, 84, 84, 87, 86, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 85, 85, 85,
	85, 85, 85, 80, 80, 80, 80, 80, 79, 79,
	81, 81, 372, 372, 371, 96, 96, 97, 538, 538,
	537, 539, 539, 539, 539, 98, 104, 104, 104, 104,
	104, 104, 104, 103, 103, 106, 106, 105, 107, 89,
	89, 89, 89, 89, 89, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 505, 505, 505, 507, 507, 309,
	310, 554, 312, 308, 308, 308, 501, 501, 502, 503,
	504, 504, 504, 102, 11, 11, 11, 11, 11, 11,
	11, 11, 13, 78, 83, 255, 255, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 243,
	243, 243, 238, 238, 238, 238, 239, 239, 240, 240,
	241, 241, 241, 241, 242, 242, 302, 302, 260, 260,
	260, 262, 262, 261, 259, 257, 257, 257, 257, 257,
	257, 258, 258, 258, 263, 263, 76, 82, 82, 82,
	518, 518, 77, 529, 529, 435, 435, 323, 323, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 440, 441, 319, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 53, 56,
	52, 52, 52, 361, 361, 51, 555, 555, 297, 297,
	64, 63, 55, 65, 66, 67, 68, 69, 70, 50,
	62, 62, 62, 62, 62, 62, 62, 62, 73, 452,
	452, 557, 557, 557, 71, 72, 434, 434, 434, 61,
	60, 59, 58, 57, 57, 49, 49, 48, 48, 54,
	139, 140, 316, 316, 316, 318, 318, 314, 556, 556,
	404, 404, 317, 317, 47, 47, 47, 47, 74, 315,
	315, 296, 313, 313, 313, 12, 12, 10, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 25, 26, 28, 369, 369, 366, 27, 19,
	18, 18, 22, 21, 17, 17, 20, 23, 24, 24,
	9, 9, 9, 9, 14, 14, 15, 160, 160, 211,
	211, 513, 513, 509, 509, 510, 510, 510, 511, 511,
	512, 512, 108, 446, 446, 446, 446, 446, 446, 8,
	182, 182, 445, 445, 445, 445, 445, 445, 373, 373,
	373, 490, 490, 490, 491, 181, 181, 176, 176, 447,
	447, 338, 492, 492, 455, 455, 454, 454, 453, 453,
	179, 179, 180, 180, 163, 163, 119, 119, 460, 460,
	460, 460, 468, 468, 431, 431, 247, 247, 289, 289,
	290, 290, 153, 153, 154, 154, 154, 154, 154, 154,
	544, 544, 545, 546, 547, 547, 548, 548, 548, 549,
	549, 549, 549, 549, 498, 498, 500, 500, 499, 178,
	178, 174, 174, 175, 175, 175, 173, 173, 172, 171,
	171, 170, 168, 168, 168, 169, 169, 169, 186, 186,
	156, 156, 156, 155, 155, 155, 155, 155, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	157, 157, 506, 506, 506, 436, 436, 436, 443, 443,
	271, 271, 272, 272, 270, 270, 158, 158, 159, 159,
	159, 159, 269, 269, 268, 161, 161, 167, 166, 166,
	162, 162, 162, 162, 279, 279, 278, 278, 278, 278,
	111, 117, 117, 118, 185, 185, 277, 276, 276, 276,
	184, 184, 183, 183, 177, 177, 165, 165, 165, 165,
	275, 164, 273, 534, 534, 533, 533, 532, 530, 530,
	530, 531, 531, 531, 531, 482, 482, 482, 482, 482,
	303, 303, 303, 307, 307, 306, 306, 306, 306, 306,
	311, 7, 7, 7, 7, 7, 7, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	38, 195, 196, 39, 197, 197, 198, 198, 199, 199,
	200, 201, 202, 202, 202, 202, 37, 187, 187, 188,
	188, 189, 189, 190, 191, 191, 191, 194, 192, 193,
	193, 552, 552, 551, 36, 36, 29, 146, 146, 147,
	147, 147, 149, 149, 244, 244, 244, 148, 148, 150,
	150, 150, 514, 517, 515, 515, 519, 519, 519, 520,
	520, 520, 520, 521, 521, 30, 136, 141, 524, 524,
	524, 523, 523, 525, 525, 526, 526, 293, 293, 294,
	294, 144, 145, 145, 143, 138, 152, 152, 152, 152,
	152, 137, 142, 516, 522, 522, 522, 370, 370, 367,
	368, 368, 365, 364, 364, 364, 528, 528, 527, 527,
	527, 304, 304, 31, 360, 360, 362, 363, 363, 363,
	354, 354, 354, 354, 35, 358, 358, 359, 359, 359,
	359, 359, 359, 359, 355, 355, 357, 357, 353, 353,
	353, 353, 353, 353, 34, 151, 151, 352, 352, 349,
	349, 347, 347, 348, 348, 346, 346, 346, 350, 350,
	42, 75, 43, 44, 45, 41, 41, 41, 351, 351,
	33, 33, 33, 121, 120, 120, 120, 120, 120, 292,
	292, 291, 291, 122, 40, 223, 223, 423, 423, 418,
	418, 418, 418, 418, 438, 438, 438, 419, 419, 419,
	420, 420, 420, 422, 422, 422, 421, 421, 421, 421,
	421, 437, 437, 439, 439, 439, 392, 392, 393, 393,
	393, 396, 396, 410, 410, 411, 411, 409, 409, 416,
	416, 415, 415, 414, 414, 413, 413, 412, 412, 412,
	412, 407, 407, 406, 406, 394, 394, 394, 394, 394,
	395, 395, 395, 405, 405, 408, 408, 267, 267, 266,
	266, 231, 231, 232, 232, 265, 265, 229, 229, 230,
	230, 230, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 488, 488, 489,
	234, 234, 245, 245, 245, 245, 245, 245, 233, 233,
	235, 235, 212, 212, 210, 210, 203, 203, 204, 204,
	205, 205, 205, 209, 209, 208, 208, 208, 208, 206,
	206, 207, 207, 207, 207, 207, 207, 378, 378, 485,
	485, 486, 486, 481, 481, 481, 484, 484, 484, 484,
	484, 484, 487, 487, 487, 483, 483, 213, 287, 287,
	287, 305, 305, 305, 305, 286, 286, 286, 228, 228,
	227, 227, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 377, 377, 320, 320, 321, 321,
	254, 253, 253, 253, 253, 253, 251, 252, 250, 250,
	250, 250, 250, 249, 249, 248, 248, 248, 356, 356,
	246, 246, 237, 237, 237, 236, 236, 236, 417, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 285, 285, 285, 330, 330, 335,
	335, 497, 497, 496, 214, 214, 214, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 224, 224, 224, 401,
	401, 401, 401, 402, 402, 402, 402, 403, 403, 403,
	399, 399, 400, 400, 339, 340, 340, 444, 444, 397,
	397, 398, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 451, 451, 451, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	508, 508, 508, 493, 493, 493, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 495, 495,
	495, 495, 495, 495, 495, 495, 495, 495, 495, 495,
	495, 495, 495, 495, 495, 283, 283, 283, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 341, 341, 342, 342, 448, 448, 448,
	448, 448, 448, 449, 449, 450, 450, 450, 450, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 328, 280,
	280, 280, 343, 336, 336, 337, 337, 331, 331, 331,
	331, 331, 331, 331, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 326, 326, 326, 326, 326,
	326, 326, 326, 326, 326, 326, 332, 332, 334, 334,
	345, 345, 345, 344, 344, 344, 344, 344, 344, 344,
	226, 226, 226, 226, 325, 325, 325, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 216,
	216, 216, 216, 220, 220, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 221,
	221, 221, 221, 221, 219, 219, 219, 219, 219, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 109, 110, 110,
	218, 288, 288, 424, 424, 427, 427, 425, 425, 426,
	428, 428, 428, 429, 429, 429, 430, 430, 430, 433,
	433, 295, 295, 295, 301, 301, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 10, 7, 4, 1, 3, 2, 4, 5,
	5, 6, 5, 5, 3, 2, 2, 1, 3, 4,
	3, 7, 5, 8, 2, 2, 1, 3, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	2, 1, 3, 2, 1, 2, 2, 1, 2, 3,
	2, 3, 3, 3, 1, 1, 7, 7, 8, 8,
	0, 4, 7, 0, 3, 0, 2, 0, 1, 1,
	1, 1, 4, 2, 2, 3, 3, 4, 5, 3,
	4, 4, 2, 2, 2, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	2, 5, 5, 0, 2, 7, 0, 1, 0, 1,
	5, 5, 3, 3, 2, 4, 4, 4, 4, 4,
	1, 1, 1, 3, 3, 1, 1, 1, 6, 0,
	1, 1, 1, 1, 5, 5, 0, 1, 1, 3,
	3, 3, 4, 6, 7, 4, 4, 7, 8, 3,
	3, 3, 0, 2, 2, 0, 2, 2, 1, 1,
	1, 1, 0, 1, 4, 4, 5, 4, 3, 1,
	3, 1, 1, 3, 5, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 4, 1, 3, 1, 4, 6,
	6, 4, 4, 4, 4, 4, 3, 6, 3, 5,
	1, 1, 2, 2, 11, 8, 9, 1, 3, 2,
	4, 0, 2, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 4, 2, 1, 5, 4, 4, 2, 5,
	1, 3, 2, 1, 5, 4, 4, 2, 0, 5,
	4, 0, 1, 3, 3, 1, 3, 1, 3, 1,
	3, 4, 0, 1, 0, 1, 1, 3, 1, 1,
	0, 4, 1, 3, 2, 1, 0, 8, 0, 4,
	7, 4, 0, 2, 0, 2, 0, 2, 0, 4,
	1, 3, 1, 1, 6, 4, 5, 7, 4, 5,
	0, 1, 3, 8, 0, 6, 0, 4, 6, 1,
	1, 1, 1, 1, 2, 3, 1, 3, 6, 0,
	3, 0, 1, 2, 4, 4, 0, 1, 3, 1,
	3, 3, 0, 1, 1, 0, 2, 2, 0, 2,
	3, 3, 3, 1, 3, 3, 3, 3, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	7, 7, 1, 1, 1, 0, 1, 1, 1, 1,
	0, 2, 0, 3, 0, 2, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 4, 4, 3, 2, 2, 2, 3, 2, 3,
	4, 1, 3, 4, 0, 2, 1, 1, 2, 2,
	0, 1, 2, 4, 1, 3, 1, 3, 2, 3,
	1, 4, 3, 0, 1, 1, 2, 5, 2, 2,
	2, 0, 2, 3, 3, 0, 1, 3, 1, 3,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	7, 1, 1, 7, 1, 3, 0, 1, 1, 3,
	1, 3, 0, 1, 1, 1, 14, 1, 3, 0,
	1, 1, 3, 1, 1, 2, 4, 1, 1, 1,
	1, 0, 1, 2, 9, 9, 7, 1, 2, 3,
	3, 3, 0, 4, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 4, 1, 1, 3, 4, 3, 0,
	1, 1, 1, 0, 2, 7, 8, 8, 0, 3,
	3, 0, 3, 0, 3, 0, 5, 1, 3, 0,
	3, 3, 0, 2, 9, 6, 0, 2, 2, 3,
	3, 4, 4, 1, 0, 2, 2, 1, 3, 2,
	1, 3, 2, 1, 3, 2, 0, 1, 3, 4,
	3, 1, 1, 4, 1, 3, 1, 1, 1, 1,
	0, 1, 1, 1, 11, 0, 2, 3, 3, 2,
	2, 3, 1, 1, 1, 3, 3, 4, 0, 2,
	2, 2, 2, 2, 6, 0, 4, 1, 1, 0,
	3, 0, 1, 1, 2, 4, 4, 4, 0, 1,
	8, 2, 4, 4, 4, 9, 10, 8, 0, 2,
	11, 9, 11, 2, 2, 8, 4, 5, 3, 1,
	3, 0, 3, 5, 10, 0, 2, 0, 2, 0,
	3, 2, 4, 3, 0, 2, 1, 0, 2, 3,
	0, 2, 3, 0, 2, 1, 0, 3, 2, 4,
	3, 0, 1, 0, 1, 1, 0, 6, 0, 3,
	5, 0, 4, 0, 3, 1, 3, 4, 5, 0,
	3, 1, 3, 2, 3, 1, 2, 0, 4, 6,
	5, 0, 2, 0, 2, 4, 5, 4, 5, 1,
	5, 6, 5, 0, 3, 0, 1, 1, 3, 3,
	3, 0, 4, 1, 3, 3, 3, 0, 1, 1,
	3, 2, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 5, 4, 1, 3, 3,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 0, 1, 1, 3,
	1, 1, 1, 1, 1, 7, 9, 7, 9, 2,
	1, 7, 9, 7, 9, 8, 5, 0, 1, 0,
	1, 1, 1, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 3, 1, 3,
	5, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 2, 1, 2, 2, 1, 1, 2, 2, 2,
	3, 3, 2, 2, 1, 5, 6, 4, 1, 1,
	1, 5, 4, 1, 1, 2, 0, 1, 1, 2,
	5, 0, 1, 1, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 2, 2, 0, 3,
	0, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 3, 5, 2, 2, 2,
	2, 1, 1, 2, 5, 6, 6, 6, 6, 1,
	1, 1, 1, 1, 4, 4, 4, 0, 2, 0,
	1, 1, 2, 4, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	2, 5, 0, 1, 3, 0, 1, 0, 2, 0,
	1, 6, 8, 6, 6, 5, 5, 5, 6, 6,
	6, 6, 5, 6, 6, 6, 6, 6, 6, 6,
	6, 1, 1, 1, 4, 4, 6, 8, 6, 4,
	5, 4, 4, 4, 3, 4, 6, 6, 7, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 8, 4, 2,
	3, 2, 4, 2, 2, 4, 6, 2, 2, 4,
	6, 4, 2, 0, 1, 2, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 1, 3, 0, 1, 1, 3, 3, 3, 3,
	3, 2, 1, 1, 3, 4, 3, 4, 3, 4,
	3, 4, 3, 4, 1, 3, 4, 4, 5, 4,
	5, 3, 4, 5, 6, 1, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 1, 1, 2, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 4, 4, 1, 2, 3, 5,
	1, 1, 3, 0, 1, 0, 3, 0, 3, 3,
	0, 3, 5, 0, 3, 5, 0, 1, 1, 0,
	1, 1, 2, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -550, -553, -2, -5, 605, -1, -4, -110, -84,
	-7, -112, -113, -8, -108, -9, -10, -12, -88, -103,
	-105, -107, -106, -46, -11, -102, -79, -80, -90, -96,
	-99, -100, -101, -114, -109, -111, -153, -115, -116, 595,
	-85, -86, -87, -32, -31, -30, -29, -136, -141, 601,
	442, 13, 491, -14, -15, -498, -16, 257, -308, -309,
	-310, -312, -554, -47, -48, -49, -57, -58, -59, -60,
	-61, -71, -72, -73, -50, -51, -52, -55, -53, -64,
	-63, -65, -66, -67, -68, -69, -70, -54, -139, -140,
	-74, -56, -75, -77, -76, -82, -78, -83, -138, -143,
	-13, 232, -81, 75, -91, -92, -93, -94, -95, -97,
	-98, 367, 373, 430, 594, 60, -154, -156, 609, 610,
	157, 158, 160, 161, -33, -34, -35, -36, -37, -38,
	-40, -39, -41, -42, -43, -44, -45, 228, 15, 534,
	-17, -20, -18, -21, -19, -27, -28, -26, -23, -25,
	-137, -24, -142, -22, 252, 251, 37, 318, 319, 320,
	371, 250, 229, 14, 30, 41, 347, -155, 81, 526,
	527, 529, 230, -157, 12, 613, -6, -3, -2, -123,
	-127, -131, -134, -135, -132, -133, -4, -110, 115, 242,
	596, -305, 363, 597, 599, 598, 84, 92, -298, -300,
	367, 373, 594, 610, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 494, 581, 582, 583, 584, 522, 580, 345, 346,
	531, 269, 293, 398, 299, 306, 157, 176, 170, 198,
	190, 527, 165, 273, 311, 274, 91, 160, 477, 105,
	454, 427, 163, 288, 290, 292, 523, 524, 295, 294,
	296, 298, 525, 275, 348, 186, 181, 287, 271, 179,
	276, 39, 277, 203, 278, 279, 536, 450, 344, 456,
	303, 425, 180, 451, 291, 453, 207, 211, 468, 469,
	174, 175, 458, 471, 202, 205, 206, 249, 342, 343,
	42, 533, 261, 472, 209, 201, 197, 480, 307, 305,
	200, 173, 196, 272, 64, 213, 212, 214, 421, 422,
	423, 424, 280, 281, 361, 467, 193, 182, 349, 166,
	22, 475, 256, 455, 374, 282, 300, 308, 208, 210,
	263, 268, 535, 526, 429, 267, 304, 473, 178, 260,
	289, 255, 476, 167, 529, 376, 283, 161, 297, 470,
	479, 63, 389, 172, 164, 246, 158, 265, 270, 284,
	285, 286, 520, 310, 309, 301, 528, 194, 262, 199,
	184, 171, 195, 159, 264, 478, 390, 592, 347, 408,
	192, 189, 266, 239, 474, 457, 162, 412, 391, 187,
	312, 588, 589, 590, 362, 341, 313, 314, 185, 253,
	448, 449, 317, 418, 333, 392, 428, 399, 393, 220,
	221, 321, 460, 462, 204, 591, 322, 323, 324, 452,
	325, 326, 327, 328, 366, 55, 57, 93, 95, 611,
	62, -383, -381, -305, 527, 594, 373, 526, 529, 367,
	347, 610, -197, -305, 612, -163, 38, -210, -305, -163,
	-81, -15, -14, -155, -156, -210, 236, -313, 23, 425,
	-89, 426, 232, 81, -305, -9, -101, -8, -108, -79,
	-153, 430, -311, -305, 318, 318, -311, 236, -305, 267,
	406, -435, 242, -387, -360, 268, -386, -362, -389, -363,
	31, 228, 230, 229, 264, 15, 371, 238, 13, 12,
	372, 250, 24, 25, 27, 14, 373, 375, 28, 376,
	379, 380, 381, 41, 384, 385, 257, 84, 92, 87,
	275, -196, -305, -337, -331, 112, 258, -333, -326, -327,
	-329, -477, -471, -324, 81, 139, 140, 147, 113, -328,
	-417, 35, 115, 543, 580, 492, -281, -282, -283, -284,
	-285, -305, -472, -470, 87, 96, 99, 102, 103, 101,
	100, 151, 183, 98, 88, 152, -156, 84, -493, 552,
	-299, 573, 581, 582, 583, 584, 572, 60, -442, -450,
	235, -448, 150, 188, 253, 184, 13, 145, 418, 185,
	549, 569, 494, 553, 576, 545, 546, 547, 540, 541,
	542, 544, 554, 556, 568, -451, 564, 574, 575, 562,
	577, 578, 579, 86, 85, 567, 566, 555, 550, 551,
	557, 539, 548, 558, 559, 565, 570, 571, 355, 105,
	356, 357, 484, 348, 358, 242, 425, 69, 359, 360,
	361, 362, 363, 491, 364, 70, 365, 354, 257, 408,
	366, 187, 204, 496, 495, 497, 488, 485, 483, 486,
	487, 489, 490, 560, 561, 563, -117, -118, 586, -544,
	-274, -545, 6, 7, 8, 9, -546, 152, -535, 427,
	535, 87, 162, 159, -374, 162, 111, 167, 166, -374,
	321, 263, -351, -146, 345, 408, 325, 93, 267, -354,
	-352, 523, -437, 315, 311, 237, 108, -147, 247, 246,
	106, 484, 235, 382, 306, 55, 57, -509, -510, 225,
	226, 227, -500, 517, -499, -305, 357, 95, 26, 236,
	368, 263, 462, 460, 461, 463, 464, 465, 466, -62,
	-452, -434, 457, 456, -317, 449, 455, 447, 459, 450,
	346, 327, 326, 228, 606, 524, 518, -295, 392, 428,
	481, 482, 369, 429, 468, 470, 451, 105, 191, 188,
	237, 239, 236, 345, 484, 408, 93, 325, -509, 159,
	468, 470, 267, 406, 40, -380, 418, -379, -381, 469,
	480, 85, 86, 467, -295, 105, 448, 448, -544, -274,
	-154, -156, -111, -498, 525, 525, 525, 237, 345, 408,
	267, 238, 236, 521, 523, 239, 484, 235, 318, 368,
	263, 325, 93, -436, -506, 31, -443, 222, 223, 224,
	32, 33, -1, 119, 613, -331, -331, -6, 616, -6,
	-331, -305, -305, 154, -216, -220, -217, -219, -218, -222,
	-221, 188, 189, 150, 192, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 205, 206, 203, 30, 204, 253,
	184, 185, 186, 187, 207, 170, 190, 532, 215, 171,
	216, 172, 217, 173, 218, 174, 175, 219, 176, 179,
	180, 181, 182, 178, 153, 81, 153, 87, -179, 259,
	-210, 153, -179, -544, -172, -173, 11, -210, -286, -305,
	427, 122, -89, -89, 426, -501, -502, -503, -505, 232,
	426, 425, 153, 275, 16, -311, -311, 79, -210, -362,
	267, -387, -360, 35, 78, 154, 240, 154, 78, 81,
	369, 345, 408, 370, 484, 236, 382, 239, 267, 383,
	345, 408, 236, 239, 484, 267, 345, 236, 239, 408,
	267, 383, 447, 448, 239, 26, 374, 377, 378, 448,
	-456, 480, 154, 111, 108, 109, 110, -331, 129, -344,
	122, 123, 124, 125, 126, 127, 128, 136, 135, 146,
	139, 140, 141, 142, 143, 144, 145, 137, 138, 132,
	112, 130, 134, 131, 114, -156, -331, -337, 60, -329,
	-329, -329, -329, -417, -335, -331, 81, 81, 81, 153,
	100, 87, -331, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, -449, 81, 81, -341, -342,
	81, 81, -324, -286, 81, 87, 87, 81, 81, 81,
	87, -342, -342, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, -173, 154, -172, 81, -172, -173,
	-157, -156, 31, 32, 31, 32, 31, 32, 31, 32,
	-547, 603, 81, 96, 611, 220, 473, 534, 165, 166,
	167, -195, -305, -197, 368, 239, 521, 520, 239, -147,
	-349, 242, -349, -349, -349, -349, 238, -349, 23, 236,
	236, 236, -349, 491, 122, 122, 58, -511, 169, 154,
	-500, -178, 81, -316, 130, 134, -316, 23, 265, 265,
	265, -316, 305, -555, -556, 16, 132, -314, -556, -314,
	-314, -316, -557, 238, 458, 42, 266, 265, -174, -175,
	21, -174, 452, 448, -404, 453, 454, -318, -556, -317,
	-316, -316, -317, -316, -316, -316, 236, 239, 484, 325,
	607, -555, -555, 30, 30, -435, -435, -210, -435, 518,
	-296, -305, -435, -435, -435, -512, 241, -541, -540, 471,
	-543, 473, 159, -381, 159, -381, -362, 267, 267, 154,
	122, 23, -382, 122, 133, -381, -381, -382, -382, -233,
	40, -304, 150, -305, 87, -233, 40, -538, -537, -210,
	-173, -157, -156, 82, 82, 82, 528, 528, 528, -435,
	-435, -435, -435, -435, -437, -435, -435, -435, -435, -435,
	-311, -187, -305, -197, 242, -435, -435, -158, -159, 141,
	-331, -305, -158, -3, -125, -124, 116, 117, 119, 597,
	363, 596, 600, 594, -381, 40, -430, 390, 389, -424,
	-426, 81, -425, 81, -425, -425, -425, -425, -425, 81,
	81, -427, 81, -427, -427, -424, -428, 81, -428, -429,
	81, -429, -428, -305, -336, -337, -305, 38, -445, 60,
	-153, 81, 30, 81, -305, -446, 60, -153, 81, 30,
	-173, -119, 38, -175, 20, 153, 96, 87, -89, 82,
	154, -504, 102, 103, -507, 202, 194, -305, -104, 87,
	-7, -8, -9, -10, -46, -79, -153, -473, -471, 81,
	31, 417, 78, 16, -388, 236, 484, 368, 263, 239,
	345, -386, -369, -366, -364, -304, -362, -365, -364, -391,
	-286, 448, -120, 432, 431, 317, -331, -331, -331, -331,
	-331, 101, 112, 341, 102, 103, -326, -345, 31, 313,
	314, -327, -327, -327, -327, -327, -327, -327, -327, -327,
	-327, -327, -327, -334, -343, -417, 81, 132, 130, 134,
	131, 114, -329, -329, -327, -327, 82, 154, -497, -496,
	116, -331, -331, -331, -305, -494, -495, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 359, 354,
	360, 358, 348, 366, 361, 362, 187, 515, 516, 509,
	510, 511, 512, 513, 514, -336, -336, -331, -494, -336,
	-280, 32, 31, -337, -337, -337, 82, -331, -508, 339,
	338, 340, -176, -305, -336, 82, 82, 82, 96, -337,
	-337, -336, -327, -336, -495, -280, -280, -280, 141, -337,
	-337, -280, -280, -280, -280, 141, -280, -280, -280, -280,
	-280, -280, -280, -280, 82, 82, 82, -174, -118, -454,
	-453, -331, 40, -119, -175, -548, 604, 81, -286, -536,
	87, 87, 614, 474, 475, 163, 166, 165, 34, 81,
	-187, -349, -349, 521, -349, -514, -305, 112, -370, -367,
	-364, -305, -305, -360, -305, -305, -210, -349, -349, -349,
	-210, -244, 52, 53, 54, -364, -148, 55, 56, -512,
	-499, 34, -177, -305, -270, 17, -329, -329, -364, 267,
	-555, -316, -316, -297, -296, -318, -313, -318, -318, -270,
	-314, -316, -316, -331, -318, -314, -270, -305, 448, -270,
	-270, -404, -315, -305, -315, -349, -296, -297, -297, -210,
	-210, -255, -256, 233, 352, 353, 231, 229, 11, 230,
	-264, 306, -350, 492, -239, -240, 76, 41, -242, 394,
	387, 269, 273, 91, 274, 427, 275, 238, 277, 278,
	279, 294, 296, 249, 280, 281, 282, 418, 283, 158,
	295, 284, 285, 286, 370, -234, 6, 328, 40, 50,
	51, 441, 440, 537, 534, 270, -514, -514, 30, 30,
	-370, -305, -305, -166, -161, -165, -162, -167, -273, -275,
	-164, 81, -210, -156, -305, 154, 472, 474, 475, -541,
	-382, -541, -382, 31, 417, -385, 417, 31, -360, -379,
	468, 470, -375, 87, 418, -365, -384, 78, 150, -453,
	-382, -382, -384, -384, 149, 154, -539, 473, 474, 225,
	-174, 96, 96, 96, -212, -210, -514, -369, -360, -305,
	-435, -212, -212, -212, -305, -305, 81, 153, 35, -305,
	-305, -269, 154, -268, 16, -306, -305, 34, 87, 153,
	-269, -126, -124, 118, -331, -6, 596, -331, -6, -6,
	-331, -6, -331, -433, 391, 96, 96, -288, 87, -288,
	96, 96, 96, 82, 87, -373, 78, -447, -338, -492,
	586, -181, 82, -176, -490, -491, -176, -180, -305, -447,
	-181, 82, -490, -174, 587, -119, -171, -170, -331, -305,
	23, -89, -502, 153, 154, -177, -388, -368, -365, -390,
	141, -305, -376, 154, 534, 617, 85, 240, -528, -527,
	409, 82, 154, -457, 241, 491, 87, 614, 425, 220,
	221, 101, 341, 102, 103, -417, -337, -334, -329, -329,
	-327, -327, -332, 254, -332, 111, -331, -330, -496, 118,
	-331, 34, 34, 154, 79, 153, 82, 82, 16, 16,
	82, -331, 82, 82, 82, 82, 16, 16, -331, 82,
	153, 82, 82, 82, 82, 79, 82, 154, 82, 154,
	-337, -331, -337, 82, 82, 82, -331, -331, -331, -337,
	82, -331, -331, -331, -331, -331, -331, -331, -331, -398,
	443, -398, -398, 154, 82, -119, 81, 96, 154, -292,
	-291, 87, 164, 167, 167, 166, -196, -198, -199, -200,
	-201, -202, 132, 155, 156, 81, -210, -210, -349, -210,
	-517, 395, 35, -529, 154, 40, -527, 484, -144, 317,
	-353, 79, -151, 16, 534, -210, -210, -210, -223, 34,
	16, -160, -211, -305, 81, 82, 154, -331, -361, 79,
	-305, -297, -270, -270, -318, -270, -270, 154, 22, -316,
	-318, -318, -314, 153, -296, -423, 34, -178, 154, -209,
	-302, -206, -208, 244, -321, -207, 247, -486, 245, 243,
	106, 248, 302, 107, 238, -302, -302, 244, -243, 240,
	34, -302, -258, 238, 302, 245, 20, -257, 238, 107,
	-305, 244, 248, 243, -301, 122, -295, 149, 240, 42,
	370, -301, 538, -301, -301, -301, -301, -301, -301, -301,
	276, 276, -301, -301, -301, -301, -301, -301, -301, -301,
	-301, -301, -301, 159, -301, -301, -301, -301, -301, -301,
	81, 271, 272, -518, 395, 30, 351, 351, -529, 30,
	-152, 345, 30, -276, -277, -278, -279, 67, 71, 73,
	68, 69, 70, 74, 30, 154, -303, -307, 34, -305,
	87, -303, -156, -161, -166, -303, 81, -540, -542, 476,
	473, 479, -384, -384, 240, 81, 122, -384, -384, 40,
	-304, -537, 480, 474, -119, 154, 78, -212, -188, -189,
	-190, -191, -216, -286, 189, 192, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 205, 206, 203, 204, 253,
	184, 185, 186, 187, 207, 170, 190, 171, 172, 173,
	174, 175, 176, 179, 180, 181, 182, 178, -305, -197,
	-270, -159, -161, -305, 87, -305, 141, -270, 119, -6,
	117, -130, -129, -128, 120, 594, 600, 119, 119, 119,
	82, 82, 82, 154, 82, 82, 82, 154, 82, 154,
	-460, 453, 39, 154, 81, 82, 154, 60, 154, 122,
	82, 154, 82, 60, -119, 87, 154, -168, 36, 37,
	153, 427, -305, -471, 82, -390, 154, 240, 153, 153,
	-366, 373, -304, -368, 20, 534, -286, 38, -292, 122,
	614, -305, 82, -332, -332, 111, -329, -326, 82, 119,
	-331, 117, -214, -216, 389, 390, -214, -215, -221, 150,
	188, 253, 187, 186, 184, 389, 390, -233, -305, -331,
	-331, 82, -331, -331, 16, -305, -233, -327, -331, -173,
	82, 82, -397, -398, -397, -397, 82, 82, 82, 82,
	-397, 82, 82, 82, 82, 82, 82, 82, 82, 81,
	-453, -549, 62, 602, 61, 417, 101, 307, 154, 96,
	615, 154, 122, 167, 381, 82, 154, -286, -188, -178,
	81, -231, 534, -210, -178, -520, 455, 397, 407, -301,
	-323, -322, 347, 41, -440, 418, 403, 404, -367, 267,
	-305, -526, 94, 122, 78, 332, 336, 333, 334, 335,
	-347, -348, -346, -350, -514, 81, 81, 81, 81, -418,
	322, -216, -210, -160, -305, 16, 154, -513, 153, -1,
	-305, -360, -316, -270, -331, -331, -270, -316, -316, -318,
	-305, -418, -216, 34, -256, -213, -286, -207, -485, -486,
	-349, -305, 107, -485, 107, 81, -213, -286, -286, -259,
	-315, -286, -305, -305, -305, -262, -261, -286, -305, -305,
	-305, 107, 107, -238, 40, 47, 48, 49, -301, -301,
	191, -241, 40, 417, 419, 420, 96, 96, 96, 96,
	87, 87, 87, -301, -301, 96, 87, -307, 87, -487,
	166, 44, 45, 96, 96, 96, 96, 40, 87, -245,
	40, 287, 291, 288, 289, 290, 87, 96, 40, 96,
	40, 96, 40, -305, 81, -488, -489, 87, -520, -301,
	351, -381, 122, -323, -525, 317, -145, 91, 31, -182,
	233, 230, -514, -372, -371, -286, -165, -165, -165, -165,
	67, 67, 67, 72, 67, 72, 67, -278, -372, -167,
	-178, -307, 82, -534, -533, -532, -530, 75, 241, 76,
	-336, 473, 477, 478, -368, -319, 87, -375, -186, 23,
	-210, -210, -439, 297, 298, 82, 154, -216, -272, 18,
	153, -272, 115, -6, -126, -128, -331, -6, -331, 596,
	363, 597, 87, 96, 96, -468, 438, 433, 435, 107,
	-338, -455, -454, 60, -153, -176, -447, -491, -453, -305,
	60, -153, -447, -186, -460, -170, -169, 43, -305, 96,
	16, -365, -360, 141, 141, -305, 374, -376, 87, 396,
	87, 236, 615, 87, -292, -326, -331, 82, -224, 175,
	174, -224, 82, 82, -425, -425, -424, -427, -424, -224,
	-224, 82, 82, 23, 82, 82, 82, -331, 82, 82,
	154, -444, 493, -397, -397, -397, -397, -397, -397, -397,
	-397, -397, -397, -397, -397, -397, -397, -340, -339, 259,
	82, 154, -494, 154, -291, 87, 87, 87, -200, -216,
	82, 34, -203, -204, -205, -213, -206, -208, 34, 81,
	81, 34, -521, 91, -515, 87, -305, -522, 91, 398,
	152, 349, 40, 399, 400, 415, 344, 96, 96, 405,
	-516, -305, -152, -524, 51, 122, 87, -210, -346, -295,
	149, 278, 325, -267, -266, -305, 87, -203, -203, -203,
	-419, 324, 20, 96, 140, -179, 79, 153, -161, -211,
	-305, 141, 82, -270, -270, -270, -316, -419, -153, -260,
	44, 46, -216, -483, -305, -481, -483, -305, -481, -481,
	-349, -331, -260, -213, 240, 30, 230, -263, 330, 331,
	-377, 303, 112, -377, 154, -168, -305, -233, -233, 30,
	87, 87, -212, 82, 154, 122, -521, -515, 122, -382,
	87, -522, -526, 122, 87, 154, -182, -182, -270, 154,
	122, -184, -183, 78, 79, -185, 78, -183, 67, 67,
	-270, -532, -531, 23, -486, -486, -486, 82, 82, 14,
	-190, 40, -271, 19, 20, 141, -271, 119, 117, 119,
	119, -305, 82, 82, -431, 588, -464, -466, 433, 20,
	20, 14, 241, 82, -447, -447, -468, 44, 45, -360,
	-376, 418, -210, 154, 615, -331, 82, -331, 82, 87,
	-173, 20, -331, 82, -494, 234, -153, 82, 154, -153,
	-232, -265, -305, 87, -203, -153, 87, -519, 409, 87,
	87, 96, 40, 96, 152, 401, -441, -145, -523, 91,
	122, 614, 81, -301, -301, -301, -305, 82, 154, -301,
	-301, 82, 82, 82, -420, 258, 96, 140, 96, 140,
	96, -303, -161, -305, -270, -513, 153, -270, -420, -286,
	-228, -227, -225, 101, 112, 40, 387, -226, 91, 149,
	292, 295, 294, 270, 293, -254, -320, 78, 393, 330,
	331, -350, 588, 522, 243, 106, 107, 375, -321, 81,
	81, 79, 312, 81, 81, -483, 82, -260, -286, 40,
	-263, 40, 303, -261, 149, -233, 82, -489, 87, -519,
	87, -384, -524, 87, -514, -173, -371, -453, -331, 81,
	-331, 81, 67, 11, 18, -324, -331, -337, 242, -6,
	597, 363, -247, 589, 87, 20, 87, -462, 87, -372,
	-431, -122, -458, -404, 275, 82, 82, -397, -400, -399,
	-403, 439, 304, 446, -337, 82, 82, -192, -216, -149,
	534, -231, -205, 82, 154, -301, -301, 82, -149, 20,
	534, 348, 40, 96, 40, 402, 122, 102, 103, -293,
	-294, 87, -355, -357, -286, 81, -233, -235, -304, 150,
	87, -266, -324, -324, -229, -230, -264, -350, -121, -120,
	-229, -421, 158, 96, 140, 96, 96, -270, -270, -421,
	-225, 101, -327, 87, -235, -236, 40, 291, 287, 122,
	122, -237, 40, 271, 272, -246, 81, 302, 14, 191,
	81, 107, 107, -210, -355, -355, -484, 332, 333, 334,
	337, 336, 335, -484, -355, -355, 81, -378, -377, -327,
	-301, 149, -523, -174, -177, -482, -305, 243, 20, 20,
	-305, -305, -289, 590, 96, 87, 435, -247, -432, 591,
	-467, 438, -461, -459, 433, 434, 435, 436, 122, 82,
	-402, 114, 401, 405, -325, -328, 96, 99, 183, 152,
	533, -150, 59, 480, -265, -324, -324, -231, 87, 396,
	87, 348, 87, 615, 154, 122, 82, 154, -424, -331,
	-392, 259, 154, -264, -295, -122, -392, -438, 166, 323,
	534, 96, 140, 96, -173, -422, 166, 323, 87, 87,
	96, 81, -448, 30, 87, -356, 81, 82, 82, 82,
	82, -355, -233, -301, 82, 82, 154, 81, 20, -289,
	87, -469, 241, -465, -466, 437, -459, 20, 435, 20,
	20, 87, -401, -402, 405, -325, -328, 586, 444, 444,
	444, -194, -305, 302, 418, -294, 87, -358, -357, -168,
	82, -393, 311, 20, -264, -301, -393, 323, 96, 140,
	96, -174, 323, 82, -331, -341, -301, 82, -249, -248,
	530, -355, -358, 79, -358, 79, -358, 79, -358, 79,
	82, -233, -305, 243, -290, -305, -462, -476, 81, 96,
	-464, -463, -465, 20, -462, 20, -462, -462, 111, 445,
	445, 445, -193, 34, 440, 374, -359, 249, 342, 343,
	91, 534, 330, 331, -168, 20, -394, 304, 305, -395,
	-408, 307, -233, 96, 82, -305, -253, -251, -252, 78,
	451, 300, 301, 82, -484, -484, -484, -484, -254, 82,
	154, -480, 30, 82, -475, -474, -287, -470, -305, 438,
	439, 87, -462, -401, 87, -301, -301, 87, 87, 329,
	-286, 81, -406, 308, 81, -404, 81, -404, 107, 333,
	-377, -252, 78, -251, 78, 15, 14, -358, -358, -358,
	-358, -305, -479, -478, -477, 82, 154, 153, -552, -551,
	608, 96, 96, -305, -391, -396, 309, 96, -327, 81,
	-327, 81, -405, 306, 81, -250, 297, 298, 30, 166,
	-250, 154, 122, -474, -305, 87, 82, -410, 81, 20,
	82, -391, 82, -391, 81, 122, -327, 101, 40, 299,
	-478, 40, -331, 153, -411, -409, 259, -395, 82, 82,
	82, -391, 96, 82, -305, 82, 154, -305, -407, 310,
	82, -409, -412, 60, 96, -416, -413, 81, -264, 261,
	132, -416, -264, -415, -414, 309, 262, 81, 82, 154,
	-305, 258, 81, -337, -414, -413, -337, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 841, 842, 843, 844, 845, 846, 0,
	0, 0, 0, 600, 601, 0, 567, 0, 0, 0,
	0, 0, 0, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 288, 284, 209, 210, 211, 212, 213, 295,
	296, 435, 0, 0, 0, 0, 682, -2, 56, 0,
	277, 0, 268, 268, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, -2, 613, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 343, 344, 345, 339, 340, 342,
	341, -2, 0, 613, 0, 0, 0, 690, 0, 0,
	0, 0, 0, 733, 755, 23, 0, 7, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 0, 0,
	19, 0, 19, 0, 0, 0, 1231, 1232, 1233, 1234,
	-2, 1729, 1707, 1880, 1893, 1894, 1895, 1896, 1897, 1898,
	1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908,
	1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918,
	1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928,
	1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
	1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697,
	1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728,
	1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749,
	1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769,
	1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800,
	1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810,
	1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820,
	1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830,
	1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840,
	1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850,
	1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860,
	1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870,
	1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1881,
	1882, 0, 261, 259, 1679, 1707, 1729, 1783, 1794, 1795,
	1829, 1880, 0, 864, 0, 660, 0, 665, 1184, 660,
	289, 602, 603, 690, 716, 565, 0, 325, 0, 1720,
	329, 0, 0, 0, 562, 319, 320, 321, 322, 323,
	324, 0, 0, 840, 0, 0, 315, 0, 283, 1785,
	0, 0, 0, 0, 0, 0, 153, 974, 155, 976,
	159, 166, 0, 0, 171, 172, 175, 176, 177, 178,
	179, 0, 183, 0, 185, 188, 0, 190, 191, 0,
	194, 195, 196, 0, 206, 207, 208, 977, 978, 979,
	-2, 84, 862, 1637, 1525, 0, 1532, 1533, 1544, 1555,
	1311, 1312, 1313, 1314, 0, 0, 0, 0, 0, 1321,
	1322, 0, 1339, 1897, 1936, 0, 1329, 1330, 1331, 1332,
	1333, 93, 105, 106, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 0, 1585, 1586, 1587, 1498, 1298, 1231, 0, 1906,
	0, 1926, 1931, 1932, 1933, 1934, 1925, 0, 0, 1483,
	0, 1473, 0, 0, -2, -2, 0, 0, 1854, -2,
	1903, 1922, 1930, 1907, 1929, 1899, 1900, 1901, 1894, 1895,
	1896, 1898, 1908, 1910, 1921, 0, 1917, 1927, 1928, 0,
	0, 0, 0, 107, 108, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1489, -2,
	1491, 1492, 1494, -2, 1496, 1497, -2, 1500, 1501, 1502,
	-2, -2, 1505, 1506, 1507, 1508, 1509, 1510, 1513, -2,
	-2, -2, -2, 1485, 1486, 1487, 1488, 1477, 1478, 1479,
	1480, 1481, 1482, -2, -2, -2, 716, 791, 0, 716,
	0, 691, 738, 741, 744, 747, 694, 0, 0, 57,
	58, 0, 278, 279, 267, 269, 0, 273, 0, 266,
	0, 0, 0, 0, 1009, 1009, 1009, 1009, 1009, 0,
	1009, 0, 0, 0, 0, 1009, 0, 897, 981, 982,
	983, 1007, 1008, 1072, 0, 0, 0, 618, 614, 615,
	616, 617, 704, 0, 706, 709, 542, 542, 490, 0,
	0, 0, 542, 0, 504, 496, 0, 0, 0, 542,
	0, 0, 711, 711, 0, 545, 552, 542, 542, -2,
	542, 542, 542, 0, 0, 1021, 510, 511, 512, 496,
	496, 515, 516, 517, 527, 528, 553, 1661, 0, 0,
	435, 435, 0, 435, 0, 435, 435, 435, 620, 1824,
	1727, 1800, 1785, 0, 0, 234, 1854, 239, 0, 1728,
	1747, 0, 0, 1765, 0, -2, 0, 305, 716, 0,
	0, 690, 0, 0, 0, 0, 0, 435, 435, 435,
	435, 435, 1071, 435, 435, 435, 435, 435, 0, 0,
	0, 435, 435, 0, 0, 756, 757, 752, 753, 754,
	758, 759, 5, 6, 19, 0, 0, 0, 0, 0,
	0, 63, 62, 0, 1638, 1656, 1590, 1591, 1592, 1643,
	1594, 1647, 1647, 1647, 1647, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, 1631, 1647, 1647, 0, 0, 1636, 1614,
	1645, 1645, 1645, 1643, 1640, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1650,
	1650, 1653, 1653, 1650, 0, 1523, 0, 0, 0, 0,
	664, 0, 0, 716, -2, 0, 0, 566, 326, 1235,
	0, 0, 330, 331, 0, 0, 346, 0, 349, 334,
	335, 336, 0, 133, 0, 317, 318, 0, 0, 285,
	0, 0, 0, 436, 0, 0, 0, 0, 0, 0,
	163, 160, 167, 170, 180, 187, 0, 199, 201, 204,
	161, 168, 173, 174, 181, 202, 162, 164, 165, 169,
	203, 205, 182, 186, 200, 184, 189, 192, 193, 198,
	0, 134, 0, 0, 0, 0, 0, 1531, 0, 0,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 1525, 0, 0, 1317,
	1318, 1319, 1320, 1323, 0, 1340, 0, 0, 0, 0,
	1584, 1588, 0, 1523, 1523, 0, 1523, 1519, 0, 0,
	0, 0, 0, 0, 1523, 1459, 0, 0, 1461, 1474,
	0, 0, 1463, 1464, 0, 1467, 1468, 1523, 0, 1523,
	1472, 1455, 1456, 0, 1519, 1519, 1519, 0, 0, 1519,
	1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519,
	1519, 0, 0, 0, 711, 0, 717, 0, -2, 0,
	735, 737, 739, 740, 742, 743, 745, 746, 748, 749,
	696, 0, 0, 59, 0, 0, 0, 0, 271, 0,
	276, 0, 861, 0, 0, 1009, 1009, 0, 1009, 898,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1009,
	1009, 1009, 0, 1029, 0, 0, 0, 620, 619, 0,
	705, 0, 0, 764, 0, 0, 489, 0, 496, 542,
	542, 502, 503, 498, 497, 548, 549, 545, 0, 545,
	545, 764, 0, 521, 522, 523, 542, 542, 529, 712,
	0, 530, 531, 545, 0, 550, 551, 764, 0, 0,
	764, 764, 0, 539, 540, 541, 0, 0, 1009, 0,
	558, 498, 498, 1662, 1663, 0, 0, 1018, 0, 0,
	0, 561, 0, 0, 0, 0, 621, 214, 217, 0,
	220, 0, 1824, 0, 1824, 0, 227, 0, 0, 0,
	0, 0, 0, 257, 258, 0, 0, 0, 0, 248,
	251, 1178, 1179, 971, 972, 252, 253, 297, 298, 0,
	711, 734, 736, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 0, 0, 0, 0, 0,
	596, 0, 877, 598, 0, 0, 0, 772, 766, 768,
	835, 93, 772, 8, 80, 77, 0, 19, 0, 0,
	19, 19, 0, 19, 262, 0, 1659, 1657, 1658, 1593,
	1644, 0, 1619, 0, 1620, 1621, 1622, 1632, 1633, 0,
	0, 1615, 0, 1616, 1617, 1618, 1609, 0, 1610, 1611,
	0, 1612, 1613, 260, 0, 1524, 865, 0, 638, 652,
	633, 0, 641, 0, 1185, 622, 652, 624, 0, 641,
	711, 688, 0, 666, 0, 0, 327, 0, 332, 0,
	0, 348, 350, 351, 352, 337, 338, 563, 313, 314,
	306, 307, 308, 309, 310, 311, 312, 316, 103, 0,
	286, 287, 0, 0, 0, 147, 148, 149, 150, 151,
	152, 154, 138, 585, 587, 963, 975, 0, 966, 0,
	157, 197, 130, 0, 0, 0, 1526, 1527, 1528, 1529,
	1530, 1534, 0, 1536, 1538, 1540, 1542, 0, 1560, -2,
	-2, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1545, 1558, 1559, 0, 0, 0, 0,
	0, 0, 1556, 1556, 1551, 0, 1315, 0, 1337, 1341,
	0, 0, 0, 0, 94, 1518, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 0, 0, 1525, 0, 0,
	0, 1520, 1521, 0, 0, 0, 1414, 0, 0, 1420,
	1421, 1422, 0, 647, 0, 1484, 1460, 1475, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 790, 792, 0,
	656, 658, 659, 685, 666, 692, 0, 0, 0, 55,
	60, 53, 1041, 280, 281, 0, 0, 275, 0, -2,
	0, 0, 0, 1009, 0, 0, 912, 0, 433, 957,
	0, 0, 0, 973, 998, 1005, 0, 0, 0, 0,
	1045, 899, 904, 905, 906, 900, 901, 907, 908, 0,
	707, 0, 0, 804, 488, 0, 543, 544, 493, 1785,
	498, 764, 764, 505, 499, 506, 547, 507, 508, 509,
	545, 764, 764, 713, 542, 545, 532, 546, 545, 535,
	536, 0, 554, 559, 555, 0, 557, 513, 514, 1047,
	709, 364, 365, 406, 406, 406, 389, 406, 0, 0,
	377, 1664, 0, 0, 0, 0, 386, 1664, 0, 1664,
	1664, 1664, 1664, 1664, 1664, 1664, 0, 0, 1664, 1664,
	1664, 1664, 1664, 1664, 1664, 1664, 1664, 1664, 1664, 0,
	1664, 1664, 1664, 1664, 1664, 1164, 1664, 0, 1019, 396,
	397, 398, 399, 404, 405, 0, 430, 0, 0, 0,
	433, 0, 946, 777, 0, 778, 779, 775, 806, 830,
	830, 0, 830, 810, 1184, 0, 0, 225, 226, 215,
	0, 216, 0, 228, 229, 0, 231, 232, 233, 240,
	1727, 1800, 235, 237, 0, 0, 241, 254, 255, 256,
	0, 0, 246, 247, 0, 0, 300, 301, 303, 0,
	666, 1022, 1023, 1024, 582, 1182, 583, 584, 588, 0,
	0, 591, 592, 593, 594, 595, 879, 0, 0, 951,
	952, 764, 0, 773, 0, 769, 836, 0, 838, 0,
	764, 0, 78, 19, 0, 71, 68, 0, 0, 0,
	0, 0, 1639, 1589, 1660, 0, 0, 0, 1641, 0,
	0, 0, 0, 61, 668, 629, 0, 632, 649, 0,
	653, 0, 0, 645, 637, 642, 0, 0, 662, 623,
	0, 0, 628, 666, 0, 689, 718, 719, 722, 1236,
	0, 333, 347, 0, 0, 0, 0, 141, 960, 0,
	142, 146, 136, 0, 0, 0, 965, 0, 962, 967,
	0, 156, 0, 0, 131, 132, 1034, 1041, 0, 0,
	0, 1535, 1537, 1539, 1541, 1543, 0, 1546, 1556, 1556,
	1552, 0, 1547, 0, 1549, 0, 1526, 0, 1342, 0,
	0, 0, 0, 0, 0, 0, 1404, 1405, 0, 0,
	1409, 0, 1411, 1412, 1413, 1415, 0, 0, 0, 1419,
	0, 1458, 1476, 1462, 1465, 0, 1469, 0, 1471, 0,
	716, 0, 0, 1379, 1379, 1379, 0, 0, 0, 0,
	1379, 0, 0, 0, 0, 0, 0, 0, 0, 1334,
	0, 1335, 1336, 0, 793, 686, 0, 0, 0, 0,
	1039, 0, 282, 270, 272, 0, 0, 0, 867, 868,
	870, 0, 873, 874, 875, 879, 709, 1121, 0, 709,
	919, 1664, 1010, 437, 0, 0, 959, 0, 935, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 1049, 0,
	0, 0, 607, 611, 23, 710, 0, 765, 491, 0,
	492, 542, 500, 501, 764, 524, 525, 0, 0, 764,
	542, 542, 545, 0, 556, 1049, 0, 0, 1018, 367,
	0, 1193, 1194, 407, 0, 1200, 1209, 1009, 1268, 0,
	1209, 0, 0, 1211, 1212, 0, 0, 0, 0, 390,
	391, 0, 376, 0, 0, 0, 0, 375, 0, 0,
	417, 0, 0, 0, 0, 1665, 1664, 1664, 0, 384,
	385, 0, 388, 0, 0, 0, 0, 0, 0, 0,
	1664, 1664, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1155, 0, 0, 0, 0, 0, 0,
	0, 1170, 1171, 919, 1664, 0, 0, 0, 437, 933,
	942, 0, 0, 0, 0, 0, 0, 797, 0, 0,
	796, 0, 0, 0, 0, 0, 709, 831, 0, 833,
	834, 808, -2, 0, 777, 813, 1523, 218, 219, 0,
	0, 224, 242, 244, 0, 0, 0, 243, 245, 249,
	250, 299, 302, 304, 728, 0, 0, 1073, 0, 880,
	881, 883, 884, 0, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1712, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 878, 599,
	762, 767, 774, 837, 839, 94, 770, 762, 0, 81,
	19, 80, 72, 73, 0, 19, 0, 0, 0, 0,
	1649, 1648, 1634, 0, 1635, 1646, 1651, 0, 1654, 0,
	672, 0, 0, 652, 654, 0, 0, 652, 0, 0,
	661, 0, 0, 652, 728, 668, 0, 725, 723, 724,
	0, 0, 564, 104, 353, 0, 0, 0, 0, 0,
	586, 0, 964, 138, 0, 0, 158, 0, 0, 0,
	1041, 1038, 1522, 1548, 1550, 0, 1557, 1553, 1316, 1324,
	1338, 0, 0, 1344, 1356, 1356, 0, 0, 1347, 1647,
	1647, 1350, 1643, 1645, 1643, 1356, 1356, 0, 95, 0,
	0, 1410, 0, 0, 0, 648, 0, 0, 0, 1377,
	1379, 1379, 1385, 1380, 1386, 1387, 1379, 1379, 1379, 1379,
	1392, 1379, 1379, 1379, 1379, 1379, 1379, 1379, 1379, 1375,
	657, 0, 0, 699, 700, 701, 702, 703, 0, 0,
	54, 1041, 0, 274, 0, 0, 872, 0, 0, 0,
	1186, 0, 0, 0, 0, 923, 920, 921, 922, 0,
	954, 438, 439, 440, 441, 0, 0, 0, 958, 0,
	946, 928, 0, 0, 0, 999, 1000, 1001, 1002, 1003,
	1004, -2, 1013, 0, 0, 0, 1186, 1186, 1186, 1057,
	0, 1046, 660, 0, -2, 0, 0, 609, 0, 0,
	805, 494, 764, 518, 714, 715, 533, 764, 764, 542,
	560, 1057, 1048, 0, 366, 408, 0, 1199, 1225, 1210,
	1225, 1269, 1225, 1225, 1009, 0, 408, 0, 0, 378,
	414, 0, 0, 0, 0, 374, 411, 722, 415, 416,
	418, 0, 420, 380, 392, 393, 394, 395, 0, 0,
	0, 387, 400, 401, 402, 403, 1132, 1133, 1134, 1137,
	1138, 1139, 1140, 0, 0, 1143, 1144, 1145, 1146, 1147,
	1222, 1223, 1224, 1148, 1149, 1150, 1151, 1152, 1153, 1154,
	1172, 1173, 1174, 1175, 1176, 1177, 1156, 1157, 1158, 1159,
	1160, 1161, 1162, 1163, 0, 0, 1167, 0, 923, 0,
	0, 0, 0, 954, 935, 0, 945, 0, 947, 948,
	0, 0, 630, 764, 292, 0, 800, 794, 0, 783,
	798, 799, 786, 0, 788, 0, 784, 785, 764, 776,
	807, 832, 809, 812, 814, 815, 821, 0, 0, 0,
	0, 221, 222, 223, 230, 0, 457, 236, 684, 0,
	1183, 589, 590, 1074, 1075, 597, 0, 885, 760, 0,
	0, 760, 76, 79, 0, 74, 0, 0, 0, 0,
	66, 64, 1642, 0, 0, 674, 118, 0, 0, 0,
	650, 0, 655, 652, 636, 646, 635, 643, 644, 663,
	652, 627, 626, 687, 672, 720, 721, 0, 1237, 328,
	0, 961, 138, 143, 144, 145, 139, 137, 968, 0,
	970, 0, 1036, 0, 0, 1554, 1343, 1325, 1345, 1357,
	1358, 1346, 1326, 1327, 1348, 1349, 1351, 1352, 1353, 1354,
	1355, 1328, 1406, 0, 1408, 1416, 1417, 0, 1466, 1470,
	0, 0, 0, 1383, 1384, 1388, 1389, 1390, 1391, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 716, 1376, 0,
	697, 0, 0, 0, 1040, 1042, 860, 863, 869, 871,
	0, 0, 0, 1187, 1188, 1190, 1191, 1192, 0, 0,
	1186, 0, 896, 0, 0, 914, 915, 925, 0, 0,
	0, 443, 444, 0, 0, 0, 456, 452, 453, 454,
	434, 953, 942, 931, 0, 0, 941, 0, 1014, 1664,
	1664, 1664, 0, 0, 1117, 1664, 1664, 0, 0, 0,
	1060, 0, 0, 1051, 0, 830, 0, 0, 764, 608,
	611, 612, 708, 495, 537, 534, 764, 1060, 363, 379,
	409, 0, -2, 0, 1226, 0, 1213, 1226, 0, 0,
	1225, 0, 368, 408, 0, 0, 0, 421, 424, 425,
	422, 1264, 0, 423, 0, 413, 419, 1135, 1136, 0,
	1141, 1142, 0, 1166, 0, 0, 426, 0, 0, 0,
	427, 432, 928, 0, 943, 0, 949, 950, 716, 0,
	0, 780, 801, 0, 0, 781, 0, 782, 787, 789,
	291, 816, 0, 0, 818, 819, 820, 811, 238, 729,
	882, 0, 750, 0, 0, 771, 751, 0, 19, 0,
	0, 69, 1652, 1655, 676, 0, 673, 119, 0, 0,
	0, 0, 640, 651, 634, 625, 674, 726, 727, 140,
	135, 969, 121, 0, 1037, 0, 1418, 0, 1379, 1378,
	1372, 0, 0, 695, 0, 0, 902, 1121, 0, 1027,
	0, 1123, 1664, 1664, 0, 902, 924, 913, 0, 955,
	956, 0, 445, 446, 0, 449, 455, 926, 927, 0,
	0, 939, 0, 0, 0, 0, 1006, 1020, 0, 0,
	0, -2, 0, -2, 1066, 0, 1058, 0, 1050, 0,
	1053, 764, 764, -2, 605, 610, 0, 538, 1066, 410,
	1227, -2, 1240, 1242, 0, 1019, 1245, 1246, 0, 0,
	0, 0, 0, 0, 1290, 1254, 0, 0, 1258, 1259,
	1260, 0, 0, 1263, 0, 1572, 1573, 0, 1267, 0,
	0, 0, 0, 0, 0, 0, 1207, 369, 370, 0,
	372, 373, 1265, 412, 1664, 382, 1165, 1168, 1169, 431,
	428, 429, 931, 934, 631, 711, 293, 294, 802, 0,
	795, 825, 822, 0, 0, 886, 761, 763, 70, 75,
	0, 0, 678, 0, 675, 0, 669, 671, 129, 639,
	676, 91, 112, 0, 0, 1407, 1457, 1382, 0, 1373,
	0, 1367, 1368, 1369, 1374, 698, 693, 0, 888, 895,
	909, 1025, 1189, 1122, 0, 0, 0, 1121, 894, 0,
	0, 442, 447, 0, 450, 451, 0, 929, 930, 0,
	937, 0, 0, 994, 1643, 0, 1015, 1016, 1180, 1181,
	1017, 1118, 1119, 1120, 1076, -2, 1129, 0, 1031, 121,
	1076, 1054, 0, 1061, 0, 1059, 1052, 716, 606, 1063,
	1241, 1243, 1244, 1247, 1248, 1249, 1295, 1296, 1297, 0,
	0, 1252, 1292, 1293, 1294, 1253, 0, 0, 0, 0,
	0, 1570, 1571, 1288, 0, 0, 1214, 1216, 1217, 1218,
	1219, 1220, 1221, 1215, 0, 0, 0, 1206, 1208, 371,
	0, 1664, 944, 290, 0, 0, 826, 828, 823, 824,
	65, 67, 82, 0, 677, 120, 0, 678, 83, 0,
	109, 0, 122, 123, 0, 0, 0, 0, 0, 1381,
	1370, 0, 0, 0, 0, 0, 1574, 1575, 1576, 0,
	0, 0, 910, 911, 1124, 1125, 1126, 1026, 916, 0,
	918, 448, 932, 936, 939, 0, 985, 0, 722, 0,
	1078, 0, 1018, 1131, 1664, 1033, 1078, 1044, 0, 1056,
	0, 1068, 0, 1062, 711, 362, 0, 1065, 1250, 1251,
	0, 0, 1473, 1664, 0, 1283, 0, 985, 985, 985,
	985, 0, 381, 0, 803, 817, 0, 0, 0, 667,
	92, 96, 0, 118, 115, 0, 124, 0, 0, 0,
	0, 1035, 0, 1359, 0, 0, 0, 1363, 1364, 1365,
	1366, 0, 887, 0, 917, 938, 940, 984, 995, 996,
	722, 1030, 0, 1115, 1130, 0, 1032, 1055, 1067, 0,
	1070, 604, 1064, 1291, 0, 1257, 0, 1262, 1271, 1284,
	0, 0, 1195, 0, 1197, 0, 1201, 0, 1203, 0,
	0, 383, 827, 829, 0, 680, 670, 85, 0, 0,
	113, 114, 116, 0, 125, 0, 127, 128, 0, 1360,
	1361, 1362, 0, 889, 890, 903, 986, 1664, 1664, 0,
	0, 0, 992, 993, 997, 0, 1103, 0, 0, 1109,
	0, 1116, 1135, 1069, 1255, 1261, 1270, 1272, 1273, 0,
	1285, 1286, 1287, 1289, 985, 985, 985, 985, 1205, 679,
	0, 1043, 0, 97, 0, 99, 101, 102, 1228, 110,
	111, 117, 126, 1371, 891, 0, 0, 989, 990, 0,
	1079, 0, 1081, 0, 0, 0, 0, 0, 1113, 0,
	1256, 1274, 0, 1275, 0, 0, 0, 1196, 1198, 1202,
	1204, 681, 86, 87, 0, 98, 0, 0, 876, 892,
	0, 987, 988, 991, 0, 1083, 0, 1104, 0, 0,
	0, 0, 0, 0, 0, 1276, 1278, 1279, 0, 0,
	1277, 0, 0, 100, 1229, 893, 1080, 1077, 0, 1115,
	1105, 0, 1107, 0, 0, 0, 0, 1280, 1282, 1281,
	88, 89, 90, 0, 0, 1085, 0, 1101, 1106, 1108,
	1110, 0, 1114, 1112, 1230, 1084, 0, 1097, 1082, 0,
	1111, 1086, -2, 0, 1102, 1087, -2, 0, 1095, 0,
	0, 1088, 1096, 0, 1091, 0, 0, 0, 1090, 0,
	-2, 1098, 0, 0, 1092, -2, 0, 1100, 1099,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 616, 613,
	123, 122, 124, 3, 617, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 614, 135, 615, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:783
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:790
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:796
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:804
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:810
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:814
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:829
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:833
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:839
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:844
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:848
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:880
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:888
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:896
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:906
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:926
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:932
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:939
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:947
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:953
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:962
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:972
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:980
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:988
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:996
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1006
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1014
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1024
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1031
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1040
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1050
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1054
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1060
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1064
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1070
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1079
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1089
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1093
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1099
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1108
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1112
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1118
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1139
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1152
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1159
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1163
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1169
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1173
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1179
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1186
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1194
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1198
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1212
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1216
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1220
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1225
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1229
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1233
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1239
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1248
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1259
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1263
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1269
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1273
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1279
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1283
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1289
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1313
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1332
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1336
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1340
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1345
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1349
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1356
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1364
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1371
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1376
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1383
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1388
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1392
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1416
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1420
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1426
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1432
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1450
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1467
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1490
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1494
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1498
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1503
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1507
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1513
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1526
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1537
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1550
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1554
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1564
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1577
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1590
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1596
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1602
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1609
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1617
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1626
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1630
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1634
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1638
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1642
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1646
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1653
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1657
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1663
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1670
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1679
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1683
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1693
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1697
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1705
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1709
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1721
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1725
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1729
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1741
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1745
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1749
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1753
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1757
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1769
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1773
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1785
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1789
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1793
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1797
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1801
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1805
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1813
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1817
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1821
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1825
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1841
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1845
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1849
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1853
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1857
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1861
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1865
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1869
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1873
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1877
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1881
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1885
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1898
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1905
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1912
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1922
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1926
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1932
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1939
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1947
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1951
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1955
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1959
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1965
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1969
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1975
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1982
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1989
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1998
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2028
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2032
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2036
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2042
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2048
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2052
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2059
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2065
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2069
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2075
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2083
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2092
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2101
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2109
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2117
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2140
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2163
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2170
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2177
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2185
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2192
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2199
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2208
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2212
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2216
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2222
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2226
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2232
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2236
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2242
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2246
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2257
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2263
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2268
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2272
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2276
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2280
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2284
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2288
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2292
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2296
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2300
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2306
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2310
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2314
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2318
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2323
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2328
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2334
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2341
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2347
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2354
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2361
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2371
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2378
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2389
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2400
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2404
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2410
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2420
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2426
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2430
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2436
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2442
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2446
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2450
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2454
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2460
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2472
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2478
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2482
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2488
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2492
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2498
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2504
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2515
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2521
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2525
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2529
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2533
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2537
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2541
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2549
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2557
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2567
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2608
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2612
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2618
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2624
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2629
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2630
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2631
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2636
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2653
		{
			yyLOCAL = &tree.AlterSequence{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].alterTypeOptionUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].cycleOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2669
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2680
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2689
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2693
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2699
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2706
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2715
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2725
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2734
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2744
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2754
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2763
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2771
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2775
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2779
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2783
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2787
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2796
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2802
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2806
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2810
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2814
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2818
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2822
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2826
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2830
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2835
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2866
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2870
		{
			yyVAL.str = string("COLUMN")
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2875
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2881
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2887
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2896
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2900
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2906
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2913
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2921
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2928
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2935
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2942
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2949
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2956
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2964
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2971
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2978
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2987
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2991
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2998
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3010
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3018
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3026
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3039
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3045
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3056
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3071
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3076
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3080
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3085
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3089
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3105
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3109
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3113
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3117
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3121
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3125
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3129
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3133
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3137
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3141
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3145
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3149
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3153
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3157
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3161
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3165
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3171
		{
			yyVAL.item = nil
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3176
		{
			yyVAL.item = nil
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3217
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3223
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3231
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3235
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3239
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3248
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3252
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3258
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3263
		{
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3267
		{
		}
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3272
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3282
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3292
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3300
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3306
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3312
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3318
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3324
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3330
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3336
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3345
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3349
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3353
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3357
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3361
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3365
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3369
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3373
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3379
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: yyDollar[4].unresolvedObjectNameUnion(),
				DbName:    yyDollar[5].str,
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3388
		{
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3390
		{
		}
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3399
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3409
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3418
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3422
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3426
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3432
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3438
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3444
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3450
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3459
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3469
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3481
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3485
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3491
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3503
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3517
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3523
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3530
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3535
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3539
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3543
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3548
		{
			yyVAL.str = ""
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3552
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3558
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3571
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3575
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3581
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3586
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3590
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3594
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3600
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3606
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3610
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3616
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3622
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3626
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3630
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3636
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3640
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3665
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3674
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3683
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3692
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3696
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3702
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3711
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3720
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3730
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3734
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3740
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3746
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3752
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3756
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3762
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3768
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3777
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3784
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3795
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3800
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3807
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3823
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3836
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3847
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3851
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3857
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3862
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3869
		{
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3871
		{
		}
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3874
		{
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3883
		{
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3887
		{
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3892
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3901
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3908
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3914
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3922
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3929
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3936
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3956
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3966
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3970
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3976
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3983
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3989
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3997
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4004
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4011
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4030
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4034
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4038
		{
			yyLOCAL = []*tree.UpdateExpr{nil}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4043
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4047
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4051
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4057
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4066
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4070
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4076
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4080
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4086
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4090
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4096
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4101
		{
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4105
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4112
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4116
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4123
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4128
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4132
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4138
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4142
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4148
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4152
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4157
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4161
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4174
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4181
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4188
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4206
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4225
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4231
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4238
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4242
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4255
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4259
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4264
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4268
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4275
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4280
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4287
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4293
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4297
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4301
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4305
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), TimeWindow: yyDollar[3].timeWindowUnion(), OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Ep: yyDollar[6].exportParmUnion(), SelectLockInfo: yyDollar[7].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4309
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4313
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4318
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4322
		{
			yyLOCAL = yyDollar[1].timeWindowUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4328
		{
			yyLOCAL = &tree.TimeWindow{
				Interval: yyDollar[1].timeIntervalUnion(),
				Sliding:  yyDollar[2].timeSlidingUnion(),
				Fill:     yyDollar[3].timeFillUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.Interval
//line mysql_sql.y:4338
		{
			str := fmt.Sprintf("%v", yyDollar[5].item)
			v, errStr := util.GetInt64(yyDollar[5].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			yyLOCAL = &tree.Interval{
				Col:  yyDollar[3].unresolvedNameUnion(),
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Sliding
//line mysql_sql.y:4353
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Sliding
//line mysql_sql.y:4357
		{
			str := fmt.Sprintf("%v", yyDollar[3].item)
			v, errStr := util.GetInt64(yyDollar[3].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			yyLOCAL = &tree.Sliding{
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[5].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4371
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4375
		{
			yyLOCAL = &tree.Fill{
				Mode: yyDollar[3].fillModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4381
		{
			yyLOCAL = &tree.Fill{
				Mode: tree.FillValue,
				Val:  yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4390
		{
			yyLOCAL = tree.FillPrev
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4394
		{
			yyLOCAL = tree.FillNext
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4398
		{
			yyLOCAL = tree.FillNone
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4402
		{
			yyLOCAL = tree.FillNull
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4406
		{
			yyLOCAL = tree.FillLinear
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4412
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4419
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4428
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4432
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4438
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4446
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4450
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4455
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4459
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4465
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4469
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4473
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4478
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4482
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4488
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4494
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4498
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4504
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4509
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4513
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4517
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4522
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4526
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4530
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4535
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4539
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4547
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4551
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4555
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4569
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4573
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4583
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4593
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4603
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4615
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4623
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4631
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4640
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4648
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4656
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4664
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4672
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4680
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4688
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4696
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4704
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4714
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4725
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4739
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4743
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4747
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4752
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4756
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4760
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4769
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4773
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4778
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4782
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4791
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4797
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4801
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4807
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4811
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4816
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4820
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4825
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4833
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4839
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4847
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4855
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4865
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4871
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4880
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4889
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4898
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4908
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4912
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4922
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4926
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4930
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4934
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4940
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4950
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4954
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4960
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4966
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4970
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4976
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4982
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4986
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4990
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4996
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5000
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5006
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5010
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:5016
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:5020
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5026
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5030
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5040
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5053
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:5059
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5065
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:5078
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5089
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5096
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5100
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:5106
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5116
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5120
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5124
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5129
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5133
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5137
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5141
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5146
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5150
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5154
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5158
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5162
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5167
		{
			yyVAL.str = ""
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5171
		{
			yyVAL.str = yyDollar[1].str
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5175
		{
			yyVAL.str = yyDollar[2].str
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5181
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5187
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5191
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5195
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5199
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5203
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5209
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 860:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5248
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5258
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5264
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 863:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5270
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5280
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5285
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5291
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5298
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5302
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5308
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5314
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5319
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5323
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5327
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5331
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5338
		{
			if yyDollar[13].str == "" {
				yylex.Error("no function body error")
				return 1
			}
			if yyDollar[11].str == "python" && yyDollar[14].str == "" {
				yylex.Error("no handler error")
				return 1
			}

			yyLOCAL = &tree.CreateFunction{
				Replace:    yyDollar[2].streamOptionalUnion(),
				Name:       yyDollar[4].functionNameUnion(),
				Args:       yyDollar[6].funcArgsUnion(),
				ReturnType: yyDollar[9].funcReturnUnion(),
				Language:   yyDollar[11].str,
				Import:     yyDollar[12].boolValUnion(),
				Body:       yyDollar[13].str,
				Handler:    yyDollar[14].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5362
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5367
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5373
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5380
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5384
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5390
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5396
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5400
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5404
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5410
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5416
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5422
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5426
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5432
		{
			yyVAL.str = ""
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5439
		{
			yyVAL.str = yyDollar[2].str
		}
	case 894:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5445
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5454
		{
			yyLOCAL = &tree.CreateView{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5466
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5478
		{
			yyVAL.str = yyDollar[1].str
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5482
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5488
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5492
		{
			yyVAL.str = "DEFINER = "
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5496
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5501
		{
			yyVAL.str = ""
		}
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5505
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5519
		{
			yyVAL.str = ""
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5527
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5533
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5543
		{
			yyVAL.str = yyDollar[1].str
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5547
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5553
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5560
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5566
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5574
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5580
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5587
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5594
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5602
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5608
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5617
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5629
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5641
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5653
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5659
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5666
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5674
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5680
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5688
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5694
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5702
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5708
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5717
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5721
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5726
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5730
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5737
		{
			yyVAL.str = yyDollar[3].str
		}
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5742
		{
			yyVAL.str = ""
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5746
		{
			yyVAL.str = yyDollar[2].str
		}
	case 944:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5752
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5766
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5776
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5780
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5786
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5792
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5798
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5807
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5816
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5825
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5830
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5836
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5844
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5950
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5954
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5960
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5970
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5974
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5980
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5990
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5994
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5998
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6003
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6007
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6013
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6020
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6026
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6035
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6042
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:6051
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:6055
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:6061
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6075
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6079
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6083
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6088
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6092
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6096
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6100
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6106
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			} else {
				io = &tree.IndexOption{IType: tree.INDEX_TYPE_INVALID}
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6127
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6131
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				} else if opt2.AlgoParamList > 0 {
					opt1.AlgoParamList = opt2.AlgoParamList
				} else if len(opt2.AlgoParamVectorSimilarityFn) > 0 {
					opt1.AlgoParamVectorSimilarityFn = opt2.AlgoParamVectorSimilarityFn
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6157
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6161
		{
			yyLOCAL = &tree.IndexOption{AlgoParamList: int64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6165
		{
			yyLOCAL = &tree.IndexOption{AlgoParamVectorSimilarityFn: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6169
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6173
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6177
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6181
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6187
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6191
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6197
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6202
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6207
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6211
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6215
		{
			yyLOCAL = tree.INDEX_TYPE_IVFFLAT
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6219
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6223
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6227
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6233
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6244
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6248
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6258
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6262
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6267
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6271
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6277
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6281
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6287
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6291
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6295
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6300
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6304
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6310
		{
			yyLOCAL = &tree.CreateConnector{
				TableName: yyDollar[4].tableNameUnion(),
				Options:   yyDollar[7].connectorOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6319
		{
			yyLOCAL = &tree.ShowConnectors{}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6325
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.PauseDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6343
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.CancelDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6361
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.ResumeDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6379
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6390
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6401
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6412
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6416
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6422
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6434
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6443
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6456
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6463
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6473
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6483
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6491
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6500
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					StageName: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6510
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6514
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6519
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6523
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6530
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6541
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6554
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6568
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6572
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6576
		{
			yyLOCAL = &tree.TypeOption{
				Type: yyDollar[2].columnTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6582
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6586
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6593
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6600
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6607
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6614
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6618
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6622
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6626
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6630
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6637
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6644
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6648
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6655
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6662
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6666
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6672
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6678
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6682
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6689
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6696
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6703
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6710
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6714
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6719
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6723
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6727
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6732
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6736
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6746
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6750
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6757
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6764
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6768
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6777
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6781
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6787
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6791
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6797
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6806
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6816
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6820
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6826
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6830
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6836
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6843
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6852
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6856
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6861
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6865
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6870
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6874
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6879
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6883
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6893
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6897
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6908
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6916
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6924
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6932
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6943
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6952
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6962
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6972
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6976
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6981
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6985
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:6991
		{
			yyLOCAL = []*tree.ConnectorOption{yyDollar[1].connectorOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:6995
		{
			yyLOCAL = append(yyDollar[1].connectorOptionsUnion(), yyDollar[3].connectorOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:7001
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:7005
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7010
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7014
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7020
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7024
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7030
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7034
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7039
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7043
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7049
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7053
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7057
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7063
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7067
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7071
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7075
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7079
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7083
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7087
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7092
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7096
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7100
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7104
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7108
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7112
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7116
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7120
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7124
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7128
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7132
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7136
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7140
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7144
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7148
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7152
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7156
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7160
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7164
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7168
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7172
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7176
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7180
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7184
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7188
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7192
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7196
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7200
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7206
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7210
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:7216
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7222
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7226
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7232
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7236
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7240
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7244
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7248
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7252
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7266
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7270
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7279
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7284
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7290
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7297
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7301
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7307
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7311
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7315
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7321
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7325
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7331
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7340
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7349
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7378
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7409
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7423
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7429
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7438
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7447
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7456
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7465
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7475
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7483
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7489
		{
			yyVAL.str = ""
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7493
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7503
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7509
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7515
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7535
		{
			yyVAL.str = ""
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7539
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7545
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7551
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7555
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7559
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7565
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7569
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7573
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7577
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7583
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7587
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7591
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7596
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7600
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7606
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7610
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7616
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7620
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7624
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7628
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7632
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7636
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7641
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7645
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7649
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7653
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7657
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7661
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7665
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7669
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7673
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7677
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7690
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7694
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7698
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7702
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7706
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7710
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7716
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7720
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7725
		{
			yyVAL.str = ""
		}
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7729
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7735
		{
			yyVAL.str = ""
		}
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7739
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1270:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7745
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7757
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7764
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7771
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7778
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7785
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7794
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7800
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7806
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7810
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7814
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7818
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7822
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7827
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7834
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7838
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7842
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7847
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7851
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7856
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7860
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7876
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7882
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7886
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7890
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7894
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7898
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7902
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7906
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7910
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7914
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7918
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7922
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7926
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7930
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7936
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7940
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7944
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7948
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7952
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7956
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7960
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7964
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7968
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7972
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7976
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7980
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7985
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7993
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7997
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8001
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8005
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8014
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8018
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8022
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8026
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8030
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8036
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8044
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8052
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8061
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8065
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8070
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8074
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:8080
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:8084
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:8090
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8099
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8111
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8128
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8145
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8158
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8171
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8183
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8197
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8212
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8227
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8244
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8259
		{
		}
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8266
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8270
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8274
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8280
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8284
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8288
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8292
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8298
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8302
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8306
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8312
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8320
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8330
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8334
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8341
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8346
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8350
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8355
		{
			yyVAL.str = ","
		}
	case 1378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8359
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1379:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8364
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8371
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8397
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8408
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8418
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8428
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8438
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8447
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8456
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8466
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8476
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8486
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8496
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8506
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8516
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8526
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8536
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8546
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8556
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8566
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8576
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8595
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8603
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8611
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8619
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8627
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8637
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8645
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8654
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8662
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8670
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8678
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8686
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8697
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8707
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8719
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8730
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8752
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8788
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8800
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8812
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8823
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8831
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8838
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8845
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8857
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8865
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8875
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8885
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8893
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8904
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8913
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8922
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8930
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8940
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8948
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8958
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8962
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8968
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8972
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8991
		{
		}
	case 1484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8993
		{
		}
	case 1518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9034
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9045
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9049
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9053
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:9059
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9064
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9068
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9074
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9078
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9085
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9089
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9093
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9101
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9105
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9109
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9113
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9119
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9123
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9127
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9131
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9135
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9139
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9143
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9147
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9151
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9155
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9163
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9167
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9171
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9175
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9179
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9183
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9187
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9191
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9195
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9199
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9205
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9209
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9215
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9219
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9226
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9230
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9234
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9240
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9244
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9248
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9252
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9256
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9260
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9264
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9270
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9274
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9278
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9282
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9288
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9301
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9306
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9312
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9316
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9329
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9334
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9338
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9342
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9346
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9350
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9357
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9361
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9375
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9379
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9386
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9397
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9402
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9408
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9420
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9432
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9444
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9457
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9470
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9483
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9496
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9509
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9522
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9535
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9548
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9561
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9574
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9589
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9616
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9658
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9694
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9730
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9747
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9759
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9779
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9799
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9819
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9835
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9848
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9861
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9874
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9887
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9899
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9911
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9923
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9935
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9947
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9959
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9971
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9983
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9995
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10008
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10021
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10034
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10047
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10062
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10070
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10079
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10089
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:10112
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:10117
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10123
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10130
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10134
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10139
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10143
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10149
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10155
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10162
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1652:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10169
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1653:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10178
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10185
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1655:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10192
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10201
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10205
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10209
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1659:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10215
		{
		}
	case 1660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10217
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10227
		{
			yyVAL.str = ""
		}
	case 1665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:10231
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
