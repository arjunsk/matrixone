// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const VECF32 = 57530
const VECF64 = 57531
const GEOMETRY = 57532
const POINT = 57533
const LINESTRING = 57534
const POLYGON = 57535
const GEOMETRYCOLLECTION = 57536
const MULTIPOINT = 57537
const MULTILINESTRING = 57538
const MULTIPOLYGON = 57539
const INT1 = 57540
const INT2 = 57541
const INT3 = 57542
const INT4 = 57543
const INT8 = 57544
const S3OPTION = 57545
const STAGEOPTION = 57546
const SQL_SMALL_RESULT = 57547
const SQL_BIG_RESULT = 57548
const SQL_BUFFER_RESULT = 57549
const LOW_PRIORITY = 57550
const HIGH_PRIORITY = 57551
const DELAYED = 57552
const CREATE = 57553
const ALTER = 57554
const DROP = 57555
const RENAME = 57556
const ANALYZE = 57557
const ADD = 57558
const RETURNS = 57559
const SCHEMA = 57560
const TABLE = 57561
const SEQUENCE = 57562
const INDEX = 57563
const VIEW = 57564
const TO = 57565
const IGNORE = 57566
const IF = 57567
const PRIMARY = 57568
const COLUMN = 57569
const CONSTRAINT = 57570
const SPATIAL = 57571
const FULLTEXT = 57572
const FOREIGN = 57573
const KEY_BLOCK_SIZE = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const MAXVALUE = 57583
const PARTITION = 57584
const REORGANIZE = 57585
const LESS = 57586
const THAN = 57587
const PROCEDURE = 57588
const TRIGGER = 57589
const STATUS = 57590
const VARIABLES = 57591
const ROLE = 57592
const PROXY = 57593
const AVG_ROW_LENGTH = 57594
const STORAGE = 57595
const DISK = 57596
const MEMORY = 57597
const CHECKSUM = 57598
const COMPRESSION = 57599
const DATA = 57600
const DIRECTORY = 57601
const DELAY_KEY_WRITE = 57602
const ENCRYPTION = 57603
const ENGINE = 57604
const MAX_ROWS = 57605
const MIN_ROWS = 57606
const PACK_KEYS = 57607
const ROW_FORMAT = 57608
const STATS_AUTO_RECALC = 57609
const STATS_PERSISTENT = 57610
const STATS_SAMPLE_PAGES = 57611
const DYNAMIC = 57612
const COMPRESSED = 57613
const REDUNDANT = 57614
const COMPACT = 57615
const FIXED = 57616
const COLUMN_FORMAT = 57617
const AUTO_RANDOM = 57618
const ENGINE_ATTRIBUTE = 57619
const SECONDARY_ENGINE_ATTRIBUTE = 57620
const INSERT_METHOD = 57621
const RESTRICT = 57622
const CASCADE = 57623
const ACTION = 57624
const PARTIAL = 57625
const SIMPLE = 57626
const CHECK = 57627
const ENFORCED = 57628
const RANGE = 57629
const LIST = 57630
const ALGORITHM = 57631
const LINEAR = 57632
const PARTITIONS = 57633
const SUBPARTITION = 57634
const SUBPARTITIONS = 57635
const CLUSTER = 57636
const TYPE = 57637
const ANY = 57638
const SOME = 57639
const EXTERNAL = 57640
const LOCALFILE = 57641
const URL = 57642
const PREPARE = 57643
const DEALLOCATE = 57644
const RESET = 57645
const EXTENSION = 57646
const INCREMENT = 57647
const CYCLE = 57648
const MINVALUE = 57649
const PUBLICATION = 57650
const SUBSCRIPTIONS = 57651
const PUBLICATIONS = 57652
const PROPERTIES = 57653
const PARSER = 57654
const VISIBLE = 57655
const INVISIBLE = 57656
const BTREE = 57657
const HASH = 57658
const RTREE = 57659
const BSI = 57660
const IVFFLAT = 57661
const ZONEMAP = 57662
const LEADING = 57663
const BOTH = 57664
const TRAILING = 57665
const UNKNOWN = 57666
const LISTS = 57667
const OP_TYPE = 57668
const REINDEX = 57669
const EXPIRE = 57670
const ACCOUNT = 57671
const ACCOUNTS = 57672
const UNLOCK = 57673
const DAY = 57674
const NEVER = 57675
const PUMP = 57676
const MYSQL_COMPATIBILITY_MODE = 57677
const MODIFY = 57678
const CHANGE = 57679
const SECOND = 57680
const ASCII = 57681
const COALESCE = 57682
const COLLATION = 57683
const HOUR = 57684
const MICROSECOND = 57685
const MINUTE = 57686
const MONTH = 57687
const QUARTER = 57688
const REPEAT = 57689
const REVERSE = 57690
const ROW_COUNT = 57691
const WEEK = 57692
const REVOKE = 57693
const FUNCTION = 57694
const PRIVILEGES = 57695
const TABLESPACE = 57696
const EXECUTE = 57697
const SUPER = 57698
const GRANT = 57699
const OPTION = 57700
const REFERENCES = 57701
const REPLICATION = 57702
const SLAVE = 57703
const CLIENT = 57704
const USAGE = 57705
const RELOAD = 57706
const FILE = 57707
const TEMPORARY = 57708
const ROUTINE = 57709
const EVENT = 57710
const SHUTDOWN = 57711
const NULLX = 57712
const AUTO_INCREMENT = 57713
const APPROXNUM = 57714
const SIGNED = 57715
const UNSIGNED = 57716
const ZEROFILL = 57717
const ENGINES = 57718
const LOW_CARDINALITY = 57719
const AUTOEXTEND_SIZE = 57720
const ADMIN_NAME = 57721
const RANDOM = 57722
const SUSPEND = 57723
const ATTRIBUTE = 57724
const HISTORY = 57725
const REUSE = 57726
const CURRENT = 57727
const OPTIONAL = 57728
const FAILED_LOGIN_ATTEMPTS = 57729
const PASSWORD_LOCK_TIME = 57730
const UNBOUNDED = 57731
const SECONDARY = 57732
const RESTRICTED = 57733
const USER = 57734
const IDENTIFIED = 57735
const CIPHER = 57736
const ISSUER = 57737
const X509 = 57738
const SUBJECT = 57739
const SAN = 57740
const REQUIRE = 57741
const SSL = 57742
const NONE = 57743
const PASSWORD = 57744
const SHARED = 57745
const EXCLUSIVE = 57746
const MAX_QUERIES_PER_HOUR = 57747
const MAX_UPDATES_PER_HOUR = 57748
const MAX_CONNECTIONS_PER_HOUR = 57749
const MAX_USER_CONNECTIONS = 57750
const FORMAT = 57751
const VERBOSE = 57752
const CONNECTION = 57753
const TRIGGERS = 57754
const PROFILES = 57755
const LOAD = 57756
const INLINE = 57757
const INFILE = 57758
const TERMINATED = 57759
const OPTIONALLY = 57760
const ENCLOSED = 57761
const ESCAPED = 57762
const STARTING = 57763
const LINES = 57764
const ROWS = 57765
const IMPORT = 57766
const DISCARD = 57767
const JSONTYPE = 57768
const MODUMP = 57769
const OVER = 57770
const PRECEDING = 57771
const FOLLOWING = 57772
const GROUPS = 57773
const DATABASES = 57774
const TABLES = 57775
const SEQUENCES = 57776
const EXTENDED = 57777
const FULL = 57778
const PROCESSLIST = 57779
const FIELDS = 57780
const COLUMNS = 57781
const OPEN = 57782
const ERRORS = 57783
const WARNINGS = 57784
const INDEXES = 57785
const SCHEMAS = 57786
const NODE = 57787
const LOCKS = 57788
const ROLES = 57789
const TABLE_NUMBER = 57790
const COLUMN_NUMBER = 57791
const TABLE_VALUES = 57792
const TABLE_SIZE = 57793
const NAMES = 57794
const GLOBAL = 57795
const PERSIST = 57796
const SESSION = 57797
const ISOLATION = 57798
const LEVEL = 57799
const READ = 57800
const WRITE = 57801
const ONLY = 57802
const REPEATABLE = 57803
const COMMITTED = 57804
const UNCOMMITTED = 57805
const SERIALIZABLE = 57806
const LOCAL = 57807
const EVENTS = 57808
const PLUGINS = 57809
const CURRENT_TIMESTAMP = 57810
const DATABASE = 57811
const CURRENT_TIME = 57812
const LOCALTIME = 57813
const LOCALTIMESTAMP = 57814
const UTC_DATE = 57815
const UTC_TIME = 57816
const UTC_TIMESTAMP = 57817
const REPLACE = 57818
const CONVERT = 57819
const SEPARATOR = 57820
const TIMESTAMPDIFF = 57821
const CURRENT_DATE = 57822
const CURRENT_USER = 57823
const CURRENT_ROLE = 57824
const SECOND_MICROSECOND = 57825
const MINUTE_MICROSECOND = 57826
const MINUTE_SECOND = 57827
const HOUR_MICROSECOND = 57828
const HOUR_SECOND = 57829
const HOUR_MINUTE = 57830
const DAY_MICROSECOND = 57831
const DAY_SECOND = 57832
const DAY_MINUTE = 57833
const DAY_HOUR = 57834
const YEAR_MONTH = 57835
const SQL_TSI_HOUR = 57836
const SQL_TSI_DAY = 57837
const SQL_TSI_WEEK = 57838
const SQL_TSI_MONTH = 57839
const SQL_TSI_QUARTER = 57840
const SQL_TSI_YEAR = 57841
const SQL_TSI_SECOND = 57842
const SQL_TSI_MINUTE = 57843
const RECURSIVE = 57844
const CONFIG = 57845
const DRAINER = 57846
const SOURCE = 57847
const STREAM = 57848
const HEADERS = 57849
const CONNECTOR = 57850
const CONNECTORS = 57851
const DAEMON = 57852
const PAUSE = 57853
const CANCEL = 57854
const TASK = 57855
const RESUME = 57856
const MATCH = 57857
const AGAINST = 57858
const BOOLEAN = 57859
const LANGUAGE = 57860
const WITH = 57861
const QUERY = 57862
const EXPANSION = 57863
const WITHOUT = 57864
const VALIDATION = 57865
const ADDDATE = 57866
const BIT_AND = 57867
const BIT_OR = 57868
const BIT_XOR = 57869
const CAST = 57870
const COUNT = 57871
const APPROX_COUNT = 57872
const APPROX_COUNT_DISTINCT = 57873
const APPROX_PERCENTILE = 57874
const CURDATE = 57875
const CURTIME = 57876
const DATE_ADD = 57877
const DATE_SUB = 57878
const EXTRACT = 57879
const GROUP_CONCAT = 57880
const MAX = 57881
const MID = 57882
const MIN = 57883
const NOW = 57884
const POSITION = 57885
const SESSION_USER = 57886
const STD = 57887
const STDDEV = 57888
const MEDIAN = 57889
const CLUSTER_CENTERS = 57890
const SPHERICAL_KMEANS = 57891
const STDDEV_POP = 57892
const STDDEV_SAMP = 57893
const SUBDATE = 57894
const SUBSTR = 57895
const SUBSTRING = 57896
const SUM = 57897
const SYSDATE = 57898
const SYSTEM_USER = 57899
const TRANSLATE = 57900
const TRIM = 57901
const VARIANCE = 57902
const VAR_POP = 57903
const VAR_SAMP = 57904
const AVG = 57905
const RANK = 57906
const ROW_NUMBER = 57907
const DENSE_RANK = 57908
const BIT_CAST = 57909
const NEXTVAL = 57910
const SETVAL = 57911
const CURRVAL = 57912
const LASTVAL = 57913
const ARROW = 57914
const ROW = 57915
const OUTFILE = 57916
const HEADER = 57917
const MAX_FILE_SIZE = 57918
const FORCE_QUOTE = 57919
const PARALLEL = 57920
const UNUSED = 57921
const BINDINGS = 57922
const DO = 57923
const DECLARE = 57924
const LOOP = 57925
const WHILE = 57926
const LEAVE = 57927
const ITERATE = 57928
const UNTIL = 57929
const CALL = 57930
const PREV = 57931
const SLIDING = 57932
const FILL = 57933
const SPBEGIN = 57934
const BACKEND = 57935
const SERVERS = 57936
const HANDLER = 57937
const PERCENT = 57938
const SAMPLE = 57939
const KILL = 57940
const BACKUP = 57941
const FILESYSTEM = 57942
const QUERY_RESULT = 57943

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"STAGEOPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"IVFFLAT",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"LISTS",
	"OP_TYPE",
	"REINDEX",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"JSONTYPE",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"CONNECTORS",
	"DAEMON",
	"PAUSE",
	"CANCEL",
	"TASK",
	"RESUME",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"CLUSTER_CENTERS",
	"SPHERICAL_KMEANS",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"PREV",
	"SLIDING",
	"FILL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"HANDLER",
	"PERCENT",
	"SAMPLE",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10805

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 117,
	11, 691,
	21, 691,
	-2, 684,
	-1, 137,
	236, 1075,
	238, 981,
	-2, 1029,
	-1, 161,
	42, 520,
	238, 520,
	265, 527,
	266, 527,
	460, 520,
	-2, 553,
	-1, 200,
	622, 1807,
	-2, 436,
	-1, 553,
	317, 133,
	432, 133,
	433, 133,
	-2, 1712,
	-1, 618,
	81, 1504,
	-2, 1862,
	-1, 619,
	81, 1522,
	-2, 1833,
	-1, 623,
	81, 1523,
	-2, 1861,
	-1, 651,
	81, 1434,
	-2, 1934,
	-1, 652,
	81, 1435,
	-2, 1933,
	-1, 653,
	81, 1436,
	-2, 1923,
	-1, 654,
	81, 1895,
	-2, 1916,
	-1, 655,
	81, 1896,
	-2, 1917,
	-1, 656,
	81, 1897,
	-2, 1925,
	-1, 657,
	81, 1898,
	-2, 1905,
	-1, 658,
	81, 1899,
	-2, 1914,
	-1, 659,
	81, 1900,
	-2, 1926,
	-1, 660,
	81, 1901,
	-2, 1927,
	-1, 661,
	81, 1902,
	-2, 1932,
	-1, 662,
	81, 1903,
	-2, 1937,
	-1, 663,
	81, 1904,
	-2, 1938,
	-1, 665,
	81, 1501,
	-2, 1698,
	-1, 669,
	81, 1506,
	-2, 1713,
	-1, 672,
	81, 1510,
	-2, 1731,
	-1, 676,
	81, 1514,
	-2, 1776,
	-1, 677,
	81, 1515,
	-2, 1857,
	-1, 685,
	81, 1525,
	-2, 1842,
	-1, 686,
	81, 1526,
	-2, 1887,
	-1, 687,
	81, 1527,
	-2, 1852,
	-1, 688,
	81, 1528,
	-2, 1877,
	-1, 699,
	81, 1412,
	-2, 1928,
	-1, 700,
	81, 1413,
	-2, 1929,
	-1, 701,
	81, 1414,
	-2, 1930,
	-1, 786,
	455, 553,
	456, 553,
	-2, 521,
	-1, 832,
	122, 1698,
	133, 1698,
	153, 1698,
	-2, 1672,
	-1, 941,
	21, 718,
	-2, 667,
	-1, 1042,
	11, 691,
	21, 691,
	-2, 1302,
	-1, 1117,
	21, 718,
	-2, 667,
	-1, 1429,
	81, 1572,
	-2, 1859,
	-1, 1430,
	81, 1573,
	-2, 1860,
	-1, 1571,
	82, 867,
	-2, 873,
	-1, 1977,
	105, 1019,
	149, 1019,
	188, 1019,
	191, 1019,
	278, 1019,
	-2, 1012,
	-1, 2119,
	11, 691,
	21, 691,
	-2, 811,
	-1, 2151,
	82, 1658,
	154, 1658,
	-2, 1844,
	-1, 2152,
	82, 1658,
	154, 1658,
	-2, 1843,
	-1, 2153,
	82, 1634,
	154, 1634,
	-2, 1830,
	-1, 2154,
	82, 1635,
	154, 1635,
	-2, 1835,
	-1, 2155,
	82, 1636,
	154, 1636,
	-2, 1764,
	-1, 2156,
	82, 1637,
	154, 1637,
	-2, 1758,
	-1, 2157,
	82, 1638,
	154, 1638,
	-2, 1688,
	-1, 2158,
	82, 1639,
	154, 1639,
	-2, 1832,
	-1, 2159,
	82, 1640,
	154, 1640,
	-2, 1762,
	-1, 2160,
	82, 1641,
	154, 1641,
	-2, 1757,
	-1, 2161,
	82, 1642,
	154, 1642,
	-2, 1745,
	-1, 2162,
	82, 1658,
	154, 1658,
	-2, 1746,
	-1, 2163,
	82, 1658,
	154, 1658,
	-2, 1747,
	-1, 2165,
	82, 1647,
	154, 1647,
	-2, 1877,
	-1, 2166,
	82, 1625,
	154, 1625,
	-2, 1862,
	-1, 2167,
	82, 1656,
	154, 1656,
	-2, 1833,
	-1, 2168,
	82, 1656,
	154, 1656,
	-2, 1861,
	-1, 2169,
	82, 1656,
	154, 1656,
	-2, 1714,
	-1, 2170,
	82, 1654,
	154, 1654,
	-2, 1852,
	-1, 2171,
	82, 1651,
	154, 1651,
	-2, 1736,
	-1, 2172,
	81, 1606,
	82, 1606,
	154, 1606,
	390, 1606,
	391, 1606,
	392, 1606,
	-2, 1687,
	-1, 2173,
	81, 1607,
	82, 1607,
	154, 1607,
	390, 1607,
	391, 1607,
	392, 1607,
	-2, 1689,
	-1, 2174,
	81, 1610,
	82, 1610,
	154, 1610,
	390, 1610,
	391, 1610,
	392, 1610,
	-2, 1834,
	-1, 2175,
	81, 1612,
	82, 1612,
	154, 1612,
	390, 1612,
	391, 1612,
	392, 1612,
	-2, 1816,
	-1, 2176,
	81, 1614,
	82, 1614,
	154, 1614,
	390, 1614,
	391, 1614,
	392, 1614,
	-2, 1763,
	-1, 2177,
	81, 1616,
	82, 1616,
	154, 1616,
	390, 1616,
	391, 1616,
	392, 1616,
	-2, 1741,
	-1, 2178,
	81, 1617,
	82, 1617,
	154, 1617,
	390, 1617,
	391, 1617,
	392, 1617,
	-2, 1742,
	-1, 2179,
	81, 1619,
	82, 1619,
	154, 1619,
	390, 1619,
	391, 1619,
	392, 1619,
	-2, 1686,
	-1, 2180,
	82, 1661,
	154, 1661,
	390, 1661,
	391, 1661,
	392, 1661,
	-2, 1719,
	-1, 2181,
	82, 1661,
	154, 1661,
	390, 1661,
	391, 1661,
	392, 1661,
	-2, 1732,
	-1, 2182,
	82, 1664,
	154, 1664,
	390, 1664,
	391, 1664,
	392, 1664,
	-2, 1715,
	-1, 2183,
	82, 1664,
	154, 1664,
	390, 1664,
	391, 1664,
	392, 1664,
	-2, 1779,
	-1, 2184,
	82, 1661,
	154, 1661,
	390, 1661,
	391, 1661,
	392, 1661,
	-2, 1800,
	-1, 2371,
	105, 1019,
	149, 1019,
	188, 1019,
	191, 1019,
	278, 1019,
	-2, 1013,
	-1, 2385,
	79, 612,
	154, 612,
	-2, 1188,
	-1, 2740,
	191, 1019,
	302, 1270,
	-2, 1242,
	-1, 2895,
	105, 1019,
	149, 1019,
	188, 1019,
	191, 1019,
	-2, 1131,
	-1, 2897,
	105, 1019,
	149, 1019,
	188, 1019,
	191, 1019,
	-2, 1131,
	-1, 2908,
	79, 612,
	154, 612,
	-2, 1189,
	-1, 2916,
	191, 1019,
	302, 1270,
	-2, 1243,
	-1, 3052,
	105, 1019,
	149, 1019,
	188, 1019,
	191, 1019,
	-2, 1132,
	-1, 3446,
	82, 1093,
	154, 1093,
	-2, 1019,
	-1, 3450,
	82, 1093,
	154, 1093,
	-2, 1019,
	-1, 3464,
	82, 1097,
	154, 1097,
	-2, 1019,
	-1, 3469,
	82, 1098,
	154, 1098,
	-2, 1019,
}

const yyPrivate = 57344

const yyLast = 40654

var yyAct = [...]int{
	585, 1345, 1653, 3449, 3450, 3429, 191, 3458, 1409, 562,
	3310, 564, 3375, 587, 3398, 3336, 3318, 2759, 3319, 2999,
	3236, 2993, 572, 3221, 2234, 3093, 2930, 1198, 3212, 1075,
	2825, 3040, 615, 3240, 3131, 3039, 3037, 2826, 3120, 3168,
	466, 1335, 566, 831, 1259, 2997, 2865, 2988, 3222, 2341,
	476, 942, 481, 481, 3224, 1605, 2882, 3044, 481, 497,
	506, 3058, 2020, 506, 3051, 2388, 2917, 2711, 1412, 3016,
	2671, 2823, 2505, 2506, 2700, 2737, 1742, 2428, 2871, 1405,
	2755, 3054, 2498, 2669, 2488, 2899, 2744, 1845, 176, 1810,
	1715, 2504, 2567, 2811, 2147, 2023, 2527, 1465, 2791, 517,
	1252, 2361, 2501, 2684, 511, 2681, 2672, 1988, 2743, 2679,
	1149, 2149, 2372, 935, 555, 1707, 556, 1944, 2113, 1954,
	1945, 1757, 1739, 2610, 2718, 1324, 561, 2407, 2097, 1830,
	1607, 2217, 1819, 1818, 2540, 1551, 2200, 1331, 2051, 1841,
	762, 1811, 480, 480, 1784, 2550, 1336, 1735, 488, 1339,
	1840, 2114, 1344, 1710, 2102, 1708, 1635, 2350, 2409, 2345,
	2021, 1645, 2380, 187, 8, 466, 6, 825, 186, 7,
	1581, 1987, 2145, 887, 1403, 2269, 1842, 1268, 1875, 1298,
	565, 1361, 1968, 116, 2674, 1171, 2673, 1238, 35, 554,
	1852, 191, 1459, 191, 2016, 878, 879, 475, 1443, 26,
	2300, 1394, 55, 1817, 556, 794, 2301, 465, 573, 1814,
	14, 1305, 15, 953, 1617, 13, 1774, 32, 1800, 493,
	1402, 1616, 824, 2121, 1187, 1237, 490, 1183, 1207, 1580,
	703, 761, 1408, 1173, 1466, 1235, 36, 519, 23, 1291,
	16, 177, 1199, 10, 1297, 167, 520, 759, 744, 738,
	173, 1849, 563, 1115, 505, 3162, 2331, 1076, 502, 2331,
	875, 1859, 2331, 2885, 2818, 781, 2257, 2206, 2204, 501,
	2203, 498, 2201, 1564, 500, 1312, 499, 1308, 870, 874,
	871, 876, 175, 477, 1134, 871, 2654, 1208, 2656, 3383,
	871, 2324, 2322, 1220, 1558, 503, 1130, 2920, 1310, 2986,
	2563, 486, 1011, 1012, 1013, 1010, 1011, 1012, 1013, 1010,
	2561, 1789, 3127, 3121, 2989, 2824, 1827, 509, 3226, 1813,
	1070, 704, 2636, 2059, 174, 51, 163, 138, 715, 2340,
	174, 2326, 2342, 3179, 752, 2932, 753, 974, 2243, 8,
	1135, 174, 869, 174, 7, 3017, 174, 174, 2923, 174,
	3026, 1846, 837, 2251, 1979, 3148, 3259, 839, 2918, 1359,
	1278, 174, 1277, 2940, 2941, 1352, 1276, 843, 841, 2919,
	842, 840, 733, 174, 51, 163, 138, 3180, 174, 51,
	163, 138, 1144, 1575, 516, 747, 515, 743, 2634, 1356,
	3301, 2582, 1857, 168, 2575, 1349, 1163, 115, 1972, 168,
	1395, 1136, 3150, 1399, 1216, 989, 2924, 1217, 990, 115,
	1358, 705, 168, 2139, 813, 168, 1351, 694, 168, 693,
	695, 696, 1008, 697, 698, 706, 982, 1398, 2127, 984,
	168, 2126, 1752, 2140, 2128, 2533, 992, 716, 2534, 2535,
	1720, 1721, 168, 1565, 1566, 1719, 2218, 168, 1379, 1239,
	1001, 1241, 1205, 1206, 2347, 803, 1195, 985, 1631, 2655,
	1411, 1203, 1006, 3358, 2348, 1202, 1205, 1206, 834, 3009,
	3322, 3323, 833, 3229, 3292, 3229, 3356, 3228, 3291, 3228,
	481, 3227, 3290, 3227, 1934, 3344, 3294, 3340, 3341, 3129,
	481, 946, 2568, 1219, 3132, 3133, 3134, 3135, 3217, 2827,
	2939, 3214, 2024, 3214, 2569, 3124, 2570, 2827, 506, 506,
	1400, 481, 1143, 2346, 749, 987, 742, 1500, 2238, 1415,
	947, 1861, 956, 2444, 2872, 746, 745, 2928, 1736, 3233,
	2840, 1726, 1390, 1397, 1311, 1309, 978, 2327, 1853, 2879,
	1318, 1317, 727, 3031, 750, 2353, 734, 1797, 3298, 2925,
	2929, 2927, 2926, 2693, 1730, 2685, 2091, 809, 807, 1966,
	808, 980, 2334, 1004, 1005, 2695, 741, 3156, 2600, 1044,
	937, 2942, 2057, 983, 986, 3296, 881, 2248, 988, 835,
	944, 956, 977, 2987, 2598, 751, 2562, 2934, 2935, 137,
	740, 172, 1003, 836, 739, 2492, 939, 2689, 2094, 979,
	726, 965, 2093, 3159, 732, 3008, 2098, 550, 2690, 2691,
	552, 161, 3028, 3010, 969, 551, 3144, 946, 945, 3145,
	2957, 2758, 3351, 3321, 2692, 730, 2954, 2756, 2757, 3303,
	3304, 2709, 2039, 2942, 1414, 1413, 2381, 2719, 2019, 2042,
	994, 3299, 3300, 995, 1858, 2921, 814, 3251, 2325, 3246,
	1396, 2933, 1193, 3360, 1218, 991, 1864, 1866, 1867, 1079,
	999, 1000, 750, 3184, 1229, 1146, 1145, 810, 508, 507,
	2497, 997, 3147, 1421, 1424, 1425, 981, 1974, 3443, 2947,
	837, 1133, 1750, 1751, 1422, 839, 3241, 3459, 731, 2365,
	2367, 2368, 2369, 2366, 502, 502, 2041, 3389, 3355, 840,
	3312, 3308, 3309, 3146, 3312, 501, 501, 498, 498, 2687,
	500, 500, 499, 499, 949, 950, 958, 957, 3396, 1847,
	1847, 1182, 3161, 2843, 2761, 2958, 2604, 1141, 476, 2330,
	812, 503, 503, 1847, 3176, 3232, 3084, 3423, 2040, 951,
	2472, 941, 2068, 504, 1080, 3000, 3073, 2067, 960, 3079,
	993, 837, 2359, 752, 1113, 753, 839, 1118, 1248, 966,
	1247, 762, 962, 963, 871, 748, 967, 871, 871, 3430,
	840, 871, 1180, 3178, 1179, 958, 957, 871, 871, 2088,
	2089, 2938, 1178, 1050, 2342, 3454, 1197, 1196, 998, 1848,
	3460, 3401, 2202, 1486, 1860, 3466, 1313, 504, 3169, 3144,
	936, 1204, 3145, 2653, 737, 52, 2142, 811, 1201, 2900,
	481, 2026, 1231, 996, 1876, 2019, 2984, 3139, 466, 466,
	3185, 1046, 1047, 1048, 1049, 3151, 2830, 466, 466, 704,
	1150, 1263, 1263, 515, 481, 3302, 2323, 1205, 1206, 2529,
	2531, 3211, 1151, 1152, 1153, 1154, 1236, 1156, 139, 2937,
	1205, 1206, 2352, 1162, 139, 3147, 506, 1292, 476, 52,
	1737, 1301, 1301, 2686, 2752, 139, 3027, 139, 2244, 2252,
	139, 139, 191, 139, 1194, 2696, 1265, 3157, 2601, 3361,
	2131, 466, 1088, 1089, 2036, 139, 3146, 1270, 2055, 169,
	170, 3177, 171, 3295, 1850, 1155, 1865, 139, 940, 968,
	1227, 2445, 139, 2446, 2447, 2603, 3032, 2688, 2356, 2357,
	1261, 1261, 836, 1423, 3453, 2760, 2756, 2757, 1727, 1391,
	974, 1161, 3140, 2355, 1269, 1142, 3223, 3402, 1319, 1257,
	1258, 1160, 1343, 2029, 1346, 1159, 557, 1147, 1158, 1354,
	510, 1729, 3094, 3095, 3096, 3099, 3098, 3097, 2025, 2545,
	2546, 2859, 1168, 2027, 3086, 1482, 2442, 1119, 2333, 1117,
	1377, 1479, 756, 757, 758, 1481, 1478, 1480, 1484, 1485,
	1862, 1863, 3465, 1483, 1263, 2753, 1263, 946, 1148, 1568,
	3080, 3081, 2612, 2611, 1948, 1243, 1245, 2473, 2475, 2476,
	2477, 2474, 1360, 3075, 1255, 1256, 1139, 3074, 1176, 1189,
	1190, 1372, 1373, 1181, 751, 2530, 973, 2028, 1170, 1569,
	1191, 1950, 1949, 1947, 1322, 1567, 1325, 1326, 1210, 1211,
	718, 1213, 1214, 1215, 1221, 1222, 1230, 1327, 1328, 1137,
	1138, 2080, 719, 3059, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1333, 1334, 1314, 1209,
	1454, 1455, 1212, 2831, 1608, 1293, 3472, 1464, 3399, 3400,
	1184, 1188, 1188, 1188, 2030, 1957, 1246, 1503, 1504, 1505,
	2386, 1513, 943, 3404, 1338, 2463, 2464, 1342, 722, 1341,
	1519, 3288, 754, 1520, 1184, 1184, 486, 1271, 1958, 1959,
	2035, 1009, 2788, 1376, 2033, 1522, 804, 1530, 1531, 1284,
	974, 1375, 2220, 2784, 1410, 3140, 1302, 1608, 1908, 3141,
	1290, 1907, 2724, 1303, 1548, 1407, 2862, 1489, 1490, 1491,
	1492, 1493, 1494, 1487, 1488, 872, 873, 3471, 1009, 721,
	877, 2842, 946, 724, 723, 3462, 2026, 2029, 840, 3444,
	2054, 1549, 840, 1426, 1292, 1388, 1011, 1012, 1013, 1010,
	1578, 502, 1263, 1583, 1584, 1777, 1586, 1587, 481, 3439,
	1498, 1385, 501, 481, 498, 1938, 1263, 500, 3433, 499,
	762, 1368, 1350, 1606, 1382, 2754, 1357, 1381, 1263, 806,
	2111, 1393, 805, 1009, 1231, 1363, 2243, 2387, 503, 497,
	3432, 2112, 2632, 1552, 862, 867, 868, 2462, 1386, 1009,
	1384, 2763, 1383, 1512, 3410, 1380, 1404, 3463, 2387, 1630,
	1401, 1855, 1970, 1495, 1496, 1009, 1499, 1636, 1636, 804,
	1231, 1406, 1231, 1231, 1514, 943, 481, 481, 3377, 1578,
	1578, 3440, 1634, 1263, 1704, 1705, 1717, 1521, 3330, 1523,
	1855, 1577, 1392, 3324, 2788, 1445, 815, 2004, 1588, 2660,
	466, 3269, 1263, 1593, 1585, 1573, 1574, 2658, 1576, 1560,
	2112, 2548, 1855, 2707, 2336, 3204, 2328, 3203, 2030, 1589,
	1590, 1591, 1592, 2025, 2019, 2024, 1855, 2022, 2027, 3198,
	481, 1578, 1263, 3197, 1762, 2233, 481, 481, 481, 1767,
	1768, 1452, 1453, 1775, 2225, 3196, 1772, 1773, 1753, 1555,
	3378, 1779, 806, 3195, 2112, 805, 2142, 1846, 191, 1655,
	3331, 191, 191, 971, 191, 3165, 1642, 1643, 972, 974,
	1699, 1700, 1622, 3165, 1718, 1524, 1969, 2014, 1943, 1638,
	1937, 1912, 2028, 1011, 1012, 1013, 1010, 3205, 1629, 1992,
	3164, 1632, 1633, 1837, 1723, 1550, 1725, 1748, 1731, 1169,
	3020, 3165, 1513, 1513, 1821, 3165, 1743, 1744, 1457, 1513,
	1513, 1556, 708, 709, 710, 711, 1832, 3165, 1114, 2962,
	1758, 1249, 1759, 3427, 1637, 3165, 1758, 1758, 1758, 2003,
	1745, 1746, 1761, 1572, 1582, 864, 865, 866, 1826, 972,
	1606, 1738, 2708, 3379, 1263, 1844, 1788, 2911, 1598, 1791,
	1792, 1603, 1794, 1602, 2891, 2772, 1613, 1764, 1765, 1766,
	1611, 2524, 3165, 1614, 1615, 1619, 1618, 1623, 1620, 1621,
	2725, 1887, 3021, 2552, 588, 598, 2389, 1609, 1610, 1628,
	1624, 1625, 1627, 589, 1639, 597, 590, 594, 593, 591,
	592, 2142, 2246, 1640, 1641, 1838, 1822, 2245, 1869, 2307,
	1011, 1012, 1013, 1010, 2299, 708, 709, 710, 711, 1706,
	1873, 1874, 1703, 2237, 2009, 1582, 1184, 2259, 1722, 2276,
	1724, 2241, 1732, 1903, 2229, 3109, 2892, 2773, 2227, 2222,
	1188, 2215, 2878, 2112, 1816, 2213, 2211, 2209, 595, 1888,
	1991, 1816, 1188, 1939, 1919, 1014, 1886, 930, 926, 927,
	928, 929, 1760, 2281, 1043, 2280, 2279, 2277, 713, 1918,
	1836, 1906, 1052, 1782, 1404, 1770, 1785, 1365, 1056, 1783,
	596, 1009, 959, 1897, 1896, 1895, 1009, 1913, 1914, 938,
	1916, 1274, 1854, 1369, 933, 837, 1059, 1923, 1185, 1009,
	839, 931, 837, 1992, 2960, 1828, 2223, 839, 1026, 1802,
	2228, 2223, 3419, 2216, 840, 2123, 1747, 2214, 2210, 2210,
	2729, 840, 1992, 1825, 2595, 1938, 1009, 1253, 1823, 502,
	3405, 555, 2278, 2201, 481, 481, 3380, 481, 1254, 2052,
	501, 1009, 498, 1009, 1835, 500, 2720, 499, 720, 1834,
	481, 481, 481, 481, 1839, 1009, 1009, 1009, 1502, 1501,
	3163, 713, 3136, 1989, 1855, 1370, 503, 1502, 1501, 1525,
	1526, 1527, 1528, 1996, 1231, 1532, 1533, 1534, 1535, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 938, 3077, 3076,
	837, 3033, 1877, 1174, 1251, 839, 1868, 1175, 2884, 1231,
	1029, 1030, 1031, 1032, 1033, 1026, 1870, 2789, 2782, 840,
	2777, 1881, 2774, 2047, 1186, 1786, 1445, 2702, 2494, 3247,
	3060, 2903, 2721, 2363, 1961, 1962, 3437, 1964, 1025, 1024,
	1034, 1035, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1026,
	1980, 1981, 1982, 1983, 2332, 1460, 1963, 1910, 1024, 1034,
	1035, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1026, 2053,
	2901, 1871, 1872, 3248, 3061, 2904, 2722, 2256, 1536, 2282,
	2283, 2226, 725, 2116, 2116, 1717, 2116, 1529, 2133, 1025,
	1024, 1034, 1035, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1026, 1165, 1164, 1250, 466, 466, 948, 2816, 1940, 2266,
	2195, 1451, 946, 2554, 2902, 1998, 1999, 1579, 1263, 481,
	1013, 1010, 1933, 1935, 1936, 2001, 2002, 1448, 1450, 1447,
	1951, 1449, 3289, 1460, 481, 1882, 1011, 1012, 1013, 1010,
	946, 2185, 476, 1971, 1010, 3089, 1301, 2819, 1717, 3088,
	1306, 2190, 1786, 2192, 1079, 2625, 2571, 191, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1026, 2434, 1300, 1300, 2058,
	2433, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2415, 2413,
	2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078,
	2079, 3068, 2081, 2082, 2083, 2084, 2085, 2137, 2086, 2013,
	2120, 2018, 2118, 2017, 2122, 1997, 3029, 2239, 3422, 1269,
	1844, 3448, 2031, 2032, 2624, 2037, 2129, 1263, 2130, 1263,
	2362, 1263, 2000, 2010, 1758, 1058, 946, 2006, 2883, 2008,
	2007, 2005, 3034, 3035, 2258, 3436, 2134, 2135, 1057, 1080,
	1011, 1012, 1013, 1010, 2876, 2196, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1015, 3390, 2144, 2095, 3385, 1263, 2285,
	3384, 3314, 3030, 2189, 1517, 2484, 2482, 2150, 837, 3421,
	2480, 1243, 1245, 839, 2292, 2187, 2124, 2469, 1518, 1263,
	1011, 1012, 1013, 1010, 2194, 3278, 3249, 840, 3200, 3188,
	2294, 2205, 1188, 3181, 3122, 3063, 2138, 3062, 2249, 2905,
	2877, 2875, 2284, 2694, 2591, 2141, 1034, 1035, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1026, 1416, 1417, 1418, 1419,
	1420, 2483, 2481, 2293, 2566, 2188, 2479, 946, 2565, 2467,
	2466, 946, 2499, 2468, 481, 2296, 2297, 1261, 2465, 2186,
	1263, 2457, 2451, 2360, 1011, 1012, 1013, 1010, 2255, 1578,
	2450, 2449, 1306, 2253, 2448, 2329, 1942, 2385, 1261, 1805,
	1461, 1462, 1463, 2391, 1804, 1803, 2270, 2270, 1497, 3409,
	1799, 2250, 1798, 1756, 1755, 2264, 1507, 1754, 2231, 1366,
	2401, 1011, 1012, 1013, 1010, 2320, 2242, 946, 2240, 1132,
	2817, 2247, 2680, 550, 3408, 2412, 552, 1011, 1012, 1013,
	1010, 551, 946, 946, 946, 1636, 2268, 3350, 946, 3349,
	2423, 2424, 2425, 2426, 946, 3346, 2430, 2431, 2994, 2432,
	2260, 2261, 3342, 1553, 2343, 1011, 1012, 1013, 1010, 2373,
	2275, 2273, 3235, 3315, 2197, 1011, 1012, 1013, 1010, 3038,
	2374, 3220, 2116, 3209, 1307, 1899, 3192, 2383, 3187, 1404,
	3239, 3186, 3160, 3158, 2337, 3256, 2485, 3123, 2150, 1011,
	1012, 1013, 1010, 3070, 466, 2392, 1655, 2382, 3047, 1578,
	946, 1717, 1717, 1717, 1717, 2349, 1011, 1012, 1013, 1010,
	2992, 2990, 946, 1717, 2969, 2966, 2116, 2964, 2410, 2302,
	2303, 2489, 2410, 2406, 2403, 2308, 2874, 2873, 2870, 2263,
	2850, 2394, 1263, 2338, 2411, 2848, 2397, 1626, 2417, 2783,
	2358, 1898, 2779, 481, 481, 2770, 3252, 2339, 2769, 2703,
	2344, 3012, 2664, 2663, 8, 3416, 3137, 2390, 2384, 7,
	2418, 2419, 2662, 1946, 2605, 2422, 2602, 1011, 1012, 1013,
	1010, 2429, 2564, 2538, 2402, 2478, 2405, 1011, 1012, 1013,
	1010, 2408, 2470, 2460, 2520, 2414, 2458, 2454, 2453, 1553,
	2452, 2421, 2440, 2441, 1553, 1553, 2235, 2236, 191, 2232,
	2291, 1807, 1582, 191, 650, 649, 2455, 2456, 1025, 1024,
	1034, 1035, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1026,
	1801, 1563, 1562, 2459, 1513, 1367, 1513, 2507, 1087, 2581,
	2491, 2393, 1083, 2542, 2543, 1082, 934, 2400, 2590, 2507,
	2398, 2399, 717, 1787, 1263, 3024, 1790, 2597, 3013, 1793,
	2490, 2897, 1795, 2495, 1891, 2896, 2508, 2509, 2510, 2511,
	2895, 2493, 2549, 2861, 2857, 2519, 2521, 2523, 1011, 1012,
	1013, 1010, 1011, 1012, 1013, 1010, 2532, 2855, 1326, 2854,
	2853, 2539, 2536, 3002, 2849, 2847, 2555, 2832, 1327, 1328,
	3001, 2559, 1011, 1012, 1013, 1010, 2822, 2821, 1552, 2522,
	2807, 1831, 2806, 2580, 2730, 2667, 1333, 1334, 2657, 1011,
	1012, 1013, 1010, 2630, 2578, 2623, 1011, 1012, 1013, 1010,
	2584, 2618, 2615, 2620, 174, 2951, 163, 138, 1338, 2614,
	2609, 1342, 2547, 1341, 2335, 2212, 2557, 2208, 2599, 2207,
	2553, 946, 2845, 2556, 2594, 1924, 1011, 1012, 1013, 1010,
	2683, 1011, 1012, 1013, 1010, 1917, 2577, 2574, 1911, 2579,
	2698, 1909, 2572, 2587, 2586, 481, 2585, 1905, 1011, 1012,
	1013, 1010, 2628, 1904, 1902, 2606, 2712, 946, 946, 946,
	1893, 1890, 1889, 2593, 1806, 1547, 1546, 1717, 1989, 2607,
	2728, 1545, 1516, 168, 1879, 2627, 2613, 1883, 1011, 1012,
	1013, 1010, 2616, 2617, 1515, 1506, 2621, 2622, 1275, 1273,
	2742, 3461, 2745, 174, 2745, 2745, 3418, 2706, 2619, 946,
	3412, 1011, 1012, 1013, 1010, 840, 2659, 3397, 3394, 3392,
	3277, 1077, 840, 3206, 2765, 3194, 3189, 1894, 1321, 3103,
	3087, 1263, 1263, 3083, 2762, 1901, 2977, 2975, 2949, 2666,
	2948, 2945, 2661, 2373, 2764, 2704, 2665, 2944, 2886, 2576,
	2714, 2715, 2716, 2677, 1915, 2676, 2583, 1332, 1323, 1920,
	1921, 1922, 1337, 1340, 1925, 1926, 1927, 1928, 1929, 1930,
	1931, 1932, 168, 1329, 2705, 2766, 2767, 481, 1172, 2699,
	2486, 1885, 2683, 2750, 2416, 2727, 2741, 2723, 2378, 2637,
	2638, 2377, 2726, 1578, 1578, 2639, 2640, 2641, 2642, 2262,
	2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2376, 2740,
	1261, 1261, 2746, 2747, 2731, 2751, 2748, 2735, 2626, 2732,
	2733, 3268, 2316, 1025, 1024, 1034, 1035, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1026, 1993, 2315, 2375, 2317, 946,
	2221, 3266, 2314, 2285, 1011, 1012, 1013, 1010, 1011, 1012,
	1013, 1010, 2820, 600, 117, 1011, 1012, 1013, 1010, 117,
	2132, 2087, 1011, 1012, 1013, 1010, 1990, 1758, 1011, 1012,
	1013, 1010, 840, 2798, 2313, 1960, 1941, 1446, 168, 1769,
	1571, 1559, 1389, 1353, 2778, 1330, 1131, 2776, 2781, 2780,
	2775, 3366, 2312, 1116, 481, 2785, 2786, 840, 2771, 2796,
	1011, 1012, 1013, 1010, 1884, 1112, 2717, 1111, 1110, 487,
	1109, 1108, 117, 2800, 1107, 2803, 2804, 2805, 1011, 1012,
	1013, 1010, 1106, 1105, 2734, 1104, 2787, 1103, 1102, 3264,
	2311, 2736, 1101, 2809, 1100, 1099, 1098, 2815, 1097, 1096,
	1095, 2799, 1094, 1093, 1092, 1091, 1090, 3364, 2310, 1086,
	1553, 3447, 1553, 1085, 1084, 2833, 1011, 1012, 1013, 1010,
	2309, 1081, 2834, 1074, 1073, 1071, 2150, 2866, 946, 2835,
	1553, 1553, 2839, 514, 1011, 1012, 1013, 1010, 1011, 1012,
	1013, 1010, 2838, 2306, 2841, 1070, 1011, 1012, 1013, 1010,
	3320, 2305, 1069, 2851, 1068, 1067, 2797, 2304, 1066, 1065,
	2890, 1064, 1300, 1063, 2795, 2298, 2364, 3414, 1062, 1011,
	1012, 1013, 1010, 1061, 2116, 1717, 2908, 1011, 1012, 1013,
	1010, 1060, 838, 1011, 1012, 1013, 1010, 1055, 1054, 117,
	946, 1011, 1012, 1013, 1010, 1053, 976, 932, 3262, 2742,
	2792, 2793, 2946, 946, 117, 1995, 117, 1976, 2858, 964,
	2143, 2868, 1809, 975, 946, 2513, 2512, 2898, 2230, 1263,
	1025, 1024, 1034, 1035, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 1026, 2881, 2288, 2224, 1578, 2516, 2514, 1166, 946,
	2701, 2517, 2515, 2518, 2910, 2108, 2109, 2265, 2104, 2107,
	2108, 2109, 2105, 2943, 2106, 2110, 1600, 1601, 102, 1011,
	1012, 1013, 1010, 2961, 54, 2983, 53, 2589, 191, 2267,
	478, 2913, 2936, 1011, 1012, 1013, 1010, 2952, 2286, 2287,
	2956, 946, 2836, 2837, 2955, 2950, 2289, 2290, 2056, 2971,
	2907, 2959, 2906, 2979, 2810, 2887, 2888, 2889, 1261, 2295,
	2980, 2893, 2894, 2981, 3011, 2965, 2968, 2909, 2963, 1595,
	1596, 1597, 2972, 946, 483, 2912, 2973, 2914, 1456, 1691,
	484, 840, 485, 482, 1416, 1553, 2970, 2436, 840, 1315,
	2953, 840, 2219, 2099, 2437, 2438, 2439, 946, 1263, 1263,
	2738, 2429, 2739, 2712, 1011, 1012, 1013, 1010, 3053, 2978,
	3053, 2967, 2254, 2995, 1362, 2860, 2985, 2996, 2235, 2236,
	2678, 3018, 2863, 1347, 1967, 2869, 2507, 1771, 970, 2675,
	2104, 2107, 2108, 2109, 2105, 1263, 2106, 2110, 2668, 2404,
	3069, 2379, 3043, 3019, 2012, 1985, 3049, 3050, 1604, 3025,
	2395, 2396, 1570, 481, 3333, 946, 946, 1502, 1501, 946,
	946, 1127, 1128, 1125, 1126, 1123, 1124, 3191, 2507, 2768,
	3048, 2096, 3057, 2092, 3106, 3056, 1702, 1261, 3045, 3105,
	1224, 3015, 1223, 3100, 2910, 3066, 1606, 1002, 3114, 2943,
	3091, 3092, 3071, 3067, 3101, 3102, 2802, 3118, 3119, 1121,
	1122, 2541, 1833, 1177, 1157, 1200, 3413, 3306, 2936, 3111,
	3284, 3282, 3242, 3219, 3045, 3022, 3023, 3218, 3216, 3207,
	3117, 3116, 2991, 2852, 3041, 2829, 2828, 2813, 2043, 1364,
	2812, 2551, 2866, 1608, 2592, 3110, 3368, 3367, 3368, 1978,
	3143, 3112, 1892, 3090, 961, 3367, 3085, 3064, 3065, 2808,
	708, 709, 710, 711, 3125, 943, 943, 1192, 3003, 62,
	3004, 178, 3, 2, 3381, 3171, 3138, 3382, 117, 117,
	838, 1, 3142, 2321, 1557, 3153, 3154, 1129, 3152, 712,
	707, 1240, 3041, 3041, 3155, 2125, 3041, 3041, 1749, 1267,
	1561, 714, 2525, 3166, 1025, 1024, 1034, 1035, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1026, 3107, 3174, 3172, 3108,
	2526, 2801, 3173, 2528, 946, 1851, 2496, 2090, 1965, 1263,
	2697, 1167, 755, 1508, 1374, 861, 3182, 955, 3190, 1371,
	954, 2631, 952, 1458, 602, 1812, 2487, 2461, 3113, 3332,
	3374, 1042, 3276, 3335, 1387, 586, 3210, 3128, 2558, 3199,
	2560, 3280, 3130, 2998, 1856, 1007, 2573, 777, 640, 3231,
	613, 1072, 1355, 3201, 1348, 2635, 2633, 859, 1553, 863,
	612, 2880, 3225, 1553, 3208, 3215, 946, 3213, 2354, 2544,
	1831, 3175, 860, 3243, 1025, 1024, 1034, 1035, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1026, 778, 1796, 1261, 3126,
	1316, 3238, 1320, 2011, 3183, 946, 3457, 3237, 3446, 3234,
	3428, 3411, 3311, 1263, 3442, 2608, 3271, 3274, 3245, 3354,
	3250, 3395, 3007, 3005, 3006, 3388, 3261, 3263, 3265, 3267,
	3254, 3307, 521, 1728, 464, 822, 3104, 1808, 2629, 3275,
	3260, 3041, 522, 1994, 3297, 3193, 735, 1975, 3283, 736,
	3285, 3286, 3281, 3279, 728, 1263, 2371, 3270, 3202, 2370,
	1427, 1016, 1444, 2651, 2652, 1051, 3316, 560, 1880, 2351,
	2931, 2537, 61, 60, 3305, 59, 58, 1778, 199, 604,
	1120, 198, 3036, 3273, 3337, 584, 583, 582, 3339, 581,
	580, 579, 1261, 2103, 2101, 2100, 1712, 1711, 3325, 3313,
	3326, 3338, 3327, 3041, 3328, 1776, 3329, 2710, 2427, 854,
	849, 844, 848, 852, 2420, 2038, 3343, 946, 2044, 1644,
	3317, 3244, 3225, 3345, 3257, 3258, 3082, 2471, 1594, 2034,
	1661, 2443, 3041, 1658, 1261, 1657, 2435, 857, 3357, 3359,
	3255, 847, 3373, 3362, 3078, 3072, 3365, 3363, 1688, 765,
	2864, 3052, 2915, 2916, 2922, 3376, 3369, 3370, 3371, 3372,
	1984, 886, 3386, 2749, 946, 882, 884, 885, 883, 2274,
	2015, 2670, 3387, 1956, 1955, 1953, 3391, 1952, 3393, 1140,
	3230, 3293, 3014, 2148, 2146, 2794, 2790, 1820, 1829, 3339,
	3407, 2588, 855, 3403, 1713, 1709, 1977, 3149, 1599, 858,
	729, 1973, 3338, 946, 3406, 946, 99, 152, 48, 89,
	1272, 3415, 88, 3417, 487, 98, 150, 3420, 764, 47,
	845, 183, 182, 185, 184, 181, 3376, 3424, 804, 946,
	2198, 2199, 180, 1304, 3431, 179, 3287, 3435, 3438, 3055,
	702, 3441, 38, 856, 3352, 117, 37, 3347, 3348, 33,
	12, 11, 34, 21, 22, 20, 3445, 1378, 19, 3452,
	25, 31, 30, 3456, 3455, 110, 109, 904, 29, 108,
	3464, 107, 106, 3467, 105, 104, 28, 3452, 3470, 3469,
	18, 3468, 3456, 846, 42, 41, 40, 9, 97, 95,
	27, 1410, 96, 93, 94, 92, 1011, 1012, 1013, 1010,
	90, 1225, 1226, 73, 1228, 72, 1232, 1233, 1234, 117,
	71, 806, 86, 117, 805, 85, 84, 83, 82, 81,
	79, 80, 776, 70, 69, 117, 68, 67, 66, 91,
	1410, 77, 1410, 87, 78, 117, 76, 1486, 1279, 1280,
	1281, 1282, 1283, 75, 1285, 1286, 1287, 1288, 1289, 74,
	65, 790, 1295, 1296, 64, 63, 1410, 136, 135, 766,
	853, 134, 133, 132, 130, 131, 129, 128, 127, 126,
	125, 124, 2844, 43, 44, 1486, 45, 46, 146, 2846,
	145, 147, 149, 151, 148, 153, 768, 890, 143, 141,
	144, 142, 140, 56, 100, 17, 24, 850, 4, 851,
	0, 0, 0, 0, 0, 2856, 0, 912, 916, 918,
	920, 922, 923, 925, 0, 930, 926, 927, 928, 929,
	0, 907, 908, 909, 910, 888, 889, 913, 0, 891,
	0, 892, 893, 894, 895, 896, 897, 898, 899, 900,
	903, 905, 901, 902, 911, 0, 0, 0, 0, 789,
	788, 0, 915, 917, 919, 921, 924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	787, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 763, 0, 0, 0, 0, 0, 0, 0, 0,
	906, 0, 767, 799, 0, 0, 0, 0, 0, 1482,
	0, 0, 0, 0, 0, 1479, 0, 0, 0, 1481,
	1478, 1480, 1484, 1485, 0, 0, 795, 1483, 0, 0,
	0, 0, 0, 0, 0, 1553, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1553, 1482, 0, 2974,
	0, 0, 2976, 1479, 0, 0, 0, 1481, 1478, 1480,
	1484, 1485, 796, 800, 0, 1483, 0, 0, 0, 2982,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 784, 0, 782, 786, 803, 0, 0, 0,
	783, 780, 779, 0, 785, 770, 771, 769, 772, 773,
	774, 775, 1037, 801, 1041, 802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1878, 797, 798, 0, 1716,
	1038, 1040, 1036, 0, 1039, 1025, 1024, 1034, 1035, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1026, 2271, 2272, 1025,
	1024, 1034, 1035, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1026, 0, 0, 793, 0, 0, 0, 0, 0, 792,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1489, 1490, 1491, 1492, 1493, 1494, 1487, 1488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 0, 0, 117, 117, 0, 117, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1489,
	1490, 1491, 1492, 1493, 1494, 1487, 1488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 838, 0, 0, 0, 0,
	0, 0, 838, 791, 0, 0, 0, 0, 0, 353,
	0, 0, 0, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 914, 458, 0, 459, 0, 0, 0, 1763, 463,
	384, 337, 0, 0, 0, 0, 0, 0, 0, 3167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 268, 197,
	460, 0, 461, 0, 0, 0, 0, 0, 0, 0,
	1042, 0, 271, 2026, 2029, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 389, 406, 269, 380, 419,
	274, 387, 264, 352, 376, 0, 0, 260, 404, 386,
	334, 312, 313, 259, 1059, 371, 291, 304, 288, 350,
	0, 403, 431, 287, 422, 0, 414, 262, 0, 413,
	349, 400, 405, 335, 329, 261, 402, 333, 328, 316,
	295, 447, 317, 318, 308, 361, 327, 362, 309, 339,
	338, 340, 0, 0, 0, 0, 3253, 442, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2030, 416, 0, 0, 0,
	2025, 0, 2024, 388, 2022, 2027, 319, 0, 0, 0,
	432, 0, 374, 355, 0, 0, 0, 372, 325, 401,
	363, 407, 390, 415, 368, 364, 253, 391, 290, 336,
	265, 267, 285, 292, 294, 296, 297, 345, 346, 358,
	379, 392, 393, 394, 289, 275, 373, 276, 306, 277,
	254, 281, 280, 282, 381, 283, 256, 359, 398, 2028,
	302, 369, 332, 257, 331, 360, 397, 396, 266, 423,
	429, 430, 0, 0, 435, 0, 0, 0, 444, 449,
	450, 451, 453, 454, 455, 456, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 428, 320,
	321, 322, 300, 250, 251, 473, 286, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	427, 0, 0, 0, 457, 472, 0, 0, 2119, 0,
	0, 469, 357, 0, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 409, 421,
	438, 441, 0, 0, 0, 0, 255, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 436, 0, 0, 341,
	342, 343, 344, 303, 0, 273, 439, 367, 0, 0,
	0, 1716, 3426, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 0, 0, 0, 0, 433, 434, 299,
	305, 452, 307, 272, 356, 301, 418, 314, 0, 445,
	0, 446, 0, 0, 0, 0, 348, 310, 311, 382,
	315, 326, 370, 417, 354, 375, 270, 408, 383, 330,
	0, 904, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	0, 248, 278, 279, 284, 470, 467, 399, 471, 0,
	252, 0, 324, 0, 365, 298, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 219, 220, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	0, 249, 244, 245, 246, 247, 0, 0, 0, 424,
	425, 426, 448, 410, 0, 468, 0, 0, 0, 0,
	0, 890, 0, 0, 0, 880, 0, 0, 0, 0,
	0, 0, 0, 474, 462, 0, 0, 0, 0, 0,
	0, 912, 916, 918, 920, 922, 923, 925, 0, 930,
	926, 927, 928, 929, 0, 907, 908, 909, 910, 888,
	889, 913, 0, 891, 117, 892, 893, 894, 895, 896,
	897, 898, 899, 900, 903, 905, 901, 902, 911, 1689,
	0, 0, 0, 0, 0, 0, 915, 917, 919, 921,
	924, 0, 904, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 906, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1666, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1716, 1716, 1716, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 1716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 890, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1682, 912, 916, 918, 920, 922, 923, 925, 0,
	930, 926, 927, 928, 929, 0, 907, 908, 909, 910,
	888, 889, 913, 0, 891, 0, 892, 893, 894, 895,
	896, 897, 898, 899, 900, 903, 905, 901, 902, 911,
	0, 117, 0, 0, 0, 0, 117, 915, 917, 919,
	921, 924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 0,
	0, 0, 0, 117, 0, 0, 0, 0, 0, 0,
	0, 1670, 0, 0, 0, 906, 0, 0, 0, 0,
	0, 0, 1676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1664, 1698, 0, 0, 1665, 1667, 1669, 0,
	1671, 1672, 1673, 1677, 1678, 1679, 1681, 1684, 1685, 1686,
	0, 0, 0, 0, 0, 0, 0, 1674, 1683, 1675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 0,
	0, 1690, 0, 0, 0, 914, 574, 0, 0, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 458, 0, 459, 0,
	0, 611, 0, 463, 384, 337, 0, 0, 0, 0,
	673, 681, 0, 0, 1687, 0, 0, 0, 0, 0,
	0, 0, 567, 117, 0, 601, 650, 649, 588, 598,
	1716, 1663, 268, 197, 460, 0, 461, 589, 1662, 597,
	590, 594, 593, 591, 592, 0, 665, 0, 117, 0,
	0, 0, 0, 558, 571, 0, 575, 0, 0, 0,
	0, 0, 1680, 0, 0, 0, 0, 0, 0, 0,
	0, 1668, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 569, 0, 0, 0, 0, 621, 0, 570, 0,
	0, 616, 595, 599, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 596, 619, 623, 287, 687, 617,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 688, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 914, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	416, 0, 0, 671, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 618, 0, 374, 355, 684, 559,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 1510,
	1509, 1511, 428, 320, 321, 322, 300, 250, 251, 473,
	669, 351, 0, 0, 0, 0, 683, 664, 666, 667,
	670, 674, 675, 676, 677, 678, 680, 682, 686, 472,
	0, 0, 117, 0, 0, 469, 357, 0, 378, 117,
	0, 0, 117, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	685, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	622, 0, 0, 341, 342, 343, 344, 672, 1716, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 299, 305, 452, 307, 272, 356, 301,
	418, 314, 0, 445, 0, 446, 0, 0, 0, 0,
	348, 310, 311, 382, 315, 326, 370, 417, 354, 375,
	270, 408, 383, 330, 0, 0, 694, 668, 693, 695,
	696, 692, 697, 698, 679, 578, 0, 626, 690, 689,
	691, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 0, 395, 0, 248, 278, 279, 284, 470,
	467, 399, 471, 0, 252, 0, 324, 0, 365, 298,
	0, 0, 657, 633, 634, 635, 576, 636, 630, 631,
	632, 658, 624, 654, 655, 603, 627, 637, 653, 638,
	656, 659, 660, 699, 700, 644, 628, 220, 701, 641,
	661, 652, 651, 639, 625, 662, 663, 610, 605, 642,
	643, 629, 645, 646, 647, 577, 606, 607, 608, 609,
	0, 0, 0, 424, 425, 426, 448, 410, 620, 468,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 0, 0, 648, 0, 474, 462, 0,
	574, 0, 0, 0, 293, 1554, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	458, 0, 459, 0, 0, 611, 0, 463, 384, 337,
	0, 0, 0, 0, 673, 681, 0, 0, 0, 0,
	0, 0, 0, 1740, 0, 0, 567, 0, 0, 601,
	650, 649, 588, 598, 0, 0, 268, 197, 460, 0,
	461, 589, 0, 597, 590, 594, 593, 591, 592, 0,
	665, 0, 0, 0, 0, 0, 0, 558, 571, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 568, 569, 0, 0, 0, 0,
	621, 0, 570, 0, 0, 1741, 595, 599, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 596, 619,
	623, 287, 687, 617, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 688,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 416, 0, 0, 671, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 618, 0,
	374, 355, 684, 559, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 669, 351, 0, 0, 0, 0,
	683, 664, 666, 667, 670, 674, 675, 676, 677, 678,
	680, 682, 686, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 685, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 622, 0, 0, 341, 342, 343,
	344, 672, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 299, 305, 452,
	307, 272, 356, 301, 418, 314, 0, 445, 0, 446,
	0, 0, 0, 0, 348, 310, 311, 382, 315, 326,
	370, 417, 354, 375, 270, 408, 383, 330, 0, 0,
	694, 668, 693, 695, 696, 692, 697, 698, 679, 578,
	0, 626, 690, 689, 691, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 0, 248,
	278, 279, 284, 470, 467, 399, 471, 0, 252, 0,
	324, 0, 365, 298, 0, 0, 657, 633, 634, 635,
	576, 636, 630, 631, 632, 658, 624, 654, 655, 603,
	627, 637, 653, 638, 656, 659, 660, 699, 700, 644,
	628, 220, 701, 641, 661, 652, 651, 639, 625, 662,
	663, 610, 605, 642, 643, 629, 645, 646, 647, 577,
	606, 607, 608, 609, 0, 0, 0, 424, 425, 426,
	448, 410, 0, 468, 174, 620, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 0, 0, 0, 0, 648,
	0, 474, 462, 0, 0, 0, 0, 574, 0, 0,
	0, 293, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 458, 0, 459,
	0, 0, 1045, 0, 463, 384, 337, 0, 0, 0,
	0, 673, 681, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 567, 0, 0, 601, 650, 649, 588,
	598, 0, 0, 268, 197, 460, 0, 461, 589, 0,
	597, 590, 594, 593, 591, 592, 0, 665, 0, 0,
	0, 0, 0, 0, 558, 571, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 568, 569, 0, 0, 0, 0, 621, 0, 570,
	0, 0, 616, 595, 599, 0, 0, 0, 0, 258,
	389, 406, 269, 380, 419, 274, 387, 264, 352, 376,
	0, 0, 260, 404, 386, 334, 312, 313, 259, 0,
	371, 291, 304, 288, 350, 596, 619, 623, 287, 687,
	617, 414, 262, 0, 413, 349, 400, 405, 335, 329,
	261, 402, 333, 328, 316, 295, 688, 317, 318, 308,
	361, 327, 362, 309, 339, 338, 340, 0, 0, 0,
	0, 0, 442, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 416, 0, 0, 671, 0, 0, 0, 388, 0,
	0, 319, 0, 0, 0, 618, 0, 374, 355, 684,
	559, 0, 372, 325, 401, 363, 407, 390, 415, 368,
	364, 253, 391, 290, 336, 265, 267, 285, 292, 294,
	296, 297, 345, 346, 358, 379, 392, 393, 394, 289,
	275, 373, 276, 306, 277, 254, 281, 280, 282, 381,
	283, 256, 359, 398, 0, 302, 369, 332, 257, 331,
	360, 397, 396, 266, 423, 429, 430, 0, 0, 435,
	0, 0, 0, 444, 449, 450, 451, 453, 454, 455,
	456, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 428, 320, 321, 322, 300, 250, 251,
	473, 669, 351, 0, 0, 0, 0, 683, 664, 666,
	667, 670, 674, 675, 676, 677, 678, 680, 682, 686,
	472, 0, 0, 0, 0, 0, 469, 357, 0, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 409, 421, 438, 441, 0, 0, 0,
	0, 255, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 685, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 622, 0, 0, 341, 342, 343, 344, 672, 0,
	273, 439, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 299, 305, 452, 307, 272, 356,
	301, 418, 314, 0, 445, 0, 446, 0, 0, 0,
	0, 348, 310, 311, 382, 315, 326, 370, 417, 354,
	375, 270, 408, 383, 330, 0, 0, 694, 668, 693,
	695, 696, 692, 697, 698, 679, 578, 0, 626, 690,
	689, 691, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 248, 278, 279, 284,
	470, 467, 399, 471, 0, 252, 0, 324, 139, 365,
	298, 0, 0, 657, 633, 634, 635, 576, 636, 630,
	631, 632, 658, 624, 654, 655, 603, 627, 637, 653,
	638, 656, 659, 660, 699, 700, 644, 628, 220, 701,
	641, 661, 652, 651, 639, 625, 662, 663, 610, 605,
	642, 643, 629, 645, 646, 647, 577, 606, 607, 608,
	609, 0, 0, 0, 424, 425, 426, 448, 410, 620,
	468, 0, 0, 0, 0, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 0, 0, 648, 0, 474, 462,
	0, 574, 0, 0, 0, 293, 3425, 0, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 458, 0, 459, 0, 0, 611, 0, 463, 384,
	337, 0, 0, 0, 0, 673, 681, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 567, 0, 0,
	601, 650, 649, 588, 598, 0, 0, 268, 197, 460,
	0, 461, 589, 0, 597, 590, 594, 593, 591, 592,
	0, 665, 0, 0, 0, 0, 0, 0, 558, 571,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 569, 0, 0, 0,
	0, 621, 0, 570, 0, 0, 616, 595, 599, 0,
	0, 0, 0, 258, 389, 406, 269, 380, 419, 274,
	387, 264, 352, 376, 0, 0, 260, 404, 386, 334,
	312, 313, 259, 0, 371, 291, 304, 288, 350, 596,
	619, 623, 287, 687, 617, 414, 262, 0, 413, 349,
	400, 405, 335, 329, 261, 402, 333, 328, 316, 295,
	688, 317, 318, 308, 361, 327, 362, 309, 339, 338,
	340, 0, 0, 0, 0, 0, 442, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 416, 0, 0, 671, 0,
	0, 0, 388, 0, 0, 319, 0, 0, 0, 618,
	0, 374, 355, 684, 559, 0, 372, 325, 401, 363,
	407, 390, 415, 368, 364, 253, 391, 290, 336, 265,
	267, 285, 292, 294, 296, 297, 345, 346, 358, 379,
	392, 393, 394, 289, 275, 373, 276, 306, 277, 254,
	281, 280, 282, 381, 283, 256, 359, 398, 0, 302,
	369, 332, 257, 331, 360, 397, 396, 266, 423, 429,
	430, 0, 0, 435, 0, 0, 0, 444, 449, 450,
	451, 453, 454, 455, 456, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 428, 320, 321,
	322, 300, 250, 251, 473, 669, 351, 0, 0, 0,
	0, 683, 664, 666, 667, 670, 674, 675, 676, 677,
	678, 680, 682, 686, 472, 0, 0, 0, 0, 0,
	469, 357, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 409, 421, 438,
	441, 0, 0, 0, 0, 255, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 685, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 622, 0, 0, 341, 342,
	343, 344, 672, 0, 273, 439, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 299, 305,
	452, 307, 272, 356, 301, 418, 314, 0, 445, 0,
	446, 0, 0, 0, 0, 348, 310, 311, 382, 315,
	326, 370, 417, 354, 375, 270, 408, 383, 330, 0,
	0, 694, 668, 693, 695, 696, 692, 697, 698, 679,
	578, 0, 626, 690, 689, 691, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 0,
	248, 278, 279, 284, 470, 467, 399, 471, 0, 252,
	0, 324, 0, 365, 298, 0, 0, 657, 633, 634,
	635, 576, 636, 630, 631, 632, 658, 624, 654, 655,
	603, 627, 637, 653, 638, 656, 659, 660, 699, 700,
	644, 628, 220, 701, 641, 661, 652, 651, 639, 625,
	662, 663, 610, 605, 642, 643, 629, 645, 646, 647,
	577, 606, 607, 608, 609, 0, 0, 0, 424, 425,
	426, 448, 410, 620, 468, 0, 0, 0, 0, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 0, 0,
	648, 0, 474, 462, 0, 574, 0, 0, 0, 293,
	1554, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 458, 0, 459, 0, 0,
	611, 0, 463, 384, 337, 0, 0, 0, 0, 673,
	681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 567, 0, 0, 601, 650, 649, 588, 598, 0,
	0, 268, 197, 460, 0, 461, 589, 0, 597, 590,
	594, 593, 591, 592, 0, 665, 0, 0, 0, 0,
	0, 0, 558, 571, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 568,
	569, 0, 0, 0, 0, 621, 0, 570, 0, 0,
	616, 595, 599, 0, 0, 0, 0, 258, 389, 406,
	269, 380, 419, 274, 387, 264, 352, 376, 0, 0,
	260, 404, 386, 334, 312, 313, 259, 0, 371, 291,
	304, 288, 350, 596, 619, 623, 287, 687, 617, 414,
	262, 0, 413, 349, 400, 405, 335, 329, 261, 402,
	333, 328, 316, 295, 688, 317, 318, 308, 361, 327,
	362, 309, 339, 338, 340, 0, 0, 0, 0, 0,
	442, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 416,
	0, 0, 671, 0, 0, 0, 388, 0, 0, 319,
	0, 0, 0, 618, 0, 374, 355, 684, 559, 0,
	372, 325, 401, 363, 407, 390, 415, 368, 364, 253,
	391, 290, 336, 265, 267, 285, 292, 294, 296, 297,
	345, 346, 358, 379, 392, 393, 394, 289, 275, 373,
	276, 306, 277, 254, 281, 280, 282, 381, 283, 256,
	359, 398, 0, 302, 369, 332, 257, 331, 360, 397,
	396, 266, 423, 429, 430, 0, 0, 435, 0, 0,
	0, 444, 449, 450, 451, 453, 454, 455, 456, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 428, 320, 321, 322, 300, 250, 251, 473, 669,
	351, 0, 0, 0, 0, 683, 664, 666, 667, 670,
	674, 675, 676, 677, 678, 680, 682, 686, 472, 0,
	0, 0, 0, 0, 469, 357, 0, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 409, 421, 438, 441, 0, 0, 0, 0, 255,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 685,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 622,
	0, 0, 341, 342, 343, 344, 672, 0, 273, 439,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 694, 668, 693, 695, 696,
	692, 697, 698, 679, 578, 0, 626, 690, 689, 691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 657, 633, 634, 635, 576, 636, 630, 631, 632,
	658, 624, 654, 655, 603, 627, 637, 653, 638, 656,
	659, 660, 699, 700, 644, 628, 220, 701, 641, 661,
	652, 651, 639, 625, 662, 663, 610, 605, 642, 643,
	629, 645, 646, 647, 577, 606, 607, 608, 609, 0,
	0, 0, 424, 425, 426, 448, 410, 620, 468, 0,
	0, 0, 0, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 0, 0, 648, 0, 474, 462, 0, 574,
	0, 0, 0, 293, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 458,
	0, 459, 0, 0, 611, 0, 463, 384, 337, 0,
	0, 0, 0, 673, 681, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 567, 0, 0, 601, 650,
	649, 588, 598, 0, 0, 268, 197, 460, 0, 461,
	589, 0, 597, 590, 594, 593, 591, 592, 0, 665,
	0, 0, 0, 0, 0, 0, 558, 571, 0, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 568, 569, 1299, 0, 0, 0, 621,
	0, 570, 0, 0, 616, 595, 599, 0, 0, 0,
	0, 258, 389, 406, 269, 380, 419, 274, 387, 264,
	352, 376, 0, 0, 260, 404, 386, 334, 312, 313,
	259, 0, 371, 291, 304, 288, 350, 596, 619, 623,
	287, 687, 617, 414, 262, 0, 413, 349, 400, 405,
	335, 329, 261, 402, 333, 328, 316, 295, 688, 317,
	318, 308, 361, 327, 362, 309, 339, 338, 340, 0,
	0, 0, 0, 0, 442, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 416, 0, 0, 671, 0, 0, 0,
	388, 0, 0, 319, 0, 0, 0, 618, 0, 374,
	355, 684, 559, 0, 372, 325, 401, 363, 407, 390,
	415, 368, 364, 253, 391, 290, 336, 265, 267, 285,
	292, 294, 296, 297, 345, 346, 358, 379, 392, 393,
	394, 289, 275, 373, 276, 306, 277, 254, 281, 280,
	282, 381, 283, 256, 359, 398, 0, 302, 369, 332,
	257, 331, 360, 397, 396, 266, 423, 429, 430, 0,
	0, 435, 0, 0, 0, 444, 449, 450, 451, 453,
	454, 455, 456, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 428, 320, 321, 322, 300,
	250, 251, 473, 669, 351, 0, 0, 0, 0, 683,
	664, 666, 667, 670, 674, 675, 676, 677, 678, 680,
	682, 686, 472, 0, 0, 0, 0, 0, 469, 357,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 409, 421, 438, 441, 0,
	0, 0, 0, 255, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 685, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 622, 0, 0, 341, 342, 343, 344,
	672, 0, 273, 439, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 694,
	668, 693, 695, 696, 692, 697, 698, 679, 578, 0,
	626, 690, 689, 691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 657, 633, 634, 635, 576,
	636, 630, 631, 632, 658, 624, 654, 655, 603, 627,
	637, 653, 638, 656, 659, 660, 699, 700, 644, 628,
	220, 701, 641, 661, 652, 651, 639, 625, 662, 663,
	610, 605, 642, 643, 629, 645, 646, 647, 577, 606,
	607, 608, 609, 0, 0, 0, 424, 425, 426, 448,
	410, 620, 468, 0, 1900, 0, 0, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 0, 0, 648, 0,
	474, 462, 0, 574, 0, 0, 0, 293, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 458, 0, 459, 0, 0, 611, 0,
	463, 384, 337, 0, 0, 0, 0, 673, 681, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 567,
	0, 0, 601, 650, 649, 588, 598, 0, 0, 268,
	197, 460, 0, 461, 589, 0, 597, 590, 594, 593,
	591, 592, 0, 665, 0, 0, 0, 0, 0, 0,
	558, 571, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 568, 569, 0,
	0, 0, 0, 621, 0, 570, 0, 0, 616, 595,
	599, 0, 0, 0, 0, 258, 389, 406, 269, 380,
	419, 274, 387, 264, 352, 376, 0, 0, 260, 404,
	386, 334, 312, 313, 259, 0, 371, 291, 304, 288,
	350, 596, 619, 623, 287, 687, 617, 414, 262, 0,
	413, 349, 400, 405, 335, 329, 261, 402, 333, 328,
	316, 295, 688, 317, 318, 308, 361, 327, 362, 309,
	339, 338, 340, 0, 0, 0, 0, 0, 442, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 416, 0, 0,
	671, 0, 0, 0, 388, 0, 0, 319, 0, 0,
	0, 618, 0, 374, 355, 684, 559, 0, 372, 325,
	401, 363, 407, 390, 415, 368, 364, 253, 391, 290,
	336, 265, 267, 285, 292, 294, 296, 297, 345, 346,
	358, 379, 392, 393, 394, 289, 275, 373, 276, 306,
	277, 254, 281, 280, 282, 381, 283, 256, 359, 398,
	0, 302, 369, 332, 257, 331, 360, 397, 396, 266,
	423, 429, 430, 0, 0, 435, 0, 0, 0, 444,
	449, 450, 451, 453, 454, 455, 456, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 428,
	320, 321, 322, 300, 250, 251, 473, 669, 351, 0,
	0, 0, 0, 683, 664, 666, 667, 670, 674, 675,
	676, 677, 678, 680, 682, 686, 472, 0, 0, 0,
	0, 0, 469, 357, 0, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 409,
	421, 438, 441, 0, 0, 0, 0, 255, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 685, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 622, 0, 0,
	341, 342, 343, 344, 672, 0, 273, 439, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 694, 668, 693, 695, 696, 692, 697,
	698, 679, 578, 0, 626, 690, 689, 691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 470, 467, 399, 471,
	0, 252, 0, 324, 0, 365, 298, 0, 0, 657,
	633, 634, 635, 576, 636, 630, 631, 632, 658, 624,
	654, 655, 603, 627, 637, 653, 638, 656, 659, 660,
	699, 700, 644, 628, 220, 701, 641, 661, 652, 651,
	639, 625, 662, 663, 610, 605, 642, 643, 629, 645,
	646, 647, 577, 606, 607, 608, 609, 0, 0, 0,
	424, 425, 426, 448, 410, 620, 468, 0, 0, 0,
	0, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	0, 0, 648, 0, 474, 462, 0, 574, 0, 0,
	0, 293, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 458, 0, 459,
	0, 0, 611, 0, 463, 384, 337, 0, 0, 0,
	0, 673, 681, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 567, 0, 0, 601, 650, 649, 588,
	598, 0, 0, 268, 197, 460, 0, 461, 589, 0,
	597, 590, 594, 593, 591, 592, 0, 665, 0, 0,
	0, 0, 0, 0, 558, 571, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 568, 569, 0, 0, 0, 0, 621, 0, 570,
	0, 0, 616, 595, 599, 0, 0, 0, 0, 258,
	389, 406, 269, 380, 419, 274, 387, 264, 352, 376,
	0, 0, 260, 404, 386, 334, 312, 313, 259, 0,
	371, 291, 304, 288, 350, 596, 619, 623, 287, 687,
	617, 414, 262, 0, 413, 349, 400, 405, 335, 329,
	261, 402, 333, 328, 316, 295, 688, 317, 318, 308,
	361, 327, 362, 309, 339, 338, 340, 0, 0, 0,
	0, 0, 442, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 416, 0, 0, 671, 0, 0, 0, 388, 0,
	0, 319, 0, 0, 0, 618, 0, 374, 355, 684,
	559, 0, 372, 325, 401, 363, 407, 390, 415, 368,
	364, 253, 391, 290, 336, 265, 267, 285, 292, 294,
	296, 297, 345, 346, 358, 379, 392, 393, 394, 289,
	275, 373, 276, 306, 277, 254, 281, 280, 282, 381,
	283, 256, 359, 398, 0, 302, 369, 332, 257, 331,
	360, 397, 396, 266, 423, 429, 430, 0, 0, 435,
	0, 0, 0, 444, 449, 450, 451, 453, 454, 455,
	456, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 428, 320, 321, 322, 300, 250, 251,
	473, 669, 351, 0, 0, 0, 0, 683, 664, 666,
	667, 670, 674, 675, 676, 677, 678, 680, 682, 686,
	472, 0, 0, 0, 0, 0, 469, 357, 0, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 409, 421, 438, 441, 0, 0, 0,
	0, 255, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 685, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 622, 0, 0, 341, 342, 343, 344, 672, 0,
	273, 439, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 299, 305, 452, 307, 272, 356,
	301, 418, 314, 0, 445, 0, 446, 0, 0, 0,
	0, 348, 310, 311, 382, 315, 326, 370, 417, 354,
	375, 270, 408, 383, 330, 0, 0, 694, 668, 693,
	695, 696, 692, 697, 698, 679, 578, 0, 626, 690,
	689, 691, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 248, 278, 279, 284,
	470, 467, 399, 471, 0, 252, 0, 324, 0, 365,
	298, 0, 0, 657, 633, 634, 635, 576, 636, 630,
	631, 632, 658, 624, 654, 655, 603, 627, 637, 653,
	638, 656, 659, 660, 699, 700, 644, 628, 220, 701,
	641, 661, 652, 651, 639, 625, 662, 663, 610, 605,
	642, 643, 629, 645, 646, 647, 577, 606, 607, 608,
	609, 0, 0, 0, 424, 425, 426, 448, 410, 620,
	468, 0, 0, 0, 0, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 0, 0, 648, 0, 474, 462,
	0, 574, 0, 0, 0, 293, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 458, 0, 459, 0, 0, 611, 0, 463, 384,
	337, 0, 0, 0, 0, 673, 681, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 567, 0, 0,
	601, 650, 649, 588, 598, 0, 0, 268, 197, 460,
	0, 461, 2318, 0, 597, 2319, 594, 593, 591, 592,
	0, 665, 0, 0, 0, 0, 0, 0, 558, 571,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 569, 0, 0, 0,
	0, 621, 0, 570, 0, 0, 616, 595, 599, 0,
	0, 0, 0, 258, 389, 406, 269, 380, 419, 274,
	387, 264, 352, 376, 0, 0, 260, 404, 386, 334,
	312, 313, 259, 0, 371, 291, 304, 288, 350, 596,
	619, 623, 287, 687, 617, 414, 262, 0, 413, 349,
	400, 405, 335, 329, 261, 402, 333, 328, 316, 295,
	688, 317, 318, 308, 361, 327, 362, 309, 339, 338,
	340, 0, 0, 0, 0, 0, 442, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 416, 0, 0, 671, 0,
	0, 0, 388, 0, 0, 319, 0, 0, 0, 618,
	0, 374, 355, 684, 559, 0, 372, 325, 401, 363,
	407, 390, 415, 368, 364, 253, 391, 290, 336, 265,
	267, 285, 292, 294, 296, 297, 345, 346, 358, 379,
	392, 393, 394, 289, 275, 373, 276, 306, 277, 254,
	281, 280, 282, 381, 283, 256, 359, 398, 0, 302,
	369, 332, 257, 331, 360, 397, 396, 266, 423, 429,
	430, 0, 0, 435, 0, 0, 0, 444, 449, 450,
	451, 453, 454, 455, 456, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 428, 320, 321,
	322, 300, 250, 251, 473, 669, 351, 0, 0, 0,
	0, 683, 664, 666, 667, 670, 674, 675, 676, 677,
	678, 680, 682, 686, 472, 0, 0, 0, 0, 0,
	469, 357, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 409, 421, 438,
	441, 0, 0, 0, 0, 255, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 685, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 622, 0, 0, 341, 342,
	343, 344, 672, 0, 273, 439, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 299, 305,
	452, 307, 272, 356, 301, 418, 314, 0, 445, 0,
	446, 0, 0, 0, 0, 348, 310, 311, 382, 315,
	326, 370, 417, 354, 375, 270, 408, 383, 330, 0,
	0, 694, 668, 693, 695, 696, 692, 697, 698, 679,
	578, 0, 626, 690, 689, 691, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 0,
	248, 278, 279, 284, 470, 467, 399, 471, 0, 252,
	0, 324, 0, 365, 298, 0, 0, 657, 633, 634,
	635, 576, 636, 630, 631, 632, 658, 624, 654, 655,
	603, 627, 637, 653, 638, 656, 659, 660, 699, 700,
	644, 628, 220, 701, 641, 661, 652, 651, 639, 625,
	662, 663, 610, 605, 642, 643, 629, 645, 646, 647,
	577, 606, 607, 608, 609, 0, 0, 0, 424, 425,
	426, 448, 410, 620, 468, 0, 0, 0, 0, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 0, 0,
	648, 1428, 474, 462, 0, 574, 0, 0, 0, 293,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 458, 0, 459, 0, 0,
	611, 0, 463, 384, 337, 0, 0, 0, 0, 673,
	681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 567, 0, 0, 601, 650, 649, 588, 598, 0,
	0, 268, 197, 460, 0, 461, 589, 0, 597, 590,
	594, 593, 591, 592, 0, 665, 0, 0, 0, 0,
	0, 0, 0, 571, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 568,
	569, 0, 0, 0, 0, 621, 0, 570, 0, 0,
	616, 595, 599, 0, 0, 0, 0, 258, 389, 406,
	269, 380, 419, 274, 387, 264, 352, 376, 0, 0,
	260, 404, 386, 334, 312, 313, 259, 0, 371, 291,
	304, 288, 350, 596, 619, 623, 287, 687, 617, 414,
	262, 0, 413, 349, 400, 405, 335, 329, 261, 402,
	333, 328, 316, 295, 688, 317, 318, 308, 361, 327,
	362, 309, 339, 338, 340, 0, 0, 0, 0, 0,
	442, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 416,
	0, 0, 671, 0, 0, 0, 388, 0, 0, 319,
	0, 0, 0, 618, 0, 374, 355, 684, 0, 0,
	372, 325, 401, 363, 407, 390, 415, 368, 364, 253,
	391, 290, 336, 265, 267, 285, 292, 294, 296, 297,
	345, 346, 358, 379, 392, 393, 394, 289, 275, 373,
	276, 306, 277, 254, 281, 280, 282, 381, 283, 256,
	359, 398, 0, 302, 369, 332, 257, 331, 360, 397,
	396, 266, 423, 1429, 1430, 0, 0, 435, 0, 0,
	0, 444, 449, 450, 451, 453, 454, 455, 456, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 428, 320, 321, 322, 300, 250, 251, 473, 669,
	351, 0, 0, 0, 0, 683, 664, 666, 667, 670,
	674, 675, 676, 677, 678, 680, 682, 686, 472, 0,
	0, 0, 0, 0, 469, 357, 0, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 409, 421, 438, 441, 0, 0, 0, 0, 255,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 685,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 622,
	0, 0, 341, 342, 343, 344, 672, 0, 273, 439,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 694, 668, 693, 695, 696,
	692, 697, 698, 679, 578, 0, 626, 690, 689, 691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 657, 633, 634, 635, 576, 636, 630, 631, 632,
	658, 624, 654, 655, 603, 627, 637, 653, 638, 656,
	659, 660, 699, 700, 644, 628, 220, 701, 641, 661,
	652, 651, 639, 625, 662, 663, 610, 605, 642, 643,
	629, 645, 646, 647, 577, 606, 607, 608, 609, 0,
	0, 0, 424, 425, 426, 448, 410, 620, 468, 0,
	0, 0, 0, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 0, 0, 648, 0, 474, 462, 0, 574,
	0, 0, 0, 293, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 458,
	0, 459, 0, 0, 611, 0, 463, 384, 337, 0,
	0, 0, 0, 673, 681, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 601, 650,
	649, 588, 598, 0, 0, 268, 197, 460, 0, 461,
	589, 0, 597, 590, 594, 593, 591, 592, 0, 665,
	0, 0, 0, 0, 0, 0, 558, 571, 0, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 568, 569, 0, 0, 0, 0, 621,
	0, 570, 0, 0, 616, 595, 599, 0, 0, 0,
	0, 258, 389, 406, 269, 380, 419, 274, 387, 264,
	352, 376, 0, 0, 260, 404, 386, 334, 312, 313,
	259, 0, 371, 291, 304, 288, 350, 596, 619, 623,
	287, 687, 617, 414, 262, 0, 413, 349, 400, 405,
	335, 329, 261, 402, 333, 328, 316, 295, 688, 317,
	318, 308, 361, 327, 362, 309, 339, 338, 340, 0,
	0, 0, 0, 0, 442, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 416, 0, 0, 671, 0, 0, 0,
	388, 0, 0, 319, 0, 0, 0, 618, 0, 374,
	355, 684, 559, 0, 372, 325, 401, 363, 407, 390,
	415, 368, 364, 253, 391, 290, 336, 265, 267, 285,
	292, 294, 296, 297, 345, 346, 358, 379, 392, 393,
	394, 289, 275, 373, 276, 306, 277, 254, 281, 280,
	282, 381, 283, 256, 359, 398, 0, 302, 369, 332,
	257, 331, 360, 397, 396, 266, 423, 429, 430, 0,
	0, 435, 0, 0, 0, 444, 449, 450, 451, 453,
	454, 455, 456, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 428, 320, 321, 322, 300,
	250, 251, 473, 669, 351, 0, 0, 0, 0, 683,
	664, 666, 667, 670, 674, 675, 676, 677, 678, 680,
	682, 686, 472, 0, 0, 0, 0, 0, 469, 357,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 409, 421, 438, 441, 0,
	0, 0, 0, 255, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 685, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 622, 0, 0, 341, 342, 343, 344,
	672, 0, 273, 439, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 694,
	668, 693, 695, 696, 692, 697, 698, 679, 578, 0,
	626, 690, 689, 691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 657, 633, 634, 635, 576,
	636, 630, 631, 632, 658, 624, 654, 655, 603, 627,
	637, 653, 638, 656, 659, 660, 699, 700, 644, 628,
	220, 701, 641, 661, 652, 651, 639, 625, 662, 663,
	610, 605, 642, 643, 629, 645, 646, 647, 577, 606,
	607, 608, 609, 0, 0, 0, 424, 425, 426, 448,
	410, 620, 468, 0, 0, 0, 0, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 0, 0, 648, 0,
	474, 462, 0, 574, 0, 0, 0, 293, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 458, 0, 459, 0, 0, 611, 0,
	463, 384, 337, 0, 0, 0, 0, 673, 681, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 567,
	0, 0, 601, 650, 649, 588, 598, 0, 0, 268,
	197, 460, 0, 461, 589, 0, 597, 590, 594, 593,
	591, 592, 0, 665, 0, 0, 0, 0, 0, 0,
	0, 571, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 568, 569, 0,
	0, 0, 0, 621, 0, 570, 0, 0, 616, 595,
	599, 0, 0, 0, 0, 258, 389, 406, 269, 380,
	419, 274, 387, 264, 352, 376, 0, 0, 260, 404,
	386, 334, 312, 313, 259, 0, 371, 291, 304, 288,
	350, 596, 619, 623, 287, 687, 617, 414, 262, 0,
	413, 349, 400, 405, 335, 329, 261, 402, 333, 328,
	316, 295, 688, 317, 318, 308, 361, 327, 362, 309,
	339, 338, 340, 0, 0, 0, 0, 0, 442, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 416, 0, 0,
	671, 0, 0, 0, 388, 0, 0, 319, 0, 0,
	0, 618, 0, 374, 355, 684, 0, 0, 372, 325,
	401, 363, 407, 390, 415, 368, 364, 253, 391, 290,
	336, 265, 267, 285, 292, 294, 296, 297, 345, 346,
	358, 379, 392, 393, 394, 289, 275, 373, 276, 306,
	277, 254, 281, 280, 282, 381, 283, 256, 359, 398,
	0, 302, 369, 332, 257, 331, 360, 397, 396, 266,
	423, 429, 430, 0, 0, 435, 0, 0, 0, 444,
	449, 450, 451, 453, 454, 455, 456, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 428,
	320, 321, 322, 300, 250, 251, 473, 669, 351, 0,
	0, 0, 0, 683, 664, 666, 667, 670, 674, 675,
	676, 677, 678, 680, 682, 686, 472, 0, 0, 0,
	0, 0, 469, 357, 0, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 409,
	421, 438, 441, 0, 0, 0, 0, 255, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 685, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 622, 0, 0,
	341, 342, 343, 344, 672, 0, 273, 439, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 694, 668, 693, 695, 696, 692, 697,
	698, 679, 578, 0, 626, 690, 689, 691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 470, 467, 399, 471,
	0, 252, 0, 324, 0, 365, 298, 0, 0, 657,
	633, 634, 635, 576, 636, 630, 631, 632, 658, 624,
	654, 655, 603, 627, 637, 653, 638, 656, 659, 660,
	699, 700, 644, 628, 220, 701, 641, 661, 652, 651,
	639, 625, 662, 663, 610, 605, 642, 643, 629, 645,
	646, 647, 577, 606, 607, 608, 609, 0, 0, 0,
	424, 425, 426, 448, 410, 0, 468, 0, 174, 51,
	163, 138, 0, 0, 0, 0, 0, 0, 353, 0,
	0, 0, 648, 0, 474, 462, 164, 0, 0, 0,
	0, 0, 0, 156, 0, 293, 0, 165, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 458, 0, 459, 0, 0, 115, 0, 463, 384,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 103, 0, 0, 0, 0, 0, 168, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 268, 197, 460,
	0, 461, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 389, 406, 269, 380, 419, 274,
	387, 264, 352, 376, 0, 0, 260, 404, 386, 334,
	312, 313, 259, 0, 371, 291, 304, 288, 350, 0,
	403, 431, 287, 422, 0, 414, 262, 0, 413, 349,
	400, 405, 335, 329, 261, 402, 333, 328, 316, 295,
	447, 317, 318, 308, 361, 327, 362, 309, 339, 338,
	340, 0, 0, 0, 0, 0, 442, 443, 0, 0,
	0, 0, 0, 0, 137, 162, 172, 0, 101, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 189, 0,
	0, 0, 388, 0, 0, 319, 161, 155, 154, 432,
	0, 374, 355, 57, 0, 0, 372, 325, 401, 363,
	407, 390, 415, 368, 364, 253, 391, 290, 336, 265,
	267, 285, 292, 294, 296, 297, 345, 346, 358, 379,
	392, 393, 394, 289, 275, 373, 276, 306, 277, 254,
	281, 280, 282, 381, 283, 256, 359, 398, 0, 302,
	369, 332, 257, 331, 360, 397, 396, 266, 423, 429,
	430, 0, 0, 435, 157, 158, 159, 444, 449, 450,
	451, 453, 454, 455, 456, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 428, 320, 321,
	322, 300, 250, 251, 411, 286, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 427,
	192, 0, 0, 457, 200, 0, 0, 0, 160, 0,
	201, 357, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 409, 421, 438,
	441, 0, 0, 0, 0, 255, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 436, 0, 0, 341, 342,
	343, 344, 303, 0, 273, 439, 367, 113, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 0, 0, 0, 0, 0, 433, 434, 299, 305,
	452, 307, 272, 356, 301, 418, 314, 0, 445, 0,
	446, 0, 0, 0, 0, 348, 310, 311, 382, 315,
	326, 370, 417, 354, 375, 270, 408, 383, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 0,
	248, 278, 279, 284, 366, 263, 399, 377, 0, 252,
	0, 324, 139, 365, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 0, 353, 0, 424, 425,
	426, 448, 410, 0, 202, 39, 190, 193, 195, 194,
	0, 49, 0, 293, 0, 5, 323, 0, 0, 0,
	0, 118, 203, 462, 0, 0, 0, 0, 0, 458,
	0, 459, 0, 0, 0, 0, 463, 384, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1078, 0, 0, 196, 0,
	0, 588, 598, 0, 0, 268, 197, 460, 0, 461,
	589, 0, 597, 590, 594, 593, 591, 592, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 595, 0, 0, 0, 0,
	0, 258, 389, 406, 269, 380, 419, 274, 387, 264,
	352, 376, 0, 0, 260, 404, 386, 334, 312, 313,
	259, 0, 371, 291, 304, 288, 350, 596, 403, 431,
	287, 422, 0, 414, 262, 0, 413, 349, 400, 405,
	335, 329, 261, 402, 333, 328, 316, 295, 447, 317,
	318, 308, 361, 327, 362, 309, 339, 338, 340, 0,
	0, 0, 0, 0, 442, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	388, 0, 0, 319, 0, 0, 0, 432, 0, 374,
	355, 0, 0, 0, 372, 325, 401, 363, 407, 390,
	415, 368, 364, 253, 391, 290, 336, 265, 267, 285,
	292, 294, 296, 297, 345, 346, 358, 379, 392, 393,
	394, 289, 275, 373, 276, 306, 277, 254, 281, 280,
	282, 381, 283, 256, 359, 398, 0, 302, 369, 332,
	257, 331, 360, 397, 396, 266, 423, 429, 430, 0,
	0, 435, 0, 0, 0, 444, 449, 450, 451, 453,
	454, 455, 456, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 428, 320, 321, 322, 300,
	250, 251, 473, 286, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 427, 0, 0,
	0, 457, 472, 0, 0, 0, 0, 0, 469, 357,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 409, 421, 438, 441, 0,
	0, 0, 0, 255, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 412, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 436, 0, 0, 341, 342, 343, 344,
	303, 0, 273, 439, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 0, 249, 244,
	245, 246, 247, 0, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 174, 51, 163, 138, 0, 0, 0,
	0, 0, 0, 353, 491, 0, 0, 0, 0, 0,
	474, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 458, 0, 459, 0,
	0, 0, 0, 463, 384, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 496, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 460, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 0, 403, 431, 287, 422, 0,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 447, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 495, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 432, 0, 374, 355, 0, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	286, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 427, 0, 0, 0, 457, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	436, 0, 0, 341, 342, 343, 344, 492, 494, 273,
	439, 367, 504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 299, 305, 452, 307, 272, 356, 301,
	418, 314, 0, 445, 0, 446, 0, 0, 0, 0,
	348, 310, 311, 382, 315, 326, 370, 417, 354, 375,
	270, 408, 383, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 0, 248, 278, 279, 284, 470,
	467, 399, 471, 0, 252, 0, 324, 139, 365, 298,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 219, 220, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 0, 249, 244, 245, 246, 247,
	353, 0, 0, 424, 425, 426, 448, 410, 904, 468,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 474, 462, 0,
	0, 0, 0, 458, 0, 459, 0, 0, 0, 0,
	463, 384, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 268,
	197, 460, 0, 461, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 890, 0,
	0, 0, 0, 0, 0, 258, 389, 406, 269, 380,
	419, 274, 387, 264, 352, 376, 0, 0, 2172, 2174,
	2175, 2176, 2177, 2178, 2179, 0, 2184, 2180, 2181, 2182,
	2183, 0, 2167, 2168, 2169, 2170, 888, 2151, 2173, 0,
	2152, 349, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160,
	2161, 2164, 2165, 2162, 2163, 2171, 361, 327, 362, 309,
	339, 338, 340, 915, 917, 919, 921, 924, 442, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 319, 0, 0,
	0, 2166, 0, 374, 355, 0, 0, 0, 372, 325,
	401, 363, 407, 390, 415, 368, 364, 253, 391, 290,
	336, 265, 267, 285, 292, 294, 296, 297, 345, 346,
	358, 379, 392, 393, 394, 289, 275, 373, 276, 306,
	277, 254, 281, 280, 282, 381, 283, 256, 359, 398,
	0, 302, 369, 332, 257, 331, 360, 397, 396, 266,
	423, 429, 430, 0, 0, 435, 0, 0, 0, 444,
	449, 450, 451, 453, 454, 455, 456, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 428,
	320, 321, 322, 300, 250, 251, 473, 286, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 427, 0, 0, 0, 457, 472, 0, 0, 0,
	0, 0, 469, 357, 0, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 409,
	421, 438, 441, 0, 0, 0, 0, 255, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 436, 0, 0,
	341, 342, 343, 344, 303, 0, 273, 439, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 470, 467, 399, 471,
	0, 252, 914, 324, 0, 365, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 353, 0, 0,
	424, 425, 426, 448, 410, 0, 468, 0, 0, 1780,
	0, 0, 0, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 474, 462, 0, 0, 0, 0,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 1781, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 1011, 1012, 1013, 1010, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 299, 305, 452,
	307, 272, 356, 301, 418, 314, 0, 445, 0, 446,
	0, 0, 0, 0, 348, 310, 311, 382, 315, 326,
	370, 417, 354, 375, 270, 408, 383, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 0, 248,
	278, 279, 284, 470, 467, 399, 471, 0, 252, 0,
	324, 0, 365, 298, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 0, 249,
	244, 245, 246, 247, 353, 0, 0, 424, 425, 426,
	448, 410, 0, 468, 0, 0, 0, 0, 0, 0,
	0, 293, 821, 0, 323, 0, 0, 0, 0, 0,
	0, 474, 462, 0, 0, 0, 0, 458, 0, 459,
	0, 0, 0, 0, 463, 384, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 828, 829, 0,
	0, 0, 0, 268, 197, 460, 0, 461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 832, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	389, 816, 269, 380, 419, 274, 387, 264, 352, 376,
	0, 0, 260, 404, 386, 334, 312, 313, 259, 0,
	371, 291, 304, 288, 350, 0, 403, 431, 287, 422,
	806, 414, 262, 805, 413, 349, 400, 405, 335, 329,
	261, 402, 333, 328, 316, 295, 447, 317, 318, 308,
	361, 327, 362, 309, 339, 338, 340, 0, 0, 0,
	0, 0, 442, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 319, 0, 0, 0, 432, 0, 374, 355, 0,
	0, 0, 372, 325, 401, 363, 407, 390, 415, 819,
	364, 253, 391, 290, 336, 265, 267, 285, 292, 294,
	296, 297, 345, 346, 358, 379, 392, 393, 394, 289,
	275, 373, 276, 306, 277, 254, 281, 280, 282, 381,
	283, 256, 359, 398, 0, 302, 369, 332, 257, 331,
	360, 397, 396, 266, 423, 429, 430, 0, 0, 435,
	0, 0, 0, 444, 449, 450, 451, 453, 454, 455,
	456, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 428, 320, 321, 322, 300, 250, 251,
	473, 286, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 427, 0, 0, 0, 457,
	472, 0, 0, 0, 0, 0, 469, 357, 0, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 409, 421, 438, 441, 0, 0, 0,
	0, 255, 440, 0, 0, 0, 0, 0, 0, 820,
	0, 412, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 823, 0, 0, 341, 342, 343, 344, 303, 0,
	273, 439, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 299, 305, 452, 307, 272, 356,
	301, 418, 314, 0, 445, 0, 446, 0, 0, 0,
	0, 830, 817, 826, 818, 315, 326, 370, 417, 354,
	375, 270, 408, 383, 827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 248, 278, 279, 284,
	470, 467, 399, 471, 0, 252, 0, 324, 0, 365,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 0, 249, 244, 245, 246,
	247, 353, 0, 0, 424, 425, 426, 448, 410, 0,
	468, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 474, 462,
	0, 0, 0, 0, 458, 0, 459, 0, 0, 0,
	0, 463, 384, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 460, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 2046, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 389, 406, 269,
	380, 419, 274, 387, 264, 352, 376, 0, 0, 260,
	404, 386, 334, 312, 313, 259, 0, 371, 291, 304,
	288, 350, 0, 403, 431, 287, 422, 0, 414, 262,
	0, 413, 349, 400, 405, 335, 329, 261, 402, 333,
	328, 316, 295, 447, 317, 318, 308, 361, 327, 362,
	309, 339, 338, 340, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2045, 416, 0,
	0, 0, 2050, 2048, 0, 388, 0, 2049, 319, 0,
	0, 0, 432, 0, 374, 355, 0, 0, 0, 372,
	325, 401, 363, 407, 390, 415, 368, 364, 253, 391,
	290, 336, 265, 267, 285, 292, 294, 296, 297, 345,
	346, 358, 379, 392, 393, 394, 289, 275, 373, 276,
	306, 277, 254, 281, 280, 282, 381, 283, 256, 359,
	398, 0, 302, 369, 332, 257, 331, 360, 397, 396,
	266, 423, 429, 430, 0, 0, 435, 0, 0, 0,
	444, 449, 450, 451, 453, 454, 455, 456, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	428, 320, 321, 322, 300, 250, 251, 473, 286, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 427, 0, 0, 0, 457, 472, 0, 0,
	0, 0, 0, 469, 357, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	409, 421, 438, 441, 0, 0, 0, 0, 255, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 436, 0,
	0, 341, 342, 343, 344, 303, 0, 273, 439, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 299, 305, 452, 307, 272, 356, 301, 418, 314,
	0, 445, 0, 446, 0, 0, 0, 0, 348, 310,
	311, 382, 315, 326, 370, 417, 354, 375, 270, 408,
	383, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 248, 278, 279, 284, 470, 467, 399,
	471, 0, 252, 0, 324, 0, 365, 298, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	174, 0, 0, 249, 244, 245, 246, 247, 0, 0,
	353, 424, 425, 426, 448, 410, 0, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 0,
	323, 0, 0, 0, 0, 474, 462, 0, 0, 0,
	0, 0, 0, 458, 0, 459, 0, 0, 115, 0,
	463, 384, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	1824, 0, 196, 0, 0, 0, 0, 0, 0, 268,
	197, 460, 0, 461, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 389, 406, 269, 380,
	419, 274, 387, 264, 352, 376, 0, 0, 260, 404,
	386, 334, 312, 313, 259, 0, 371, 291, 304, 288,
	350, 0, 403, 431, 287, 422, 0, 414, 262, 0,
	413, 349, 400, 405, 335, 329, 261, 402, 333, 328,
	316, 295, 447, 317, 318, 308, 361, 327, 362, 309,
	339, 338, 340, 0, 0, 0, 0, 0, 442, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 319, 0, 0,
	0, 432, 0, 374, 355, 0, 0, 0, 372, 325,
	401, 363, 407, 390, 415, 368, 364, 253, 391, 290,
	336, 265, 267, 285, 292, 294, 296, 297, 345, 346,
	358, 379, 392, 393, 394, 289, 275, 373, 276, 306,
	277, 254, 281, 280, 282, 381, 283, 256, 359, 398,
	0, 302, 369, 332, 257, 331, 360, 397, 396, 266,
	423, 429, 430, 0, 0, 435, 0, 0, 0, 444,
	449, 450, 451, 453, 454, 455, 456, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 428,
	320, 321, 322, 300, 250, 251, 473, 286, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 427, 0, 0, 0, 457, 472, 0, 0, 0,
	0, 0, 469, 357, 0, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 409,
	421, 438, 441, 0, 0, 0, 0, 255, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 436, 0, 0,
	341, 342, 343, 344, 303, 0, 273, 439, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 470, 467, 399, 471,
	0, 252, 0, 324, 139, 365, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 174,
	0, 0, 249, 244, 245, 246, 247, 0, 0, 353,
	424, 425, 426, 448, 410, 0, 468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 323,
	0, 0, 0, 0, 474, 462, 0, 0, 0, 0,
	0, 0, 458, 0, 459, 0, 0, 115, 0, 463,
	384, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 1815,
	0, 196, 0, 0, 0, 0, 0, 0, 268, 197,
	460, 0, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 389, 406, 269, 380, 419,
	274, 387, 264, 352, 376, 0, 0, 260, 404, 386,
	334, 312, 313, 259, 0, 371, 291, 304, 288, 350,
	0, 403, 431, 287, 422, 0, 414, 262, 0, 413,
	349, 400, 405, 335, 329, 261, 402, 333, 328, 316,
	295, 447, 317, 318, 308, 361, 327, 362, 309, 339,
	338, 340, 0, 0, 0, 0, 0, 442, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 319, 0, 0, 0,
	432, 0, 374, 355, 0, 0, 0, 372, 325, 401,
	363, 407, 390, 415, 368, 364, 253, 391, 290, 336,
	265, 267, 285, 292, 294, 296, 297, 345, 346, 358,
	379, 392, 393, 394, 289, 275, 373, 276, 306, 277,
	254, 281, 280, 282, 381, 283, 256, 359, 398, 0,
	302, 369, 332, 257, 331, 360, 397, 396, 266, 423,
	429, 430, 0, 0, 435, 0, 0, 0, 444, 449,
	450, 451, 453, 454, 455, 456, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 428, 320,
	321, 322, 300, 250, 251, 473, 286, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	427, 0, 0, 0, 457, 472, 0, 0, 0, 0,
	0, 469, 357, 0, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 409, 421,
	438, 441, 0, 0, 0, 0, 255, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 436, 0, 0, 341,
	342, 343, 344, 303, 0, 273, 439, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 299,
	305, 452, 307, 272, 356, 301, 418, 314, 0, 445,
	0, 446, 0, 0, 0, 0, 348, 310, 311, 382,
	315, 326, 370, 417, 354, 375, 270, 408, 383, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	0, 248, 278, 279, 284, 470, 467, 399, 471, 0,
	252, 0, 324, 139, 365, 298, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 219, 220, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 174, 0,
	0, 249, 244, 245, 246, 247, 0, 0, 353, 424,
	425, 426, 448, 410, 0, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 0, 0, 323, 0,
	0, 0, 0, 474, 462, 0, 0, 0, 0, 0,
	0, 458, 0, 459, 0, 0, 115, 0, 463, 384,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1714, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 268, 197, 460,
	0, 461, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 389, 406, 269, 380, 419, 274,
	387, 264, 352, 376, 0, 0, 260, 404, 386, 334,
	312, 313, 259, 0, 371, 291, 304, 288, 350, 0,
	403, 431, 287, 422, 0, 414, 262, 0, 413, 349,
	400, 405, 335, 329, 261, 402, 333, 328, 316, 295,
	447, 317, 318, 308, 361, 327, 362, 309, 339, 338,
	340, 0, 0, 0, 0, 0, 442, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 319, 0, 0, 0, 432,
	0, 374, 355, 0, 0, 0, 372, 325, 401, 363,
	407, 390, 415, 368, 364, 253, 391, 290, 336, 265,
	267, 285, 292, 294, 296, 297, 345, 346, 358, 379,
	392, 393, 394, 289, 275, 373, 276, 306, 277, 254,
	281, 280, 282, 381, 283, 256, 359, 398, 0, 302,
	369, 332, 257, 331, 360, 397, 396, 266, 423, 429,
	430, 0, 0, 435, 0, 0, 0, 444, 449, 450,
	451, 453, 454, 455, 456, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 428, 320, 321,
	322, 300, 250, 251, 473, 286, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 427,
	0, 0, 0, 457, 472, 0, 0, 0, 0, 0,
	469, 357, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 409, 421, 438,
	441, 0, 0, 0, 0, 255, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 436, 0, 0, 341, 342,
	343, 344, 303, 0, 273, 439, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 299, 305,
	452, 307, 272, 356, 301, 418, 314, 0, 445, 0,
	446, 0, 0, 0, 0, 348, 310, 311, 382, 315,
	326, 370, 417, 354, 375, 270, 408, 383, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 0,
	248, 278, 279, 284, 470, 467, 399, 471, 0, 252,
	0, 324, 139, 365, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 353, 0, 0, 424, 425,
	426, 448, 410, 0, 468, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 474, 462, 0, 0, 0, 0, 458, 0,
	459, 0, 0, 0, 0, 463, 384, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 828, 829,
	0, 0, 0, 0, 268, 197, 460, 0, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 389, 406, 269, 380, 419, 274, 387, 264, 352,
	376, 0, 0, 260, 404, 386, 334, 312, 313, 259,
	0, 371, 291, 304, 288, 350, 0, 403, 431, 287,
	422, 806, 414, 262, 805, 413, 349, 400, 405, 335,
	329, 261, 402, 333, 328, 316, 295, 447, 317, 318,
	308, 361, 327, 362, 309, 339, 338, 340, 0, 0,
	0, 0, 0, 442, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 319, 0, 0, 0, 432, 0, 374, 355,
	0, 0, 0, 372, 325, 401, 363, 407, 390, 415,
	368, 364, 253, 391, 290, 336, 265, 267, 285, 292,
	294, 296, 297, 345, 346, 358, 379, 392, 393, 394,
	289, 275, 373, 276, 306, 277, 254, 281, 280, 282,
	381, 283, 256, 359, 398, 0, 302, 369, 332, 257,
	331, 360, 397, 396, 266, 423, 429, 430, 0, 0,
	435, 0, 0, 0, 444, 449, 450, 451, 453, 454,
	455, 456, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 428, 320, 321, 322, 300, 250,
	251, 473, 286, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 427, 0, 0, 0,
	457, 472, 0, 0, 0, 0, 0, 469, 357, 0,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 409, 421, 438, 441, 0, 0,
	0, 0, 255, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 436, 0, 0, 341, 342, 343, 344, 303,
	0, 273, 439, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 299, 305, 452, 307, 272,
	356, 301, 418, 314, 0, 445, 0, 446, 0, 0,
	0, 0, 830, 1733, 826, 1734, 315, 326, 370, 417,
	354, 375, 270, 408, 383, 827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 0, 248, 278, 279,
	284, 470, 467, 399, 471, 0, 252, 0, 324, 0,
	365, 298, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 219, 220,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 0, 249, 244, 245,
	246, 247, 0, 353, 0, 424, 425, 426, 448, 410,
	0, 468, 2500, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 474,
	462, 0, 0, 0, 0, 0, 458, 0, 459, 0,
	0, 0, 0, 463, 384, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 460, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 0, 403, 431, 287, 422, 0,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 447, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 2503, 0, 0, 2502, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 432, 0, 374, 355, 0, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	286, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 427, 0, 0, 0, 457, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	436, 0, 0, 341, 342, 343, 344, 303, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 299, 305, 452, 307, 272, 356, 301,
	418, 314, 0, 445, 0, 446, 0, 0, 0, 0,
	348, 310, 311, 382, 315, 326, 370, 417, 354, 375,
	270, 408, 383, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 0, 248, 278, 279, 284, 470,
	467, 399, 471, 0, 252, 0, 324, 0, 365, 298,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 219, 220, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 0, 249, 244, 245, 246, 247,
	353, 0, 0, 424, 425, 426, 448, 410, 0, 468,
	0, 0, 0, 0, 0, 0, 0, 293, 1266, 0,
	323, 0, 0, 0, 0, 0, 0, 474, 462, 0,
	0, 0, 0, 458, 0, 459, 0, 0, 0, 0,
	463, 384, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 1264, 0, 0, 0, 268,
	197, 460, 0, 461, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1262, 0,
	0, 0, 0, 0, 0, 258, 389, 406, 269, 380,
	419, 274, 387, 264, 352, 376, 0, 0, 260, 404,
	386, 334, 312, 313, 259, 0, 371, 291, 304, 288,
	350, 0, 403, 431, 287, 422, 0, 414, 262, 0,
	413, 349, 400, 405, 335, 329, 261, 402, 333, 328,
	316, 295, 447, 317, 318, 308, 361, 327, 362, 309,
	339, 338, 340, 0, 0, 0, 0, 0, 442, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 319, 0, 0,
	0, 432, 0, 374, 355, 0, 0, 0, 372, 325,
	401, 363, 407, 390, 415, 368, 364, 253, 391, 290,
	336, 265, 267, 285, 292, 294, 296, 297, 345, 346,
	358, 379, 392, 393, 394, 289, 275, 373, 276, 306,
	277, 254, 281, 280, 282, 381, 283, 256, 359, 398,
	0, 302, 369, 332, 257, 331, 360, 397, 396, 266,
	423, 429, 430, 0, 0, 435, 0, 0, 0, 444,
	449, 450, 451, 453, 454, 455, 456, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 428,
	320, 321, 322, 300, 250, 251, 473, 286, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 427, 0, 0, 0, 457, 472, 0, 0, 0,
	0, 0, 469, 357, 0, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 409,
	421, 438, 441, 0, 0, 0, 0, 255, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 436, 0, 0,
	341, 342, 343, 344, 303, 0, 273, 439, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 470, 467, 399, 471,
	0, 252, 0, 324, 0, 365, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 353, 0, 0,
	424, 425, 426, 448, 410, 0, 468, 0, 0, 0,
	0, 0, 0, 0, 293, 1260, 0, 323, 0, 0,
	0, 0, 0, 0, 474, 462, 0, 0, 0, 0,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 1264, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1262, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 299, 305, 452,
	307, 272, 356, 301, 418, 314, 0, 445, 0, 446,
	0, 0, 0, 0, 348, 310, 311, 382, 315, 326,
	370, 417, 354, 375, 270, 408, 383, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 0, 248,
	278, 279, 284, 470, 467, 399, 471, 0, 252, 0,
	324, 0, 365, 298, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 0, 249,
	244, 245, 246, 247, 353, 0, 0, 424, 425, 426,
	448, 410, 0, 468, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 474, 462, 0, 0, 0, 0, 458, 0, 459,
	0, 0, 0, 0, 463, 384, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3334, 0, 196, 650, 0, 0,
	0, 0, 0, 268, 197, 460, 0, 461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	389, 406, 269, 380, 419, 274, 387, 264, 352, 376,
	0, 0, 260, 404, 386, 334, 312, 313, 259, 0,
	371, 291, 304, 288, 350, 0, 403, 431, 287, 422,
	0, 414, 262, 0, 413, 349, 400, 405, 335, 329,
	261, 402, 333, 328, 316, 295, 447, 317, 318, 308,
	361, 327, 362, 309, 339, 338, 340, 0, 0, 0,
	0, 0, 442, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 319, 0, 0, 0, 432, 0, 374, 355, 0,
	0, 0, 372, 325, 401, 363, 407, 390, 415, 368,
	364, 253, 391, 290, 336, 265, 267, 285, 292, 294,
	296, 297, 345, 346, 358, 379, 392, 393, 394, 289,
	275, 373, 276, 306, 277, 254, 281, 280, 282, 381,
	283, 256, 359, 398, 0, 302, 369, 332, 257, 331,
	360, 397, 396, 266, 423, 429, 430, 0, 0, 435,
	0, 0, 0, 444, 449, 450, 451, 453, 454, 455,
	456, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 428, 320, 321, 322, 300, 250, 251,
	473, 286, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 427, 0, 0, 0, 457,
	472, 0, 0, 0, 0, 0, 469, 357, 0, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 409, 421, 438, 441, 0, 0, 0,
	0, 255, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 436, 0, 0, 341, 342, 343, 344, 303, 0,
	273, 439, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 299, 305, 452, 307, 272, 356,
	301, 418, 314, 0, 445, 0, 446, 0, 0, 0,
	0, 348, 310, 311, 382, 315, 326, 370, 417, 354,
	375, 270, 408, 383, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 248, 278, 279, 284,
	470, 467, 399, 471, 0, 252, 0, 324, 0, 365,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 0, 249, 244, 245, 246,
	247, 353, 0, 0, 424, 425, 426, 448, 410, 0,
	468, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 474, 462,
	0, 0, 0, 0, 458, 0, 459, 0, 0, 0,
	0, 463, 384, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 1264, 0, 0, 0,
	268, 197, 460, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1262,
	0, 0, 0, 0, 0, 0, 258, 389, 406, 269,
	380, 419, 274, 387, 264, 352, 376, 0, 0, 260,
	404, 386, 334, 312, 313, 259, 0, 371, 291, 304,
	288, 350, 0, 403, 431, 287, 422, 0, 414, 262,
	0, 413, 349, 400, 405, 335, 329, 261, 402, 333,
	328, 316, 295, 447, 317, 318, 308, 361, 327, 362,
	309, 339, 338, 340, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 319, 0,
	0, 0, 432, 0, 374, 355, 0, 0, 0, 372,
	325, 401, 363, 407, 390, 415, 368, 364, 253, 391,
	290, 336, 265, 267, 285, 292, 294, 296, 297, 345,
	346, 358, 379, 392, 393, 394, 289, 275, 373, 276,
	306, 277, 254, 281, 280, 282, 381, 283, 256, 359,
	398, 0, 302, 369, 332, 257, 331, 360, 397, 396,
	266, 423, 429, 430, 0, 0, 435, 0, 0, 0,
	444, 449, 450, 451, 453, 454, 455, 456, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	428, 320, 321, 322, 300, 250, 251, 473, 286, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 427, 0, 0, 0, 457, 472, 0, 0,
	0, 0, 0, 469, 357, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	409, 421, 438, 441, 0, 0, 0, 0, 255, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 436, 0,
	0, 341, 342, 343, 344, 303, 0, 273, 439, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 299, 305, 452, 307, 272, 356, 301, 418, 314,
	0, 445, 0, 446, 0, 0, 0, 0, 348, 310,
	311, 382, 315, 326, 370, 417, 354, 375, 270, 408,
	383, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 248, 278, 279, 284, 470, 467, 399,
	471, 0, 252, 0, 324, 0, 365, 298, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 0, 249, 244, 245, 246, 247, 353, 0,
	0, 424, 425, 426, 448, 410, 0, 468, 0, 0,
	0, 0, 0, 0, 0, 293, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 474, 462, 0, 0, 0,
	0, 458, 0, 459, 0, 0, 0, 0, 463, 384,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 1264, 0, 0, 0, 268, 197, 460,
	0, 461, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3046, 0, 0, 0,
	0, 0, 0, 258, 389, 406, 269, 380, 419, 274,
	387, 264, 352, 376, 0, 0, 260, 404, 386, 334,
	312, 313, 259, 0, 371, 291, 304, 288, 350, 0,
	403, 431, 287, 422, 0, 414, 262, 0, 413, 349,
	400, 405, 335, 329, 261, 402, 333, 328, 316, 295,
	447, 317, 318, 308, 361, 327, 362, 309, 339, 338,
	340, 0, 0, 0, 0, 0, 442, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 319, 0, 0, 0, 432,
	0, 374, 355, 0, 0, 0, 372, 325, 401, 363,
	407, 390, 415, 368, 364, 253, 391, 290, 336, 265,
	267, 285, 292, 294, 296, 297, 345, 346, 358, 379,
	392, 393, 394, 289, 275, 373, 276, 306, 277, 254,
	281, 280, 282, 381, 283, 256, 359, 398, 0, 302,
	369, 332, 257, 331, 360, 397, 396, 266, 423, 429,
	430, 0, 0, 435, 0, 0, 0, 444, 449, 450,
	451, 453, 454, 455, 456, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 428, 320, 321,
	322, 300, 250, 251, 473, 286, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 427,
	0, 0, 0, 457, 472, 0, 0, 0, 0, 0,
	469, 357, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 409, 421, 438,
	441, 0, 0, 0, 0, 255, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 436, 0, 0, 341, 342,
	343, 344, 303, 0, 273, 439, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 299, 305,
	452, 307, 272, 356, 301, 418, 314, 0, 445, 0,
	446, 0, 0, 0, 0, 348, 310, 311, 382, 315,
	326, 370, 417, 354, 375, 270, 408, 383, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 0,
	248, 278, 279, 284, 470, 467, 399, 471, 0, 252,
	0, 324, 0, 365, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 353, 0, 0, 424, 425,
	426, 448, 410, 0, 468, 0, 0, 2115, 0, 0,
	0, 0, 293, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 474, 462, 0, 0, 0, 0, 458, 0,
	459, 0, 0, 0, 0, 463, 384, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	2117, 0, 0, 0, 268, 197, 460, 0, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 389, 406, 269, 380, 419, 274, 387, 264, 352,
	376, 0, 0, 260, 404, 386, 334, 312, 313, 259,
	0, 371, 291, 304, 288, 350, 0, 403, 431, 287,
	422, 0, 414, 262, 0, 413, 349, 400, 405, 335,
	329, 261, 402, 333, 328, 316, 295, 447, 317, 318,
	308, 361, 327, 362, 309, 339, 338, 340, 0, 0,
	0, 0, 0, 442, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 319, 0, 0, 0, 432, 0, 374, 355,
	0, 0, 0, 372, 325, 401, 363, 407, 390, 415,
	368, 364, 253, 391, 290, 336, 265, 267, 285, 292,
	294, 296, 297, 345, 346, 358, 379, 392, 393, 394,
	289, 275, 373, 276, 306, 277, 254, 281, 280, 282,
	381, 283, 256, 359, 398, 0, 302, 369, 332, 257,
	331, 360, 397, 396, 266, 423, 429, 430, 0, 0,
	435, 0, 0, 0, 444, 449, 450, 451, 453, 454,
	455, 456, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 428, 320, 321, 322, 300, 250,
	251, 473, 286, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 427, 0, 0, 0,
	457, 472, 0, 0, 0, 0, 0, 469, 357, 0,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 409, 421, 438, 441, 0, 0,
	0, 0, 255, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 436, 0, 0, 341, 342, 343, 344, 303,
	0, 273, 439, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 299, 305, 452, 307, 272,
	356, 301, 418, 314, 0, 445, 0, 446, 0, 0,
	0, 0, 348, 310, 311, 382, 315, 326, 370, 417,
	354, 375, 270, 408, 383, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 0, 248, 278, 279,
	284, 470, 467, 399, 471, 0, 252, 0, 324, 0,
	365, 298, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 219, 220,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 0, 249, 244, 245,
	246, 247, 353, 0, 0, 424, 425, 426, 448, 410,
	0, 468, 0, 0, 0, 0, 0, 0, 0, 293,
	2136, 0, 323, 0, 0, 0, 0, 0, 0, 474,
	462, 0, 0, 0, 0, 458, 0, 459, 0, 0,
	0, 0, 463, 384, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 1264, 0, 0,
	0, 268, 197, 460, 0, 461, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 389, 406,
	269, 380, 419, 274, 387, 264, 352, 376, 0, 0,
	260, 404, 386, 334, 312, 313, 259, 0, 371, 291,
	304, 288, 350, 0, 403, 431, 287, 422, 0, 414,
	262, 0, 413, 349, 400, 405, 335, 329, 261, 402,
	333, 328, 316, 295, 447, 317, 318, 308, 361, 327,
	362, 309, 339, 338, 340, 0, 0, 0, 0, 0,
	442, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 319,
	0, 0, 0, 432, 0, 374, 355, 0, 0, 0,
	372, 325, 401, 363, 407, 390, 415, 368, 364, 253,
	391, 290, 336, 265, 267, 285, 292, 294, 296, 297,
	345, 346, 358, 379, 392, 393, 394, 289, 275, 373,
	276, 306, 277, 254, 281, 280, 282, 381, 283, 256,
	359, 398, 0, 302, 369, 332, 257, 331, 360, 397,
	396, 266, 423, 429, 430, 0, 0, 435, 0, 0,
	0, 444, 449, 450, 451, 453, 454, 455, 456, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 428, 320, 321, 322, 300, 250, 251, 473, 286,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 427, 0, 0, 0, 457, 472, 0,
	0, 0, 0, 0, 469, 357, 0, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 409, 421, 438, 441, 0, 0, 0, 0, 255,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 412,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 436,
	0, 0, 341, 342, 343, 344, 303, 0, 273, 439,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 0, 249, 244, 245, 246, 247, 353,
	0, 0, 424, 425, 426, 448, 410, 0, 468, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 474, 462, 0, 0,
	0, 0, 458, 0, 459, 0, 0, 0, 0, 463,
	384, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3434,
	0, 196, 0, 0, 0, 0, 0, 0, 268, 197,
	460, 0, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 389, 406, 269, 380, 419,
	274, 387, 264, 352, 376, 0, 0, 260, 404, 386,
	334, 312, 313, 259, 0, 371, 291, 304, 288, 350,
	0, 403, 431, 287, 422, 0, 414, 262, 0, 413,
	349, 400, 405, 335, 329, 261, 402, 333, 328, 316,
	295, 447, 317, 318, 308, 361, 327, 362, 309, 339,
	338, 340, 0, 0, 0, 0, 0, 442, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 319, 0, 0, 0,
	432, 0, 374, 355, 0, 0, 0, 372, 325, 401,
	363, 407, 390, 415, 368, 364, 253, 391, 290, 336,
	265, 267, 285, 292, 294, 296, 297, 345, 346, 358,
	379, 392, 393, 394, 289, 275, 373, 276, 306, 277,
	254, 281, 280, 282, 381, 283, 256, 359, 398, 0,
	302, 369, 332, 257, 331, 360, 397, 396, 266, 423,
	429, 430, 0, 0, 435, 0, 0, 0, 444, 449,
	450, 451, 453, 454, 455, 456, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 428, 320,
	321, 322, 300, 250, 251, 473, 286, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	427, 0, 0, 0, 457, 472, 0, 0, 0, 0,
	0, 469, 357, 0, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 409, 421,
	438, 441, 0, 0, 0, 0, 255, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 436, 0, 0, 341,
	342, 343, 344, 303, 0, 273, 439, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 299,
	305, 452, 307, 272, 356, 301, 418, 314, 0, 445,
	0, 446, 0, 0, 0, 0, 348, 310, 311, 382,
	315, 326, 370, 417, 354, 375, 270, 408, 383, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	0, 248, 278, 279, 284, 470, 467, 399, 471, 0,
	252, 0, 324, 0, 365, 298, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 219, 220, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	0, 249, 244, 245, 246, 247, 353, 0, 0, 424,
	425, 426, 448, 410, 0, 468, 0, 0, 0, 0,
	0, 0, 0, 293, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 474, 462, 0, 0, 0, 0, 458,
	0, 459, 0, 0, 0, 0, 463, 384, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 650,
	0, 0, 0, 0, 0, 268, 197, 460, 0, 461,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 389, 406, 269, 380, 419, 274, 387, 264,
	352, 376, 0, 0, 260, 404, 386, 334, 312, 313,
	259, 0, 371, 291, 304, 288, 350, 0, 403, 431,
	287, 422, 0, 414, 262, 0, 413, 349, 400, 405,
	335, 329, 261, 402, 333, 328, 316, 295, 447, 317,
	318, 308, 361, 327, 362, 309, 339, 338, 340, 0,
	0, 0, 0, 0, 442, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	388, 0, 0, 319, 0, 0, 0, 432, 0, 374,
	355, 0, 0, 0, 372, 325, 401, 363, 407, 390,
	415, 368, 364, 253, 391, 290, 336, 265, 267, 285,
	292, 294, 296, 297, 345, 346, 358, 379, 392, 393,
	394, 289, 275, 373, 276, 306, 277, 254, 281, 280,
	282, 381, 283, 256, 359, 398, 0, 302, 369, 332,
	257, 331, 360, 397, 396, 266, 423, 429, 430, 0,
	0, 435, 0, 0, 0, 444, 449, 450, 451, 453,
	454, 455, 456, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 428, 320, 321, 322, 300,
	250, 251, 473, 286, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 427, 0, 0,
	0, 457, 472, 0, 0, 0, 0, 0, 469, 357,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 409, 421, 438, 441, 0,
	0, 0, 0, 255, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 412, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 436, 0, 0, 341, 342, 343, 344,
	303, 0, 273, 439, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 0, 249, 244,
	245, 246, 247, 353, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	474, 462, 0, 0, 0, 0, 458, 0, 459, 0,
	0, 0, 0, 463, 384, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3353, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 460, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 0, 403, 431, 287, 422, 0,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 447, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 432, 0, 374, 355, 0, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	286, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 427, 0, 0, 0, 457, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	436, 0, 0, 341, 342, 343, 344, 303, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 299, 305, 452, 307, 272, 356, 301,
	418, 314, 0, 445, 0, 446, 0, 0, 0, 0,
	348, 310, 311, 382, 315, 326, 370, 417, 354, 375,
	270, 408, 383, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 0, 248, 278, 279, 284, 470,
	467, 399, 471, 0, 252, 0, 324, 0, 365, 298,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 219, 220, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 0, 249, 244, 245, 246, 247,
	353, 0, 0, 424, 425, 426, 448, 410, 0, 468,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 474, 462, 0,
	0, 0, 0, 458, 0, 459, 0, 0, 0, 0,
	463, 384, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 268,
	197, 460, 0, 461, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 389, 406, 269, 380,
	419, 274, 387, 264, 352, 376, 0, 0, 260, 404,
	386, 334, 312, 313, 259, 0, 371, 291, 304, 288,
	350, 0, 403, 431, 287, 422, 0, 414, 262, 0,
	413, 349, 400, 405, 335, 329, 261, 402, 333, 328,
	316, 295, 447, 317, 318, 308, 361, 327, 362, 309,
	339, 338, 340, 0, 0, 0, 0, 0, 442, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 3272, 0, 0, 388, 0, 0, 319, 0, 0,
	0, 432, 0, 374, 355, 0, 0, 0, 372, 325,
	401, 363, 407, 390, 415, 368, 364, 253, 391, 290,
	336, 265, 267, 285, 292, 294, 296, 297, 345, 346,
	358, 379, 392, 393, 394, 289, 275, 373, 276, 306,
	277, 254, 281, 280, 282, 381, 283, 256, 359, 398,
	0, 302, 369, 332, 257, 331, 360, 397, 396, 266,
	423, 429, 430, 0, 0, 435, 0, 0, 0, 444,
	449, 450, 451, 453, 454, 455, 456, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 428,
	320, 321, 322, 300, 250, 251, 473, 286, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 427, 0, 0, 0, 457, 472, 0, 0, 0,
	0, 0, 469, 357, 0, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 409,
	421, 438, 441, 0, 0, 0, 0, 255, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 436, 0, 0,
	341, 342, 343, 344, 303, 0, 273, 439, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 470, 467, 399, 471,
	0, 252, 0, 324, 0, 365, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 353, 0, 0,
	424, 425, 426, 448, 410, 0, 468, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 474, 462, 0, 0, 0, 0,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3042, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 299, 305, 452,
	307, 272, 356, 301, 418, 314, 0, 445, 0, 446,
	0, 0, 0, 0, 348, 310, 311, 382, 315, 326,
	370, 417, 354, 375, 270, 408, 383, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 0, 248,
	278, 279, 284, 470, 467, 399, 471, 0, 252, 0,
	324, 0, 365, 298, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 0, 249,
	244, 245, 246, 247, 353, 0, 0, 424, 425, 426,
	448, 410, 0, 468, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 474, 462, 0, 0, 0, 0, 458, 0, 459,
	0, 0, 0, 0, 463, 384, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 2867,
	0, 0, 0, 268, 197, 460, 0, 461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	389, 406, 269, 380, 419, 274, 387, 264, 352, 376,
	0, 0, 260, 404, 386, 334, 312, 313, 259, 0,
	371, 291, 304, 288, 350, 0, 403, 431, 287, 422,
	0, 414, 262, 0, 413, 349, 400, 405, 335, 329,
	261, 402, 333, 328, 316, 295, 447, 317, 318, 308,
	361, 327, 362, 309, 339, 338, 340, 0, 0, 0,
	0, 0, 442, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 319, 0, 0, 0, 432, 0, 374, 355, 0,
	0, 0, 372, 325, 401, 363, 407, 390, 415, 368,
	364, 253, 391, 290, 336, 265, 267, 285, 292, 294,
	296, 297, 345, 346, 358, 379, 392, 393, 394, 289,
	275, 373, 276, 306, 277, 254, 281, 280, 282, 381,
	283, 256, 359, 398, 0, 302, 369, 332, 257, 331,
	360, 397, 396, 266, 423, 429, 430, 0, 0, 435,
	0, 0, 0, 444, 449, 450, 451, 453, 454, 455,
	456, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 428, 320, 321, 322, 300, 250, 251,
	473, 286, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 427, 0, 0, 0, 457,
	472, 0, 0, 0, 0, 0, 469, 357, 0, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 409, 421, 438, 441, 0, 0, 0,
	0, 255, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 436, 0, 0, 341, 342, 343, 344, 303, 0,
	273, 439, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 299, 305, 452, 307, 272, 356,
	301, 418, 314, 0, 445, 0, 446, 0, 0, 0,
	0, 348, 310, 311, 382, 315, 326, 370, 417, 354,
	375, 270, 408, 383, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 248, 278, 279, 284,
	470, 467, 399, 471, 0, 252, 0, 324, 0, 365,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 0, 249, 244, 245, 246,
	247, 353, 0, 0, 424, 425, 426, 448, 410, 0,
	468, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 474, 462,
	0, 0, 0, 0, 458, 0, 459, 0, 0, 0,
	0, 463, 384, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 460, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 389, 406, 269,
	380, 419, 274, 387, 264, 352, 376, 0, 0, 260,
	404, 386, 334, 312, 313, 259, 0, 371, 291, 304,
	288, 350, 0, 403, 431, 287, 422, 0, 414, 262,
	0, 413, 349, 400, 405, 335, 329, 261, 402, 333,
	328, 316, 295, 447, 317, 318, 308, 361, 327, 362,
	309, 339, 338, 340, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 3115, 0, 0, 388, 0, 0, 319, 0,
	0, 0, 432, 0, 374, 355, 0, 0, 0, 372,
	325, 401, 363, 407, 390, 415, 368, 364, 253, 391,
	290, 336, 265, 267, 285, 292, 294, 296, 297, 345,
	346, 358, 379, 392, 393, 394, 289, 275, 373, 276,
	306, 277, 254, 281, 280, 282, 381, 283, 256, 359,
	398, 0, 302, 369, 332, 257, 331, 360, 397, 396,
	266, 423, 429, 430, 0, 0, 435, 0, 0, 0,
	444, 449, 450, 451, 453, 454, 455, 456, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	428, 320, 321, 322, 300, 250, 251, 473, 286, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 427, 0, 0, 0, 457, 472, 0, 0,
	0, 0, 0, 469, 357, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	409, 421, 438, 441, 0, 0, 0, 0, 255, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 436, 0,
	0, 341, 342, 343, 344, 303, 0, 273, 439, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 299, 305, 452, 307, 272, 356, 301, 418, 314,
	0, 445, 0, 446, 0, 0, 0, 0, 348, 310,
	311, 382, 315, 326, 370, 417, 354, 375, 270, 408,
	383, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 248, 278, 279, 284, 470, 467, 399,
	471, 0, 252, 0, 324, 0, 365, 298, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 0, 249, 244, 245, 246, 247, 353, 0,
	0, 424, 425, 426, 448, 410, 0, 468, 0, 0,
	0, 0, 0, 0, 0, 293, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 474, 462, 0, 0, 0,
	0, 458, 0, 459, 0, 0, 0, 0, 463, 384,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 2713, 0, 0, 0, 268, 197, 460,
	0, 461, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 389, 406, 269, 380, 419, 274,
	387, 264, 352, 376, 0, 0, 260, 404, 386, 334,
	312, 313, 259, 0, 371, 291, 304, 288, 350, 0,
	403, 431, 287, 422, 0, 414, 262, 0, 413, 349,
	400, 405, 335, 329, 261, 402, 333, 328, 316, 295,
	447, 317, 318, 308, 361, 327, 362, 309, 339, 338,
	340, 0, 0, 0, 0, 0, 442, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 319, 0, 0, 0, 432,
	0, 374, 355, 0, 0, 0, 372, 325, 401, 363,
	407, 390, 415, 368, 364, 253, 391, 290, 336, 265,
	267, 285, 292, 294, 296, 297, 345, 346, 358, 379,
	392, 393, 394, 289, 275, 373, 276, 306, 277, 254,
	281, 280, 282, 381, 283, 256, 359, 398, 0, 302,
	369, 332, 257, 331, 360, 397, 396, 266, 423, 429,
	430, 0, 0, 435, 0, 0, 0, 444, 449, 450,
	451, 453, 454, 455, 456, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 428, 320, 321,
	322, 300, 250, 251, 473, 286, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 427,
	0, 0, 0, 457, 472, 0, 0, 0, 0, 0,
	469, 357, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 409, 421, 438,
	441, 0, 0, 0, 0, 255, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 436, 0, 0, 341, 342,
	343, 344, 303, 0, 273, 439, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 299, 305,
	452, 307, 272, 356, 301, 418, 314, 0, 445, 0,
	446, 0, 0, 0, 0, 348, 310, 311, 382, 315,
	326, 370, 417, 354, 375, 270, 408, 383, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 0,
	248, 278, 279, 284, 470, 467, 399, 471, 0, 252,
	0, 324, 0, 365, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 353, 0, 0, 424, 425,
	426, 448, 410, 0, 468, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 474, 462, 0, 0, 0, 0, 458, 0,
	459, 0, 0, 0, 0, 463, 384, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 460, 0, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 389, 406, 269, 380, 419, 274, 387, 264, 352,
	376, 0, 0, 260, 404, 386, 334, 312, 313, 259,
	0, 371, 291, 304, 288, 350, 0, 403, 431, 287,
	422, 0, 414, 262, 0, 413, 349, 400, 405, 335,
	329, 261, 402, 333, 328, 316, 295, 447, 317, 318,
	308, 361, 327, 362, 309, 339, 338, 340, 0, 0,
	0, 0, 0, 442, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 319, 0, 0, 0, 432, 0, 374, 355,
	0, 0, 0, 372, 325, 401, 363, 407, 390, 415,
	368, 364, 253, 391, 290, 336, 265, 267, 285, 292,
	294, 296, 297, 345, 346, 358, 379, 392, 393, 394,
	289, 275, 373, 276, 306, 277, 254, 281, 280, 282,
	381, 283, 256, 359, 398, 0, 302, 369, 332, 257,
	331, 360, 397, 396, 266, 423, 429, 430, 0, 0,
	435, 0, 0, 0, 444, 449, 450, 451, 453, 454,
	455, 456, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 428, 320, 321, 322, 300, 250,
	251, 473, 286, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 427, 0, 0, 0,
	457, 472, 0, 0, 0, 0, 0, 469, 357, 0,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 409, 421, 438, 441, 0, 0,
	0, 0, 255, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 436, 0, 0, 341, 342, 343, 344, 303,
	0, 273, 439, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 299, 305, 452, 307, 272,
	356, 301, 418, 314, 0, 445, 0, 446, 0, 0,
	0, 0, 348, 310, 311, 382, 315, 326, 370, 417,
	354, 375, 270, 408, 383, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 0, 248, 278, 279,
	284, 470, 467, 399, 471, 0, 252, 0, 324, 0,
	365, 298, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 219, 220,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 0, 249, 244, 245,
	246, 247, 353, 0, 0, 424, 425, 426, 448, 410,
	0, 468, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 474,
	462, 0, 0, 0, 0, 458, 0, 459, 0, 0,
	0, 0, 463, 384, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1714, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 268, 197, 460, 0, 461, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 389, 406,
	269, 380, 419, 274, 387, 264, 352, 376, 0, 0,
	260, 404, 386, 334, 312, 313, 259, 0, 371, 291,
	304, 288, 350, 0, 403, 431, 287, 422, 0, 414,
	262, 0, 413, 349, 400, 405, 335, 329, 261, 402,
	333, 328, 316, 295, 447, 317, 318, 308, 361, 327,
	362, 309, 339, 338, 340, 0, 0, 0, 0, 0,
	442, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 319,
	0, 0, 0, 432, 0, 374, 355, 0, 0, 0,
	372, 325, 401, 363, 407, 390, 415, 368, 364, 253,
	391, 290, 336, 265, 267, 285, 292, 294, 296, 297,
	345, 346, 358, 379, 392, 393, 394, 289, 275, 373,
	276, 306, 277, 254, 281, 280, 282, 381, 283, 256,
	359, 398, 0, 302, 369, 332, 257, 331, 360, 397,
	396, 266, 423, 429, 430, 0, 0, 435, 0, 0,
	0, 444, 449, 450, 451, 453, 454, 455, 456, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 428, 320, 321, 322, 300, 250, 251, 473, 286,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 427, 0, 0, 0, 457, 472, 0,
	0, 0, 0, 0, 469, 357, 0, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 409, 421, 438, 441, 0, 0, 0, 0, 255,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 412,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 436,
	0, 0, 341, 342, 343, 344, 303, 0, 273, 439,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 0, 249, 244, 245, 246, 247, 353,
	0, 0, 424, 425, 426, 448, 410, 0, 468, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 474, 462, 0, 0,
	0, 0, 458, 0, 459, 0, 0, 0, 0, 463,
	384, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 268, 197,
	460, 0, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2814, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 389, 406, 269, 380, 419,
	274, 387, 264, 352, 376, 0, 0, 260, 404, 386,
	334, 312, 313, 259, 0, 371, 291, 304, 288, 350,
	0, 403, 431, 287, 422, 0, 414, 262, 0, 413,
	349, 400, 405, 335, 329, 261, 402, 333, 328, 316,
	295, 447, 317, 318, 308, 361, 327, 362, 309, 339,
	338, 340, 0, 0, 0, 0, 0, 442, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 319, 0, 0, 0,
	432, 0, 374, 355, 0, 0, 0, 372, 325, 401,
	363, 407, 390, 415, 368, 364, 253, 391, 290, 336,
	265, 267, 285, 292, 294, 296, 297, 345, 346, 358,
	379, 392, 393, 394, 289, 275, 373, 276, 306, 277,
	254, 281, 280, 282, 381, 283, 256, 359, 398, 0,
	302, 369, 332, 257, 331, 360, 397, 396, 266, 423,
	429, 430, 0, 0, 435, 0, 0, 0, 444, 449,
	450, 451, 453, 454, 455, 456, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 428, 320,
	321, 322, 300, 250, 251, 473, 286, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	427, 0, 0, 0, 457, 472, 0, 0, 0, 0,
	0, 469, 357, 0, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 409, 421,
	438, 441, 0, 0, 0, 0, 255, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 436, 0, 0, 341,
	342, 343, 344, 303, 0, 273, 439, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 299,
	305, 452, 307, 272, 356, 301, 418, 314, 0, 445,
	0, 446, 0, 0, 0, 0, 348, 310, 311, 382,
	315, 326, 370, 417, 354, 375, 270, 408, 383, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	0, 248, 278, 279, 284, 470, 467, 399, 471, 0,
	252, 0, 324, 0, 365, 298, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 219, 220, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	0, 249, 244, 245, 246, 247, 353, 0, 0, 424,
	425, 426, 448, 410, 0, 468, 0, 0, 0, 0,
	0, 0, 0, 293, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 474, 462, 0, 0, 0, 0, 458,
	0, 459, 0, 0, 0, 0, 463, 384, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 2682, 0, 0, 0, 268, 197, 460, 0, 461,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 389, 406, 269, 380, 419, 274, 387, 264,
	352, 376, 0, 0, 260, 404, 386, 334, 312, 313,
	259, 0, 371, 291, 304, 288, 350, 0, 403, 431,
	287, 422, 0, 414, 262, 0, 413, 349, 400, 405,
	335, 329, 261, 402, 333, 328, 316, 295, 447, 317,
	318, 308, 361, 327, 362, 309, 339, 338, 340, 0,
	0, 0, 0, 0, 442, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	388, 0, 0, 319, 0, 0, 0, 432, 0, 374,
	355, 0, 0, 0, 372, 325, 401, 363, 407, 390,
	415, 368, 364, 253, 391, 290, 336, 265, 267, 285,
	292, 294, 296, 297, 345, 346, 358, 379, 392, 393,
	394, 289, 275, 373, 276, 306, 277, 254, 281, 280,
	282, 381, 283, 256, 359, 398, 0, 302, 369, 332,
	257, 331, 360, 397, 396, 266, 423, 429, 430, 0,
	0, 435, 0, 0, 0, 444, 449, 450, 451, 453,
	454, 455, 456, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 428, 320, 321, 322, 300,
	250, 251, 473, 286, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 427, 0, 0,
	0, 457, 472, 0, 0, 0, 0, 0, 469, 357,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 409, 421, 438, 441, 0,
	0, 0, 0, 255, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 412, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 436, 0, 0, 341, 342, 343, 344,
	303, 0, 273, 439, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 0, 249, 244,
	245, 246, 247, 353, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	474, 462, 0, 0, 0, 0, 458, 0, 459, 0,
	0, 0, 0, 463, 384, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 460, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 0, 403, 431, 287, 422, 0,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 447, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 432, 0, 374, 355, 0, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	286, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 427, 0, 0, 0, 457, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	436, 0, 0, 341, 342, 343, 344, 303, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 299, 305, 452, 307, 272, 356, 301,
	418, 314, 0, 445, 0, 446, 0, 0, 0, 0,
	348, 310, 311, 382, 315, 326, 370, 417, 354, 375,
	270, 408, 383, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 0, 248, 278, 279, 284, 470,
	467, 399, 471, 0, 252, 0, 324, 0, 365, 298,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 219, 220, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 0, 249, 244, 245, 246, 247,
	353, 0, 0, 424, 425, 426, 448, 410, 0, 468,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 474, 462, 0,
	0, 0, 0, 458, 0, 459, 0, 0, 0, 0,
	463, 384, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 1264, 0, 0, 0, 268,
	197, 460, 0, 461, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 389, 406, 269, 380,
	419, 274, 387, 264, 352, 376, 0, 0, 260, 404,
	386, 334, 312, 313, 259, 0, 371, 291, 304, 288,
	350, 0, 403, 431, 287, 422, 0, 414, 262, 0,
	413, 349, 400, 405, 335, 329, 261, 402, 333, 328,
	316, 295, 447, 317, 318, 308, 361, 327, 362, 309,
	339, 338, 340, 0, 0, 0, 0, 0, 442, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 319, 0, 0,
	0, 432, 0, 374, 355, 0, 0, 0, 372, 325,
	401, 363, 407, 390, 415, 368, 364, 253, 391, 290,
	336, 265, 267, 285, 292, 294, 296, 297, 345, 346,
	358, 379, 392, 393, 394, 289, 275, 373, 276, 306,
	277, 254, 281, 280, 282, 381, 283, 256, 359, 398,
	0, 302, 369, 332, 257, 331, 360, 397, 396, 266,
	423, 429, 430, 0, 0, 435, 0, 0, 0, 444,
	449, 450, 451, 453, 454, 455, 456, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 428,
	320, 321, 322, 300, 250, 251, 473, 286, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 427, 0, 0, 0, 457, 472, 0, 0, 0,
	0, 0, 469, 357, 0, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 409,
	421, 438, 441, 0, 0, 0, 0, 255, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 436, 0, 0,
	341, 342, 343, 344, 303, 0, 273, 439, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 470, 467, 399, 471,
	0, 252, 0, 324, 0, 365, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 353, 0, 0,
	424, 425, 426, 448, 410, 0, 468, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 474, 462, 0, 0, 0, 0,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 2117, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 299, 305, 452,
	307, 272, 356, 301, 418, 314, 0, 445, 0, 446,
	0, 0, 0, 0, 348, 310, 311, 382, 315, 326,
	370, 417, 354, 375, 270, 408, 383, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 0, 248,
	278, 279, 284, 470, 467, 399, 471, 0, 252, 0,
	324, 0, 365, 298, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 0, 249,
	244, 245, 246, 247, 353, 0, 0, 424, 425, 426,
	448, 410, 0, 468, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 474, 462, 0, 0, 0, 0, 458, 0, 459,
	0, 0, 0, 0, 463, 384, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 268, 197, 460, 0, 461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	389, 406, 269, 380, 419, 274, 387, 264, 352, 376,
	0, 0, 260, 404, 386, 334, 312, 313, 259, 0,
	371, 291, 304, 288, 350, 0, 403, 431, 287, 422,
	0, 414, 262, 0, 413, 349, 400, 405, 335, 329,
	261, 402, 333, 328, 316, 295, 447, 317, 318, 308,
	361, 327, 362, 309, 339, 338, 340, 0, 0, 0,
	0, 0, 442, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 319, 0, 0, 0, 432, 0, 374, 355, 0,
	0, 0, 372, 325, 401, 363, 407, 390, 415, 368,
	364, 253, 391, 290, 336, 265, 267, 285, 292, 294,
	296, 297, 345, 346, 358, 379, 392, 393, 394, 289,
	275, 373, 276, 306, 277, 254, 281, 280, 282, 381,
	283, 256, 359, 398, 0, 302, 369, 332, 257, 331,
	360, 397, 396, 266, 423, 429, 430, 0, 0, 435,
	0, 0, 0, 444, 449, 450, 451, 453, 454, 455,
	456, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 428, 320, 321, 322, 300, 250, 251,
	473, 286, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 427, 0, 0, 0, 457,
	472, 0, 0, 0, 0, 0, 469, 357, 0, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 409, 421, 438, 441, 0, 0, 0,
	0, 255, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 436, 0, 0, 341, 342, 343, 344, 303, 0,
	273, 439, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 299, 305, 452, 307, 272, 356,
	301, 418, 314, 0, 445, 0, 446, 0, 0, 0,
	0, 348, 310, 311, 382, 315, 326, 370, 417, 354,
	375, 270, 408, 383, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 248, 278, 279, 284,
	470, 467, 399, 471, 0, 252, 0, 324, 0, 365,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 0, 249, 244, 245, 246,
	247, 353, 0, 0, 424, 425, 426, 448, 410, 0,
	468, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 474, 462,
	0, 0, 0, 0, 458, 0, 459, 0, 0, 0,
	0, 463, 384, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 460, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 389, 406, 269,
	380, 419, 274, 387, 264, 352, 376, 0, 0, 260,
	404, 386, 334, 312, 313, 259, 0, 371, 291, 304,
	288, 350, 0, 403, 431, 287, 422, 0, 414, 262,
	0, 413, 349, 400, 405, 335, 329, 261, 402, 333,
	328, 316, 295, 447, 317, 318, 308, 361, 327, 362,
	309, 339, 338, 340, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 319, 0,
	0, 0, 432, 0, 374, 355, 0, 0, 0, 372,
	325, 401, 363, 407, 390, 415, 368, 364, 253, 391,
	290, 336, 265, 267, 285, 292, 294, 296, 297, 345,
	346, 358, 379, 392, 393, 394, 289, 275, 373, 276,
	306, 277, 254, 281, 280, 282, 381, 283, 256, 359,
	398, 0, 302, 369, 332, 257, 331, 360, 397, 396,
	266, 423, 429, 430, 0, 0, 435, 0, 0, 0,
	444, 449, 450, 451, 453, 454, 455, 456, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	428, 320, 321, 322, 300, 250, 251, 473, 286, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 427, 0, 0, 0, 457, 472, 0, 0,
	0, 0, 0, 469, 357, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	409, 421, 438, 441, 0, 0, 0, 0, 255, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 436, 0,
	0, 341, 342, 343, 344, 303, 0, 273, 439, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 299, 305, 452, 307, 272, 356, 301, 418, 314,
	0, 445, 0, 446, 0, 0, 0, 0, 348, 310,
	311, 382, 315, 326, 370, 417, 354, 375, 270, 408,
	383, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 248, 278, 279, 284, 470, 467, 399,
	471, 0, 252, 0, 324, 0, 365, 298, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 0, 249, 244, 245, 246, 247, 353, 0,
	0, 424, 425, 426, 448, 410, 0, 468, 0, 0,
	0, 0, 0, 0, 0, 293, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 474, 462, 0, 0, 0,
	0, 458, 0, 459, 0, 0, 0, 0, 463, 384,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 2191, 0, 0, 0, 268, 197, 460,
	0, 461, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 389, 406, 269, 380, 419, 274,
	387, 264, 352, 376, 0, 0, 260, 404, 386, 334,
	312, 313, 259, 0, 371, 291, 304, 288, 350, 0,
	403, 431, 287, 422, 0, 414, 262, 0, 413, 349,
	400, 405, 335, 329, 261, 402, 333, 328, 316, 295,
	447, 317, 318, 308, 361, 327, 362, 309, 339, 338,
	340, 0, 0, 0, 0, 0, 442, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 319, 0, 0, 0, 432,
	0, 374, 355, 0, 0, 0, 372, 325, 401, 363,
	407, 390, 415, 368, 364, 253, 391, 290, 336, 265,
	267, 285, 292, 294, 296, 297, 345, 346, 358, 379,
	392, 393, 394, 289, 275, 373, 276, 306, 277, 254,
	281, 280, 282, 381, 283, 256, 359, 398, 0, 302,
	369, 332, 257, 331, 360, 397, 396, 266, 423, 429,
	430, 0, 0, 435, 0, 0, 0, 444, 449, 450,
	451, 453, 454, 455, 456, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 428, 320, 321,
	322, 300, 250, 251, 473, 286, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 427,
	0, 0, 0, 457, 472, 0, 0, 0, 0, 0,
	469, 357, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 409, 421, 438,
	441, 0, 0, 0, 0, 255, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 436, 0, 0, 341, 342,
	343, 344, 303, 0, 273, 439, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 299, 305,
	452, 307, 272, 356, 301, 418, 314, 0, 445, 0,
	446, 0, 0, 0, 0, 348, 310, 311, 382, 315,
	326, 370, 417, 354, 375, 270, 408, 383, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 0,
	248, 278, 279, 284, 470, 467, 399, 471, 0, 252,
	0, 324, 0, 365, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 1986,
	249, 244, 245, 246, 247, 353, 0, 0, 424, 425,
	426, 448, 410, 0, 468, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 474, 462, 0, 0, 0, 0, 458, 0,
	459, 0, 0, 0, 0, 463, 384, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 460, 0, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 389, 406, 269, 380, 419, 274, 387, 264, 352,
	376, 0, 0, 260, 404, 386, 334, 312, 313, 259,
	0, 371, 291, 304, 288, 350, 0, 403, 431, 287,
	422, 0, 414, 262, 0, 413, 349, 400, 405, 335,
	329, 261, 402, 333, 328, 316, 295, 447, 317, 318,
	308, 361, 327, 362, 309, 339, 338, 340, 0, 0,
	0, 0, 0, 442, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 319, 0, 0, 0, 432, 0, 374, 355,
	0, 0, 0, 372, 325, 401, 363, 407, 390, 415,
	368, 364, 253, 391, 290, 336, 265, 267, 285, 292,
	294, 296, 297, 345, 346, 358, 379, 392, 393, 394,
	289, 275, 373, 276, 306, 277, 254, 281, 280, 282,
	381, 283, 256, 359, 398, 0, 302, 369, 332, 257,
	331, 360, 397, 396, 266, 423, 429, 430, 0, 0,
	435, 0, 0, 0, 444, 449, 450, 451, 453, 454,
	455, 456, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 428, 320, 321, 322, 300, 250,
	251, 473, 286, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 427, 0, 0, 0,
	457, 472, 0, 0, 0, 0, 0, 469, 357, 0,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 409, 421, 438, 441, 0, 0,
	0, 0, 255, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 436, 0, 0, 341, 342, 343, 344, 303,
	0, 273, 439, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 299, 305, 452, 307, 272,
	356, 301, 418, 314, 0, 445, 0, 446, 0, 0,
	0, 0, 348, 310, 311, 382, 315, 326, 370, 417,
	354, 375, 270, 408, 383, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 0, 248, 278, 279,
	284, 470, 467, 399, 471, 0, 252, 0, 324, 0,
	365, 298, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 219, 220,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 0, 249, 244, 245,
	246, 247, 353, 0, 0, 424, 425, 426, 448, 410,
	1701, 468, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 474,
	462, 0, 0, 0, 0, 458, 0, 459, 0, 0,
	0, 0, 463, 384, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 268, 197, 460, 0, 461, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 389, 406,
	269, 380, 419, 274, 387, 264, 352, 376, 0, 0,
	260, 404, 386, 334, 312, 313, 259, 0, 371, 291,
	304, 288, 350, 0, 403, 431, 287, 422, 0, 414,
	262, 0, 413, 349, 400, 405, 335, 329, 261, 402,
	333, 328, 316, 295, 447, 317, 318, 308, 361, 327,
	362, 309, 339, 338, 340, 0, 0, 0, 0, 0,
	442, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 319,
	0, 0, 0, 432, 0, 374, 355, 0, 0, 0,
	372, 325, 401, 363, 407, 390, 415, 368, 364, 253,
	391, 290, 336, 265, 267, 285, 292, 294, 296, 297,
	345, 346, 358, 379, 392, 393, 394, 289, 275, 373,
	276, 306, 277, 254, 281, 280, 282, 381, 283, 256,
	359, 398, 0, 302, 369, 332, 257, 331, 360, 397,
	396, 266, 423, 429, 430, 0, 0, 435, 0, 0,
	0, 444, 449, 450, 451, 453, 454, 455, 456, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 428, 320, 321, 322, 300, 250, 251, 473, 286,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 427, 0, 0, 0, 457, 472, 0,
	0, 0, 0, 0, 469, 357, 0, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 409, 421, 438, 441, 0, 0, 0, 0, 255,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 412,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 436,
	0, 0, 341, 342, 343, 344, 303, 0, 273, 439,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 0, 249, 244, 245, 246, 247, 353,
	0, 0, 424, 425, 426, 448, 410, 0, 468, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 474, 462, 0, 0,
	0, 0, 458, 0, 459, 0, 0, 0, 0, 463,
	384, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 1264, 0, 0, 0, 268, 197,
	460, 0, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 389, 406, 269, 380, 419,
	274, 387, 264, 352, 376, 0, 0, 260, 404, 386,
	334, 312, 313, 259, 0, 371, 291, 304, 288, 350,
	0, 403, 431, 287, 422, 0, 414, 262, 0, 413,
	349, 400, 405, 335, 329, 261, 402, 333, 328, 316,
	295, 447, 317, 318, 308, 361, 327, 362, 309, 339,
	338, 340, 0, 0, 0, 0, 0, 442, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 319, 0, 0, 0,
	432, 0, 374, 355, 0, 0, 0, 372, 325, 401,
	363, 407, 390, 415, 1612, 364, 253, 391, 290, 336,
	265, 267, 285, 292, 294, 296, 297, 345, 346, 358,
	379, 392, 393, 394, 289, 275, 373, 276, 306, 277,
	254, 281, 280, 282, 381, 283, 256, 359, 398, 0,
	302, 369, 332, 257, 331, 360, 397, 396, 266, 423,
	429, 430, 0, 0, 435, 0, 0, 0, 444, 449,
	450, 451, 453, 454, 455, 456, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 428, 320,
	321, 322, 300, 250, 251, 473, 286, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	427, 0, 0, 0, 457, 472, 0, 0, 0, 0,
	0, 469, 357, 0, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 409, 421,
	438, 441, 0, 0, 0, 0, 255, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 436, 0, 0, 341,
	342, 343, 344, 303, 0, 273, 439, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 299,
	305, 452, 307, 272, 356, 301, 418, 314, 0, 445,
	0, 446, 0, 0, 0, 0, 348, 310, 311, 382,
	315, 326, 370, 417, 354, 375, 270, 408, 383, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	0, 248, 278, 279, 284, 470, 467, 399, 471, 0,
	252, 0, 324, 0, 365, 298, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 219, 220, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	0, 249, 244, 245, 246, 247, 353, 0, 0, 424,
	425, 426, 448, 410, 0, 468, 0, 0, 0, 0,
	0, 0, 0, 293, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 474, 462, 0, 0, 0, 0, 458,
	0, 459, 0, 0, 0, 0, 463, 384, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 268, 197, 460, 0, 461,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 389, 406, 269, 380, 419, 274, 387, 264,
	352, 376, 0, 0, 260, 404, 386, 334, 312, 313,
	259, 0, 371, 291, 304, 288, 350, 0, 403, 431,
	287, 422, 0, 414, 262, 0, 413, 349, 400, 405,
	335, 329, 261, 402, 333, 328, 316, 295, 447, 317,
	318, 308, 361, 327, 362, 309, 339, 338, 340, 0,
	0, 0, 0, 0, 442, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 1294, 0, 0, 0,
	388, 0, 0, 319, 0, 0, 0, 432, 0, 374,
	355, 0, 0, 0, 372, 325, 401, 363, 407, 390,
	415, 368, 364, 253, 391, 290, 336, 265, 267, 285,
	292, 294, 296, 297, 345, 346, 358, 379, 392, 393,
	394, 289, 275, 373, 276, 306, 277, 254, 281, 280,
	282, 381, 283, 256, 359, 398, 0, 302, 369, 332,
	257, 331, 360, 397, 396, 266, 423, 429, 430, 0,
	0, 435, 0, 0, 0, 444, 449, 450, 451, 453,
	454, 455, 456, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 428, 320, 321, 322, 300,
	250, 251, 473, 286, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 427, 0, 0,
	0, 457, 472, 0, 0, 0, 0, 0, 469, 357,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 409, 421, 438, 441, 0,
	0, 0, 0, 255, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 412, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 436, 0, 0, 341, 342, 343, 344,
	303, 0, 273, 439, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 0, 249, 244,
	245, 246, 247, 353, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	474, 462, 0, 0, 0, 0, 458, 0, 459, 0,
	0, 0, 0, 463, 384, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 460, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 0, 403, 431, 287, 422, 0,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 447, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 432, 0, 374, 355, 0, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	286, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 427, 0, 0, 0, 457, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	436, 0, 0, 341, 342, 343, 344, 303, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 299, 305, 452, 307, 272, 356, 301,
	418, 314, 0, 445, 0, 446, 0, 0, 0, 0,
	348, 310, 311, 382, 315, 326, 370, 417, 354, 375,
	270, 408, 383, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	760, 0, 0, 395, 0, 248, 278, 279, 284, 470,
	467, 399, 471, 0, 252, 0, 324, 0, 365, 298,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 219, 220, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 0, 249, 244, 245, 246, 247,
	353, 0, 0, 424, 425, 426, 448, 410, 0, 468,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 474, 462, 0,
	0, 0, 0, 458, 0, 459, 0, 0, 0, 0,
	463, 384, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 268,
	197, 460, 0, 461, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 389, 406, 269, 380,
	419, 274, 387, 264, 352, 376, 0, 0, 260, 404,
	386, 334, 312, 313, 259, 0, 371, 291, 304, 288,
	350, 0, 403, 431, 287, 422, 0, 414, 262, 0,
	413, 349, 400, 405, 335, 329, 261, 402, 333, 328,
	316, 295, 447, 317, 318, 308, 361, 327, 362, 309,
	339, 338, 340, 0, 0, 0, 0, 0, 442, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 319, 0, 0,
	0, 432, 0, 374, 355, 0, 0, 0, 372, 325,
	401, 363, 407, 390, 415, 512, 364, 253, 391, 290,
	336, 265, 267, 285, 292, 294, 296, 297, 345, 346,
	358, 379, 392, 393, 394, 289, 275, 373, 276, 306,
	277, 254, 281, 280, 282, 381, 283, 256, 359, 398,
	0, 302, 369, 332, 257, 331, 360, 397, 396, 266,
	423, 429, 430, 0, 0, 435, 0, 0, 0, 444,
	449, 450, 451, 453, 454, 455, 456, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 428,
	320, 321, 322, 300, 250, 251, 473, 286, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 427, 0, 0, 0, 457, 472, 0, 0, 0,
	0, 0, 469, 357, 0, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 409,
	421, 438, 441, 0, 0, 0, 0, 255, 440, 0,
	0, 0, 0, 0, 0, 513, 0, 412, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 436, 0, 0,
	341, 342, 343, 344, 303, 0, 273, 439, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 470, 467, 399, 471,
	0, 252, 0, 324, 0, 365, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 353, 0, 0,
	424, 425, 426, 448, 410, 0, 468, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 474, 462, 0, 0, 0, 0,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 489, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 299, 305, 452,
	307, 272, 356, 301, 418, 314, 0, 445, 0, 446,
	0, 0, 0, 0, 348, 310, 311, 382, 315, 326,
	370, 417, 354, 375, 270, 408, 383, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 0, 248,
	278, 279, 284, 470, 467, 399, 471, 0, 252, 0,
	324, 0, 365, 298, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 0, 249,
	244, 245, 246, 247, 353, 0, 0, 424, 425, 426,
	448, 410, 0, 468, 0, 0, 0, 0, 0, 0,
	479, 293, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 474, 462, 0, 0, 0, 0, 458, 0, 459,
	0, 0, 0, 0, 463, 384, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 268, 197, 460, 0, 461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	389, 406, 269, 380, 419, 274, 387, 264, 352, 376,
	0, 0, 260, 404, 386, 334, 312, 313, 259, 0,
	371, 291, 304, 288, 350, 0, 403, 431, 287, 422,
	0, 414, 262, 0, 413, 349, 400, 405, 335, 329,
	261, 402, 333, 328, 316, 295, 447, 317, 318, 308,
	361, 327, 362, 309, 339, 338, 340, 0, 0, 0,
	0, 0, 442, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 319, 0, 0, 0, 432, 0, 374, 355, 0,
	0, 0, 372, 325, 401, 363, 407, 390, 415, 368,
	364, 253, 391, 290, 336, 265, 267, 285, 292, 294,
	296, 297, 345, 346, 358, 379, 392, 393, 394, 289,
	275, 373, 276, 306, 277, 254, 281, 280, 282, 381,
	283, 256, 359, 398, 0, 302, 369, 332, 257, 331,
	360, 397, 396, 266, 423, 429, 430, 0, 0, 435,
	0, 0, 0, 444, 449, 450, 451, 453, 454, 455,
	456, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 428, 320, 321, 322, 300, 250, 251,
	473, 286, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 427, 0, 0, 0, 457,
	472, 0, 0, 0, 0, 0, 469, 357, 0, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 409, 421, 438, 441, 0, 0, 0,
	0, 255, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 436, 0, 0, 341, 342, 343, 344, 303, 0,
	273, 439, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 299, 305, 452, 307, 272, 356,
	301, 418, 314, 0, 445, 0, 446, 0, 0, 0,
	0, 348, 310, 311, 382, 315, 326, 370, 417, 354,
	375, 270, 408, 383, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 248, 278, 279, 284,
	470, 467, 399, 471, 0, 252, 0, 324, 0, 365,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 0, 249, 244, 245, 246,
	247, 353, 0, 0, 424, 425, 426, 448, 410, 0,
	468, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 474, 462,
	0, 0, 0, 0, 458, 0, 459, 0, 0, 0,
	0, 463, 384, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 460, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 389, 406, 269,
	380, 419, 274, 387, 264, 352, 376, 0, 0, 260,
	404, 386, 334, 312, 313, 259, 0, 371, 291, 304,
	288, 350, 0, 403, 431, 287, 422, 0, 414, 262,
	0, 413, 349, 400, 405, 335, 329, 261, 402, 333,
	328, 316, 295, 447, 317, 318, 308, 361, 327, 362,
	309, 339, 338, 340, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 319, 0,
	0, 0, 432, 0, 374, 355, 0, 0, 0, 372,
	325, 401, 363, 407, 390, 415, 368, 364, 253, 391,
	290, 336, 265, 267, 285, 292, 294, 296, 297, 345,
	346, 358, 379, 392, 393, 394, 289, 275, 373, 276,
	306, 277, 254, 281, 280, 282, 381, 283, 256, 359,
	398, 0, 302, 369, 332, 257, 331, 360, 397, 396,
	266, 423, 429, 430, 0, 0, 435, 0, 0, 0,
	444, 449, 450, 451, 453, 454, 455, 456, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	428, 320, 321, 322, 300, 250, 251, 473, 286, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 427, 0, 0, 0, 457, 472, 0, 0,
	0, 0, 0, 469, 357, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	409, 421, 438, 441, 0, 0, 0, 0, 255, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 436, 0,
	0, 341, 342, 343, 344, 303, 0, 273, 439, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 299, 305, 452, 307, 272, 356, 301, 418, 314,
	0, 445, 0, 446, 0, 0, 0, 0, 348, 310,
	311, 382, 315, 326, 370, 417, 354, 375, 270, 408,
	383, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 248, 278, 279, 284, 470, 467, 399,
	471, 0, 252, 0, 324, 0, 365, 298, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 0, 249, 244, 245, 246, 247, 353, 0,
	0, 424, 425, 426, 448, 410, 0, 468, 0, 0,
	0, 0, 0, 0, 0, 293, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 474, 462, 0, 0, 0,
	0, 458, 0, 459, 0, 0, 0, 0, 463, 384,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 268, 197, 460,
	0, 461, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 389, 1244, 269, 380, 419, 274,
	387, 264, 352, 376, 0, 0, 260, 404, 386, 334,
	312, 313, 259, 0, 371, 291, 304, 288, 350, 0,
	403, 431, 287, 422, 0, 414, 262, 0, 413, 349,
	400, 405, 335, 329, 261, 402, 333, 328, 316, 295,
	447, 317, 318, 308, 361, 327, 362, 309, 339, 338,
	340, 0, 0, 0, 0, 0, 442, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 319, 0, 0, 0, 432,
	0, 374, 355, 0, 0, 0, 372, 325, 401, 363,
	407, 390, 415, 368, 364, 253, 391, 290, 336, 265,
	267, 285, 292, 294, 296, 297, 345, 346, 358, 379,
	392, 393, 394, 289, 275, 373, 276, 306, 277, 254,
	281, 280, 282, 381, 283, 256, 359, 398, 0, 302,
	369, 332, 257, 331, 360, 397, 396, 266, 423, 429,
	430, 0, 0, 435, 0, 0, 0, 444, 449, 450,
	451, 453, 454, 455, 456, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 428, 320, 321,
	322, 300, 250, 251, 473, 286, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 427,
	0, 0, 0, 457, 472, 0, 0, 0, 0, 0,
	469, 357, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 409, 421, 438,
	441, 0, 0, 0, 0, 255, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 436, 0, 0, 341, 342,
	343, 344, 303, 0, 273, 439, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 299, 305,
	452, 307, 272, 356, 301, 418, 314, 0, 445, 0,
	446, 0, 0, 0, 0, 348, 310, 311, 382, 315,
	326, 370, 417, 354, 375, 270, 408, 383, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 0,
	248, 278, 279, 284, 470, 467, 399, 471, 0, 252,
	0, 324, 0, 365, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 353, 0, 0, 424, 425,
	426, 448, 410, 0, 468, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 474, 462, 0, 0, 0, 0, 458, 0,
	459, 0, 0, 0, 0, 463, 384, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 460, 0, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 389, 1242, 269, 380, 419, 274, 387, 264, 352,
	376, 0, 0, 260, 404, 386, 334, 312, 313, 259,
	0, 371, 291, 304, 288, 350, 0, 403, 431, 287,
	422, 0, 414, 262, 0, 413, 349, 400, 405, 335,
	329, 261, 402, 333, 328, 316, 295, 447, 317, 318,
	308, 361, 327, 362, 309, 339, 338, 340, 0, 0,
	0, 0, 0, 442, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 319, 0, 0, 0, 432, 0, 374, 355,
	0, 0, 0, 372, 325, 401, 363, 407, 390, 415,
	368, 364, 253, 391, 290, 336, 265, 267, 285, 292,
	294, 296, 297, 345, 346, 358, 379, 392, 393, 394,
	289, 275, 373, 276, 306, 277, 254, 281, 280, 282,
	381, 283, 256, 359, 398, 0, 302, 369, 332, 257,
	331, 360, 397, 396, 266, 423, 429, 430, 0, 0,
	435, 0, 0, 0, 444, 449, 450, 451, 453, 454,
	455, 456, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 428, 320, 321, 322, 300, 250,
	251, 473, 286, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 427, 0, 0, 0,
	457, 472, 0, 0, 0, 0, 0, 469, 357, 0,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 409, 421, 438, 441, 0, 0,
	0, 0, 255, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 436, 0, 0, 341, 342, 343, 344, 303,
	0, 273, 439, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 299, 305, 452, 307, 272,
	356, 301, 418, 314, 0, 445, 0, 446, 0, 0,
	0, 0, 348, 310, 311, 382, 315, 326, 370, 417,
	354, 375, 270, 408, 383, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 0, 248, 278, 279,
	284, 470, 467, 399, 471, 0, 252, 0, 324, 0,
	365, 298, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 219, 220,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 0, 249, 244, 245,
	246, 247, 353, 0, 0, 424, 425, 426, 448, 410,
	0, 468, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 474,
	462, 0, 0, 0, 0, 458, 0, 459, 0, 0,
	0, 0, 463, 384, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 268, 197, 460, 0, 461, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 389, 406,
	269, 380, 419, 274, 387, 264, 352, 376, 0, 0,
	260, 404, 386, 334, 312, 313, 259, 0, 371, 291,
	304, 288, 350, 0, 403, 431, 287, 422, 0, 414,
	262, 0, 413, 349, 400, 405, 335, 329, 261, 402,
	333, 328, 316, 295, 447, 317, 318, 308, 361, 327,
	362, 309, 339, 338, 340, 0, 0, 0, 0, 0,
	442, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 319,
	0, 0, 0, 432, 0, 374, 355, 0, 0, 0,
	372, 325, 401, 363, 407, 390, 415, 368, 364, 253,
	391, 290, 336, 265, 267, 553, 292, 294, 296, 297,
	345, 346, 358, 379, 392, 393, 394, 289, 275, 373,
	276, 306, 277, 254, 281, 280, 282, 381, 283, 256,
	359, 398, 0, 302, 369, 332, 257, 331, 360, 397,
	396, 266, 423, 429, 430, 0, 0, 435, 0, 0,
	0, 444, 449, 450, 451, 453, 454, 455, 456, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 428, 320, 321, 322, 300, 250, 251, 473, 286,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 427, 0, 0, 0, 457, 472, 0,
	0, 0, 0, 0, 469, 357, 0, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 409, 421, 438, 441, 0, 0, 0, 0, 255,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 412,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 436,
	0, 0, 341, 342, 343, 344, 303, 0, 273, 439,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 0, 249, 244, 245, 246, 247, 0,
	0, 0, 424, 425, 426, 448, 410, 0, 468, 0,
	174, 51, 163, 138, 0, 0, 0, 0, 0, 174,
	51, 163, 138, 0, 0, 0, 474, 462, 164, 0,
	0, 1689, 0, 0, 0, 156, 0, 164, 0, 165,
	0, 0, 0, 0, 156, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 0,
	0, 0, 0, 0, 0, 1691, 0, 115, 0, 0,
	0, 0, 0, 103, 0, 0, 0, 0, 0, 168,
	0, 0, 103, 0, 0, 0, 0, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1666, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 120, 121, 0, 122, 123,
	0, 0, 0, 0, 120, 121, 0, 122, 123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3170,
	0, 0, 0, 1682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1689, 0,
	0, 0, 0, 1651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 162, 172, 0,
	101, 0, 1691, 1660, 0, 137, 162, 172, 0, 101,
	0, 0, 1692, 1693, 0, 0, 0, 0, 161, 155,
	154, 0, 0, 0, 0, 57, 0, 161, 155, 154,
	0, 0, 0, 1670, 57, 0, 0, 0, 1659, 0,
	0, 0, 0, 0, 1676, 0, 0, 0, 0, 0,
	0, 0, 0, 1666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1664, 1698, 0, 0, 1665, 1667,
	1669, 0, 1671, 1672, 1673, 1677, 1678, 1679, 1681, 1684,
	1685, 1686, 0, 0, 0, 0, 157, 158, 159, 1674,
	1683, 1675, 0, 0, 0, 157, 158, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	1682, 0, 0, 1690, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 0, 0, 0,
	160, 0, 112, 0, 0, 111, 0, 0, 1689, 160,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1687, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1691, 1663, 0, 0, 0, 0, 0, 0,
	1662, 1650, 1652, 1649, 0, 1646, 0, 0, 0, 113,
	1670, 0, 0, 0, 0, 0, 0, 0, 113, 0,
	0, 1676, 50, 0, 1680, 0, 0, 0, 0, 0,
	0, 50, 0, 1668, 0, 0, 0, 0, 0, 0,
	0, 1664, 1698, 1666, 0, 1665, 1667, 1669, 0, 1671,
	1672, 1673, 1677, 1678, 1679, 1681, 1684, 1685, 1686, 0,
	532, 531, 538, 528, 0, 0, 1674, 1683, 1675, 0,
	0, 52, 535, 536, 0, 537, 541, 0, 1654, 523,
	52, 0, 0, 532, 531, 538, 528, 0, 0, 546,
	0, 0, 0, 0, 0, 535, 536, 0, 537, 541,
	1690, 0, 523, 0, 0, 0, 169, 170, 0, 171,
	1682, 0, 546, 0, 139, 169, 170, 0, 171, 0,
	0, 0, 0, 139, 0, 1647, 1648, 0, 0, 0,
	0, 0, 550, 0, 0, 552, 0, 0, 0, 0,
	551, 0, 0, 1687, 0, 0, 0, 0, 0, 532,
	531, 538, 528, 0, 0, 550, 0, 0, 552, 0,
	1663, 535, 536, 551, 537, 541, 0, 1662, 523, 0,
	0, 0, 0, 0, 0, 0, 114, 39, 546, 0,
	0, 0, 0, 49, 0, 114, 39, 5, 0, 0,
	1670, 1680, 49, 118, 119, 0, 0, 0, 0, 0,
	1668, 1676, 118, 119, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1695, 1694, 0, 0, 0, 0, 0,
	0, 1664, 1698, 0, 0, 1665, 1667, 1669, 0, 1671,
	1672, 1673, 1677, 1678, 1679, 1681, 1684, 1685, 1686, 0,
	0, 0, 0, 0, 0, 0, 1674, 1683, 1675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1656, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 524, 526, 525, 0,
	1690, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 534, 524,
	526, 525, 0, 0, 0, 549, 0, 0, 1697, 530,
	0, 1696, 527, 0, 0, 0, 518, 0, 0, 0,
	0, 534, 0, 1687, 0, 0, 0, 0, 549, 0,
	0, 0, 0, 0, 0, 527, 0, 0, 0, 0,
	1663, 0, 0, 0, 0, 0, 0, 1662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 524, 526, 525, 0, 0,
	0, 1680, 0, 0, 0, 530, 0, 0, 0, 0,
	1668, 0, 0, 0, 0, 0, 0, 534, 0, 0,
	0, 0, 0, 0, 549, 0, 0, 0, 0, 0,
	0, 527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 533, 539, 0, 540, 542, 0, 0, 543, 544,
	545, 0, 0, 547, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 533, 539, 0, 540, 542, 0,
	0, 543, 544, 545, 0, 0, 547, 548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	533, 539, 0, 540, 542, 0, 0, 543, 544, 545,
	0, 0, 547, 548,
}

var yyPact = [...]int{
	39708, -1000, -1000, -1000, -337, 11876, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 37419,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 37419,
	-335, 36852, 36852, -1000, -1000, 2312, -1000, 36285, 13031, 37419,
	351, 350, 37419, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 704, -1000, 35718, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 591, 40178, 39120, 8952, -269, -1000, 1356, -100, 2155,
	858, 873, 967, 967, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 279, 737, 35151,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3313, 321, 737, 14732, 22, 18, 1356, 337, -159,
	-157, -160, 3064, -1000, 1163, 39717, 159, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8952, 8952,
	11876, -362, 11876, 8952, 37419, 37419, -1000, -1000, -1000, -1000,
	591, 40178, 8952, 2155, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -157, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -159, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -160, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 18, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 4361, -1000, 1388, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2666, 1381, 2149, 541, 37419,
	-1000, 1376, 541, -1000, -1000, -1000, 1356, 3034, -1000, 37419,
	37419, 92, 1614, -1000, 366, 312, 349, 1369, -1000, -1000,
	-1000, -1000, -1000, -1000, 473, 3018, -1000, 37419, 37419, 2680,
	37419, -1000, 1939, 499, 40201, 2883, 1235, 766, 2685, -1000,
	-1000, 2665, -1000, 212, 190, 169, 404, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 211, -1000, 2951, -1000, -1000, 217,
	-1000, -1000, 185, -1000, -1000, -1000, 12, -1000, -1000, -1000,
	-1000, -1000, -1000, -60, -1000, -1000, 937, 2164, 8952, -1000,
	1754, -1000, 3670, -1000, -1000, -1000, -1000, 6032, 11288, 11288,
	11288, 11288, -1000, -1000, 2507, 8952, 2664, 2657, 2656, -1000,
	-1000, -1000, -1000, -1000, -1000, 1365, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1768, -1000, -1000, -1000, 10704,
	-1000, 2650, 2642, 2637, 2632, 2630, 2628, 2627, 2624, 2623,
	2621, 2614, 2594, 2593, 2592, 2350, 12444, 2590, 2148, 2145,
	2583, 2582, 2578, 2141, 2350, 2350, 2575, 2574, 2573, 2572,
	2571, 2569, 2568, 2567, 2565, 2564, 2563, 2561, 2557, 2556,
	2554, 2552, 2551, 2543, 2540, 2539, 2537, 2536, 2534, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1214, -1000, 2522, 3035, 2401, -1000, 2958, 2924,
	2922, 2920, -311, 2515, 1923, -1000, -1000, 64, -1000, -135,
	-1000, -1000, 864, -1000, 829, -1000, 37419, 37419, 143, 698,
	588, 588, 588, 588, 588, 657, 588, 2971, 702, 699,
	695, 685, 588, -97, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1610, 1609, 2730, 783, -1000, -1000, -1000, -1000, 1195,
	37419, -1000, 2407, 1503, 1503, 2970, 517, 509, 507, 1503,
	416, -1000, 1522, 1522, 1522, 1522, 1503, 414, 521, 2974,
	2974, 11, 1522, 2, 1503, 1503, 2, 1503, 1503, 1503,
	168, -318, -1000, -1000, -1000, -1000, 1522, 1522, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2942, 2940, 591, 591, 37419,
	144, 37419, 591, 591, 591, 605, -24, 38553, 37986, 1939,
	493, 491, 1217, 1611, -1000, 1445, 37419, 37419, 1445, 1445,
	19275, 18708, -1000, 37419, -1000, 3035, 2401, 2327, 1449, 2326,
	2401, -164, -168, -170, 591, 591, 591, 591, 591, 161,
	591, 591, 591, 591, 591, 37419, 37419, 34584, 591, 591,
	7784, 7784, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 11876, 1866, 1957, 158, -66, -329, 198, -1000, -1000,
	37419, 2839, 150, -1000, -1000, -1000, 2357, -1000, 2387, 2387,
	2387, 2387, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2387, 2387, 2402, 2514, -1000, -1000, 2386, 2386, 2386,
	2357, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2391, 2391, 2392, 2392,
	2391, 37419, 8952, 37419, 2875, 335, 2512, -1000, 37419, 329,
	3035, 2866, 2974, 2999, -1000, -1000, 1364, 1913, 2138, -1000,
	-1000, 366, 1451, -1000, 899, -1000, -1000, -1000, -1000, 37419,
	-60, 361, -1000, -1000, 2119, 2511, -1000, 501, 1164, 1165,
	-1000, 164, 40267, 30048, 1939, 30048, 37419, -1000, -1000, -1000,
	-1000, -1000, -1000, 10, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 202, -1000, 8952,
	8952, 8952, 8952, 8952, -1000, 572, 10120, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 11288, 11288, 11288, 11288, 11288, 11288,
	11288, 11288, 11288, 11288, 11288, 11288, 2506, 1627, 11288, 11288,
	11288, 11288, 1449, 2786, 1204, 239, -1000, -1000, -1000, -1000,
	-1000, 1569, 2164, 8952, 8952, 8952, 37419, -1000, -1000, 3378,
	8952, 8952, 3340, 8952, 2916, 8952, 8952, 8952, 2323, 4861,
	37419, 8952, -1000, 2322, 2310, -1000, -1000, 1812, 8952, -1000,
	-1000, 8952, -1000, -1000, 8952, 11288, 8952, -1000, -1000, -1000,
	606, 2916, 2916, 2916, 1576, 8952, 8952, 2916, 2916, 2916,
	1567, 2916, 2916, 2916, 2916, 2916, 2916, 2916, 2916, 2309,
	2304, 2303, 8952, 2974, -269, -1000, 7200, 2866, 2974, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -314,
	2510, 37419, 2135, 2134, -347, -33, 852, 813, 844, -1000,
	2908, -1000, 2509, 37419, 588, 588, -140, 588, -1000, 37419,
	1635, 30048, 37419, 37419, 1939, 37419, 37419, 37419, 588, 588,
	588, 588, 37419, -1000, 2807, 30048, 2751, 605, -1000, 37419,
	1195, 2904, 37419, 3006, 11288, 11288, -1000, 34017, 1522, 1503,
	1503, -1000, -1000, 37419, -1000, -1000, -1000, 1522, 37419, 1522,
	1522, 3006, 1522, -1000, -1000, -1000, 1503, 1503, -1000, -1000,
	8952, -1000, -1000, 1522, 1522, -1000, -1000, 3006, 37419, 8,
	3006, 3006, -3, -1000, -1000, -1000, 37419, 37419, 588, 37419,
	-1000, 37419, 37419, -1000, -1000, 37419, 37419, 39902, 37419, 33450,
	2936, -1000, 30048, 37419, 37419, 27780, -1000, 1170, -1000, -29,
	-1000, -36, -24, 1445, -24, 1445, -1000, 500, 523, 17573,
	441, 30048, 5445, -1000, -1000, 1445, 1445, 5445, 5445, 1407,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1193, -1000, 207,
	2974, -1000, -1000, -1000, -1000, -1000, 1911, 1908, 1907, 37419,
	37419, 30048, 1939, 37419, 591, 37419, 37419, 37419, 37419, 37419,
	-1000, 2508, 1362, -1000, 2882, 37419, 37419, 1139, -1000, -1000,
	14165, 1360, 1139, -1000, 1664, -1000, 8952, 11876, -289, 8952,
	11876, 11876, 8952, 11876, -1000, 8952, 155, -1000, -1000, -1000,
	-1000, 1906, -1000, 1904, -1000, -1000, -1000, -1000, -1000, 2133,
	2133, -1000, 1899, -1000, -1000, -1000, -1000, 1898, -1000, -1000,
	1893, -1000, -1000, -1000, 2302, 937, -1000, 2114, 2684, -271,
	-1000, 16437, 37419, 37419, -1000, -1000, -271, -1000, 15868, 37419,
	2974, -1000, -275, 2866, 8952, 37419, -1000, 2969, -1000, 366,
	290, -1000, -1000, -1000, -1000, -1000, -1000, 1357, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1189, -1000, 37419,
	-1000, -1000, 164, 30048, 31182, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 197, -1000, -1000, 166, -1000, 654, 128, 1450,
	-1000, -1000, 151, 174, 95, 750, 2164, -1000, 1640, 1640,
	1663, -1000, 555, -1000, -1000, -1000, -1000, 2507, -1000, -1000,
	-1000, 1799, 1552, -1000, 1499, 1499, 1402, 1402, 1402, 1402,
	1402, 1649, 1649, -1000, -1000, -1000, 6032, 2506, 11288, 11288,
	11288, 11288, 560, 560, 2949, 3684, -1000, 8952, 1647, -1000,
	8952, 2580, 2457, 1342, 1336, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2300, 2299, 2238, 3016, 2298,
	8952, -1000, -1000, 1443, 1442, 1441, -1000, 2059, 8368, -1000,
	-1000, -1000, 2292, 1320, 2291, -1000, -1000, -1000, 2285, 1429,
	1029, 2279, 1533, 2276, 1177, 8952, 8952, 8952, 8952, 2273,
	1427, 1412, 8952, 8952, 8952, 8952, 2263, 8952, 8952, 8952,
	8952, 8952, 8952, 8952, 8952, 39, 39, 39, 1176, -1000,
	-1000, 1411, -1000, 2164, -1000, -1000, 2866, -1000, 2505, 1890,
	1174, -1000, -1000, -1000, 2076, -1000, -1000, 849, 817, 845,
	37419, 933, 2504, 37419, 37419, 588, 37419, 163, -1000, 2879,
	1172, -1000, 128, -88, 360, 946, 2678, 3013, -182, 37419,
	37419, 37419, 37419, 2901, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 32883, -1000, 2495, 1408, -1000, -1000, 8952, -1000,
	-1000, 2676, 37419, 37419, 3006, 3006, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1522, 3006, 3006, 1225, 1503, 1522, -1000,
	-1000, 1522, -1000, -1000, 1522, -1000, 1311, -1000, 37419, -1000,
	-1000, -1000, 2900, 2407, 1173, -1000, 1030, 571, 571, 850,
	394, 2998, 15299, -1000, 1457, 991, 648, 2796, 201, -1000,
	1457, -217, 1457, 1457, 1457, 1457, 1457, 1457, 1457, 471,
	466, 1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457,
	1457, 1457, 872, 1457, 1457, 1457, 1457, 1457, -1000, 1457,
	2490, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 508, 160,
	2933, 250, 246, 1172, 2931, 260, 2853, 1150, -1000, -1000,
	-1000, -1000, 21543, 21543, 17006, 21543, -1000, 1474, -24, -47,
	-1000, -1000, 1170, 5445, 1170, 5445, -1000, -1000, 640, -1000,
	-1000, 946, -1000, 37419, 37419, -1000, -1000, 2489, 1596, -1000,
	-1000, 12444, -1000, 5445, 5445, -1000, -1000, 22110, 37419, -1000,
	-69, -1000, -43, 2866, -1000, -1000, -1000, 1152, -1000, -1000,
	1153, 946, 2682, 37419, 1152, 1152, 1152, -1000, -1000, 13598,
	37419, 37419, -1000, -1000, 3006, 7784, -1000, 27780, -1000, -1000,
	32316, -1000, 31749, 3006, 1621, -1000, 11876, 1947, 152, -1000,
	194, -334, 149, 1802, 148, 2164, -1000, -1000, 2257, 2255,
	1405, -1000, 1404, 2253, 1403, 1399, -1000, -9, -1000, 2843,
	948, -1000, 2469, -1000, 1397, 2724, -1000, 1140, -1000, 1589,
	1396, -1000, 948, 1392, 2708, 1140, 2866, 2112, -1000, 1131,
	-1000, 2160, 1310, 90, -1000, -1000, 37419, 2119, 1389, 31182,
	1032, -1000, 628, 1294, 1289, -1000, 30048, 203, 30048, -1000,
	30048, -1000, -1000, 333, -1000, 37419, 2864, -1000, -1000, -1000,
	2076, 1585, -354, 37419, -1000, -1000, -1000, -1000, -1000, 1385,
	-1000, 560, 560, 2949, 2398, -1000, 11288, -1000, 11288, 2715,
	1620, -1000, 8952, 1919, 3427, 3427, 1319, 20409, 37419, -1000,
	-1000, 8952, 8952, -1000, 2701, -1000, -1000, -1000, -1000, 8952,
	8952, 2184, -1000, 37419, -1000, -1000, -1000, -1000, 20409, -1000,
	11288, -1000, 8952, 1061, 1061, 2633, 1372, 39, 39, 39,
	2625, 2619, 2611, 1367, 39, 2588, 2576, 2558, 2520, 2502,
	2470, 2464, 2450, -1000, 2467, -1000, -1000, 9536, 7200, -1000,
	-1000, 230, 1112, 1889, 108, -1000, 1562, -1000, -1000, -1000,
	791, 180, 2252, 1110, -1000, -1000, 37419, -1000, -1000, -1000,
	13598, 2407, 248, 37419, 2407, 56, 1457, -1000, 504, 30048,
	485, -1000, 37419, 1756, 1541, 2638, 357, 2829, 37419, 2466,
	2437, 2420, 2417, 2897, 314, 4552, 37419, 1054, -1000, 1273,
	39717, -1000, 37419, 2164, -1000, 1939, -1000, 1503, -1000, -1000,
	3006, -1000, -1000, 8952, 8952, 3006, 1503, 1503, 1522, 37419,
	-1000, 314, 4552, 2895, 39902, -1000, 37419, -1000, -1000, -1000,
	705, -1000, 826, 588, 37419, 1702, 826, 1701, 2413, -1000,
	-1000, 37419, 37419, 37419, 37419, -1000, -1000, 37419, -1000, 37419,
	37419, 37419, 37419, 37419, -1000, 37419, 37419, -1000, 37419, 1693,
	1689, 2837, -1000, 1457, 1457, 765, -1000, -1000, 483, -1000,
	1888, 1885, 1884, 1876, 2103, 2101, 2100, 1457, 1457, 1875,
	2099, 30615, 2096, 1031, 1872, 1864, 1863, 1867, 2095, 700,
	-1000, 2088, 1860, 1856, 1855, 37419, 2409, 2034, -1000, -1000,
	56, 1457, 243, 37419, 1536, 504, 353, 1871, 18141, 37419,
	27780, 27780, 27780, 27780, -1000, 2699, 2698, -1000, 2720, 2719,
	2726, 37419, 27780, 2407, -1000, 30615, -1000, -1000, -1000, 1449,
	1329, 2731, 764, 8952, -1000, -1000, -40, -41, -1000, -1000,
	-1000, 30048, 2086, 441, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2968, 37419, 37419, 652, 2250, 1107, -1000, -1000, -1000,
	4552, 2387, 2387, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2387, 2387, 2402, -1000, -1000, 2386, 2386, 2386,
	2357, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2391, 2391, 2392, 2392, 2391, -1000, -1000, 3003, -1000, 1106,
	-1000, -1000, 1270, -1000, 3003, 1628, -339, 11876, 1537, 1453,
	-1000, 8952, 11876, 8952, -290, 222, -301, -1000, -1000, -1000,
	2085, -1000, -1000, -1000, 1862, -1000, 1858, 53, 70, 1679,
	-271, 7200, 334, 37419, -271, 37419, 7200, -1000, 37419, 331,
	-271, 2968, -9, 8952, 2774, -1000, -1000, 37419, 1838, -1000,
	-1000, -1000, 3008, 30048, 1939, 1423, 29481, -1000, 209, -1000,
	184, 481, 2079, -1000, 669, 105, 2077, 2076, -1000, -1000,
	-1000, -1000, 11288, -1000, -1000, -1000, -1000, 2164, 8952, 2248,
	-1000, 808, 808, 2247, 2240, -1000, 2387, 2387, -1000, 2357,
	2386, 2357, 808, 808, 2233, -1000, 1762, 2446, -1000, 2313,
	2290, 8952, -1000, 2231, 3039, 1038, -107, -244, 39, 39,
	-1000, -1000, -1000, -1000, 39, 39, 39, 39, -1000, 39,
	39, 39, 39, 39, 39, 39, 39, 544, -154, -325,
	-1000, 2226, 1103, -1000, -1000, -1000, -1000, -1000, 3340, 1095,
	-1000, 2076, 2075, -1000, 2066, 2065, 933, 4552, 2223, 2894,
	3907, 2885, 2384, 2382, 2876, 1931, -1000, -1000, -1000, 28914,
	464, -1000, -1000, -1000, 557, 208, 1837, 469, -1000, 37419,
	260, 2739, 1535, 2062, 37419, -1000, -1000, -1000, -1000, -1000,
	-1000, 2829, -1000, 1114, 306, 26646, 3907, 3907, 3907, 318,
	313, 1566, -1000, 541, 1033, 1267, 27780, 37419, -1000, 27213,
	2222, -1000, 946, 3006, -1000, 2164, 2164, -1000, 3006, 3006,
	1503, -1000, 313, -1000, 318, -1000, 2846, 4552, -1000, 37419,
	-1000, 37419, -1000, 37419, 37419, 588, 8952, 2846, 37419, 624,
	-1000, -1000, 945, 297, 285, 612, 612, 1047, -1000, 2872,
	-1000, -1000, -1000, 37419, -1000, -1000, -1000, -1000, -1000, -1000,
	20409, 20409, 2929, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2061, 2058, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 37419, 1323, -1000, 1530,
	1931, 28914, 1528, 1445, 2055, 464, 1756, 1526, -1000, 2052,
	-1000, 949, 37419, 37419, -1000, 1090, -1000, 1525, 2672, 2636,
	2672, -1000, -1000, -1000, -1000, 2639, -1000, 2516, -1000, -1000,
	1090, -1000, -1000, -1000, -1000, -1000, 764, -1000, 2963, 826,
	826, 826, 2220, -1000, -1000, -1000, 1032, 2218, -1000, -1000,
	-1000, 3025, -1000, -1000, -1000, -1000, -1000, -1000, 13598, 2804,
	3001, 2997, 28347, 3001, -1000, -339, 1618, -1000, 1903, 145,
	1658, 37419, -1000, -1000, -1000, 2215, 2214, -277, 73, 2996,
	2995, 812, -1000, 2205, 1011, -271, -1000, -1000, 948, -1000,
	-1000, -1000, -271, -1000, 948, -1000, 53, -1000, -1000, 2788,
	-1000, -1000, 1939, -1000, 183, -1000, -1000, -1000, -1000, -1000,
	-1000, 111, -1000, 37419, -1000, 977, 102, -1000, 2164, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 8952, -1000, -1000, -1000, 2260,
	-1000, -1000, 8952, 2203, 2048, 2202, 2043, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3035, -1000, 2993, 2198, 2197, 2195, -1000, 8952, 2182,
	3340, -1000, -1000, -1000, -1000, -1000, -1000, 717, 318, 2181,
	962, -1000, -1000, -1000, -1000, 318, 25512, 3907, 318, -1000,
	2041, 114, -1000, -1000, -1000, 2040, 2039, 1835, -1000, -1000,
	1834, 1330, 137, -1000, -1000, -1000, -1000, -1000, -1000, 1871,
	1767, 1516, -357, -1000, 2377, -1000, 1457, 1457, 1457, 37419,
	1322, -1000, 1457, 1457, 2178, 2173, 2169, -204, 551, 1604,
	1565, -1000, 1833, 21543, 27780, 27213, 1037, -1000, 1244, -1000,
	-1000, -1000, -1000, -1000, 3006, 551, -1000, -1000, -1000, 37419,
	257, 2376, -1000, 2370, 2673, 367, 2369, 2367, 37419, 2243,
	-1000, 2846, 37419, 586, 2790, -1000, -1000, -1000, 278, -1000,
	-1000, 422, -1000, 37419, -1000, -1000, 1395, -1000, 20409, -1000,
	-1000, 1287, -1000, 2034, 2030, -1000, 114, 2028, 5445, -1000,
	-1000, 2739, 2027, -1000, 37419, 949, 949, 3035, 37419, 7200,
	-1000, -1000, 8952, 2366, -1000, 8952, -1000, -1000, -1000, -1000,
	-1000, 2365, 2832, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1337, -1000, 8952, 8952, -1000, -1000, 574, 11876, -302, 219,
	-1000, -1000, -1000, -279, 2024, -1000, -1000, 2992, 2023, 1961,
	37419, -1000, -1000, 948, 948, -277, -1000, -1000, 946, -1000,
	-1000, -3, 470, -1000, 2208, -1000, 2201, 39, -1000, 39,
	-1000, 165, 8952, -1000, -1000, -1000, 2069, -1000, 2166, 4552,
	-191, -204, 3907, -1000, 1268, -1000, 1457, 1457, 2163, -191,
	-1000, -1000, 330, -1000, -1000, 263, -1000, -1000, 1796, 503,
	-1000, -1000, -1000, 1509, 1760, 1982, 24945, 20409, 20976, 2011,
	-1000, -1000, 26646, 1337, 1337, 40082, 202, 40082, -1000, 875,
	1564, -1000, 1831, -1000, 1829, -1000, 3006, 1037, 1244, -1000,
	-1000, 1419, -1000, 875, -1000, -1000, 257, -1000, -1000, 1720,
	11288, -1000, -1000, 2006, 20976, 706, 1507, 1506, 709, 2362,
	-1000, 434, 3022, -1000, -1000, -1000, 763, 2359, -1000, 1672,
	1668, -1000, 37419, -1000, 24945, 24945, 610, 610, 24945, 24945,
	2358, 612, -1000, -1000, 11288, -1000, -1000, 1457, -1000, -1000,
	1457, 1326, -1000, -1000, -1000, -1000, -1000, -1000, 1767, -1000,
	-1000, 2974, -1000, -1000, 2164, 37419, 2164, 26079, -1000, 2991,
	2990, -1000, 2164, 937, -1000, -339, 37419, 37419, -281, 1828,
	-1000, 2000, 69, -1000, -1000, 938, -279, -283, 50, 60,
	1480, -1000, -1000, -1000, -1000, 2074, -1000, 703, -1000, -1000,
	-1000, 937, -1000, -1000, -180, -1000, -1000, 343, -1000, -1000,
	-1000, 25512, 1337, 1337, -204, -1000, 480, 1996, -1000, -1000,
	254, -1000, -1000, 1995, -1000, -1000, 101, -1000, 1478, 1258,
	-1000, 2357, 8952, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 539, 39735, -1000, 991, -1000, -3, 539, 568, 237,
	-1000, 1827, -1000, -1000, 3035, -1000, 497, -1000, -1000, 2949,
	-1000, -1000, -1000, -1000, -1000, -1000, 1994, 1991, -1000, -1000,
	-1000, -1000, -1000, 1823, 2355, -68, 2927, 1989, -1000, -1000,
	2354, 1221, 1213, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1201, 1197, 24945, -1000, -1000, 2949, 1822, 20409, 1457,
	-1000, -1000, 1185, 1183, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2352, -1000, -1000, 2989, -281, -1000, 1986, 600, 65,
	60, -1000, 2988, 62, 2987, 2983, 1984, -1000, -1000, 520,
	-272, 37, 33, 29, -1000, -1000, -1000, 8952, 37419, 433,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 110, -1000, -1000,
	-1000, -1000, 1982, 1975, -1000, 24945, 2872, 1998, 375, 2982,
	40082, -1000, 1457, -1000, 375, -1000, 326, -1000, 1563, -1000,
	1820, -1000, 2974, -1000, 324, -1000, -1000, -1000, 2064, 8952,
	2350, 1457, 2003, -176, 24945, 2669, 2560, 2472, 2452, 1169,
	-1000, -1000, 20409, -1000, -1000, 24378, 37419, 1961, -1000, -1000,
	2349, 1819, 73, 63, 2981, -1000, 1961, 2980, 1961, 1961,
	927, 1651, -1000, 35, 31, 27, -1000, -1000, -1000, -1000,
	452, -1000, 200, -1000, -1000, -1000, 299, -1000, -1000, 2872,
	-1000, 2977, 397, -1000, 20409, -1000, -1000, -1000, 1795, -1000,
	-1000, -1000, -1000, 1981, -1000, 37419, -1000, 2622, -1000, 170,
	1161, 299, 610, 299, 610, 299, 610, 299, 610, 195,
	-1000, -1000, -1000, 1156, -1000, -1000, 2914, 19842, 48, -1000,
	-1000, -1000, 1965, -1000, 1961, -1000, -1000, -1000, 42, 520,
	-1000, -1000, -1000, 1958, -1000, -1000, -1000, -1000, 1457, 1457,
	1952, 1950, 293, -1000, -1000, -1000, 23811, 390, 395, 382,
	-1000, 546, -1000, -1000, -1000, 612, -1000, -1000, 2579, 2523,
	3012, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 37419, -1000, 37419, -1000, 1146, -1000, -1000, -1000, 1240,
	-1000, -1000, -1000, -1000, 1454, -1000, -323, 1794, 1791, -1000,
	-1000, 37419, -1000, 37419, 388, 1788, 11288, 2348, 11288, 2347,
	412, 2346, -1000, -1000, 3014, -1000, 3020, 761, 761, 299,
	299, 299, 299, -1000, 919, -1000, 1448, -1000, 23244, 37419,
	1937, -1000, -1000, 1912, -1000, -1000, -1000, 1122, 2339, 2976,
	-1000, 2635, 37419, 2073, 37419, 2335, 1430, 11288, -1000, -1000,
	-1000, 1798, 438, -1000, 37419, 6616, -1000, 1220, -1000, -1000,
	-1000, -1000, 510, 393, -1000, 1108, -1000, 1086, 22677, 1769,
	1584, -1000, -1000, -1000, -1000, -1000, 2164, 37419, 1077, -1000,
	37419, 368, -1000, -1000, -1000, 1057, -1000, -1000, -1000, -1000,
	510, 2601, -1000, 1745, -1000, -1000, 4563, 653, -1000, -1000,
	4563, 378, -1000, 528, 2330, -1000, -1000, 1053, -1000, 37419,
	714, 8952, -1000, 378, 40082, -1000, 8952, 1045, -1000, 40082,
	974, -1000, -1000,
}

var yyPgo = [...]int{
	0, 166, 3051, 241, 168, 3588, 88, 243, 215, 212,
	240, 3586, 3585, 3584, 2816, 2814, 3583, 3582, 3581, 3580,
	3579, 3578, 3575, 3574, 3573, 3572, 3571, 3570, 3568, 3567,
	3566, 3564, 3563, 3561, 3560, 3559, 3558, 3557, 3556, 3555,
	3554, 3553, 3552, 3551, 3548, 3547, 238, 3545, 3544, 3540,
	3539, 3533, 3526, 3524, 3523, 3521, 3519, 3518, 3517, 3516,
	3514, 3513, 3512, 3511, 3510, 3509, 3508, 3507, 3506, 3505,
	3502, 3500, 3495, 3493, 3490, 3485, 3484, 3483, 3482, 199,
	3480, 2808, 3479, 3478, 3477, 3476, 3475, 3474, 3470, 219,
	3466, 3465, 3464, 3462, 3461, 3459, 3458, 3456, 3455, 3452,
	3451, 217, 3450, 3448, 3447, 3445, 3444, 3443, 210, 3442,
	163, 188, 3441, 3440, 3439, 3436, 3432, 3430, 230, 181,
	68, 3429, 45, 3426, 3425, 211, 3423, 144, 3422, 136,
	3421, 3420, 3415, 3414, 3413, 3412, 3411, 3409, 3406, 3405,
	3402, 3399, 3398, 3397, 3396, 3391, 82, 3390, 248, 3388,
	69, 3387, 3386, 128, 236, 183, 245, 2563, 250, 244,
	179, 171, 115, 3385, 2820, 3384, 155, 223, 153, 24,
	3381, 129, 3378, 253, 51, 27, 242, 132, 55, 185,
	113, 3377, 209, 102, 98, 3376, 3375, 134, 239, 172,
	3374, 94, 3373, 3372, 3371, 3370, 3369, 189, 197, 3367,
	3365, 119, 3364, 3363, 83, 3361, 70, 186, 160, 184,
	3360, 90, 107, 121, 106, 175, 3359, 111, 3358, 3357,
	3356, 3355, 173, 3351, 3350, 123, 66, 3344, 3343, 3342,
	64, 3341, 49, 3340, 44, 3338, 57, 3335, 3334, 3326,
	3325, 3323, 3321, 3320, 3319, 3318, 3317, 3316, 47, 3315,
	3314, 14, 16, 18, 3310, 26, 3309, 161, 3308, 3305,
	3304, 75, 77, 3298, 80, 2, 46, 67, 3297, 3295,
	216, 130, 93, 145, 3287, 425, 3286, 3285, 3284, 154,
	3283, 517, 3281, 3280, 3279, 3277, 3276, 3275, 127, 3274,
	218, 38, 3273, 120, 117, 3272, 36, 43, 214, 221,
	3271, 3269, 3268, 138, 194, 118, 79, 0, 3267, 151,
	3266, 3265, 3263, 254, 3262, 226, 224, 156, 233, 265,
	228, 3261, 3260, 62, 3259, 157, 42, 54, 126, 9,
	22, 252, 3258, 936, 178, 3257, 198, 3255, 152, 1,
	141, 3254, 3253, 29, 257, 3252, 3251, 3250, 112, 3249,
	3246, 110, 81, 3244, 3239, 3237, 3236, 35, 3235, 31,
	20, 3234, 99, 3233, 246, 3232, 232, 139, 174, 170,
	150, 220, 229, 73, 72, 3227, 1588, 147, 87, 17,
	3226, 222, 3225, 167, 100, 3224, 122, 3223, 237, 384,
	201, 3222, 176, 8, 39, 33, 3221, 10, 3215, 200,
	206, 3214, 3213, 23, 48, 3212, 19, 3211, 3209, 3204,
	3202, 5, 3201, 3200, 3198, 4, 7, 3196, 3, 208,
	162, 124, 85, 61, 3194, 3193, 41, 125, 3192, 137,
	146, 149, 3190, 71, 3189, 3187, 3186, 2683, 3172, 249,
	3171, 3169, 3168, 3161, 3160, 3159, 3156, 3155, 3154, 3152,
	89, 32, 3151, 3150, 3148, 3147, 76, 135, 3146, 3145,
	3144, 3143, 34, 131, 3142, 21, 3141, 30, 28, 37,
	3137, 92, 3136, 13, 180, 3135, 3134, 15, 3133, 3132,
	11, 12, 3130, 3129, 108, 3128, 86, 25, 158, 95,
	3127, 3126, 84, 203, 133, 3125, 3124, 97, 234, 192,
	3123, 202, 231, 247, 3122, 213, 3120, 3119, 3117, 3115,
	3114, 3113, 1082, 3112, 3111, 235, 65, 91, 105, 3110,
	3108, 3107, 78, 159, 109, 103, 56, 74, 3106, 101,
	190, 3105, 182, 3103, 3101, 96, 3100, 3082, 3081, 3080,
	177, 3079, 3078, 187, 225, 3075, 3071, 411, 3070, 3069,
	3067, 3064, 3063, 3061, 3057, 3054, 3053, 3049, 227, 287,
	3047,
}

//line mysql_sql.y:10805
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) alterTypeOptionUnion() *tree.TypeOption {
	v, _ := st.union.(*tree.TypeOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionUnion() *tree.ConnectorOption {
	v, _ := st.union.(*tree.ConnectorOption)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) connectorOptionsUnion() []*tree.ConnectorOption {
	v, _ := st.union.([]*tree.ConnectorOption)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) cycleOptionUnion() *tree.CycleOption {
	v, _ := st.union.(*tree.CycleOption)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fillModeUnion() tree.FillMode {
	v, _ := st.union.(tree.FillMode)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) timeFillUnion() *tree.Fill {
	v, _ := st.union.(*tree.Fill)
	return v
}

func (st *yySymType) timeIntervalUnion() *tree.Interval {
	v, _ := st.union.(*tree.Interval)
	return v
}

func (st *yySymType) timeSlidingUnion() *tree.Sliding {
	v, _ := st.union.(*tree.Sliding)
	return v
}

func (st *yySymType) timeWindowUnion() *tree.TimeWindow {
	v, _ := st.union.(*tree.TimeWindow)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 553, 556, 556, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 116, 116, 115, 538, 538, 538, 539,
	539, 112, 134, 133, 136, 136, 135, 135, 132, 132,
	128, 131, 131, 130, 130, 129, 124, 126, 126, 125,
	127, 127, 113, 101, 114, 483, 483, 482, 482, 481,
	481, 434, 434, 480, 480, 480, 479, 479, 479, 478,
	478, 477, 477, 476, 476, 474, 474, 475, 473, 472,
	472, 472, 470, 470, 470, 466, 466, 468, 467, 467,
	469, 461, 461, 464, 464, 462, 462, 462, 462, 465,
	460, 460, 460, 459, 459, 100, 100, 100, 378, 378,
	99, 99, 392, 392, 392, 392, 392, 390, 390, 390,
	390, 390, 390, 389, 389, 388, 388, 393, 393, 391,
	391, 391, 391, 391, 391, 391, 391, 391, 391, 391,
	391, 391, 391, 391, 391, 391, 391, 391, 391, 391,
	391, 391, 391, 391, 391, 391, 391, 391, 391, 391,
	391, 391, 391, 391, 391, 391, 391, 391, 391, 391,
	391, 391, 391, 391, 391, 391, 391, 391, 391, 90,
	90, 90, 90, 90, 95, 95, 95, 544, 544, 543,
	543, 545, 545, 545, 545, 546, 546, 93, 93, 93,
	94, 387, 387, 387, 91, 92, 92, 377, 377, 382,
	382, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 386, 386, 386, 384, 384, 383,
	383, 385, 385, 84, 84, 84, 87, 86, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 85, 85, 85,
	85, 85, 85, 80, 80, 80, 80, 80, 79, 79,
	81, 81, 374, 374, 373, 96, 96, 97, 541, 541,
	540, 542, 542, 542, 542, 98, 104, 104, 104, 104,
	104, 104, 104, 103, 103, 106, 106, 105, 107, 89,
	89, 89, 89, 89, 89, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 508, 508, 508, 510, 510, 311,
	312, 557, 314, 310, 310, 310, 504, 504, 505, 506,
	507, 507, 507, 102, 11, 11, 11, 11, 11, 11,
	11, 11, 13, 78, 83, 256, 256, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 244,
	244, 244, 239, 239, 239, 239, 240, 240, 241, 241,
	242, 242, 242, 242, 243, 243, 304, 304, 261, 261,
	261, 263, 263, 262, 260, 258, 258, 258, 258, 258,
	258, 259, 259, 259, 259, 264, 264, 76, 82, 82,
	82, 521, 521, 77, 532, 532, 437, 437, 325, 325,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 442, 443, 321, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 53,
	56, 52, 52, 52, 363, 363, 51, 558, 558, 299,
	299, 64, 63, 55, 65, 66, 67, 68, 69, 70,
	50, 62, 62, 62, 62, 62, 62, 62, 62, 73,
	455, 455, 560, 560, 560, 71, 72, 436, 436, 436,
	61, 60, 59, 58, 57, 57, 49, 49, 48, 48,
	54, 140, 141, 318, 318, 318, 320, 320, 316, 559,
	559, 406, 406, 319, 319, 47, 47, 47, 47, 74,
	317, 317, 298, 315, 315, 315, 12, 12, 10, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 25, 26, 28, 371, 371, 368, 27,
	19, 18, 18, 22, 21, 17, 17, 20, 23, 24,
	24, 9, 9, 9, 9, 14, 14, 15, 161, 161,
	212, 212, 516, 516, 512, 512, 513, 513, 513, 514,
	514, 515, 515, 108, 449, 449, 449, 449, 449, 449,
	8, 183, 183, 448, 448, 448, 448, 448, 448, 375,
	375, 375, 493, 493, 493, 494, 182, 182, 177, 177,
	450, 450, 340, 495, 495, 458, 458, 457, 457, 456,
	456, 180, 180, 181, 181, 164, 164, 119, 119, 463,
	463, 463, 463, 471, 471, 433, 433, 248, 248, 291,
	291, 292, 292, 154, 154, 155, 155, 155, 155, 155,
	155, 547, 547, 548, 549, 550, 550, 551, 551, 551,
	552, 552, 552, 552, 552, 501, 501, 503, 503, 502,
	179, 179, 175, 175, 176, 176, 176, 174, 174, 173,
	172, 172, 171, 169, 169, 169, 170, 170, 170, 187,
	187, 157, 157, 157, 156, 156, 156, 156, 156, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 158, 158, 509, 509, 509, 438, 438, 438, 445,
	445, 272, 272, 273, 273, 271, 271, 159, 159, 160,
	160, 160, 160, 270, 270, 269, 162, 162, 168, 167,
	167, 163, 163, 163, 163, 280, 280, 279, 279, 279,
	279, 111, 117, 117, 118, 186, 186, 278, 277, 277,
	277, 185, 185, 184, 184, 178, 178, 166, 166, 166,
	166, 276, 165, 274, 537, 537, 536, 536, 535, 533,
	533, 533, 534, 534, 534, 534, 485, 485, 485, 485,
	485, 305, 305, 305, 309, 309, 308, 308, 308, 308,
	308, 313, 7, 7, 7, 7, 7, 7, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 38, 196, 197, 39, 198, 198, 199, 199, 200,
	200, 201, 202, 203, 203, 203, 203, 37, 188, 188,
	189, 189, 190, 190, 191, 192, 192, 192, 195, 193,
	194, 194, 555, 555, 554, 36, 36, 29, 147, 147,
	148, 148, 148, 150, 150, 245, 245, 245, 149, 149,
	151, 151, 151, 517, 520, 518, 518, 522, 522, 522,
	523, 523, 523, 523, 524, 524, 30, 137, 142, 527,
	527, 527, 526, 526, 528, 528, 529, 529, 295, 295,
	296, 296, 145, 146, 146, 144, 139, 153, 153, 153,
	153, 153, 138, 143, 519, 525, 525, 525, 372, 372,
	369, 370, 370, 367, 366, 366, 366, 531, 531, 530,
	530, 530, 306, 306, 31, 362, 362, 364, 365, 365,
	365, 356, 356, 356, 356, 35, 360, 360, 361, 361,
	361, 361, 361, 361, 361, 357, 357, 359, 359, 355,
	355, 355, 355, 355, 355, 34, 152, 152, 354, 354,
	351, 351, 349, 349, 350, 350, 348, 348, 348, 352,
	352, 42, 75, 43, 44, 45, 41, 41, 41, 353,
	353, 33, 33, 33, 33, 121, 120, 120, 120, 120,
	120, 123, 123, 294, 294, 293, 293, 122, 40, 224,
	224, 425, 425, 420, 420, 420, 420, 420, 440, 440,
	440, 421, 421, 421, 422, 422, 422, 424, 424, 424,
	423, 423, 423, 423, 423, 439, 439, 441, 441, 441,
	394, 394, 395, 395, 395, 398, 398, 412, 412, 413,
	413, 411, 411, 418, 418, 417, 417, 416, 416, 415,
	415, 414, 414, 414, 414, 409, 409, 408, 408, 396,
	396, 396, 396, 396, 397, 397, 397, 407, 407, 410,
	410, 268, 268, 267, 267, 232, 232, 233, 233, 266,
	266, 230, 230, 231, 231, 231, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 491, 491, 492, 235, 235, 246, 246, 246, 246,
	246, 246, 234, 234, 236, 236, 213, 213, 211, 211,
	204, 204, 205, 205, 206, 206, 206, 210, 210, 209,
	209, 209, 209, 207, 207, 208, 208, 208, 208, 208,
	208, 380, 380, 488, 488, 489, 489, 484, 484, 484,
	487, 487, 487, 487, 487, 487, 490, 490, 490, 486,
	486, 214, 289, 289, 289, 307, 307, 307, 307, 288,
	288, 288, 229, 229, 228, 228, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 379, 379,
	322, 322, 323, 323, 255, 254, 254, 254, 254, 254,
	252, 253, 251, 251, 251, 251, 251, 250, 250, 249,
	249, 249, 358, 358, 247, 247, 238, 238, 238, 237,
	237, 237, 419, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 286,
	286, 286, 287, 287, 287, 332, 332, 337, 337, 500,
	500, 499, 215, 215, 215, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 225, 225, 225, 403, 403, 403,
	403, 404, 404, 404, 404, 405, 405, 405, 401, 401,
	402, 402, 341, 342, 342, 446, 446, 447, 447, 399,
	399, 400, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 454, 454, 454, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 511, 511, 511, 496, 496, 496, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 498,
	498, 498, 498, 498, 498, 498, 498, 498, 498, 498,
	498, 498, 498, 498, 498, 498, 284, 284, 284, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 343, 343, 344, 344, 451, 451,
	451, 451, 451, 451, 452, 452, 453, 453, 453, 453,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 330,
	281, 281, 281, 345, 338, 338, 339, 339, 333, 333,
	333, 333, 333, 333, 333, 335, 335, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 334, 334, 336,
	336, 347, 347, 347, 346, 346, 346, 346, 346, 346,
	346, 227, 227, 227, 227, 327, 327, 327, 326, 326,
	326, 326, 326, 326, 326, 326, 326, 326, 326, 326,
	217, 217, 217, 217, 221, 221, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	222, 222, 222, 222, 222, 220, 220, 220, 220, 220,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 109, 110,
	110, 219, 290, 290, 426, 426, 429, 429, 427, 427,
	428, 430, 430, 430, 431, 431, 431, 432, 432, 432,
	435, 435, 297, 297, 297, 303, 303, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 10, 7, 4, 1, 3, 2, 4, 5,
	5, 6, 5, 5, 3, 2, 2, 1, 3, 4,
	3, 7, 5, 8, 2, 2, 1, 3, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	2, 1, 3, 2, 1, 2, 2, 1, 2, 3,
	2, 3, 6, 3, 3, 1, 1, 7, 7, 8,
	8, 0, 4, 7, 0, 3, 0, 2, 0, 1,
	1, 1, 1, 4, 2, 2, 3, 3, 4, 5,
	3, 4, 4, 2, 2, 2, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 2, 5, 5, 0, 2, 7, 0, 1, 0,
	1, 5, 5, 3, 3, 2, 4, 4, 4, 4,
	4, 1, 1, 1, 3, 3, 1, 1, 1, 6,
	0, 1, 1, 1, 1, 5, 5, 0, 1, 1,
	3, 3, 3, 4, 6, 7, 4, 4, 7, 8,
	3, 3, 3, 0, 2, 2, 0, 2, 2, 1,
	1, 1, 1, 0, 1, 4, 4, 5, 4, 3,
	1, 3, 1, 1, 3, 5, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 4, 1, 3, 1, 4,
	6, 6, 4, 4, 4, 4, 4, 3, 6, 3,
	5, 1, 1, 2, 2, 11, 8, 9, 1, 3,
	2, 4, 0, 2, 0, 1, 1, 1, 1, 0,
	1, 0, 1, 4, 2, 1, 5, 4, 4, 2,
	5, 1, 3, 2, 1, 5, 4, 4, 2, 0,
	5, 4, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 6, 4, 5, 7, 4,
	5, 0, 1, 3, 8, 0, 6, 0, 4, 6,
	1, 1, 1, 1, 1, 2, 3, 1, 3, 6,
	0, 3, 0, 1, 2, 4, 4, 0, 1, 3,
	1, 3, 3, 0, 1, 1, 0, 2, 2, 0,
	2, 3, 3, 3, 1, 3, 3, 3, 3, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 7, 7, 1, 1, 1, 0, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 2, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 4, 4, 3, 2, 2, 2, 3, 2,
	3, 4, 1, 3, 4, 0, 2, 1, 1, 2,
	2, 0, 1, 2, 4, 1, 3, 1, 3, 2,
	3, 1, 4, 3, 0, 1, 1, 2, 5, 2,
	2, 2, 0, 2, 3, 3, 0, 1, 3, 1,
	3, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 7, 1, 1, 7, 1, 3, 0, 1, 1,
	3, 1, 3, 0, 1, 1, 1, 14, 1, 3,
	0, 1, 1, 3, 1, 1, 2, 4, 1, 1,
	1, 1, 0, 1, 2, 9, 9, 7, 1, 2,
	3, 3, 3, 0, 4, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 4, 1, 1, 3, 4, 3,
	0, 1, 1, 1, 0, 2, 7, 8, 8, 0,
	3, 3, 0, 3, 0, 3, 0, 5, 1, 3,
	0, 3, 3, 0, 2, 9, 6, 0, 2, 2,
	3, 3, 4, 4, 1, 0, 2, 2, 1, 3,
	2, 1, 3, 2, 1, 3, 2, 0, 1, 3,
	4, 3, 1, 1, 4, 1, 3, 1, 1, 1,
	1, 0, 1, 1, 1, 11, 0, 2, 3, 3,
	2, 2, 3, 1, 1, 1, 3, 3, 4, 0,
	2, 2, 2, 2, 2, 6, 0, 4, 1, 1,
	0, 3, 0, 1, 1, 2, 4, 4, 4, 0,
	1, 8, 2, 4, 4, 4, 9, 10, 8, 0,
	2, 11, 9, 11, 8, 2, 2, 9, 4, 5,
	3, 0, 4, 1, 3, 0, 3, 5, 10, 0,
	2, 0, 2, 0, 3, 2, 4, 3, 0, 2,
	1, 0, 2, 3, 0, 2, 3, 0, 2, 1,
	0, 3, 2, 4, 3, 0, 1, 0, 1, 1,
	0, 6, 0, 3, 5, 0, 4, 0, 3, 1,
	3, 4, 5, 0, 3, 1, 3, 2, 3, 1,
	2, 0, 4, 6, 5, 0, 2, 0, 2, 4,
	5, 4, 5, 1, 5, 6, 5, 0, 3, 0,
	1, 1, 3, 3, 3, 0, 4, 1, 3, 3,
	3, 0, 1, 1, 3, 2, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 5,
	4, 1, 3, 3, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 1, 1, 1, 1, 7,
	9, 7, 9, 2, 1, 7, 9, 7, 9, 8,
	5, 0, 1, 0, 1, 1, 1, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 3, 1, 3, 5, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 2, 1, 2, 2, 1,
	1, 2, 2, 2, 3, 3, 2, 2, 1, 5,
	6, 4, 1, 1, 1, 5, 4, 1, 1, 2,
	0, 1, 1, 2, 5, 0, 1, 1, 2, 2,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 2,
	2, 2, 0, 3, 0, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 3,
	5, 2, 2, 2, 2, 1, 1, 2, 5, 6,
	6, 6, 6, 1, 1, 1, 1, 1, 1, 4,
	4, 4, 7, 7, 7, 0, 2, 0, 1, 1,
	2, 4, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 2, 2, 2, 0, 1, 1, 1, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 2, 5,
	0, 1, 3, 0, 1, 0, 2, 0, 2, 0,
	1, 6, 8, 8, 6, 6, 5, 5, 5, 6,
	6, 6, 6, 5, 6, 6, 6, 6, 6, 6,
	6, 6, 1, 1, 1, 4, 4, 6, 8, 6,
	4, 5, 4, 4, 4, 3, 4, 6, 6, 7,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 8, 4,
	2, 3, 2, 4, 2, 2, 4, 6, 2, 2,
	4, 6, 4, 2, 0, 1, 2, 3, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 3, 0, 1, 1, 3, 3, 3,
	3, 3, 2, 1, 1, 3, 4, 3, 4, 3,
	4, 3, 4, 3, 4, 1, 3, 4, 4, 5,
	4, 5, 3, 4, 5, 6, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 4, 4, 1, 2, 3,
	5, 1, 1, 3, 0, 1, 0, 3, 0, 3,
	3, 0, 3, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 1, 2, 2, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var yyChk = [...]int{
	-1000, -553, -556, -2, -5, 609, -1, -4, -110, -84,
	-7, -112, -113, -8, -108, -9, -10, -12, -88, -103,
	-105, -107, -106, -46, -11, -102, -79, -80, -90, -96,
	-99, -100, -101, -114, -109, -111, -154, -115, -116, 599,
	-85, -86, -87, -32, -31, -30, -29, -137, -142, 605,
	444, 13, 493, -14, -15, -501, -16, 257, -310, -311,
	-312, -314, -557, -47, -48, -49, -57, -58, -59, -60,
	-61, -71, -72, -73, -50, -51, -52, -55, -53, -64,
	-63, -65, -66, -67, -68, -69, -70, -54, -140, -141,
	-74, -56, -75, -77, -76, -82, -78, -83, -139, -144,
	-13, 232, -81, 75, -91, -92, -93, -94, -95, -97,
	-98, 368, 374, 431, 598, 60, -155, -157, 615, 616,
	157, 158, 160, 161, -33, -34, -35, -36, -37, -38,
	-40, -39, -41, -42, -43, -44, -45, 228, 15, 536,
	-17, -20, -18, -21, -19, -27, -28, -26, -23, -25,
	-138, -24, -143, -22, 252, 251, 37, 318, 319, 320,
	372, 250, 229, 14, 30, 41, 348, -156, 81, 528,
	529, 531, 230, -158, 12, 619, -6, -3, -2, -124,
	-128, -132, -135, -136, -133, -134, -4, -110, 115, 242,
	600, -307, 364, 601, 603, 602, 84, 92, -300, -302,
	368, 374, 598, 616, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 565,
	566, 556, 557, 558, 559, 560, 561, 562, 563, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 496, 585, 586, 587, 588, 524, 584,
	346, 347, 533, 269, 293, 399, 299, 306, 157, 176,
	170, 198, 190, 529, 165, 273, 311, 274, 91, 160,
	479, 105, 456, 428, 163, 288, 290, 292, 525, 526,
	295, 294, 296, 298, 527, 275, 349, 186, 181, 287,
	271, 179, 276, 39, 277, 203, 278, 279, 538, 452,
	345, 458, 303, 426, 180, 453, 291, 455, 207, 211,
	470, 471, 174, 175, 460, 473, 202, 205, 206, 249,
	342, 343, 344, 42, 535, 261, 474, 209, 201, 197,
	482, 307, 305, 200, 173, 196, 272, 64, 213, 212,
	214, 422, 423, 424, 425, 280, 281, 362, 469, 193,
	182, 350, 166, 22, 477, 256, 457, 375, 282, 300,
	308, 208, 210, 263, 268, 537, 528, 430, 267, 304,
	475, 178, 260, 289, 255, 478, 167, 531, 377, 283,
	161, 297, 472, 481, 63, 390, 172, 164, 246, 158,
	265, 270, 284, 285, 286, 522, 310, 309, 301, 530,
	194, 262, 199, 184, 171, 195, 159, 264, 480, 391,
	596, 348, 409, 192, 189, 266, 239, 476, 459, 162,
	413, 392, 187, 312, 592, 593, 594, 363, 341, 313,
	314, 185, 253, 450, 451, 317, 419, 333, 393, 429,
	400, 394, 220, 221, 321, 462, 464, 204, 595, 322,
	323, 324, 454, 325, 326, 327, 328, 367, 55, 57,
	93, 95, 617, 62, -385, -383, -307, 529, 598, 374,
	528, 531, 368, 348, 616, -198, -307, 618, -164, 38,
	-211, -307, -164, -81, -15, -14, -156, -157, -211, 236,
	-315, 23, 426, -89, 427, 232, 81, -307, -9, -101,
	-8, -108, -79, -154, 431, -313, -307, 318, 318, -313,
	236, -307, 267, 407, -437, 242, -389, -362, 268, -388,
	-364, -391, -365, 31, 228, 230, 229, 264, 15, 372,
	238, 13, 12, 373, 250, 24, 25, 27, 14, 374,
	376, 28, 377, 380, 381, 382, 41, 385, 386, 257,
	84, 92, 87, 275, -197, -307, -339, -333, 112, 258,
	-335, -328, -329, -331, -480, -474, -326, 81, 139, 140,
	147, 113, -330, -419, 35, 115, 545, 584, 494, -282,
	-283, -284, -285, -286, -287, -307, -475, -473, 87, 96,
	99, 102, 103, 101, 100, 151, 183, 98, 88, 152,
	-157, 84, -496, 554, -301, 577, 585, 586, 587, 588,
	576, 60, -444, -453, 235, -451, 150, 188, 253, 184,
	13, 145, 419, 185, 551, 573, 496, 555, 565, 580,
	547, 548, 549, 542, 543, 544, 546, 556, 558, 572,
	-454, 568, 578, 579, 564, 581, 582, 583, 614, 86,
	85, 571, 570, 557, 552, 553, 559, 541, 550, 560,
	561, 569, 574, 575, 356, 105, 357, 358, 486, 349,
	359, 242, 426, 69, 360, 361, 362, 363, 364, 493,
	365, 70, 366, 355, 257, 409, 367, 187, 204, 498,
	497, 499, 490, 487, 485, 488, 489, 491, 492, 562,
	563, 567, -117, -118, 590, -547, -275, -548, 6, 7,
	8, 9, -549, 152, -538, 428, 537, 87, 162, 159,
	-376, 162, 111, 167, 166, -376, 321, 263, -353, -147,
	346, 409, 325, 93, 267, -356, -354, 525, -439, 315,
	311, 287, 237, 108, -148, 247, 246, 106, 486, 235,
	383, 306, 55, 57, -512, -513, 225, 226, 227, -503,
	519, -502, -307, 358, 95, 26, 236, 369, 263, 464,
	462, 463, 465, 466, 467, 468, -62, -455, -436, 459,
	458, -319, 451, 457, 449, 461, 452, 347, 327, 326,
	228, 610, 526, 520, -297, 393, 429, 483, 484, 370,
	430, 470, 472, 453, 105, 191, 188, 237, 239, 236,
	346, 486, 409, 93, 325, -512, 159, 470, 472, 267,
	407, 40, -382, 419, -381, -383, 471, 482, 85, 86,
	469, -297, 105, 450, 450, -547, -275, -155, -157, -111,
	-501, 527, 527, 527, 237, 346, 409, 267, 238, 236,
	523, 525, 239, 486, 235, 318, 369, 263, 325, 93,
	-438, -509, 31, -445, 222, 223, 224, 32, 33, -1,
	119, 619, -333, -333, -6, 622, -6, -333, -307, -307,
	154, -217, -221, -218, -220, -219, -223, -222, 188, 189,
	150, 192, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 205, 206, 203, 30, 204, 253, 184, 185, 186,
	187, 207, 170, 190, 534, 215, 171, 216, 172, 217,
	173, 218, 174, 175, 219, 176, 179, 180, 181, 182,
	178, 153, 81, 153, 87, -180, 259, -211, 153, -180,
	-547, -173, -174, 11, -211, -288, -307, 428, 122, -89,
	-89, 427, -504, -505, -506, -508, 232, 427, 426, 153,
	275, 16, -313, -313, 79, -211, -364, 267, -389, -362,
	35, 78, 154, 240, 154, 78, 81, 370, 346, 409,
	371, 486, 236, 383, 239, 267, 384, 346, 409, 236,
	239, 486, 267, 346, 236, 239, 409, 267, 384, 449,
	450, 239, 26, 375, 378, 379, 450, -459, 482, 154,
	111, 108, 109, 110, -333, 129, -346, 122, 123, 124,
	125, 126, 127, 128, 136, 135, 146, 139, 140, 141,
	142, 143, 144, 145, 137, 138, 132, 112, 130, 134,
	131, 114, -157, -333, -339, 60, -331, -331, -331, -331,
	-419, -337, -333, 81, 81, 81, 153, 100, 87, -333,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, -452, 81, 81, -343, -344, 81, 81, -326,
	-288, 81, 87, 87, 81, 81, 81, 87, -344, -344,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, -174, 154, -173, 81, -173, -174, -158,
	-157, 31, 32, 31, 32, 31, 32, 31, 32, -550,
	607, 81, 96, 617, 220, 475, 536, 165, 166, 167,
	-196, -307, -198, 369, 239, 523, 522, 239, -148, -351,
	242, -351, -351, -351, -351, 238, -351, 23, 236, 236,
	236, 236, -351, 493, 122, 122, 58, -514, 169, 154,
	-503, -179, 81, -318, 130, 134, -318, 23, 265, 265,
	265, -318, 305, -558, -559, 16, 132, -316, -559, -316,
	-316, -318, -560, 238, 460, 42, 266, 265, -175, -176,
	21, -175, 454, 450, -406, 455, 456, -320, -559, -319,
	-318, -318, -319, -318, -318, -318, 236, 239, 486, 325,
	611, -558, -558, 30, 30, -437, -437, -211, -437, 520,
	-298, -307, -437, -437, -437, -515, 241, -544, -543, 473,
	-546, 475, 159, -383, 159, -383, -364, 267, 267, 154,
	122, 23, -384, 122, 133, -383, -383, -384, -384, -234,
	40, -306, 150, -307, 87, -234, 40, -541, -540, -211,
	-174, -158, -157, 82, 82, 82, 530, 530, 530, -437,
	-437, -437, -437, -437, -439, -437, -437, -437, -437, -437,
	-313, -188, -307, -198, 242, -437, -437, -159, -160, 141,
	-333, -307, -159, -3, -126, -125, 116, 117, 119, 601,
	364, 600, 604, 598, -383, 40, -432, 391, 390, -426,
	-428, 81, -427, 81, -427, -427, -427, -427, -427, 81,
	81, -429, 81, -429, -429, -426, -430, 81, -430, -431,
	81, -431, -430, -307, -338, -339, -307, 38, -448, 60,
	-154, 81, 30, 81, -307, -449, 60, -154, 81, 30,
	-174, -119, 38, -176, 20, 153, 96, 87, -89, 82,
	154, -507, 102, 103, -510, 202, 194, -307, -104, 87,
	-7, -8, -9, -10, -46, -79, -154, -476, -474, 81,
	31, 418, 78, 16, -390, 236, 486, 369, 263, 239,
	346, -388, -371, -368, -366, -306, -364, -367, -366, -393,
	-288, 450, -120, 433, 432, 317, -333, -333, -333, -333,
	-333, 101, 112, 341, 102, 103, -328, -347, 31, 313,
	314, -329, -329, -329, -329, -329, -329, -329, -329, -329,
	-329, -329, -329, -336, -345, -419, 81, 132, 130, 134,
	131, 114, -331, -331, -329, -329, 82, 154, -500, -499,
	116, -333, -333, -333, -307, -497, -498, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 360, 355,
	361, 359, 349, 367, 362, 363, 187, 517, 518, 511,
	512, 513, 514, 515, 516, -338, -338, -333, -497, -338,
	-281, 32, 31, -339, -339, -339, 82, -333, -511, 339,
	338, 340, -177, -307, -338, 82, 82, 82, 96, -339,
	-339, -338, -329, -338, -498, -281, -281, -281, -281, 141,
	-339, -339, -281, -281, -281, -281, 141, -281, -281, -281,
	-281, -281, -281, -281, -281, 82, 82, 82, -339, -175,
	-118, -457, -456, -333, 40, -119, -176, -551, 608, 81,
	-288, -539, 87, 87, 620, 476, 477, 163, 166, 165,
	34, 81, -188, -351, -351, 523, -351, -517, -307, 112,
	-372, -369, -366, -307, -307, -362, -307, -307, -211, -351,
	-351, -351, -351, -211, -245, 52, 53, 54, -366, -149,
	55, 56, -515, -502, 34, -178, -307, -271, 17, -331,
	-331, -366, 267, -558, -318, -318, -299, -298, -320, -315,
	-320, -320, -271, -316, -318, -318, -333, -320, -316, -271,
	-307, 450, -271, -271, -406, -317, -307, -317, -351, -298,
	-299, -299, -211, -211, -256, -257, 233, 353, 354, 231,
	229, 11, 230, -265, 306, -352, 494, -240, -241, 76,
	41, -243, 395, 388, 269, 273, 91, 274, 428, 275,
	238, 277, 278, 279, 294, 296, 249, 280, 281, 282,
	419, 283, 158, 295, 284, 285, 286, 371, -235, 6,
	328, 40, 50, 51, 442, 441, 539, 536, 270, -517,
	-517, 30, 30, -372, -307, -307, -167, -162, -166, -163,
	-168, -274, -276, -165, 81, -211, -157, -307, 154, 474,
	476, 477, -544, -384, -544, -384, 31, 418, -387, 418,
	31, -362, -381, 470, 472, -377, 87, 419, -367, -386,
	78, 150, -456, -384, -384, -386, -386, 149, 154, -542,
	475, 476, 225, -175, 96, 96, 96, -213, -211, -517,
	-371, -362, -307, -437, -213, -213, -213, -307, -307, 81,
	153, 35, -307, -307, -270, 154, -269, 16, -308, -307,
	34, 87, 153, -270, -127, -125, 118, -333, -6, 600,
	-333, -6, -6, -333, -6, -333, -435, 392, 96, 96,
	-290, 87, -290, 96, 96, 96, 82, 87, -375, 78,
	-450, -340, -495, 590, -182, 82, -177, -493, -494, -177,
	-181, -307, -450, -182, 82, -493, -175, 591, -119, -172,
	-171, -333, -307, 23, -89, -505, 153, 154, -178, -390,
	-370, -367, -392, 141, -307, -378, 154, 536, 623, 85,
	240, -531, -530, 410, 82, 154, -460, 241, 493, 87,
	620, 426, 220, 221, 101, 341, 102, 103, -419, -339,
	-336, -331, -331, -329, -329, -334, 254, -334, 111, -333,
	-332, -499, 118, -333, 34, 34, 154, 79, 153, 82,
	82, 16, 16, 82, -333, 82, 82, 82, 82, 16,
	16, -333, 82, 153, 82, 82, 82, 82, 79, 82,
	154, 82, 154, -339, -339, -333, -339, 82, 82, 82,
	-333, -333, -333, -339, 82, -333, -333, -333, -333, -333,
	-333, -333, -333, -400, 445, -400, -400, 154, 154, 82,
	-119, 81, 96, 154, -294, -293, 87, 164, 167, 167,
	166, -197, -199, -200, -201, -202, -203, 132, 155, 156,
	81, -211, -211, -351, -211, -520, 396, 35, -532, 154,
	40, -530, 486, -145, 317, -355, 79, -152, 16, 536,
	-211, -211, -211, -211, -224, 34, 16, -161, -212, -307,
	81, 82, 154, -333, -363, 79, -307, -299, -271, -271,
	-320, -271, -271, 154, 22, -318, -320, -320, -316, 153,
	-298, -425, 34, -179, 154, -210, -304, -207, -209, 244,
	-323, -208, 247, -489, 245, 243, 106, 248, 302, 107,
	238, -304, -304, 244, -244, 240, 34, -304, -259, 238,
	344, 302, 245, 20, -258, 238, 107, -307, 244, 248,
	243, -303, 122, -297, 149, 240, 42, 371, -303, 540,
	-303, -303, -303, -303, -303, -303, -303, 276, 276, -303,
	-303, -303, -303, -303, -303, -303, -303, -303, -303, -303,
	159, -303, -303, -303, -303, -303, -303, 81, 271, 272,
	-521, 396, 30, 352, 352, -532, 30, -153, 346, 30,
	-277, -278, -279, -280, 67, 71, 73, 68, 69, 70,
	74, 30, 154, -305, -309, 34, -307, 87, -305, -157,
	-162, -167, -305, 81, -543, -545, 478, 475, 481, -386,
	-386, 240, 81, 122, -386, -386, 40, -306, -540, 482,
	476, -119, 154, 78, -213, -189, -190, -191, -192, -217,
	-288, 189, 192, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 205, 206, 203, 204, 253, 184, 185, 186,
	187, 207, 170, 190, 171, 172, 173, 174, 175, 176,
	179, 180, 181, 182, 178, -307, -198, -271, -160, -162,
	-307, 87, -307, 141, -271, 119, -6, 117, -131, -130,
	-129, 120, 598, 604, 119, 119, 119, 82, 82, 82,
	154, 82, 82, 82, 154, 82, 154, -463, 455, 39,
	154, 81, 82, 154, 60, 154, 122, 82, 154, 82,
	60, -119, 87, 154, -169, 36, 37, 153, 428, -307,
	-474, 82, -392, 154, 240, 153, 153, -368, 374, -306,
	-370, 20, 536, -288, 38, -294, 122, 620, -307, 82,
	-334, -334, 111, -331, -328, 82, 119, -333, 117, -215,
	-217, 390, 391, -215, -216, -222, 150, 188, 253, 187,
	186, 184, 390, 391, -234, -307, -333, -333, 82, -333,
	-333, 16, -307, -234, -329, -333, -174, -174, 82, 82,
	-399, -400, -399, -399, 82, 82, 82, 82, -399, 82,
	82, 82, 82, 82, 82, 82, 82, 81, 96, 99,
	-456, -552, 62, 606, 61, 418, 101, 307, 154, 96,
	621, 154, 122, 167, 382, 82, 154, -288, -189, -179,
	81, -232, 536, -211, -179, -523, 457, 398, 408, -303,
	-325, -324, 348, 41, -442, 419, 404, 405, -369, 267,
	-307, -529, 94, 122, 78, 332, 336, 333, 334, 335,
	-349, -350, -348, -352, -517, 81, 81, 81, 81, 34,
	-420, 322, -217, -211, -161, -307, 16, 154, -516, 153,
	-1, -307, -362, -318, -271, -333, -333, -271, -318, -318,
	-320, -307, -420, -217, 34, -257, -214, -288, -208, -488,
	-489, -351, -307, 107, -488, 107, 81, -214, -288, -288,
	-260, -317, -288, -307, -307, -307, -307, -263, -262, -288,
	-307, -307, -307, 107, 107, -239, 40, 47, 48, 49,
	-303, -303, 191, -242, 40, 418, 420, 421, 96, 96,
	96, 96, 87, 87, 87, -303, -303, 96, 87, -309,
	87, -490, 166, 44, 45, 96, 96, 96, 96, 40,
	87, -246, 40, 287, 291, 288, 289, 290, 87, 96,
	40, 96, 40, 96, 40, -307, 81, -491, -492, 87,
	-523, -303, 352, -383, 122, -325, -528, 317, -146, 91,
	31, -183, 233, 230, -517, -374, -373, -288, -166, -166,
	-166, -166, 67, 67, 67, 72, 67, 72, 67, -279,
	-374, -168, -179, -309, 82, -537, -536, -535, -533, 75,
	241, 76, -338, 475, 479, 480, -370, -321, 87, -377,
	-187, 23, -211, -211, -441, 297, 298, 82, 154, -217,
	-273, 18, 153, -273, 115, -6, -127, -129, -333, -6,
	-333, 600, 364, 601, 87, 96, 96, -471, 439, 434,
	436, 107, -340, -458, -457, 60, -154, -177, -450, -494,
	-456, -307, 60, -154, -450, -187, -463, -171, -170, 43,
	-307, 96, 16, -367, -362, 141, 141, -307, 375, -378,
	87, 397, 87, 236, 621, 87, -294, -328, -333, 82,
	-225, 175, 174, -225, 82, 82, -427, -427, -426, -429,
	-426, -225, -225, 82, 82, 23, 82, 82, 82, -333,
	82, 82, 154, -446, 495, -447, 566, -399, -399, -399,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -342, -341, 259, 440, 613, 613, 82, 154, -497,
	154, -293, 87, 87, 87, -201, -217, 82, 34, -204,
	-205, -206, -214, -207, -209, 34, 81, 81, 34, -524,
	91, -518, 87, -307, -525, 91, 399, 152, 350, 40,
	400, 401, 416, 345, 96, 96, 406, -519, -307, -153,
	-527, 51, 122, 87, -211, -348, -297, 149, 278, 325,
	-268, -267, -307, 87, -204, -204, -204, -154, -421, 324,
	20, 96, 140, -180, 79, 153, -162, -212, -307, 141,
	82, -271, -271, -271, -318, -421, -154, -261, 44, 46,
	-217, -486, -307, -484, -486, -307, -484, -484, -351, -333,
	-261, -214, 240, 30, 230, -264, 330, 331, 336, -379,
	303, 112, -379, 154, -169, -307, -234, -234, 30, 87,
	87, -213, 82, 154, 122, -524, -518, 122, -384, 87,
	-525, -529, 122, 87, 154, -183, -183, -271, 154, 122,
	-185, -184, 78, 79, -186, 78, -184, 67, 67, -271,
	-535, -534, 23, -489, -489, -489, 82, 82, 14, -191,
	40, -272, 19, 20, 141, -272, 119, 117, 119, 119,
	-307, 82, 82, -433, 592, -467, -469, 434, 20, 20,
	14, 241, 82, -450, -450, -471, 44, 45, -362, -378,
	419, -211, 154, 621, -333, 82, -333, 82, 87, 82,
	87, -174, 20, 82, 82, 82, -333, 82, -497, 234,
	-154, 82, 154, -154, -233, -266, -307, 87, -204, -154,
	87, -522, 410, 87, 87, 96, 40, 96, 152, 402,
	-443, -146, -526, 91, 122, 620, 81, -303, -303, -303,
	-307, 82, 154, -303, -303, 82, 82, 82, -232, -422,
	258, 96, 140, 96, 140, 96, -305, -162, -307, -271,
	-516, 153, -271, -422, -288, -229, -228, -226, 101, 112,
	40, 388, -227, 91, 149, 292, 295, 294, 270, 293,
	-255, -322, 78, 394, 330, 331, -352, 592, 524, 243,
	106, 107, 376, -323, 81, 81, 79, 312, 81, 81,
	-486, 82, -261, -288, 40, -264, 40, 342, 303, -262,
	149, -234, 82, -492, 87, -522, 87, -386, -527, 87,
	-517, -174, -373, -456, -333, 81, -333, 81, 67, 11,
	18, -326, -333, -339, 242, -6, 601, 364, -248, 593,
	87, 20, 87, -465, 87, -374, -433, -122, -461, -406,
	275, 82, 82, -399, -399, -402, -401, -405, 440, 304,
	448, -339, 82, 82, -193, -217, -150, 536, -232, -206,
	82, 154, -303, -303, 82, -150, 20, 536, 349, 40,
	96, 40, 403, 122, 102, 103, -295, -296, 87, -357,
	-359, -288, 81, -234, -236, -306, 150, 87, -267, -326,
	-326, -230, -231, -265, -352, -121, -120, -230, -423, 158,
	96, 140, 96, 96, -271, -271, -423, -226, 101, -329,
	87, -236, -237, 40, 291, 287, 122, 122, -238, 40,
	271, 272, -247, 81, 302, 14, 191, 81, 107, 107,
	-211, -357, -357, -487, 332, 333, 334, 337, 336, 335,
	-487, -357, -357, 81, -380, -379, -329, -303, -303, 149,
	-526, -175, -178, -485, -307, 243, 20, 20, -307, -307,
	-291, 594, 96, 87, 436, -248, -434, 595, -470, 439,
	-464, -462, 434, 435, 436, 437, 122, 82, -404, 114,
	402, 406, -327, -330, 96, 99, 183, 152, 535, -151,
	59, 482, -266, -326, -326, -232, 87, 397, 87, 349,
	87, 621, 154, 122, 82, 154, -426, -333, -394, 259,
	154, -265, -297, -122, -394, -440, 166, 323, 536, 96,
	140, 96, -174, -424, 166, 323, 87, 87, 96, 81,
	-451, 30, 87, -358, 81, 82, 82, 82, 82, -357,
	96, -234, -303, 82, 82, 154, 81, 20, -291, 87,
	-472, 241, -468, -469, 438, -462, 20, 436, 20, 20,
	87, -403, -404, 406, -327, -330, 590, 446, 446, 446,
	-195, -307, 302, 419, -296, 87, -360, -359, -169, 82,
	-395, 311, 20, -265, -303, -395, 323, 96, 140, 96,
	-175, 323, 82, -333, -343, -303, 82, -250, -249, 532,
	-357, -360, 79, -360, 79, -360, 79, -360, 79, 82,
	-234, -307, 243, -292, -307, -465, -479, 81, 96, -467,
	-466, -468, 20, -465, 20, -465, -465, -123, 154, 111,
	447, 447, 447, -194, 34, 441, 375, -361, 249, 342,
	343, 91, 536, 330, 331, -169, 20, -396, 304, 305,
	-397, -410, 307, -234, 96, 82, -307, -254, -252, -253,
	78, 453, 300, 301, 82, -487, -487, -487, -487, -255,
	82, 154, -483, 30, 82, -478, -477, -289, -473, -307,
	439, 440, 87, -465, 443, -403, 87, -303, -303, 87,
	87, 329, -288, 81, -408, 308, 81, -406, 81, -406,
	107, 333, -379, -253, 78, -252, 78, 15, 14, -360,
	-360, -360, -360, -307, -482, -481, -480, 82, 154, 153,
	122, -555, -554, 612, 96, 96, -307, -393, -398, 309,
	96, -329, 81, -329, 81, -407, 306, 81, -251, 297,
	298, 30, 166, -251, 154, 122, -477, -307, 87, 87,
	82, -412, 81, 20, 82, -393, 82, -393, 81, 122,
	-329, 101, 40, 299, -481, 40, -333, 153, -413, -411,
	259, -397, 82, 82, 82, -393, 96, 82, -307, 82,
	154, -307, -409, 310, 82, -411, -414, 60, 96, -418,
	-415, 81, -265, 261, 132, -418, -265, -417, -416, 309,
	262, 81, 82, 154, -307, 258, 81, -339, -416, -415,
	-339, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 842, 843, 844, 845, 846, 847, 0,
	0, 0, 0, 601, 602, 0, 568, 0, 0, 0,
	0, 0, 0, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 288, 284, 209, 210, 211, 212, 213, 295,
	296, 436, 0, 0, 0, 0, 683, -2, 56, 0,
	277, 0, 268, 268, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, -2, 614, 0,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 343, 344, 345, 339, 340, 342,
	341, -2, 0, 614, 0, 0, 0, 691, 0, 0,
	0, 0, 0, 734, 756, 23, 0, 7, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 0, 0,
	19, 0, 19, 0, 0, 0, 1235, 1236, 1237, 1238,
	-2, 1740, 1718, 1892, 1905, 1906, 1907, 1908, 1909, 1910,
	1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920,
	1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930,
	1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940,
	1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950,
	1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748,
	1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758,
	1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768,
	1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1808, 1809,
	1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819,
	1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829,
	1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839,
	1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849,
	1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859,
	1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889,
	1890, 1891, 1893, 1894, 0, 261, 259, 1690, 1718, 1740,
	1795, 1806, 1807, 1841, 1892, 0, 865, 0, 661, 0,
	666, 1188, 661, 289, 603, 604, 691, 717, 566, 0,
	325, 0, 1731, 329, 0, 0, 0, 563, 319, 320,
	321, 322, 323, 324, 0, 0, 841, 0, 0, 315,
	0, 283, 1797, 0, 0, 0, 0, 0, 0, 153,
	975, 155, 977, 159, 166, 0, 0, 171, 172, 175,
	176, 177, 178, 179, 0, 183, 0, 185, 188, 0,
	190, 191, 0, 194, 195, 196, 0, 206, 207, 208,
	978, 979, 980, -2, 84, 863, 1648, 1536, 0, 1543,
	1544, 1555, 1566, 1315, 1316, 1317, 1318, 0, 0, 0,
	0, 0, 1325, 1326, 0, 1347, 1909, 1950, 0, 1333,
	1334, 1335, 1336, 1337, 1338, 93, 105, 106, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 0, 1596, 1597, 1598, 1509,
	1302, 1235, 0, 1918, 0, 1940, 1945, 1946, 1947, 1948,
	1939, 0, 0, 1494, 0, 1484, 0, 0, -2, -2,
	0, 0, 1866, -2, 1915, 1936, 1944, 1919, 1920, 1943,
	1911, 1912, 1913, 1906, 1907, 1908, 1910, 1922, 1924, 1935,
	0, 1931, 1941, 1942, 0, 0, 0, 0, 0, 107,
	108, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1500, -2, 1502, 1503, 1505, -2,
	1507, 1508, -2, 1511, 1512, 1513, -2, -2, 1516, 1517,
	1518, 1519, 1520, 1521, 1524, -2, -2, -2, -2, 1496,
	1497, 1498, 1499, 1488, 1489, 1490, 1491, 1492, 1493, -2,
	-2, -2, 717, 792, 0, 717, 0, 692, 739, 742,
	745, 748, 695, 0, 0, 57, 58, 0, 278, 279,
	267, 269, 0, 273, 0, 266, 0, 0, 0, 0,
	1010, 1010, 1010, 1010, 1010, 0, 1010, 0, 0, 0,
	0, 0, 1010, 0, 898, 982, 983, 984, 1008, 1009,
	1076, 0, 0, 0, 619, 615, 616, 617, 618, 705,
	0, 707, 710, 543, 543, 491, 0, 0, 0, 543,
	0, 505, 497, 0, 0, 0, 543, 0, 0, 712,
	712, 0, 546, 553, 543, 543, -2, 543, 543, 543,
	0, 0, 1022, 511, 512, 513, 497, 497, 516, 517,
	518, 528, 529, 554, 1672, 0, 0, 436, 436, 0,
	436, 0, 436, 436, 436, 621, 1836, 1738, 1812, 1797,
	0, 0, 234, 1866, 239, 0, 1739, 1759, 0, 0,
	1777, 0, -2, 0, 305, 717, 0, 0, 691, 0,
	0, 0, 0, 0, 436, 436, 436, 436, 436, 1075,
	436, 436, 436, 436, 436, 0, 0, 0, 436, 436,
	0, 0, 757, 758, 753, 754, 755, 759, 760, 5,
	6, 19, 0, 0, 0, 0, 0, 0, 63, 62,
	0, 1649, 1667, 1601, 1602, 1603, 1654, 1605, 1658, 1658,
	1658, 1658, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1658, 1658, 0, 0, 1647, 1625, 1656, 1656, 1656,
	1654, 1651, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1661, 1661, 1664, 1664,
	1661, 0, 1534, 0, 0, 0, 0, 665, 0, 0,
	717, -2, 0, 0, 567, 326, 1239, 0, 0, 330,
	331, 0, 0, 346, 0, 349, 334, 335, 336, 0,
	133, 0, 317, 318, 0, 0, 285, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 163, 160, 167,
	170, 180, 187, 0, 199, 201, 204, 161, 168, 173,
	174, 181, 202, 162, 164, 165, 169, 203, 205, 182,
	186, 200, 184, 189, 192, 193, 198, 0, 134, 0,
	0, 0, 0, 0, 1542, 0, 0, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 1536, 0, 0, 1321, 1322, 1323, 1324,
	1327, 0, 1348, 0, 0, 0, 0, 1595, 1599, 0,
	1534, 1534, 0, 1534, 1530, 0, 0, 0, 0, 0,
	0, 1534, 1470, 0, 0, 1472, 1485, 0, 0, 1474,
	1475, 0, 1478, 1479, 1534, 0, 1534, 1483, 1466, 1467,
	0, 1530, 1530, 1530, 1530, 0, 0, 1530, 1530, 1530,
	1530, 1530, 1530, 1530, 1530, 1530, 1530, 1530, 1530, 0,
	0, 0, 0, 712, 0, 718, 0, -2, 0, 736,
	738, 740, 741, 743, 744, 746, 747, 749, 750, 697,
	0, 0, 59, 0, 0, 0, 0, 271, 0, 276,
	0, 862, 0, 0, 1010, 1010, 0, 1010, 899, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1010, 1010,
	1010, 1010, 0, 1030, 0, 0, 0, 621, 620, 0,
	706, 0, 0, 765, 0, 0, 490, 0, 497, 543,
	543, 503, 504, 499, 498, 549, 550, 546, 0, 546,
	546, 765, 0, 522, 523, 524, 543, 543, 530, 713,
	0, 531, 532, 546, 0, 551, 552, 765, 0, 0,
	765, 765, 0, 540, 541, 542, 0, 0, 1010, 0,
	559, 499, 499, 1673, 1674, 0, 0, 1019, 0, 0,
	0, 562, 0, 0, 0, 0, 622, 214, 217, 0,
	220, 0, 1836, 0, 1836, 0, 227, 0, 0, 0,
	0, 0, 0, 257, 258, 0, 0, 0, 0, 248,
	251, 1182, 1183, 972, 973, 252, 253, 297, 298, 0,
	712, 735, 737, 731, 732, 733, 0, 0, 0, 0,
	0, 0, 0, 0, 436, 0, 0, 0, 0, 0,
	597, 0, 878, 599, 0, 0, 0, 773, 767, 769,
	836, 93, 773, 8, 80, 77, 0, 19, 0, 0,
	19, 19, 0, 19, 262, 0, 1670, 1668, 1669, 1604,
	1655, 0, 1630, 0, 1631, 1632, 1633, 1643, 1644, 0,
	0, 1626, 0, 1627, 1628, 1629, 1620, 0, 1621, 1622,
	0, 1623, 1624, 260, 0, 1535, 866, 0, 639, 653,
	634, 0, 642, 0, 1189, 623, 653, 625, 0, 642,
	712, 689, 0, 667, 0, 0, 327, 0, 332, 0,
	0, 348, 350, 351, 352, 337, 338, 564, 313, 314,
	306, 307, 308, 309, 310, 311, 312, 316, 103, 0,
	286, 287, 0, 0, 0, 147, 148, 149, 150, 151,
	152, 154, 138, 586, 588, 964, 976, 0, 967, 0,
	157, 197, 130, 0, 0, 0, 1537, 1538, 1539, 1540,
	1541, 1545, 0, 1547, 1549, 1551, 1553, 0, 1571, -2,
	-2, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1556, 1569, 1570, 0, 0, 0, 0,
	0, 0, 1567, 1567, 1562, 0, 1319, 0, 1345, 1349,
	0, 0, 0, 0, 94, 1529, 1437, 1438, 1439, 1440,
	1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
	1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460,
	1461, 1462, 1463, 1464, 1465, 0, 0, 1536, 0, 0,
	0, 1531, 1532, 0, 0, 0, 1425, 0, 0, 1431,
	1432, 1433, 0, 648, 0, 1495, 1471, 1486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 791,
	793, 0, 657, 659, 660, 686, 667, 693, 0, 0,
	0, 55, 60, 53, 1045, 280, 281, 0, 0, 275,
	0, -2, 0, 0, 0, 1010, 0, 0, 913, 0,
	434, 958, 0, 0, 0, 974, 999, 1006, 0, 0,
	0, 0, 0, 1049, 900, 905, 906, 907, 901, 902,
	908, 909, 0, 708, 0, 0, 805, 489, 0, 544,
	545, 494, 1797, 499, 765, 765, 506, 500, 507, 548,
	508, 509, 510, 546, 765, 765, 714, 543, 546, 533,
	547, 546, 536, 537, 0, 555, 560, 556, 0, 558,
	514, 515, 1051, 710, 364, 365, 406, 406, 406, 389,
	406, 0, 0, 377, 1675, 0, 0, 0, 0, 386,
	1675, 0, 1675, 1675, 1675, 1675, 1675, 1675, 1675, 0,
	0, 1675, 1675, 1675, 1675, 1675, 1675, 1675, 1675, 1675,
	1675, 1675, 0, 1675, 1675, 1675, 1675, 1675, 1168, 1675,
	0, 1020, 396, 397, 398, 399, 404, 405, 0, 431,
	0, 0, 0, 434, 0, 947, 778, 0, 779, 780,
	776, 807, 831, 831, 0, 831, 811, 1188, 0, 0,
	225, 226, 215, 0, 216, 0, 228, 229, 0, 231,
	232, 233, 240, 1738, 1812, 235, 237, 0, 0, 241,
	254, 255, 256, 0, 0, 246, 247, 0, 0, 300,
	301, 303, 0, 667, 1023, 1024, 1025, 583, 1186, 584,
	585, 589, 0, 0, 592, 593, 594, 595, 596, 880,
	0, 0, 952, 953, 765, 0, 774, 0, 770, 837,
	0, 839, 0, 765, 0, 78, 19, 0, 71, 68,
	0, 0, 0, 0, 0, 1650, 1600, 1671, 0, 0,
	0, 1652, 0, 0, 0, 0, 61, 669, 630, 0,
	633, 650, 0, 654, 0, 0, 646, 638, 643, 0,
	0, 663, 624, 0, 0, 629, 667, 0, 690, 719,
	720, 723, 1240, 0, 333, 347, 0, 0, 0, 0,
	141, 961, 0, 142, 146, 136, 0, 0, 0, 966,
	0, 963, 968, 0, 156, 0, 0, 131, 132, 1036,
	1045, 0, 0, 0, 1546, 1548, 1550, 1552, 1554, 0,
	1557, 1567, 1567, 1563, 0, 1558, 0, 1560, 0, 1537,
	0, 1350, 0, 0, 0, 0, 0, 0, 0, 1415,
	1416, 0, 0, 1420, 0, 1422, 1423, 1424, 1426, 0,
	0, 0, 1430, 0, 1469, 1487, 1473, 1476, 0, 1480,
	0, 1482, 0, 717, 717, 0, 0, 1389, 1389, 1389,
	0, 0, 0, 0, 1389, 0, 0, 0, 0, 0,
	0, 0, 0, 1339, 0, 1340, 1341, 0, 0, 794,
	687, 0, 0, 0, 0, 1043, 0, 282, 270, 272,
	0, 0, 0, 868, 869, 871, 0, 874, 875, 876,
	880, 710, 1125, 0, 710, 920, 1675, 1011, 438, 0,
	0, 960, 0, 936, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 1053, 0, 0, 0, 608, 612,
	23, 711, 0, 766, 492, 0, 493, 543, 501, 502,
	765, 525, 526, 0, 0, 765, 543, 543, 546, 0,
	557, 1053, 0, 0, 1019, 367, 0, 1197, 1198, 407,
	0, 1204, 1213, 1010, 1272, 0, 1213, 0, 0, 1215,
	1216, 0, 0, 0, 0, 390, 391, 0, 376, 0,
	0, 0, 0, 0, 375, 0, 0, 417, 0, 0,
	0, 0, 1676, 1675, 1675, 0, 384, 385, 0, 388,
	0, 0, 0, 0, 0, 0, 0, 1675, 1675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1159, 0, 0, 0, 0, 0, 0, 0, 1174, 1175,
	920, 1675, 0, 0, 0, 438, 934, 943, 0, 0,
	0, 0, 0, 0, 798, 0, 0, 797, 0, 0,
	0, 0, 0, 710, 832, 0, 834, 835, 809, -2,
	0, 778, 814, 1534, 218, 219, 0, 0, 224, 242,
	244, 0, 0, 0, 243, 245, 249, 250, 299, 302,
	304, 729, 0, 0, 1077, 0, 881, 882, 884, 885,
	0, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1723, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 879, 600, 763, 768, 775,
	838, 840, 94, 771, 763, 0, 81, 19, 80, 72,
	73, 0, 19, 0, 0, 0, 0, 1660, 1659, 1645,
	0, 1646, 1657, 1662, 0, 1665, 0, 673, 0, 0,
	653, 655, 0, 0, 653, 0, 0, 662, 0, 0,
	653, 729, 669, 0, 726, 724, 725, 0, 0, 565,
	104, 353, 0, 0, 0, 0, 0, 587, 0, 965,
	138, 0, 0, 158, 0, 0, 0, 1045, 1040, 1533,
	1559, 1561, 0, 1568, 1564, 1320, 1328, 1346, 0, 0,
	1352, 1364, 1364, 0, 0, 1355, 1658, 1658, 1358, 1654,
	1656, 1654, 1364, 1364, 0, 95, 0, 0, 1421, 0,
	0, 0, 649, 0, 0, 0, 1385, 1387, 1389, 1389,
	1396, 1390, 1397, 1398, 1389, 1389, 1389, 1389, 1403, 1389,
	1389, 1389, 1389, 1389, 1389, 1389, 1389, 1383, 1589, 1590,
	658, 0, 0, 700, 701, 702, 703, 704, 0, 0,
	54, 1045, 0, 274, 0, 0, 873, 0, 0, 0,
	1190, 0, 0, 0, 0, 924, 921, 922, 923, 0,
	955, 439, 440, 441, 442, 0, 0, 0, 959, 0,
	947, 929, 0, 0, 0, 1000, 1001, 1002, 1003, 1004,
	1005, -2, 1014, 0, 0, 0, 1190, 1190, 1190, 0,
	1061, 0, 1050, 661, 0, -2, 0, 0, 610, 0,
	0, 806, 495, 765, 519, 715, 716, 534, 765, 765,
	543, 561, 1061, 1052, 0, 366, 408, 0, 1203, 1229,
	1214, 1229, 1273, 1229, 1229, 1010, 0, 408, 0, 0,
	378, 414, 0, 0, 0, 0, 0, 374, 411, 723,
	415, 416, 418, 0, 420, 380, 392, 393, 394, 395,
	0, 0, 0, 387, 400, 401, 402, 403, 1136, 1137,
	1138, 1141, 1142, 1143, 1144, 0, 0, 1147, 1148, 1149,
	1150, 1151, 1226, 1227, 1228, 1152, 1153, 1154, 1155, 1156,
	1157, 1158, 1176, 1177, 1178, 1179, 1180, 1181, 1160, 1161,
	1162, 1163, 1164, 1165, 1166, 1167, 0, 0, 1171, 0,
	924, 0, 0, 0, 0, 955, 936, 0, 946, 0,
	948, 949, 0, 0, 631, 765, 292, 0, 801, 795,
	0, 784, 799, 800, 787, 0, 789, 0, 785, 786,
	765, 777, 808, 833, 810, 813, 815, 816, 822, 0,
	0, 0, 0, 221, 222, 223, 230, 0, 458, 236,
	685, 0, 1187, 590, 591, 1078, 1079, 598, 0, 886,
	761, 0, 0, 761, 76, 79, 0, 74, 0, 0,
	0, 0, 66, 64, 1653, 0, 0, 675, 118, 0,
	0, 0, 651, 0, 656, 653, 637, 647, 636, 644,
	645, 664, 653, 628, 627, 688, 673, 721, 722, 0,
	1241, 328, 0, 962, 138, 143, 144, 145, 139, 137,
	969, 0, 971, 0, 1038, 0, 0, 1565, 1351, 1329,
	1353, 1365, 1366, 1354, 1330, 1331, 1356, 1357, 1359, 1360,
	1361, 1362, 1363, 1332, 1417, 0, 1419, 1427, 1428, 0,
	1477, 1481, 0, 0, 0, 0, 0, 1394, 1395, 1399,
	1400, 1401, 1402, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 717, 1384, 0, 0, 0, 0, 698, 0, 0,
	0, 1044, 1046, 861, 864, 870, 872, 0, 0, 0,
	1191, 1192, 1194, 1195, 1196, 0, 0, 1190, 0, 897,
	0, 0, 915, 916, 926, 0, 0, 0, 444, 445,
	0, 0, 0, 457, 453, 454, 455, 435, 954, 943,
	932, 0, 0, 942, 0, 1015, 1675, 1675, 1675, 0,
	0, 1121, 1675, 1675, 0, 0, 0, 1125, 1064, 0,
	0, 1055, 0, 831, 0, 0, 765, 609, 612, 613,
	709, 496, 538, 535, 765, 1064, 363, 379, 409, 0,
	-2, 0, 1230, 0, 1217, 1230, 0, 0, 1229, 0,
	368, 408, 0, 0, 0, 421, 425, 426, 0, 423,
	1268, 0, 424, 0, 413, 419, 1139, 1140, 0, 1145,
	1146, 0, 1170, 0, 0, 427, 0, 0, 0, 428,
	433, 929, 0, 944, 0, 950, 951, 717, 0, 0,
	781, 802, 0, 0, 782, 0, 783, 788, 790, 291,
	817, 0, 0, 819, 820, 821, 812, 238, 730, 883,
	0, 751, 0, 0, 772, 752, 0, 19, 0, 0,
	69, 1663, 1666, 677, 0, 674, 119, 0, 0, 0,
	0, 641, 652, 635, 626, 675, 727, 728, 140, 135,
	970, 121, 0, 1039, 0, 1429, 0, 1389, 1386, 1389,
	1388, 1380, 0, 1342, 1343, 1344, 0, 696, 0, 0,
	903, 1125, 0, 1028, 0, 1127, 1675, 1675, 0, 903,
	925, 914, 0, 956, 957, 0, 446, 447, 0, 450,
	456, 927, 928, 0, 0, 940, 0, 0, 0, 0,
	1007, 1021, 0, 0, 0, -2, 0, -2, 1034, 1070,
	0, 1062, 0, 1054, 0, 1057, 765, 765, -2, 606,
	611, 0, 539, 1070, 410, 1231, -2, 1244, 1246, 0,
	1020, 1249, 1250, 0, 0, 0, 0, 0, 0, 1294,
	1258, 0, 0, 1262, 1263, 1264, 0, 0, 1267, 0,
	1583, 1584, 0, 1271, 0, 0, 0, 0, 0, 0,
	0, 1211, 369, 370, 0, 372, 373, 1675, 1269, 412,
	1675, 382, 1169, 1172, 1173, 432, 429, 430, 932, 935,
	632, 712, 293, 294, 803, 0, 796, 826, 823, 0,
	0, 887, 762, 764, 70, 75, 0, 0, 679, 0,
	676, 0, 670, 672, 129, 640, 677, 91, 112, 0,
	0, 1418, 1468, 1392, 1393, 0, 1381, 0, 1375, 1376,
	1377, 1382, 699, 694, 0, 889, 896, 910, 1026, 1193,
	1126, 0, 0, 0, 1125, 895, 0, 0, 443, 448,
	0, 451, 452, 0, 930, 931, 0, 938, 0, 0,
	995, 1654, 0, 1016, 1017, 1184, 1185, 1018, 1122, 1123,
	1124, 1080, -2, 1133, 0, 1032, 121, 1080, 1058, 0,
	1065, 0, 1063, 1056, 717, 607, 1067, 1245, 1247, 1248,
	1251, 1252, 1253, 1299, 1300, 1301, 0, 0, 1256, 1296,
	1297, 1298, 1257, 0, 0, 0, 0, 0, 1581, 1582,
	1292, 0, 0, 1218, 1220, 1221, 1222, 1223, 1224, 1225,
	1219, 0, 0, 0, 1210, 1212, 371, 0, 0, 1675,
	945, 290, 0, 0, 827, 829, 824, 825, 65, 67,
	82, 0, 678, 120, 0, 679, 83, 0, 109, 0,
	122, 123, 0, 0, 0, 0, 0, 1391, 1378, 0,
	0, 0, 0, 0, 1585, 1586, 1587, 0, 0, 0,
	911, 912, 1128, 1129, 1130, 1027, 917, 0, 919, 449,
	933, 937, 940, 0, 986, 0, 723, 0, 1082, 0,
	1019, 1135, 1675, 1035, 1082, 1048, 0, 1060, 0, 1072,
	0, 1066, 712, 362, 0, 1069, 1254, 1255, 0, 0,
	1484, 1675, 0, 1287, 0, 986, 986, 986, 986, 0,
	422, 381, 0, 804, 818, 0, 0, 0, 668, 92,
	96, 0, 118, 115, 0, 124, 0, 0, 0, 0,
	1041, 0, 1367, 0, 0, 0, 1371, 1372, 1373, 1374,
	0, 888, 0, 918, 939, 941, 985, 996, 997, 723,
	1031, 0, 1119, 1134, 0, 1033, 1059, 1071, 0, 1074,
	605, 1068, 1295, 0, 1261, 0, 1266, 1275, 1288, 0,
	0, 1199, 0, 1201, 0, 1205, 0, 1207, 0, 0,
	383, 828, 830, 0, 681, 671, 85, 0, 0, 113,
	114, 116, 0, 125, 0, 127, 128, 1037, 0, 0,
	1368, 1369, 1370, 0, 890, 891, 904, 987, 1675, 1675,
	0, 0, 0, 993, 994, 998, 0, 1107, 0, 0,
	1113, 0, 1120, 1139, 1073, 1259, 1265, 1274, 1276, 1277,
	0, 1289, 1290, 1291, 1293, 986, 986, 986, 986, 1209,
	680, 0, 1047, 0, 97, 0, 99, 101, 102, 1232,
	110, 111, 117, 126, 0, 1379, 892, 0, 0, 990,
	991, 0, 1083, 0, 1085, 0, 0, 0, 0, 0,
	1117, 0, 1260, 1278, 0, 1279, 0, 0, 0, 1200,
	1202, 1206, 1208, 682, 86, 87, 0, 98, 0, 0,
	0, 877, 893, 0, 988, 989, 992, 0, 1087, 0,
	1108, 0, 0, 0, 0, 0, 0, 0, 1280, 1282,
	1283, 0, 0, 1281, 0, 0, 100, 1233, 1042, 894,
	1084, 1081, 0, 1119, 1109, 0, 1111, 0, 0, 0,
	0, 1284, 1286, 1285, 88, 89, 90, 0, 0, 1089,
	0, 1105, 1110, 1112, 1114, 0, 1118, 1116, 1234, 1088,
	0, 1101, 1086, 0, 1115, 1090, -2, 0, 1106, 1091,
	-2, 0, 1099, 0, 0, 1092, 1100, 0, 1095, 0,
	0, 0, 1094, 0, -2, 1102, 0, 0, 1096, -2,
	0, 1104, 1103,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 622, 619,
	123, 122, 124, 3, 623, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 620, 135, 621, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:789
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:796
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:802
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:810
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:816
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:820
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:835
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:839
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:845
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:850
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:854
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:886
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:894
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:902
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:912
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:932
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:938
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:945
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:953
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:959
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:968
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:978
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:986
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:994
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1002
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1012
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1020
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1030
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1037
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1046
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1056
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1060
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1066
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1070
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1076
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1085
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1095
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1099
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1105
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1114
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1118
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1124
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1145
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1158
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1165
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1169
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1175
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1179
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1185
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1192
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1200
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1204
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1218
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1222
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1226
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1231
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1235
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1239
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1245
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1254
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1265
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1269
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1275
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1279
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1285
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1289
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1295
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1319
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1338
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1342
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1346
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1351
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1355
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1362
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1370
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1377
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1382
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1389
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1394
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1398
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1422
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1426
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1432
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1438
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1456
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1473
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1496
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1500
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1504
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1509
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1513
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1519
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1532
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1543
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1556
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1560
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1570
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1583
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1596
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1602
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1608
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1615
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1623
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1632
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1636
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1640
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1644
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1648
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1652
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1659
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1663
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1669
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1676
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1685
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1689
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1695
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1699
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1703
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1707
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1711
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1715
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1719
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1723
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1727
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1731
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1735
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1739
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1743
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1747
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1751
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1755
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1759
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1763
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1767
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1779
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1783
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1787
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1791
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1795
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1799
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1803
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1807
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1811
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1815
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1819
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1823
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1827
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1831
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1835
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1839
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1843
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1847
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1851
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1855
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1859
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1863
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1867
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1871
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1875
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1879
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1883
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1887
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1891
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1904
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1911
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1918
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1928
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1932
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1938
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1945
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1953
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1957
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1961
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1965
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1971
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1975
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1981
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1988
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1995
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2004
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2034
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2038
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2042
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2048
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2054
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2058
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2065
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2071
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2075
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2081
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2089
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2098
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2107
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2115
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2123
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2146
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2169
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2176
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2183
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2191
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2198
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2205
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2214
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2218
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2222
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2228
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2232
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2238
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2242
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2248
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2252
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2263
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2269
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2274
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2278
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2282
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2286
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2290
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2294
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2298
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2302
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2306
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2312
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2316
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2320
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2324
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2329
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2334
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2340
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2347
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2353
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2360
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2367
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2377
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2384
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2395
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2406
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2410
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2416
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2426
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2432
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2436
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2442
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2448
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2452
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2456
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2460
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2466
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2478
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2484
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2488
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2494
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2498
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2504
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2510
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2521
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2527
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2531
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2535
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2539
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2543
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2547
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2555
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2563
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2573
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2614
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2618
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2624
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2630
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2635
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2636
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2637
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2642
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2659
		{
			yyLOCAL = &tree.AlterSequence{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].alterTypeOptionUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].cycleOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2675
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2686
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2695
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2699
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2705
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2712
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2721
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2731
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2740
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2750
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2760
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2769
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2777
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2781
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2785
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2789
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2793
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2802
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2808
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2812
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2816
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2820
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2824
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2828
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2832
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2836
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2841
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2872
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2876
		{
			yyVAL.str = string("COLUMN")
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2881
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2887
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2893
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2902
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2906
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2912
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2919
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2927
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2934
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2941
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2948
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2955
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2962
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2970
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2977
		{
			yyLOCAL = &tree.AlterOptionAlterReIndex{
				KeyType:       tree.INDEX_TYPE_IVFFLAT,
				AlgoParamList: int64(yyDollar[6].item.(int64)),
				Name:          tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2985
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2992
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:3001
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:3005
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3012
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3024
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3032
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3040
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3053
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3059
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3070
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3085
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3090
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3094
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3099
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3103
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3119
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3123
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3127
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3131
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3135
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3139
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3143
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3147
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3151
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3155
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3159
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3163
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3167
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3171
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3175
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3179
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3185
		{
			yyVAL.item = nil
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3190
		{
			yyVAL.item = nil
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3231
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3237
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3245
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3249
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3253
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3262
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3266
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3272
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3277
		{
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3281
		{
		}
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3286
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3296
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3306
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3314
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3320
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3326
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3332
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3338
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3344
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3350
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3359
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3363
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3367
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3371
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3375
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3379
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3383
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3387
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3393
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: yyDollar[4].unresolvedObjectNameUnion(),
				DbName:    yyDollar[5].str,
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3402
		{
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3404
		{
		}
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3413
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3423
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3432
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3436
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3440
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3446
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3452
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3458
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3464
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3473
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3483
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3495
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3499
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3505
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3517
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3531
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3537
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3544
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3549
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3553
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3557
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3562
		{
			yyVAL.str = ""
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3566
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3572
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3585
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3589
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3595
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3600
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3604
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3608
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3614
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3620
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3624
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3630
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3636
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3640
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3644
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3650
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3654
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3679
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3688
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3697
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3706
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3710
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3716
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3725
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3734
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3744
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3748
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3754
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3760
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3766
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3770
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3776
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3782
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3791
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3798
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3809
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3814
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3821
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3837
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3850
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3861
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3865
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3871
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3876
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3883
		{
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3885
		{
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3888
		{
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3897
		{
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3901
		{
		}
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3906
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3915
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3922
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3928
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3936
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3943
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3950
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3970
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3980
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3984
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3990
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3997
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4003
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4011
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4018
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4025
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4044
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4048
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4052
		{
			yyLOCAL = []*tree.UpdateExpr{nil}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4057
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4061
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4065
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4071
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4080
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4084
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4090
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4094
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4100
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4104
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4110
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4115
		{
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4119
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4126
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4130
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4137
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4142
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4146
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4152
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4156
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4162
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4166
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4171
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4175
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4188
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4195
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4202
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4220
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4239
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4245
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4252
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4256
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4269
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4273
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4278
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4282
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4289
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4294
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4301
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4307
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4311
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4315
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4319
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), TimeWindow: yyDollar[3].timeWindowUnion(), OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Ep: yyDollar[6].exportParmUnion(), SelectLockInfo: yyDollar[7].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4323
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4327
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4332
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4336
		{
			yyLOCAL = yyDollar[1].timeWindowUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4342
		{
			yyLOCAL = &tree.TimeWindow{
				Interval: yyDollar[1].timeIntervalUnion(),
				Sliding:  yyDollar[2].timeSlidingUnion(),
				Fill:     yyDollar[3].timeFillUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.Interval
//line mysql_sql.y:4352
		{
			str := fmt.Sprintf("%v", yyDollar[5].item)
			v, errStr := util.GetInt64(yyDollar[5].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			yyLOCAL = &tree.Interval{
				Col:  yyDollar[3].unresolvedNameUnion(),
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Sliding
//line mysql_sql.y:4367
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Sliding
//line mysql_sql.y:4371
		{
			str := fmt.Sprintf("%v", yyDollar[3].item)
			v, errStr := util.GetInt64(yyDollar[3].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			yyLOCAL = &tree.Sliding{
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[5].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4385
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4389
		{
			yyLOCAL = &tree.Fill{
				Mode: yyDollar[3].fillModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4395
		{
			yyLOCAL = &tree.Fill{
				Mode: tree.FillValue,
				Val:  yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4404
		{
			yyLOCAL = tree.FillPrev
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4408
		{
			yyLOCAL = tree.FillNext
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4412
		{
			yyLOCAL = tree.FillNone
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4416
		{
			yyLOCAL = tree.FillNull
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4420
		{
			yyLOCAL = tree.FillLinear
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4426
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4433
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4442
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4446
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4452
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4460
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4464
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4469
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4473
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4479
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4483
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4487
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4492
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4496
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4502
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4508
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4512
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4518
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4523
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4527
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4531
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4536
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4540
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4544
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4549
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4553
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4561
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4565
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4569
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4583
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4587
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4597
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4607
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4617
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4629
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4637
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4645
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4654
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4662
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4670
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4678
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4686
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4694
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4702
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4710
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4718
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4728
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4739
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4753
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4757
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4761
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4766
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4770
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4774
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4783
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4787
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4792
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4796
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4801
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4805
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4811
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4815
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4821
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4825
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4830
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4834
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4839
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4847
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4853
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4861
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4869
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4879
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4885
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4894
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4903
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4912
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4922
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4926
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4936
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4940
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4944
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4948
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4954
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4964
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4968
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4974
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4980
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4984
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4990
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4996
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5000
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5004
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5010
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5014
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5020
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5024
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:5030
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:5034
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5040
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5044
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5054
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5067
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:5073
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5079
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:5092
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5103
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5110
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5114
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:5120
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5130
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5134
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5138
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5143
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5147
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5151
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5155
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5160
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5164
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5168
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5172
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5176
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5181
		{
			yyVAL.str = ""
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5185
		{
			yyVAL.str = yyDollar[1].str
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5189
		{
			yyVAL.str = yyDollar[2].str
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5195
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5201
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5205
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5209
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5213
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5217
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5223
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 861:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5262
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5272
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5278
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 864:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5284
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5294
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5299
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5305
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5312
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5316
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5322
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5328
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5333
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5337
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5341
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5345
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5352
		{
			if yyDollar[13].str == "" {
				yylex.Error("no function body error")
				return 1
			}
			if yyDollar[11].str == "python" && yyDollar[14].str == "" {
				yylex.Error("no handler error")
				return 1
			}

			yyLOCAL = &tree.CreateFunction{
				Replace:    yyDollar[2].streamOptionalUnion(),
				Name:       yyDollar[4].functionNameUnion(),
				Args:       yyDollar[6].funcArgsUnion(),
				ReturnType: yyDollar[9].funcReturnUnion(),
				Language:   yyDollar[11].str,
				Import:     yyDollar[12].boolValUnion(),
				Body:       yyDollar[13].str,
				Handler:    yyDollar[14].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5376
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5381
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5387
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5394
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5398
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5404
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5410
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5414
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5418
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5424
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5430
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5436
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5440
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5446
		{
			yyVAL.str = ""
		}
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5453
		{
			yyVAL.str = yyDollar[2].str
		}
	case 895:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5459
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5468
		{
			yyLOCAL = &tree.CreateView{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5480
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5492
		{
			yyVAL.str = yyDollar[1].str
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5496
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5502
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5506
		{
			yyVAL.str = "DEFINER = "
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5510
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5515
		{
			yyVAL.str = ""
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5519
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5533
		{
			yyVAL.str = ""
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5541
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 914:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5547
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5557
		{
			yyVAL.str = yyDollar[1].str
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5561
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5567
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5574
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5580
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5588
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5594
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5601
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5608
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5616
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5622
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5631
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5643
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5655
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5667
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5673
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5680
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5688
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5694
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5702
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5708
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5716
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5722
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5731
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5735
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5740
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5744
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5751
		{
			yyVAL.str = yyDollar[3].str
		}
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5756
		{
			yyVAL.str = ""
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5760
		{
			yyVAL.str = yyDollar[2].str
		}
	case 945:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5766
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5780
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5794
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5800
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5806
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5812
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5821
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5830
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5839
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5844
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5850
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5858
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5964
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5968
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5974
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5984
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5988
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5994
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:6004
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:6008
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:6012
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6017
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6021
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6027
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6034
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6040
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6049
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6056
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:6065
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:6069
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:6075
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6089
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6093
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6097
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6102
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6106
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6110
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6114
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6120
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			} else {
				io = &tree.IndexOption{IType: tree.INDEX_TYPE_INVALID}
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6141
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6145
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				} else if opt2.AlgoParamList > 0 {
					opt1.AlgoParamList = opt2.AlgoParamList
				} else if len(opt2.AlgoParamVectorOpType) > 0 {
					opt1.AlgoParamVectorOpType = opt2.AlgoParamVectorOpType
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6171
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6175
		{
			yyLOCAL = &tree.IndexOption{AlgoParamList: int64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6179
		{
			yyLOCAL = &tree.IndexOption{AlgoParamVectorOpType: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6183
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6187
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6191
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6195
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6201
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6205
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6211
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6216
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6221
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6225
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6229
		{
			yyLOCAL = tree.INDEX_TYPE_IVFFLAT
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6233
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6237
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6241
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6247
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6258
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6262
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6272
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6276
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6281
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6285
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6291
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6295
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6301
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6305
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6309
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6314
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6318
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6324
		{
			yyLOCAL = &tree.CreateConnector{
				TableName: yyDollar[4].tableNameUnion(),
				Options:   yyDollar[7].connectorOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6333
		{
			yyLOCAL = &tree.ShowConnectors{}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6339
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.PauseDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6357
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.CancelDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6375
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.ResumeDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6393
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6404
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6415
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6426
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6430
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6436
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6448
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6457
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6469
		{
			yyLOCAL = &tree.CreateTable{
				IsDynamicTable: true,
				IfNotExists:    yyDollar[4].ifNotExistsUnion(),
				Table:          *yyDollar[5].tableNameUnion(),
				AsSource:       yyDollar[7].selectUnion(),
				Options:        yyDollar[8].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6480
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6487
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6497
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
				ExParam: tree.ExParam{
					JsonData: yyDollar[9].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6510
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6518
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6527
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					StageName: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6536
		{
			yyVAL.str = ""
		}
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:6540
		{
			yyVAL.str = yyDollar[4].str
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6546
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6550
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6555
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6559
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6566
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6577
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6590
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6604
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6608
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6612
		{
			yyLOCAL = &tree.TypeOption{
				Type: yyDollar[2].columnTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6618
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6622
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6629
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6636
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6643
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6650
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6654
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6658
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6662
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6666
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6673
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6680
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6684
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6691
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6698
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6702
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6708
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6714
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6718
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6725
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6732
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6739
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6746
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6750
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6755
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6759
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6763
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6768
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6772
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6782
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6786
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6793
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6800
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6804
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6813
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6817
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6823
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6827
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6833
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6842
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6852
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6856
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6862
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6866
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6872
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6879
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6888
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6892
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6897
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6901
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6906
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6910
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6915
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6919
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6929
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6933
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6944
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6952
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6960
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6968
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6979
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6988
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6998
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7008
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7012
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7017
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7021
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:7027
		{
			yyLOCAL = []*tree.ConnectorOption{yyDollar[1].connectorOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:7031
		{
			yyLOCAL = append(yyDollar[1].connectorOptionsUnion(), yyDollar[3].connectorOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:7037
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:7041
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7046
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7050
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7056
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7060
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7066
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7070
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7075
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7079
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7085
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7089
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7093
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7099
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7103
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7107
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7111
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7115
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7119
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7123
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7128
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7132
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7136
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7140
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7144
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7148
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7152
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7156
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7160
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7164
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7168
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7172
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7176
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7180
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7184
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7188
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7192
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7196
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7200
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7204
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7208
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7212
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7216
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7220
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7224
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7228
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7232
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7236
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7242
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7246
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:7252
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7258
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7262
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7268
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7272
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7276
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7280
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7284
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7288
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7302
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7306
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7315
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7320
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7326
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7333
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7337
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7343
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7347
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7351
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7357
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7361
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7367
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7376
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7385
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "ivfflat":
					keyTyp = tree.INDEX_TYPE_IVFFLAT
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invalid the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7416
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "ivfflat":
					keyTyp = tree.INDEX_TYPE_IVFFLAT
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invalid type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7449
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7463
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7469
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7478
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7487
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7496
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7505
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7515
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7523
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7529
		{
			yyVAL.str = ""
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7533
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7543
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7549
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7555
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7575
		{
			yyVAL.str = ""
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7579
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7585
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7591
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7595
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7599
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7605
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7609
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7613
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7617
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7623
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7627
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7631
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7636
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7640
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7646
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7650
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7656
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7660
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7664
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7668
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7672
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7676
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7681
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7685
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7689
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7693
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7697
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7701
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7705
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7709
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7713
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7717
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7730
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7734
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7738
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7742
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7746
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7750
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7756
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7760
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7765
		{
			yyVAL.str = ""
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7769
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7775
		{
			yyVAL.str = ""
		}
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7779
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7785
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7797
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7804
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7811
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7818
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7825
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7834
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7840
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7846
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7850
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7854
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7858
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7862
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7867
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7874
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7878
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7882
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7887
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7891
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7896
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7900
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7916
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7922
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7926
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7930
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7934
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7938
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7942
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7946
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7950
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7954
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7958
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7962
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7966
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7970
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7976
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7980
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7984
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7988
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7992
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7996
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8000
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8004
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8008
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8012
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8016
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8020
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8025
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8033
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8037
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8041
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8045
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8054
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8058
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8062
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8066
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8070
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8074
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8080
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8088
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8096
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8106
		{
			v := int(yyDollar[5].item.(int64))
			val, err := tree.NewSampleRowsFuncExpression(v, yyDollar[3].exprsUnion())
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8116
		{
			val, err := tree.NewSamplePercentFuncExpression1(yyDollar[5].item.(int64), yyDollar[3].exprsUnion())
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8125
		{
			val, err := tree.NewSamplePercentFuncExpression2(yyDollar[5].item.(float64), yyDollar[3].exprsUnion())
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8135
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8139
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8144
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8148
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:8154
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:8158
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:8164
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8173
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8185
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8202
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8219
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8232
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8245
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8257
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8271
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8286
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8301
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8318
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8333
		{
		}
	case 1368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8340
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8344
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8348
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8354
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8358
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8362
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8366
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8372
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8376
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8380
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8386
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8394
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8404
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8408
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8415
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8420
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8424
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8429
		{
			yyVAL.str = ","
		}
	case 1386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8433
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8438
		{
			yyVAL.str = "1,vector_l2_ops,random"
		}
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8442
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8447
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8454
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8480
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8491
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8502
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8512
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8522
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8532
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8541
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8550
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8560
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8570
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8580
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8590
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8600
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8610
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8620
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8630
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8640
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8650
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8660
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8670
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8689
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8697
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8705
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8713
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8721
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8731
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8739
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8748
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8756
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8764
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8772
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8780
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8791
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8801
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8813
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8824
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8846
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8882
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8894
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8906
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8917
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8925
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8932
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8939
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8951
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8959
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8969
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8979
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8987
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8998
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9007
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9016
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9024
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9034
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9042
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9052
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9056
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9066
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9085
		{
		}
	case 1495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:9087
		{
		}
	case 1529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9128
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9139
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9143
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9147
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:9153
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9158
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9162
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9168
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9172
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9179
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9183
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9187
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9195
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9199
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9203
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9207
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9213
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9217
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9221
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9225
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9229
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9233
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9237
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9241
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9245
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9249
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9257
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9261
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9265
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9269
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9273
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9277
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9281
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9285
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9289
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9293
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9299
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9303
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9309
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9313
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9320
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9324
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9328
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9334
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9338
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9342
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9346
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9350
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9354
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9358
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9364
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9368
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9372
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9376
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9382
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9395
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9400
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9406
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9410
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9423
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9428
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9432
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9436
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9440
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9444
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9451
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9455
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9469
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9473
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9480
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9491
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9496
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9502
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9514
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9526
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9538
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9551
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9564
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9577
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9590
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9603
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9616
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9629
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9642
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9655
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9668
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9683
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9710
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9752
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9788
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9824
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9841
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9853
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9873
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9893
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9913
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9929
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9942
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9955
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9968
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9981
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9993
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10005
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10017
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10029
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10041
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10053
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10065
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10077
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10089
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10102
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10115
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10128
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10141
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10156
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10164
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1650:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10173
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10183
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:10206
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:10211
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10217
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10224
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10228
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10233
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10237
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10243
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10249
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10256
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1663:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10263
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10272
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10279
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1666:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10286
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10295
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10299
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10303
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10309
		{
		}
	case 1671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10311
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10321
		{
			yyVAL.str = ""
		}
	case 1676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:10325
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
