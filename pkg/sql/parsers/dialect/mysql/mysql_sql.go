// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const VECF32 = 57530
const VECF64 = 57531
const GEOMETRY = 57532
const POINT = 57533
const LINESTRING = 57534
const POLYGON = 57535
const GEOMETRYCOLLECTION = 57536
const MULTIPOINT = 57537
const MULTILINESTRING = 57538
const MULTIPOLYGON = 57539
const INT1 = 57540
const INT2 = 57541
const INT3 = 57542
const INT4 = 57543
const INT8 = 57544
const S3OPTION = 57545
const STAGEOPTION = 57546
const SQL_SMALL_RESULT = 57547
const SQL_BIG_RESULT = 57548
const SQL_BUFFER_RESULT = 57549
const LOW_PRIORITY = 57550
const HIGH_PRIORITY = 57551
const DELAYED = 57552
const CREATE = 57553
const ALTER = 57554
const DROP = 57555
const RENAME = 57556
const ANALYZE = 57557
const ADD = 57558
const RETURNS = 57559
const SCHEMA = 57560
const TABLE = 57561
const SEQUENCE = 57562
const INDEX = 57563
const VIEW = 57564
const TO = 57565
const IGNORE = 57566
const IF = 57567
const PRIMARY = 57568
const COLUMN = 57569
const CONSTRAINT = 57570
const SPATIAL = 57571
const FULLTEXT = 57572
const FOREIGN = 57573
const KEY_BLOCK_SIZE = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const MAXVALUE = 57583
const PARTITION = 57584
const REORGANIZE = 57585
const LESS = 57586
const THAN = 57587
const PROCEDURE = 57588
const TRIGGER = 57589
const STATUS = 57590
const VARIABLES = 57591
const ROLE = 57592
const PROXY = 57593
const AVG_ROW_LENGTH = 57594
const STORAGE = 57595
const DISK = 57596
const MEMORY = 57597
const CHECKSUM = 57598
const COMPRESSION = 57599
const DATA = 57600
const DIRECTORY = 57601
const DELAY_KEY_WRITE = 57602
const ENCRYPTION = 57603
const ENGINE = 57604
const MAX_ROWS = 57605
const MIN_ROWS = 57606
const PACK_KEYS = 57607
const ROW_FORMAT = 57608
const STATS_AUTO_RECALC = 57609
const STATS_PERSISTENT = 57610
const STATS_SAMPLE_PAGES = 57611
const DYNAMIC = 57612
const COMPRESSED = 57613
const REDUNDANT = 57614
const COMPACT = 57615
const FIXED = 57616
const COLUMN_FORMAT = 57617
const AUTO_RANDOM = 57618
const ENGINE_ATTRIBUTE = 57619
const SECONDARY_ENGINE_ATTRIBUTE = 57620
const INSERT_METHOD = 57621
const RESTRICT = 57622
const CASCADE = 57623
const ACTION = 57624
const PARTIAL = 57625
const SIMPLE = 57626
const CHECK = 57627
const ENFORCED = 57628
const RANGE = 57629
const LIST = 57630
const ALGORITHM = 57631
const LINEAR = 57632
const PARTITIONS = 57633
const SUBPARTITION = 57634
const SUBPARTITIONS = 57635
const CLUSTER = 57636
const TYPE = 57637
const ANY = 57638
const SOME = 57639
const EXTERNAL = 57640
const LOCALFILE = 57641
const URL = 57642
const PREPARE = 57643
const DEALLOCATE = 57644
const RESET = 57645
const EXTENSION = 57646
const INCREMENT = 57647
const CYCLE = 57648
const MINVALUE = 57649
const PUBLICATION = 57650
const SUBSCRIPTIONS = 57651
const PUBLICATIONS = 57652
const PROPERTIES = 57653
const PARSER = 57654
const VISIBLE = 57655
const INVISIBLE = 57656
const BTREE = 57657
const HASH = 57658
const RTREE = 57659
const BSI = 57660
const ZONEMAP = 57661
const LEADING = 57662
const BOTH = 57663
const TRAILING = 57664
const UNKNOWN = 57665
const LISTS = 57666
const EXPIRE = 57667
const ACCOUNT = 57668
const ACCOUNTS = 57669
const UNLOCK = 57670
const DAY = 57671
const NEVER = 57672
const PUMP = 57673
const MYSQL_COMPATIBILITY_MODE = 57674
const MODIFY = 57675
const CHANGE = 57676
const SECOND = 57677
const ASCII = 57678
const COALESCE = 57679
const COLLATION = 57680
const HOUR = 57681
const MICROSECOND = 57682
const MINUTE = 57683
const MONTH = 57684
const QUARTER = 57685
const REPEAT = 57686
const REVERSE = 57687
const ROW_COUNT = 57688
const WEEK = 57689
const REVOKE = 57690
const FUNCTION = 57691
const PRIVILEGES = 57692
const TABLESPACE = 57693
const EXECUTE = 57694
const SUPER = 57695
const GRANT = 57696
const OPTION = 57697
const REFERENCES = 57698
const REPLICATION = 57699
const SLAVE = 57700
const CLIENT = 57701
const USAGE = 57702
const RELOAD = 57703
const FILE = 57704
const TEMPORARY = 57705
const ROUTINE = 57706
const EVENT = 57707
const SHUTDOWN = 57708
const NULLX = 57709
const AUTO_INCREMENT = 57710
const APPROXNUM = 57711
const SIGNED = 57712
const UNSIGNED = 57713
const ZEROFILL = 57714
const ENGINES = 57715
const LOW_CARDINALITY = 57716
const AUTOEXTEND_SIZE = 57717
const ADMIN_NAME = 57718
const RANDOM = 57719
const SUSPEND = 57720
const ATTRIBUTE = 57721
const HISTORY = 57722
const REUSE = 57723
const CURRENT = 57724
const OPTIONAL = 57725
const FAILED_LOGIN_ATTEMPTS = 57726
const PASSWORD_LOCK_TIME = 57727
const UNBOUNDED = 57728
const SECONDARY = 57729
const RESTRICTED = 57730
const USER = 57731
const IDENTIFIED = 57732
const CIPHER = 57733
const ISSUER = 57734
const X509 = 57735
const SUBJECT = 57736
const SAN = 57737
const REQUIRE = 57738
const SSL = 57739
const NONE = 57740
const PASSWORD = 57741
const SHARED = 57742
const EXCLUSIVE = 57743
const MAX_QUERIES_PER_HOUR = 57744
const MAX_UPDATES_PER_HOUR = 57745
const MAX_CONNECTIONS_PER_HOUR = 57746
const MAX_USER_CONNECTIONS = 57747
const FORMAT = 57748
const VERBOSE = 57749
const CONNECTION = 57750
const TRIGGERS = 57751
const PROFILES = 57752
const LOAD = 57753
const INLINE = 57754
const INFILE = 57755
const TERMINATED = 57756
const OPTIONALLY = 57757
const ENCLOSED = 57758
const ESCAPED = 57759
const STARTING = 57760
const LINES = 57761
const ROWS = 57762
const IMPORT = 57763
const DISCARD = 57764
const MODUMP = 57765
const OVER = 57766
const PRECEDING = 57767
const FOLLOWING = 57768
const GROUPS = 57769
const DATABASES = 57770
const TABLES = 57771
const SEQUENCES = 57772
const EXTENDED = 57773
const FULL = 57774
const PROCESSLIST = 57775
const FIELDS = 57776
const COLUMNS = 57777
const OPEN = 57778
const ERRORS = 57779
const WARNINGS = 57780
const INDEXES = 57781
const SCHEMAS = 57782
const NODE = 57783
const LOCKS = 57784
const ROLES = 57785
const TABLE_NUMBER = 57786
const COLUMN_NUMBER = 57787
const TABLE_VALUES = 57788
const TABLE_SIZE = 57789
const NAMES = 57790
const GLOBAL = 57791
const PERSIST = 57792
const SESSION = 57793
const ISOLATION = 57794
const LEVEL = 57795
const READ = 57796
const WRITE = 57797
const ONLY = 57798
const REPEATABLE = 57799
const COMMITTED = 57800
const UNCOMMITTED = 57801
const SERIALIZABLE = 57802
const LOCAL = 57803
const EVENTS = 57804
const PLUGINS = 57805
const CURRENT_TIMESTAMP = 57806
const DATABASE = 57807
const CURRENT_TIME = 57808
const LOCALTIME = 57809
const LOCALTIMESTAMP = 57810
const UTC_DATE = 57811
const UTC_TIME = 57812
const UTC_TIMESTAMP = 57813
const REPLACE = 57814
const CONVERT = 57815
const SEPARATOR = 57816
const TIMESTAMPDIFF = 57817
const CURRENT_DATE = 57818
const CURRENT_USER = 57819
const CURRENT_ROLE = 57820
const SECOND_MICROSECOND = 57821
const MINUTE_MICROSECOND = 57822
const MINUTE_SECOND = 57823
const HOUR_MICROSECOND = 57824
const HOUR_SECOND = 57825
const HOUR_MINUTE = 57826
const DAY_MICROSECOND = 57827
const DAY_SECOND = 57828
const DAY_MINUTE = 57829
const DAY_HOUR = 57830
const YEAR_MONTH = 57831
const SQL_TSI_HOUR = 57832
const SQL_TSI_DAY = 57833
const SQL_TSI_WEEK = 57834
const SQL_TSI_MONTH = 57835
const SQL_TSI_QUARTER = 57836
const SQL_TSI_YEAR = 57837
const SQL_TSI_SECOND = 57838
const SQL_TSI_MINUTE = 57839
const RECURSIVE = 57840
const CONFIG = 57841
const DRAINER = 57842
const SOURCE = 57843
const STREAM = 57844
const HEADERS = 57845
const CONNECTOR = 57846
const CONNECTORS = 57847
const DAEMON = 57848
const PAUSE = 57849
const CANCEL = 57850
const TASK = 57851
const RESUME = 57852
const MATCH = 57853
const AGAINST = 57854
const BOOLEAN = 57855
const LANGUAGE = 57856
const WITH = 57857
const QUERY = 57858
const EXPANSION = 57859
const WITHOUT = 57860
const VALIDATION = 57861
const ADDDATE = 57862
const BIT_AND = 57863
const BIT_OR = 57864
const BIT_XOR = 57865
const CAST = 57866
const COUNT = 57867
const APPROX_COUNT = 57868
const APPROX_COUNT_DISTINCT = 57869
const APPROX_PERCENTILE = 57870
const CURDATE = 57871
const CURTIME = 57872
const DATE_ADD = 57873
const DATE_SUB = 57874
const EXTRACT = 57875
const GROUP_CONCAT = 57876
const MAX = 57877
const MID = 57878
const MIN = 57879
const NOW = 57880
const POSITION = 57881
const SESSION_USER = 57882
const STD = 57883
const STDDEV = 57884
const MEDIAN = 57885
const STDDEV_POP = 57886
const STDDEV_SAMP = 57887
const SUBDATE = 57888
const SUBSTR = 57889
const SUBSTRING = 57890
const SUM = 57891
const SYSDATE = 57892
const SYSTEM_USER = 57893
const TRANSLATE = 57894
const TRIM = 57895
const VARIANCE = 57896
const VAR_POP = 57897
const VAR_SAMP = 57898
const AVG = 57899
const RANK = 57900
const ROW_NUMBER = 57901
const DENSE_RANK = 57902
const BIT_CAST = 57903
const NEXTVAL = 57904
const SETVAL = 57905
const CURRVAL = 57906
const LASTVAL = 57907
const ARROW = 57908
const ROW = 57909
const OUTFILE = 57910
const HEADER = 57911
const MAX_FILE_SIZE = 57912
const FORCE_QUOTE = 57913
const PARALLEL = 57914
const UNUSED = 57915
const BINDINGS = 57916
const DO = 57917
const DECLARE = 57918
const LOOP = 57919
const WHILE = 57920
const LEAVE = 57921
const ITERATE = 57922
const UNTIL = 57923
const CALL = 57924
const PREV = 57925
const SLIDING = 57926
const FILL = 57927
const SPBEGIN = 57928
const BACKEND = 57929
const SERVERS = 57930
const HANDLER = 57931
const KILL = 57932
const BACKUP = 57933
const FILESYSTEM = 57934
const QUERY_RESULT = 57935

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"STAGEOPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"LISTS",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"CONNECTORS",
	"DAEMON",
	"PAUSE",
	"CANCEL",
	"TASK",
	"RESUME",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"PREV",
	"SLIDING",
	"FILL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"HANDLER",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10696

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 117,
	11, 690,
	21, 690,
	-2, 683,
	-1, 137,
	236, 1069,
	238, 980,
	-2, 1026,
	-1, 161,
	42, 519,
	238, 519,
	265, 526,
	266, 526,
	456, 519,
	-2, 552,
	-1, 200,
	614, 1791,
	-2, 435,
	-1, 549,
	317, 133,
	429, 133,
	430, 133,
	-2, 1698,
	-1, 613,
	81, 1490,
	-2, 1846,
	-1, 614,
	81, 1508,
	-2, 1817,
	-1, 618,
	81, 1509,
	-2, 1845,
	-1, 644,
	81, 1420,
	-2, 1916,
	-1, 645,
	81, 1421,
	-2, 1915,
	-1, 646,
	81, 1422,
	-2, 1905,
	-1, 647,
	81, 1879,
	-2, 1900,
	-1, 648,
	81, 1880,
	-2, 1901,
	-1, 649,
	81, 1881,
	-2, 1907,
	-1, 650,
	81, 1882,
	-2, 1889,
	-1, 651,
	81, 1883,
	-2, 1898,
	-1, 652,
	81, 1884,
	-2, 1908,
	-1, 653,
	81, 1885,
	-2, 1909,
	-1, 654,
	81, 1886,
	-2, 1914,
	-1, 655,
	81, 1887,
	-2, 1919,
	-1, 656,
	81, 1888,
	-2, 1920,
	-1, 658,
	81, 1487,
	-2, 1684,
	-1, 662,
	81, 1492,
	-2, 1699,
	-1, 665,
	81, 1496,
	-2, 1717,
	-1, 669,
	81, 1500,
	-2, 1760,
	-1, 670,
	81, 1501,
	-2, 1841,
	-1, 678,
	81, 1511,
	-2, 1826,
	-1, 679,
	81, 1512,
	-2, 1871,
	-1, 680,
	81, 1513,
	-2, 1836,
	-1, 681,
	81, 1514,
	-2, 1861,
	-1, 692,
	81, 1398,
	-2, 1910,
	-1, 693,
	81, 1399,
	-2, 1911,
	-1, 694,
	81, 1400,
	-2, 1912,
	-1, 778,
	451, 552,
	452, 552,
	-2, 520,
	-1, 824,
	122, 1684,
	133, 1684,
	153, 1684,
	-2, 1658,
	-1, 933,
	21, 717,
	-2, 666,
	-1, 1034,
	11, 690,
	21, 690,
	-2, 1295,
	-1, 1107,
	21, 717,
	-2, 666,
	-1, 1418,
	81, 1558,
	-2, 1843,
	-1, 1419,
	81, 1559,
	-2, 1844,
	-1, 1558,
	82, 866,
	-2, 872,
	-1, 1961,
	105, 1016,
	149, 1016,
	188, 1016,
	191, 1016,
	278, 1016,
	-2, 1009,
	-1, 2101,
	11, 690,
	21, 690,
	-2, 810,
	-1, 2133,
	82, 1644,
	154, 1644,
	-2, 1828,
	-1, 2134,
	82, 1644,
	154, 1644,
	-2, 1827,
	-1, 2135,
	82, 1620,
	154, 1620,
	-2, 1814,
	-1, 2136,
	82, 1621,
	154, 1621,
	-2, 1819,
	-1, 2137,
	82, 1622,
	154, 1622,
	-2, 1748,
	-1, 2138,
	82, 1623,
	154, 1623,
	-2, 1742,
	-1, 2139,
	82, 1624,
	154, 1624,
	-2, 1674,
	-1, 2140,
	82, 1625,
	154, 1625,
	-2, 1816,
	-1, 2141,
	82, 1626,
	154, 1626,
	-2, 1746,
	-1, 2142,
	82, 1627,
	154, 1627,
	-2, 1741,
	-1, 2143,
	82, 1628,
	154, 1628,
	-2, 1731,
	-1, 2144,
	82, 1644,
	154, 1644,
	-2, 1732,
	-1, 2145,
	82, 1644,
	154, 1644,
	-2, 1733,
	-1, 2147,
	82, 1633,
	154, 1633,
	-2, 1861,
	-1, 2148,
	82, 1611,
	154, 1611,
	-2, 1846,
	-1, 2149,
	82, 1642,
	154, 1642,
	-2, 1817,
	-1, 2150,
	82, 1642,
	154, 1642,
	-2, 1845,
	-1, 2151,
	82, 1642,
	154, 1642,
	-2, 1700,
	-1, 2152,
	82, 1640,
	154, 1640,
	-2, 1836,
	-1, 2153,
	82, 1637,
	154, 1637,
	-2, 1722,
	-1, 2154,
	81, 1592,
	82, 1592,
	154, 1592,
	387, 1592,
	388, 1592,
	389, 1592,
	-2, 1673,
	-1, 2155,
	81, 1593,
	82, 1593,
	154, 1593,
	387, 1593,
	388, 1593,
	389, 1593,
	-2, 1675,
	-1, 2156,
	81, 1596,
	82, 1596,
	154, 1596,
	387, 1596,
	388, 1596,
	389, 1596,
	-2, 1818,
	-1, 2157,
	81, 1598,
	82, 1598,
	154, 1598,
	387, 1598,
	388, 1598,
	389, 1598,
	-2, 1800,
	-1, 2158,
	81, 1600,
	82, 1600,
	154, 1600,
	387, 1600,
	388, 1600,
	389, 1600,
	-2, 1747,
	-1, 2159,
	81, 1602,
	82, 1602,
	154, 1602,
	387, 1602,
	388, 1602,
	389, 1602,
	-2, 1727,
	-1, 2160,
	81, 1603,
	82, 1603,
	154, 1603,
	387, 1603,
	388, 1603,
	389, 1603,
	-2, 1728,
	-1, 2161,
	81, 1605,
	82, 1605,
	154, 1605,
	387, 1605,
	388, 1605,
	389, 1605,
	-2, 1672,
	-1, 2162,
	82, 1647,
	154, 1647,
	387, 1647,
	388, 1647,
	389, 1647,
	-2, 1705,
	-1, 2163,
	82, 1647,
	154, 1647,
	387, 1647,
	388, 1647,
	389, 1647,
	-2, 1718,
	-1, 2164,
	82, 1650,
	154, 1650,
	387, 1650,
	388, 1650,
	389, 1650,
	-2, 1701,
	-1, 2165,
	82, 1650,
	154, 1650,
	387, 1650,
	388, 1650,
	389, 1650,
	-2, 1763,
	-1, 2166,
	82, 1647,
	154, 1647,
	387, 1647,
	388, 1647,
	389, 1647,
	-2, 1784,
	-1, 2349,
	105, 1016,
	149, 1016,
	188, 1016,
	191, 1016,
	278, 1016,
	-2, 1010,
	-1, 2362,
	79, 611,
	154, 611,
	-2, 1182,
	-1, 2710,
	191, 1016,
	302, 1263,
	-2, 1235,
	-1, 2859,
	105, 1016,
	149, 1016,
	188, 1016,
	191, 1016,
	-2, 1125,
	-1, 2861,
	105, 1016,
	149, 1016,
	188, 1016,
	191, 1016,
	-2, 1125,
	-1, 2871,
	79, 611,
	154, 611,
	-2, 1183,
	-1, 2879,
	191, 1016,
	302, 1263,
	-2, 1236,
	-1, 3013,
	105, 1016,
	149, 1016,
	188, 1016,
	191, 1016,
	-2, 1126,
	-1, 3397,
	82, 1087,
	154, 1087,
	-2, 1016,
	-1, 3401,
	82, 1087,
	154, 1087,
	-2, 1016,
	-1, 3415,
	82, 1091,
	154, 1091,
	-2, 1016,
	-1, 3420,
	82, 1092,
	154, 1092,
	-2, 1016,
}

const yyPrivate = 57344

const yyLast = 39114

var yyAct = [...]int{
	580, 1639, 3401, 3400, 3409, 3380, 191, 1398, 558, 3265,
	560, 3328, 582, 3350, 553, 3273, 3291, 3274, 2961, 3194,
	568, 2728, 2955, 3179, 3054, 2893, 2216, 2794, 1248, 3170,
	1067, 3001, 3198, 3000, 1394, 2998, 1334, 3090, 3079, 2795,
	462, 610, 2959, 3127, 1324, 2829, 934, 823, 2320, 2950,
	472, 3180, 477, 477, 1187, 3182, 562, 1591, 477, 493,
	502, 2846, 3019, 502, 3005, 2365, 3012, 2003, 2880, 1401,
	2682, 2977, 2792, 2642, 1728, 3015, 2481, 2480, 2671, 2482,
	2835, 2464, 2281, 2725, 2862, 1693, 2707, 2404, 176, 2474,
	1701, 513, 1831, 2543, 1454, 2714, 2780, 2129, 1796, 2503,
	2760, 2640, 2477, 2340, 507, 2006, 2655, 1593, 2650, 2131,
	2713, 2652, 2643, 2688, 551, 2095, 1139, 2350, 1929, 2079,
	1743, 1971, 1725, 1938, 927, 1816, 1928, 1241, 2586, 2516,
	2199, 1538, 1805, 1827, 1804, 2182, 2526, 1797, 2033, 2096,
	754, 557, 476, 476, 1320, 1770, 1721, 1826, 484, 1328,
	1696, 552, 1162, 2084, 2329, 1325, 1313, 2386, 2324, 2004,
	1631, 2384, 2357, 6, 1160, 462, 1694, 1568, 1621, 1970,
	187, 8, 186, 7, 2127, 879, 1333, 2251, 1392, 1828,
	561, 1350, 1287, 817, 1861, 55, 1227, 1257, 1952, 2645,
	1838, 191, 1448, 191, 471, 870, 871, 2644, 569, 1432,
	1383, 550, 1603, 864, 865, 2282, 945, 1602, 869, 786,
	1999, 116, 1786, 1294, 1803, 1391, 26, 559, 1760, 1800,
	816, 1196, 489, 461, 35, 2103, 1226, 486, 753, 1567,
	1176, 696, 15, 1224, 1455, 13, 515, 1280, 14, 552,
	23, 516, 1188, 36, 177, 16, 32, 167, 10, 1286,
	501, 731, 751, 173, 736, 1105, 1068, 1835, 1172, 3121,
	1397, 867, 2849, 2310, 1845, 2787, 2310, 2239, 2188, 2310,
	2186, 2185, 2183, 1551, 1301, 498, 773, 863, 1297, 866,
	862, 868, 175, 1124, 863, 473, 3335, 863, 1209, 1545,
	1120, 494, 2948, 1299, 496, 2539, 2537, 497, 1775, 1197,
	2303, 2301, 499, 482, 3086, 495, 1003, 1004, 1005, 1002,
	3080, 2951, 2793, 505, 1813, 1062, 174, 51, 163, 138,
	2883, 1003, 1004, 1005, 1002, 3184, 1799, 697, 2041, 708,
	2319, 3138, 966, 2987, 164, 174, 51, 163, 138, 861,
	2305, 156, 174, 174, 2233, 165, 8, 1125, 7, 174,
	174, 2321, 2978, 2225, 832, 3256, 1963, 3107, 2895, 3217,
	1348, 1341, 174, 1832, 115, 174, 174, 51, 163, 138,
	1475, 2886, 1267, 174, 1266, 3139, 1265, 835, 833, 103,
	829, 2881, 834, 1134, 1562, 168, 2903, 2904, 512, 2610,
	1345, 1338, 2882, 831, 1843, 1152, 511, 2558, 174, 51,
	163, 138, 1956, 3109, 168, 2121, 1205, 1000, 1126, 1206,
	2551, 1347, 1340, 115, 1738, 2510, 2511, 2122, 168, 168,
	687, 115, 686, 688, 689, 698, 690, 691, 2509, 2887,
	699, 168, 2200, 2109, 168, 168, 2108, 709, 1228, 2110,
	1230, 1368, 168, 1706, 1707, 1552, 1553, 1705, 1194, 1195,
	3277, 3278, 795, 1384, 1617, 1400, 1388, 981, 998, 2326,
	982, 120, 121, 3311, 122, 123, 826, 168, 1192, 2327,
	1184, 825, 1191, 1194, 1195, 3187, 477, 3187, 3248, 3186,
	1387, 3186, 3247, 3185, 3246, 2970, 477, 938, 984, 3309,
	3185, 1919, 3295, 3296, 993, 1208, 3250, 3091, 3092, 3093,
	3094, 3088, 3175, 2544, 502, 502, 974, 477, 2796, 976,
	1133, 3172, 3172, 3254, 2545, 3083, 2546, 2325, 1404, 2796,
	948, 2220, 939, 2902, 1847, 2007, 1300, 1298, 2836, 1471,
	3191, 1839, 137, 162, 172, 1468, 101, 977, 2809, 1470,
	1467, 1469, 1473, 1474, 2992, 742, 2306, 1472, 2073, 1950,
	2891, 1722, 1712, 1783, 161, 155, 154, 2843, 1379, 2313,
	1389, 57, 3252, 2420, 979, 2664, 929, 2656, 2905, 1006,
	873, 2230, 2888, 2892, 2890, 2889, 936, 2574, 1035, 1716,
	2666, 969, 137, 1386, 172, 948, 1044, 995, 3115, 3118,
	2332, 1307, 1306, 827, 3258, 3259, 2039, 957, 828, 3276,
	1036, 2949, 961, 931, 161, 3255, 996, 997, 2538, 1051,
	2897, 2898, 938, 970, 2468, 805, 2076, 2075, 2969, 2989,
	2661, 2662, 157, 158, 159, 2971, 2080, 980, 2576, 3304,
	1403, 1402, 546, 2726, 2727, 548, 2663, 2680, 972, 2689,
	547, 3143, 1844, 3209, 1410, 1413, 1414, 2358, 937, 166,
	975, 978, 1207, 2905, 2304, 1411, 3135, 3204, 504, 503,
	1736, 1737, 1136, 1135, 3313, 2884, 1182, 2917, 1071, 111,
	1218, 2896, 1123, 160, 2660, 112, 971, 2473, 832, 1456,
	1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466,
	1478, 1479, 1480, 1481, 1482, 1483, 1476, 1477, 1958, 1385,
	991, 992, 2910, 983, 829, 3199, 3394, 498, 498, 3410,
	1833, 950, 949, 941, 942, 3341, 3267, 831, 3120, 3308,
	1131, 472, 2812, 494, 494, 2580, 496, 496, 2309, 497,
	497, 1833, 113, 3348, 499, 499, 1171, 495, 495, 933,
	2920, 1833, 1103, 3190, 50, 1108, 3045, 943, 3374, 832,
	958, 500, 973, 754, 954, 955, 2050, 863, 801, 799,
	863, 800, 863, 863, 2730, 3263, 3264, 3137, 3267, 1042,
	863, 2049, 863, 1072, 2962, 829, 950, 949, 952, 3040,
	2009, 2321, 1038, 1039, 1040, 1041, 2658, 1834, 831, 1846,
	2184, 3353, 1193, 52, 986, 2338, 3257, 987, 3144, 1237,
	2901, 1236, 477, 959, 1220, 1302, 2344, 2345, 2346, 2347,
	462, 462, 52, 3136, 500, 1850, 1852, 1853, 697, 462,
	462, 1169, 3110, 1252, 1252, 989, 477, 1190, 169, 170,
	3034, 171, 3103, 1194, 1195, 3104, 139, 2070, 2071, 2302,
	2124, 1141, 1142, 1143, 1144, 2988, 1146, 806, 502, 1281,
	472, 1151, 1254, 1290, 1290, 139, 2234, 1250, 1250, 1194,
	1195, 1168, 139, 139, 191, 802, 2900, 1289, 1289, 139,
	139, 1167, 2657, 462, 1259, 52, 1080, 1081, 169, 170,
	1723, 171, 139, 1412, 1183, 139, 139, 2667, 3106, 3381,
	3314, 3411, 1216, 139, 2331, 3116, 114, 39, 3128, 960,
	3251, 985, 3417, 49, 2993, 1186, 1185, 5, 932, 1165,
	928, 118, 119, 828, 1170, 1132, 1258, 2008, 139, 3105,
	2627, 1180, 2010, 1308, 1332, 2863, 1335, 3354, 804, 1199,
	1200, 1343, 1202, 1203, 1204, 2577, 1713, 1862, 2421, 990,
	2422, 2423, 1380, 3055, 3056, 3057, 3059, 3058, 1246, 1247,
	2335, 2336, 1366, 1109, 1107, 2729, 3103, 2726, 2727, 3104,
	2002, 3405, 2019, 1715, 988, 2334, 1252, 2946, 1252, 938,
	744, 1140, 745, 2799, 3098, 511, 2011, 1138, 3169, 1349,
	2722, 2659, 1225, 2521, 2522, 2505, 2507, 966, 2226, 2113,
	2037, 1836, 1145, 1232, 1234, 2012, 2448, 1178, 1179, 2579,
	1150, 1149, 1244, 1245, 803, 1159, 1219, 1148, 2022, 506,
	3041, 3042, 3106, 2823, 2002, 2024, 1405, 1406, 1407, 1408,
	1409, 748, 749, 750, 1157, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1311, 3047, 1314,
	1315, 1443, 1444, 3105, 1282, 1322, 1323, 1210, 1211, 1453,
	1316, 1317, 1198, 1235, 1851, 1201, 1303, 2723, 3351, 3352,
	1450, 1451, 1452, 1502, 1173, 1177, 1177, 1177, 1486, 1848,
	1849, 1330, 2023, 965, 2418, 1327, 1496, 3036, 1331, 3416,
	482, 3035, 1260, 2588, 2587, 2312, 1511, 1932, 1173, 1173,
	3404, 1361, 1362, 1273, 1492, 1493, 1494, 1129, 1279, 1934,
	1933, 1396, 1555, 1291, 1127, 1128, 1556, 1508, 1292, 1931,
	1509, 2439, 2440, 832, 1554, 711, 746, 832, 2694, 2062,
	712, 1540, 938, 1518, 1519, 3020, 2013, 3356, 1894, 715,
	1399, 1893, 1001, 1941, 1281, 3099, 1954, 1377, 3423, 3181,
	1565, 3422, 1252, 1570, 1571, 2757, 1573, 1574, 477, 1487,
	1415, 2506, 477, 2363, 1137, 1252, 1942, 1943, 1536, 754,
	498, 1594, 1592, 3413, 966, 1594, 1357, 1252, 2018, 935,
	1374, 1339, 2016, 1220, 2202, 1346, 494, 1352, 493, 496,
	714, 1539, 497, 1365, 717, 716, 1371, 499, 3395, 1370,
	495, 1364, 3390, 2364, 1373, 1501, 3384, 1375, 1616, 1372,
	2800, 1390, 1369, 1001, 1612, 2753, 1622, 1622, 1395, 1220,
	1001, 1220, 1220, 1001, 2826, 477, 477, 1564, 1565, 1565,
	1620, 743, 1252, 1690, 1691, 1703, 1393, 1434, 2811, 1484,
	1485, 1922, 1488, 2438, 2093, 3414, 1572, 796, 1575, 462,
	1503, 1252, 1579, 2449, 2451, 2452, 2453, 2450, 1441, 1442,
	1953, 1560, 1561, 1510, 1563, 1512, 1540, 2724, 2225, 3099,
	1841, 1540, 1540, 3100, 3391, 1576, 1577, 1578, 1841, 477,
	1565, 1252, 3383, 1748, 3361, 477, 477, 477, 1753, 1754,
	807, 2678, 3330, 1547, 3285, 1758, 1759, 2732, 1608, 1542,
	1765, 2364, 1641, 2009, 2012, 1685, 1686, 191, 2094, 1763,
	191, 191, 2757, 191, 1615, 1628, 1629, 1618, 1619, 1382,
	1773, 935, 1001, 1776, 1739, 2631, 1779, 1513, 2629, 1781,
	798, 1600, 1601, 797, 1624, 854, 859, 860, 2094, 1717,
	1003, 1004, 1005, 1002, 796, 2524, 1537, 2315, 1610, 1611,
	2307, 1502, 1502, 1807, 1841, 1381, 1841, 1745, 1502, 1502,
	1475, 1543, 1987, 2215, 3331, 1818, 3286, 3279, 2094, 1744,
	1709, 3227, 1711, 1747, 2207, 1744, 1744, 1744, 1817, 1731,
	1732, 1559, 1729, 1730, 1724, 1623, 2608, 1873, 2036, 1592,
	2124, 1595, 1596, 1252, 1830, 1774, 963, 1589, 1777, 1778,
	1588, 1780, 1832, 3162, 3161, 1750, 1751, 1752, 1604, 1704,
	1606, 1607, 1569, 1997, 1812, 1605, 1003, 1004, 1005, 1002,
	2679, 1625, 1609, 3157, 1613, 1584, 3156, 798, 1626, 1627,
	797, 964, 3155, 3154, 1614, 2013, 1599, 1597, 3123, 3124,
	2008, 2002, 2007, 3124, 2005, 2010, 1824, 1761, 1003, 1004,
	1005, 1002, 2981, 1927, 1808, 1898, 1823, 966, 1859, 1860,
	1692, 1689, 1872, 2924, 1104, 1734, 2855, 2741, 1708, 1718,
	1710, 1865, 964, 1158, 1869, 3163, 1975, 1173, 701, 702,
	703, 704, 1855, 1802, 701, 702, 703, 704, 1446, 1238,
	1802, 1177, 1569, 2500, 1986, 3124, 1746, 2842, 3124, 2011,
	3378, 3332, 2874, 1177, 3124, 3124, 2288, 2280, 2241, 2223,
	3124, 2211, 2209, 2695, 1880, 2528, 2366, 1771, 2204, 1471,
	1769, 2197, 1887, 2195, 2982, 1468, 856, 857, 858, 1470,
	1467, 1469, 1473, 1474, 2193, 2124, 832, 1472, 2856, 2742,
	1900, 1393, 1788, 832, 1814, 1905, 1906, 1907, 2191, 1974,
	1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 2228, 2227,
	1263, 1899, 829, 1901, 3068, 2094, 2219, 1992, 551, 829,
	1908, 477, 477, 1811, 477, 831, 1821, 1809, 1001, 1001,
	1001, 1975, 831, 2205, 2210, 498, 1923, 477, 477, 477,
	2205, 1820, 1825, 2198, 1018, 2196, 1904, 1903, 1889, 1972,
	1892, 494, 1883, 1882, 496, 2922, 2192, 497, 1874, 1979,
	1220, 1822, 499, 1768, 1756, 495, 1881, 1354, 1840, 1976,
	2192, 1975, 1048, 1358, 706, 1854, 2105, 583, 593, 951,
	706, 832, 930, 925, 923, 1220, 584, 1863, 592, 585,
	589, 588, 586, 587, 1733, 1434, 1856, 1491, 1490, 2029,
	1867, 1021, 1022, 1023, 1024, 1025, 1018, 829, 1922, 1174,
	2699, 1945, 1946, 2571, 1948, 1857, 1858, 2690, 1001, 1001,
	831, 3205, 1001, 3021, 1001, 1001, 2866, 1964, 1965, 1966,
	1478, 1479, 1480, 1481, 1482, 1483, 1476, 1477, 1001, 1947,
	1841, 590, 1163, 2864, 1240, 1359, 1164, 2785, 930, 2035,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1018, 3370, 2098,
	2098, 1703, 2098, 1491, 1490, 3206, 1242, 3022, 1981, 1982,
	2867, 510, 3357, 591, 713, 2034, 3122, 1243, 1984, 1985,
	462, 462, 3095, 3038, 1540, 1924, 1540, 2865, 938, 3037,
	2994, 2848, 2758, 2691, 1252, 477, 2751, 2746, 2743, 1918,
	1920, 1921, 2673, 2470, 1540, 1540, 2342, 1524, 2311, 2238,
	477, 2208, 2115, 1154, 1440, 2183, 938, 2167, 472, 1935,
	1955, 1153, 1290, 940, 1703, 1175, 1988, 2172, 2119, 2174,
	1437, 1439, 1436, 191, 1438, 2248, 1289, 2692, 2177, 1449,
	1295, 1868, 1772, 1239, 1071, 2040, 2102, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 1996, 1772, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 1980, 2063, 2064,
	2065, 2066, 2067, 1517, 2068, 2100, 1449, 2104, 1003, 1004,
	1005, 1002, 2001, 2221, 2530, 1258, 1830, 1993, 2258, 2788,
	2000, 1983, 2111, 1252, 2112, 1252, 1989, 1252, 718, 1990,
	1744, 1566, 938, 3245, 2014, 2015, 1002, 2020, 3050, 2171,
	2240, 1991, 2116, 2117, 1005, 1002, 922, 918, 919, 920,
	921, 2178, 2263, 3049, 2262, 2261, 2259, 2547, 2169, 2231,
	2126, 2410, 2409, 2392, 1252, 2267, 2390, 2176, 2077, 1003,
	1004, 1005, 1002, 2249, 2995, 2996, 832, 3029, 2786, 1072,
	2274, 2106, 2268, 2269, 3373, 1252, 1003, 1004, 1005, 1002,
	2271, 2272, 2266, 1232, 1234, 2276, 1050, 2187, 1250, 3399,
	1506, 3387, 829, 2277, 3342, 2341, 2990, 2132, 3337, 1049,
	1177, 2123, 2120, 2275, 1507, 831, 2840, 2460, 3336, 1250,
	3269, 2260, 3236, 1003, 1004, 1005, 1002, 1540, 3207, 2458,
	3147, 938, 2250, 2456, 2170, 938, 2278, 3140, 477, 3081,
	2847, 2445, 2168, 3214, 1252, 3372, 3024, 2339, 3023, 1489,
	2868, 2839, 2665, 1565, 2567, 1003, 1004, 1005, 1002, 2273,
	2362, 2601, 2991, 2237, 2179, 2542, 2368, 2541, 2217, 2218,
	2252, 2252, 2841, 2459, 2232, 2443, 2283, 2284, 1003, 1004,
	1005, 1002, 2289, 2378, 2213, 2457, 1295, 2299, 2442, 2455,
	938, 2372, 2373, 2235, 2222, 2224, 2246, 2444, 2389, 2441,
	2433, 2229, 2427, 2426, 2425, 938, 938, 938, 1622, 2424,
	2475, 938, 2308, 2400, 2401, 2402, 938, 1926, 2406, 2407,
	2600, 2408, 1003, 1004, 1005, 1002, 1791, 2351, 2322, 1790,
	2352, 1296, 2242, 2243, 1003, 1004, 1005, 1002, 2257, 2255,
	1003, 1004, 1005, 1002, 2098, 1789, 1003, 1004, 1005, 1002,
	2360, 1003, 1004, 1005, 1002, 2264, 2265, 1877, 2461, 1785,
	2369, 1784, 1742, 1641, 1741, 1740, 462, 1355, 2359, 1122,
	2245, 1565, 938, 1703, 1703, 1703, 1703, 2651, 3360, 2328,
	3303, 2371, 3300, 1393, 938, 1703, 2374, 3210, 2098, 2956,
	3297, 546, 2316, 3270, 548, 2380, 2132, 3193, 3096, 547,
	2318, 2387, 2383, 2323, 1252, 2387, 2999, 3178, 3167, 2317,
	3151, 2337, 3146, 2388, 3145, 477, 477, 2394, 3119, 1003,
	1004, 1005, 1002, 2370, 3117, 3082, 3031, 2367, 2985, 2361,
	3008, 1885, 2375, 2376, 8, 2954, 7, 1026, 1027, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1018, 2379, 2382, 1003,
	1004, 1005, 1002, 2385, 1871, 2952, 2931, 2391, 3197, 2928,
	2496, 2926, 2465, 2974, 2416, 2417, 2973, 2395, 2396, 2838,
	191, 2861, 2399, 2837, 2834, 191, 2398, 2405, 2431, 2432,
	2817, 2752, 2748, 2435, 1003, 1004, 1005, 1002, 2534, 2739,
	2536, 2738, 1003, 1004, 1005, 1002, 1502, 1884, 1502, 2674,
	2635, 2557, 2467, 2377, 1569, 2518, 2519, 3412, 1540, 2634,
	2566, 2633, 1930, 1540, 2581, 2578, 1252, 2540, 2514, 2573,
	1817, 2466, 2471, 1003, 1004, 1005, 1002, 2499, 1003, 1004,
	1005, 1002, 2525, 2483, 2454, 2497, 2495, 2446, 2964, 2484,
	2485, 2486, 2487, 2860, 2436, 2483, 2434, 2430, 2963, 2469,
	2498, 2512, 2515, 2859, 2429, 2584, 2428, 2214, 2531, 643,
	642, 2914, 1793, 2535, 1003, 1004, 1005, 1002, 1539, 1787,
	1550, 1549, 2508, 2556, 1003, 1004, 1005, 1002, 2605, 1356,
	1079, 1315, 1075, 1074, 926, 1322, 1323, 1003, 1004, 1005,
	1002, 1316, 1317, 710, 2814, 2554, 2594, 2825, 2596, 2821,
	2816, 2560, 2801, 2529, 2791, 1330, 2790, 2533, 2570, 1327,
	938, 2776, 1331, 2775, 2700, 2575, 2532, 2638, 2628, 2654,
	1003, 1004, 1005, 1002, 174, 2550, 163, 138, 2553, 2669,
	2548, 2563, 2555, 2561, 477, 2562, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1007, 2683, 938, 938, 938, 2606, 2569,
	2599, 2591, 2611, 2612, 1703, 1972, 2582, 2698, 2613, 2614,
	2615, 2616, 2590, 2617, 2618, 2619, 2620, 2621, 2622, 2623,
	2624, 2585, 2523, 2589, 2314, 2604, 2583, 2712, 2194, 2715,
	832, 2715, 2715, 2597, 2598, 2190, 938, 832, 2189, 2677,
	1909, 1902, 2630, 168, 3226, 1897, 1895, 2595, 2719, 2603,
	2734, 1003, 1004, 1005, 1002, 2592, 2593, 1252, 1252, 1891,
	1890, 1888, 1870, 1879, 2731, 2351, 2637, 1876, 1875, 2632,
	1792, 1535, 2733, 1534, 2675, 1003, 1004, 1005, 1002, 2636,
	1533, 1505, 1504, 2602, 1495, 2735, 2736, 2297, 2552, 2696,
	174, 1250, 1250, 1264, 1262, 2559, 2685, 2686, 2687, 2670,
	3319, 2296, 3369, 477, 3363, 3349, 3346, 2676, 2654, 1003,
	1004, 1005, 1002, 1003, 1004, 1005, 1002, 2295, 2701, 1565,
	1565, 2720, 2711, 2702, 2703, 2693, 2697, 1003, 1004, 1005,
	1002, 3344, 851, 2705, 2710, 2294, 1003, 1004, 1005, 1002,
	3235, 2716, 2717, 1003, 1004, 1005, 1002, 2293, 2721, 2718,
	1069, 1214, 1215, 2292, 1217, 3164, 1221, 1222, 1223, 168,
	3153, 1003, 1004, 1005, 1002, 938, 3148, 1310, 3063, 2267,
	2704, 3048, 3044, 1003, 1004, 1005, 1002, 2939, 2789, 1003,
	1004, 1005, 1002, 2291, 2937, 2912, 2911, 2908, 1268, 1269,
	1270, 1271, 1272, 1744, 1274, 1275, 1276, 1277, 1278, 2907,
	2850, 2648, 1284, 1285, 2290, 2647, 1321, 832, 1312, 1003,
	1004, 1005, 1002, 1326, 1329, 2744, 2750, 1318, 2749, 2745,
	477, 2754, 2755, 2740, 1161, 2462, 2393, 2765, 2356, 2756,
	1003, 1004, 1005, 1002, 2355, 2354, 2353, 2747, 2298, 2203,
	3224, 2287, 2769, 2114, 2768, 2069, 1973, 1944, 595, 117,
	1925, 2772, 2773, 2774, 117, 1435, 2813, 168, 1755, 1558,
	1546, 1378, 2778, 2815, 1342, 2706, 2784, 1003, 1004, 1005,
	1002, 1319, 1121, 1106, 846, 841, 836, 840, 844, 1102,
	1101, 1100, 1099, 2767, 2820, 1098, 3222, 2286, 2830, 938,
	2802, 2285, 1097, 1096, 1095, 1094, 2804, 2803, 1093, 1092,
	2807, 2279, 849, 2808, 483, 1091, 839, 117, 1090, 1089,
	2810, 1088, 2818, 1003, 1004, 1005, 1002, 1003, 1004, 1005,
	1002, 2854, 1087, 1086, 3220, 2270, 2132, 1003, 1004, 1005,
	1002, 2081, 1085, 1084, 2098, 1703, 2871, 1017, 1016, 1026,
	1027, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1018, 1083,
	938, 1003, 1004, 1005, 1002, 1082, 1896, 847, 2247, 2712,
	1078, 1077, 1076, 938, 850, 1073, 2822, 1066, 2086, 2089,
	2090, 2091, 2087, 938, 2088, 2092, 1065, 1063, 1252, 1062,
	2766, 1445, 837, 1061, 1003, 1004, 1005, 1002, 1060, 1059,
	2832, 1058, 1057, 1056, 1565, 1055, 1054, 1053, 938, 1052,
	2845, 1047, 1540, 1046, 2873, 848, 2923, 1003, 1004, 1005,
	1002, 1045, 1250, 1540, 968, 924, 2936, 830, 2906, 2938,
	2870, 2909, 2761, 2762, 117, 3388, 2899, 191, 1978, 1960,
	2876, 2086, 2089, 2090, 2091, 2087, 2944, 2088, 2092, 117,
	938, 117, 956, 2933, 2872, 838, 3317, 2918, 2915, 2869,
	3275, 2764, 2875, 2343, 2913, 2125, 2851, 2852, 2853, 2945,
	2921, 1795, 2857, 2858, 2925, 832, 2927, 938, 967, 2930,
	2489, 2932, 832, 2935, 2488, 832, 2943, 2934, 1017, 1016,
	1026, 1027, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1018,
	2492, 938, 1252, 1252, 2490, 2493, 2972, 2683, 3398, 2491,
	2941, 3014, 2494, 3014, 2090, 2091, 2212, 2942, 2206, 1155,
	2929, 2877, 1586, 1587, 2979, 2947, 2957, 2958, 102, 474,
	3004, 845, 2672, 2824, 2916, 2565, 1250, 3006, 1252, 2708,
	2827, 2709, 3030, 2833, 2405, 1581, 1582, 1583, 54, 2965,
	2980, 53, 2805, 2806, 2038, 2986, 477, 2919, 938, 938,
	2779, 1677, 938, 938, 3010, 3011, 2940, 1304, 842, 2483,
	843, 2201, 3006, 2217, 2218, 1951, 3066, 3009, 3018, 2236,
	3017, 1351, 478, 2976, 479, 3060, 3065, 2873, 1592, 3027,
	3073, 3052, 3053, 1336, 1757, 3061, 3062, 2906, 3028, 3077,
	3078, 2412, 3032, 962, 480, 2899, 2649, 481, 2413, 2414,
	2415, 2483, 2646, 2639, 2381, 1995, 1968, 1590, 1557, 2983,
	2984, 994, 1491, 1490, 1117, 1118, 3288, 3025, 3026, 1115,
	1116, 1113, 1114, 2830, 3150, 1749, 1111, 1112, 3070, 3102,
	2737, 2078, 3069, 2074, 1688, 3071, 3051, 1016, 1026, 1027,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1018, 3084, 1213,
	1212, 2771, 3002, 2517, 1819, 3130, 1166, 1147, 3126, 1189,
	3097, 3364, 3367, 3261, 3101, 3242, 3240, 3200, 3111, 3177,
	3176, 3174, 3165, 3076, 3114, 3075, 2953, 2819, 2798, 2797,
	3112, 3113, 2782, 1514, 1515, 1516, 2025, 3125, 1520, 1521,
	1522, 1523, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	3132, 3067, 3133, 3131, 938, 1353, 2781, 2527, 1252, 3002,
	3002, 1594, 3141, 3002, 3002, 1017, 1016, 1026, 1027, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1018, 2568, 3149, 3321,
	3320, 1181, 1962, 1878, 953, 3320, 3159, 3158, 3321, 117,
	117, 830, 1250, 3046, 701, 702, 703, 704, 3189, 935,
	2777, 935, 178, 3, 1029, 62, 1033, 2, 3333, 3183,
	3334, 1051, 1, 3166, 2300, 938, 1544, 3173, 3171, 1119,
	705, 3201, 1030, 1032, 1028, 700, 1031, 1017, 1016, 1026,
	1027, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1018, 1229,
	2107, 1735, 3196, 1256, 938, 1548, 3195, 3192, 707, 2501,
	2502, 1252, 2770, 3211, 3229, 3232, 3203, 2504, 1837, 2472,
	2072, 1949, 1034, 2668, 3219, 3221, 3223, 3225, 1156, 747,
	3212, 1497, 1363, 853, 947, 1360, 946, 3218, 3233, 3228,
	944, 1447, 597, 1798, 2463, 1250, 3208, 3241, 3237, 3243,
	3244, 3239, 2437, 1252, 3072, 3287, 3327, 3160, 3234, 3290,
	1376, 581, 3168, 3087, 3271, 3238, 3089, 2960, 1842, 999,
	2549, 769, 634, 608, 3260, 3002, 1064, 1344, 1337, 2609,
	855, 3268, 607, 2844, 2333, 2520, 3294, 1250, 3134, 852,
	770, 1782, 757, 3085, 1305, 3280, 1309, 3281, 3293, 3282,
	1994, 3283, 3142, 3284, 3408, 3397, 3379, 3362, 3266, 3393,
	3307, 3347, 938, 2968, 2966, 3298, 3183, 2967, 3340, 3299,
	3202, 3262, 517, 1714, 460, 814, 3064, 1794, 518, 1977,
	3253, 3152, 3310, 3312, 728, 1959, 3002, 3326, 729, 3213,
	3318, 3316, 3315, 721, 174, 51, 163, 138, 2349, 3329,
	3322, 3323, 3324, 3325, 2348, 3338, 1416, 938, 1110, 1008,
	1433, 756, 164, 2625, 3339, 3002, 2626, 1043, 3343, 156,
	3345, 796, 556, 165, 1866, 2330, 2894, 2513, 61, 60,
	59, 58, 3294, 3359, 1764, 3355, 199, 599, 198, 2997,
	3231, 3292, 115, 579, 3293, 938, 578, 938, 3358, 577,
	576, 575, 3366, 2085, 3368, 2083, 2082, 103, 3371, 1698,
	1697, 1762, 2681, 168, 2403, 2397, 2021, 3329, 3375, 2026,
	938, 3365, 3377, 1630, 3382, 3272, 3215, 3386, 3216, 3389,
	3043, 2447, 3392, 1580, 2017, 1647, 2419, 1644, 1643, 2411,
	3039, 3033, 1674, 3301, 3302, 2828, 3013, 3396, 2878, 3403,
	2879, 2885, 1967, 3407, 798, 3406, 878, 797, 874, 876,
	877, 3415, 875, 2256, 1998, 2641, 1940, 3403, 3420, 3419,
	1939, 1937, 3407, 3305, 1017, 1016, 1026, 1027, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1018, 2607, 1261, 1936, 120,
	121, 483, 122, 123, 782, 1130, 3188, 3249, 2975, 3418,
	2130, 2128, 758, 2763, 3421, 2759, 1003, 1004, 1005, 1002,
	1806, 1815, 2564, 1699, 1695, 1961, 3108, 1585, 1399, 722,
	1957, 99, 117, 152, 48, 89, 88, 98, 150, 760,
	47, 183, 182, 185, 184, 181, 2180, 2181, 180, 1017,
	1016, 1026, 1027, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1018, 1293, 179, 3016, 695, 38, 1399, 37, 1399, 33,
	137, 162, 172, 12, 101, 1017, 1016, 1026, 1027, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1018, 11, 34, 21,
	22, 1399, 161, 155, 154, 1475, 117, 20, 1367, 57,
	117, 19, 781, 780, 25, 31, 30, 110, 109, 29,
	108, 107, 117, 106, 105, 104, 28, 18, 42, 41,
	779, 40, 117, 9, 97, 95, 27, 96, 93, 94,
	92, 755, 90, 73, 528, 527, 534, 524, 72, 71,
	86, 85, 759, 791, 84, 2244, 531, 532, 83, 533,
	537, 82, 81, 519, 79, 80, 768, 70, 69, 68,
	157, 158, 159, 542, 1864, 67, 787, 66, 896, 1017,
	1016, 1026, 1027, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1018, 91, 77, 87, 78, 76, 75, 166, 1017, 1016,
	1026, 1027, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1018,
	74, 65, 788, 792, 64, 63, 546, 111, 136, 548,
	135, 160, 134, 112, 547, 133, 132, 130, 131, 129,
	128, 776, 127, 774, 778, 795, 126, 125, 124, 775,
	772, 771, 43, 777, 762, 763, 761, 764, 765, 766,
	767, 44, 793, 45, 794, 46, 146, 145, 147, 149,
	151, 148, 153, 143, 1471, 789, 790, 141, 144, 142,
	1468, 140, 56, 100, 1470, 1467, 1469, 1473, 1474, 17,
	113, 24, 1472, 4, 0, 0, 0, 0, 0, 0,
	0, 0, 50, 0, 0, 0, 0, 0, 882, 0,
	0, 0, 785, 0, 0, 0, 0, 0, 784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 904, 908,
	910, 912, 914, 915, 917, 0, 922, 918, 919, 920,
	921, 0, 899, 900, 901, 902, 880, 881, 905, 0,
	883, 52, 884, 885, 886, 887, 888, 889, 890, 891,
	892, 895, 897, 893, 894, 903, 0, 0, 0, 0,
	520, 522, 521, 907, 909, 911, 913, 916, 0, 0,
	526, 0, 0, 0, 0, 0, 169, 170, 0, 171,
	0, 0, 530, 0, 139, 0, 0, 0, 0, 545,
	783, 0, 0, 0, 0, 0, 523, 0, 0, 0,
	514, 898, 0, 1702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1478, 1479, 1480, 1481, 1482,
	1483, 1476, 1477, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 39, 0, 0, 0, 0,
	0, 49, 0, 0, 0, 0, 0, 0, 0, 118,
	119, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 117, 117,
	0, 117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 529, 535, 0, 536, 538, 0, 0, 539,
	540, 541, 0, 0, 543, 544, 0, 0, 0, 830,
	0, 0, 0, 615, 0, 0, 830, 0, 0, 0,
	0, 0, 349, 0, 0, 2253, 2254, 117, 0, 0,
	0, 0, 0, 0, 0, 570, 0, 0, 0, 291,
	0, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 454, 0, 455, 0, 0,
	606, 0, 459, 380, 333, 0, 0, 0, 0, 666,
	674, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 563, 0, 0, 596, 643, 642, 583, 593, 0,
	0, 266, 197, 456, 0, 457, 584, 0, 592, 585,
	589, 588, 586, 587, 1034, 658, 0, 0, 0, 0,
	0, 0, 554, 567, 0, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	565, 0, 0, 0, 0, 616, 0, 566, 0, 0,
	611, 590, 594, 0, 0, 0, 0, 256, 385, 402,
	267, 376, 415, 272, 383, 262, 348, 372, 906, 0,
	258, 400, 382, 330, 310, 311, 257, 0, 367, 289,
	302, 286, 346, 591, 614, 618, 285, 680, 612, 410,
	260, 0, 409, 345, 396, 401, 331, 325, 259, 398,
	329, 324, 314, 293, 681, 315, 316, 306, 357, 323,
	358, 307, 335, 334, 336, 0, 0, 0, 0, 0,
	438, 439, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 412,
	0, 0, 664, 0, 0, 0, 384, 0, 0, 317,
	0, 0, 0, 613, 0, 370, 351, 677, 555, 0,
	368, 321, 397, 359, 403, 386, 411, 364, 360, 251,
	387, 288, 332, 263, 265, 283, 290, 292, 294, 295,
	341, 342, 354, 375, 388, 389, 390, 287, 273, 369,
	274, 304, 275, 252, 279, 278, 280, 377, 281, 254,
	355, 394, 0, 300, 365, 328, 255, 327, 356, 393,
	392, 264, 419, 425, 426, 0, 0, 431, 0, 0,
	0, 440, 445, 446, 447, 449, 450, 451, 452, 0,
	0, 0, 0, 433, 0, 0, 0, 1499, 1498, 1500,
	424, 318, 298, 248, 249, 469, 662, 347, 0, 0,
	0, 0, 676, 657, 659, 660, 663, 667, 668, 669,
	670, 671, 673, 675, 679, 468, 0, 0, 0, 2101,
	0, 465, 353, 0, 374, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 405, 417,
	434, 437, 0, 0, 0, 0, 253, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 678, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 617, 0, 0, 337,
	338, 339, 340, 665, 0, 271, 435, 363, 0, 0,
	0, 0, 1702, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 0, 0, 0, 0, 429, 430, 297, 303,
	448, 305, 270, 352, 299, 414, 312, 0, 441, 0,
	442, 0, 0, 0, 0, 344, 308, 309, 378, 313,
	322, 366, 413, 350, 371, 268, 404, 379, 326, 0,
	0, 687, 661, 686, 688, 689, 685, 690, 691, 672,
	574, 0, 621, 683, 682, 684, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 0,
	246, 276, 277, 282, 466, 463, 395, 467, 0, 250,
	0, 320, 0, 361, 296, 0, 0, 650, 627, 628,
	629, 572, 630, 624, 625, 626, 651, 619, 647, 648,
	598, 622, 631, 646, 632, 649, 652, 653, 692, 693,
	638, 694, 635, 654, 645, 644, 633, 620, 655, 656,
	605, 600, 636, 637, 623, 639, 640, 641, 573, 601,
	602, 603, 604, 0, 0, 0, 420, 421, 422, 444,
	406, 0, 464, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 0,
	0, 0, 117, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 570, 0, 0, 0,
	291, 1541, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 454, 0, 455, 0,
	0, 606, 0, 459, 380, 333, 0, 0, 0, 0,
	666, 674, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 563, 0, 0, 596, 643, 642, 583, 593,
	0, 0, 266, 197, 456, 0, 457, 584, 0, 592,
	585, 589, 588, 586, 587, 0, 658, 0, 0, 0,
	0, 0, 0, 554, 567, 0, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1702, 1702, 1702, 1702, 0, 0, 0, 0, 0,
	564, 565, 0, 1702, 0, 0, 616, 0, 566, 0,
	0, 1727, 590, 594, 0, 0, 0, 0, 256, 385,
	402, 267, 376, 415, 272, 383, 262, 348, 372, 0,
	0, 258, 400, 382, 330, 310, 311, 257, 0, 367,
	289, 302, 286, 346, 591, 614, 618, 285, 680, 612,
	410, 260, 0, 409, 345, 396, 401, 331, 325, 259,
	398, 329, 324, 314, 293, 681, 315, 316, 306, 357,
	323, 358, 307, 335, 334, 336, 0, 0, 0, 0,
	0, 438, 439, 0, 0, 0, 0, 0, 117, 0,
	0, 0, 0, 117, 0, 0, 609, 0, 0, 0,
	412, 0, 0, 664, 0, 0, 0, 384, 0, 0,
	317, 0, 0, 117, 613, 0, 370, 351, 677, 555,
	117, 368, 321, 397, 359, 403, 386, 411, 364, 360,
	251, 387, 288, 332, 263, 265, 283, 290, 292, 294,
	295, 341, 342, 354, 375, 388, 389, 390, 287, 273,
	369, 274, 304, 275, 252, 279, 278, 280, 377, 281,
	254, 355, 394, 0, 300, 365, 328, 255, 327, 356,
	393, 392, 264, 419, 425, 426, 0, 0, 431, 0,
	0, 0, 440, 445, 446, 447, 449, 450, 451, 452,
	0, 0, 0, 0, 433, 0, 0, 0, 0, 0,
	0, 424, 318, 298, 248, 249, 469, 662, 347, 0,
	0, 0, 0, 676, 657, 659, 660, 663, 667, 668,
	669, 670, 671, 673, 675, 679, 468, 0, 0, 0,
	0, 0, 465, 353, 0, 374, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 405,
	417, 434, 437, 0, 0, 0, 0, 253, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 678, 0, 0,
	0, 416, 1702, 0, 0, 0, 0, 617, 0, 0,
	337, 338, 339, 340, 665, 0, 271, 435, 363, 0,
	117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 429, 430, 297,
	303, 448, 305, 270, 352, 299, 414, 312, 0, 441,
	0, 442, 0, 0, 0, 0, 344, 308, 309, 378,
	313, 322, 366, 413, 350, 371, 268, 404, 379, 326,
	0, 0, 687, 661, 686, 688, 689, 685, 690, 691,
	672, 574, 0, 621, 683, 682, 684, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 246, 276, 277, 282, 466, 463, 395, 467, 0,
	250, 0, 320, 0, 361, 296, 0, 0, 650, 627,
	628, 629, 572, 630, 624, 625, 626, 651, 619, 647,
	648, 598, 622, 631, 646, 632, 649, 652, 653, 692,
	693, 638, 694, 635, 654, 645, 644, 633, 620, 655,
	656, 605, 600, 636, 637, 623, 639, 640, 641, 573,
	601, 602, 603, 604, 0, 0, 0, 420, 421, 422,
	444, 406, 0, 464, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 470,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 174, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 570, 0, 0, 0, 291, 0, 0, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 454, 0, 455, 0, 0, 1037, 0, 459, 380,
	333, 0, 0, 0, 0, 666, 674, 0, 117, 0,
	0, 0, 0, 0, 0, 117, 0, 563, 117, 0,
	596, 643, 642, 583, 593, 0, 0, 266, 197, 456,
	0, 457, 584, 0, 592, 585, 589, 588, 586, 587,
	0, 658, 0, 0, 0, 0, 0, 0, 554, 567,
	0, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 564, 565, 0, 0, 0,
	0, 616, 0, 566, 0, 0, 611, 590, 594, 0,
	0, 0, 0, 256, 385, 402, 267, 376, 415, 272,
	383, 262, 348, 372, 0, 0, 258, 400, 382, 330,
	310, 311, 257, 0, 367, 289, 302, 286, 346, 591,
	614, 618, 285, 680, 612, 410, 260, 0, 409, 345,
	396, 401, 331, 325, 259, 398, 329, 324, 314, 293,
	681, 315, 316, 306, 357, 323, 358, 307, 335, 334,
	336, 0, 0, 0, 0, 117, 438, 439, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 412, 0, 0, 664, 0,
	0, 0, 384, 0, 0, 317, 0, 0, 0, 613,
	0, 370, 351, 677, 555, 0, 368, 321, 397, 359,
	403, 386, 411, 364, 360, 251, 387, 288, 332, 263,
	265, 283, 290, 292, 294, 295, 341, 342, 354, 375,
	388, 389, 390, 287, 273, 369, 274, 304, 275, 252,
	279, 278, 280, 377, 281, 254, 355, 394, 0, 300,
	365, 328, 255, 327, 356, 393, 392, 264, 419, 425,
	426, 0, 0, 431, 0, 0, 0, 440, 445, 446,
	447, 449, 450, 451, 452, 0, 0, 0, 0, 433,
	0, 0, 0, 0, 0, 0, 424, 318, 298, 248,
	249, 469, 662, 347, 0, 0, 0, 0, 676, 657,
	659, 660, 663, 667, 668, 669, 670, 671, 673, 675,
	679, 468, 0, 0, 0, 0, 0, 465, 353, 0,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 405, 417, 434, 437, 0, 0,
	0, 0, 253, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 678, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 617, 0, 0, 337, 338, 339, 340, 665,
	0, 271, 435, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 429, 430, 297, 303, 448, 305, 270, 352,
	299, 414, 312, 0, 441, 0, 442, 0, 0, 0,
	0, 344, 308, 309, 378, 313, 322, 366, 413, 350,
	371, 268, 404, 379, 326, 0, 0, 687, 661, 686,
	688, 689, 685, 690, 691, 672, 574, 0, 621, 683,
	682, 684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 391, 0, 246, 276, 277, 282,
	466, 463, 395, 467, 0, 250, 0, 320, 139, 361,
	296, 0, 0, 650, 627, 628, 629, 572, 630, 624,
	625, 626, 651, 619, 647, 648, 598, 622, 631, 646,
	632, 649, 652, 653, 692, 693, 638, 694, 635, 654,
	645, 644, 633, 620, 655, 656, 605, 600, 636, 637,
	623, 639, 640, 641, 573, 601, 602, 603, 604, 0,
	615, 0, 420, 421, 422, 444, 406, 0, 464, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 570, 0, 470, 458, 291, 3376, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 454, 0, 455, 0, 0, 606, 0, 459,
	380, 333, 0, 0, 0, 0, 666, 674, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 563, 0,
	0, 596, 643, 642, 583, 593, 0, 0, 266, 197,
	456, 0, 457, 584, 0, 592, 585, 589, 588, 586,
	587, 0, 658, 0, 0, 0, 0, 0, 0, 554,
	567, 0, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 565, 0, 0,
	0, 0, 616, 0, 566, 0, 0, 611, 590, 594,
	0, 0, 0, 0, 256, 385, 402, 267, 376, 415,
	272, 383, 262, 348, 372, 0, 0, 258, 400, 382,
	330, 310, 311, 257, 0, 367, 289, 302, 286, 346,
	591, 614, 618, 285, 680, 612, 410, 260, 0, 409,
	345, 396, 401, 331, 325, 259, 398, 329, 324, 314,
	293, 681, 315, 316, 306, 357, 323, 358, 307, 335,
	334, 336, 0, 0, 0, 0, 0, 438, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 609, 0, 0, 0, 412, 0, 0, 664,
	0, 0, 0, 384, 0, 0, 317, 0, 0, 0,
	613, 0, 370, 351, 677, 555, 0, 368, 321, 397,
	359, 403, 386, 411, 364, 360, 251, 387, 288, 332,
	263, 265, 283, 290, 292, 294, 295, 341, 342, 354,
	375, 388, 389, 390, 287, 273, 369, 274, 304, 275,
	252, 279, 278, 280, 377, 281, 254, 355, 394, 0,
	300, 365, 328, 255, 327, 356, 393, 392, 264, 419,
	425, 426, 0, 0, 431, 0, 0, 0, 440, 445,
	446, 447, 449, 450, 451, 452, 0, 0, 0, 0,
	433, 0, 0, 0, 0, 0, 0, 424, 318, 298,
	248, 249, 469, 662, 347, 0, 0, 0, 0, 676,
	657, 659, 660, 663, 667, 668, 669, 670, 671, 673,
	675, 679, 468, 0, 0, 0, 0, 0, 465, 353,
	0, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 405, 417, 434, 437, 0,
	0, 0, 0, 253, 436, 0, 0, 0, 0, 0,
	0, 0, 0, 678, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 617, 0, 0, 337, 338, 339, 340,
	665, 0, 271, 435, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 429, 430, 297, 303, 448, 305, 270,
	352, 299, 414, 312, 0, 441, 0, 442, 0, 0,
	0, 0, 344, 308, 309, 378, 313, 322, 366, 413,
	350, 371, 268, 404, 379, 326, 0, 0, 687, 661,
	686, 688, 689, 685, 690, 691, 672, 574, 0, 621,
	683, 682, 684, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 0, 246, 276, 277,
	282, 466, 463, 395, 467, 0, 250, 0, 320, 0,
	361, 296, 0, 0, 650, 627, 628, 629, 572, 630,
	624, 625, 626, 651, 619, 647, 648, 598, 622, 631,
	646, 632, 649, 652, 653, 692, 693, 638, 694, 635,
	654, 645, 644, 633, 620, 655, 656, 605, 600, 636,
	637, 623, 639, 640, 641, 573, 601, 602, 603, 604,
	0, 615, 0, 420, 421, 422, 444, 406, 0, 464,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 570, 0, 470, 458, 291, 1541, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 454, 0, 455, 0, 0, 606, 0,
	459, 380, 333, 0, 0, 0, 0, 666, 674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 563,
	0, 0, 596, 643, 642, 583, 593, 0, 0, 266,
	197, 456, 0, 457, 584, 0, 592, 585, 589, 588,
	586, 587, 0, 658, 0, 0, 0, 0, 0, 0,
	554, 567, 0, 571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 564, 565, 0,
	0, 0, 0, 616, 0, 566, 0, 0, 611, 590,
	594, 0, 0, 0, 0, 256, 385, 402, 267, 376,
	415, 272, 383, 262, 348, 372, 0, 0, 258, 400,
	382, 330, 310, 311, 257, 0, 367, 289, 302, 286,
	346, 591, 614, 618, 285, 680, 612, 410, 260, 0,
	409, 345, 396, 401, 331, 325, 259, 398, 329, 324,
	314, 293, 681, 315, 316, 306, 357, 323, 358, 307,
	335, 334, 336, 0, 0, 0, 0, 0, 438, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 412, 0, 0,
	664, 0, 0, 0, 384, 0, 0, 317, 0, 0,
	0, 613, 0, 370, 351, 677, 555, 0, 368, 321,
	397, 359, 403, 386, 411, 364, 360, 251, 387, 288,
	332, 263, 265, 283, 290, 292, 294, 295, 341, 342,
	354, 375, 388, 389, 390, 287, 273, 369, 274, 304,
	275, 252, 279, 278, 280, 377, 281, 254, 355, 394,
	0, 300, 365, 328, 255, 327, 356, 393, 392, 264,
	419, 425, 426, 0, 0, 431, 0, 0, 0, 440,
	445, 446, 447, 449, 450, 451, 452, 0, 0, 0,
	0, 433, 0, 0, 0, 0, 0, 0, 424, 318,
	298, 248, 249, 469, 662, 347, 0, 0, 0, 0,
	676, 657, 659, 660, 663, 667, 668, 669, 670, 671,
	673, 675, 679, 468, 0, 0, 0, 0, 0, 465,
	353, 0, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 405, 417, 434, 437,
	0, 0, 0, 0, 253, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 678, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 617, 0, 0, 337, 338, 339,
	340, 665, 0, 271, 435, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 297, 303, 448, 305,
	270, 352, 299, 414, 312, 0, 441, 0, 442, 0,
	0, 0, 0, 344, 308, 309, 378, 313, 322, 366,
	413, 350, 371, 268, 404, 379, 326, 0, 0, 687,
	661, 686, 688, 689, 685, 690, 691, 672, 574, 0,
	621, 683, 682, 684, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 0, 246, 276,
	277, 282, 466, 463, 395, 467, 0, 250, 0, 320,
	0, 361, 296, 0, 0, 650, 627, 628, 629, 572,
	630, 624, 625, 626, 651, 619, 647, 648, 598, 622,
	631, 646, 632, 649, 652, 653, 692, 693, 638, 694,
	635, 654, 645, 644, 633, 620, 655, 656, 605, 600,
	636, 637, 623, 639, 640, 641, 573, 601, 602, 603,
	604, 0, 615, 0, 420, 421, 422, 444, 406, 0,
	464, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 570, 0, 470, 458, 291, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 454, 0, 455, 0, 0, 606,
	0, 459, 380, 333, 0, 0, 0, 0, 666, 674,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	563, 0, 0, 596, 643, 642, 583, 593, 0, 0,
	266, 197, 456, 0, 457, 584, 0, 592, 585, 589,
	588, 586, 587, 0, 658, 0, 0, 0, 0, 0,
	0, 554, 567, 0, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 564, 565,
	1288, 0, 0, 0, 616, 0, 566, 0, 0, 611,
	590, 594, 0, 0, 0, 0, 256, 385, 402, 267,
	376, 415, 272, 383, 262, 348, 372, 0, 0, 258,
	400, 382, 330, 310, 311, 257, 0, 367, 289, 302,
	286, 346, 591, 614, 618, 285, 680, 612, 410, 260,
	0, 409, 345, 396, 401, 331, 325, 259, 398, 329,
	324, 314, 293, 681, 315, 316, 306, 357, 323, 358,
	307, 335, 334, 336, 0, 0, 0, 0, 0, 438,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 609, 0, 0, 0, 412, 0,
	0, 664, 0, 0, 0, 384, 0, 0, 317, 0,
	0, 0, 613, 0, 370, 351, 677, 555, 0, 368,
	321, 397, 359, 403, 386, 411, 364, 360, 251, 387,
	288, 332, 263, 265, 283, 290, 292, 294, 295, 341,
	342, 354, 375, 388, 389, 390, 287, 273, 369, 274,
	304, 275, 252, 279, 278, 280, 377, 281, 254, 355,
	394, 0, 300, 365, 328, 255, 327, 356, 393, 392,
	264, 419, 425, 426, 0, 0, 431, 0, 0, 0,
	440, 445, 446, 447, 449, 450, 451, 452, 0, 0,
	0, 0, 433, 0, 0, 0, 0, 0, 0, 424,
	318, 298, 248, 249, 469, 662, 347, 0, 0, 0,
	0, 676, 657, 659, 660, 663, 667, 668, 669, 670,
	671, 673, 675, 679, 468, 0, 0, 0, 0, 0,
	465, 353, 0, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 405, 417, 434,
	437, 0, 0, 0, 0, 253, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 678, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 617, 0, 0, 337, 338,
	339, 340, 665, 0, 271, 435, 363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 430, 297, 303, 448,
	305, 270, 352, 299, 414, 312, 0, 441, 0, 442,
	0, 0, 0, 0, 344, 308, 309, 378, 313, 322,
	366, 413, 350, 371, 268, 404, 379, 326, 0, 0,
	687, 661, 686, 688, 689, 685, 690, 691, 672, 574,
	0, 621, 683, 682, 684, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 246,
	276, 277, 282, 466, 463, 395, 467, 0, 250, 0,
	320, 0, 361, 296, 0, 0, 650, 627, 628, 629,
	572, 630, 624, 625, 626, 651, 619, 647, 648, 598,
	622, 631, 646, 632, 649, 652, 653, 692, 693, 638,
	694, 635, 654, 645, 644, 633, 620, 655, 656, 605,
	600, 636, 637, 623, 639, 640, 641, 573, 601, 602,
	603, 604, 0, 0, 0, 420, 421, 422, 444, 406,
	615, 464, 0, 1886, 0, 0, 0, 0, 0, 349,
	0, 0, 0, 0, 0, 0, 0, 470, 458, 0,
	0, 0, 570, 0, 0, 0, 291, 0, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 454, 0, 455, 0, 0, 606, 0, 459,
	380, 333, 0, 0, 0, 0, 666, 674, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 563, 0,
	0, 596, 643, 642, 583, 593, 0, 0, 266, 197,
	456, 0, 457, 584, 0, 592, 585, 589, 588, 586,
	587, 0, 658, 0, 0, 0, 0, 0, 0, 554,
	567, 0, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 565, 0, 0,
	0, 0, 616, 0, 566, 0, 0, 611, 590, 594,
	0, 0, 0, 0, 256, 385, 402, 267, 376, 415,
	272, 383, 262, 348, 372, 0, 0, 258, 400, 382,
	330, 310, 311, 257, 0, 367, 289, 302, 286, 346,
	591, 614, 618, 285, 680, 612, 410, 260, 0, 409,
	345, 396, 401, 331, 325, 259, 398, 329, 324, 314,
	293, 681, 315, 316, 306, 357, 323, 358, 307, 335,
	334, 336, 0, 0, 0, 0, 0, 438, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 609, 0, 0, 0, 412, 0, 0, 664,
	0, 0, 0, 384, 0, 0, 317, 0, 0, 0,
	613, 0, 370, 351, 677, 555, 0, 368, 321, 397,
	359, 403, 386, 411, 364, 360, 251, 387, 288, 332,
	263, 265, 283, 290, 292, 294, 295, 341, 342, 354,
	375, 388, 389, 390, 287, 273, 369, 274, 304, 275,
	252, 279, 278, 280, 377, 281, 254, 355, 394, 0,
	300, 365, 328, 255, 327, 356, 393, 392, 264, 419,
	425, 426, 0, 0, 431, 0, 0, 0, 440, 445,
	446, 447, 449, 450, 451, 452, 0, 0, 0, 0,
	433, 0, 0, 0, 0, 0, 0, 424, 318, 298,
	248, 249, 469, 662, 347, 0, 0, 0, 0, 676,
	657, 659, 660, 663, 667, 668, 669, 670, 671, 673,
	675, 679, 468, 0, 0, 0, 0, 0, 465, 353,
	0, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 405, 417, 434, 437, 0,
	0, 0, 0, 253, 436, 0, 0, 0, 0, 0,
	0, 0, 0, 678, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 617, 0, 0, 337, 338, 339, 340,
	665, 0, 271, 435, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 429, 430, 297, 303, 448, 305, 270,
	352, 299, 414, 312, 0, 441, 0, 442, 0, 0,
	0, 0, 344, 308, 309, 378, 313, 322, 366, 413,
	350, 371, 268, 404, 379, 326, 0, 0, 687, 661,
	686, 688, 689, 685, 690, 691, 672, 574, 0, 621,
	683, 682, 684, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 0, 246, 276, 277,
	282, 466, 463, 395, 467, 0, 250, 0, 320, 0,
	361, 296, 0, 0, 650, 627, 628, 629, 572, 630,
	624, 625, 626, 651, 619, 647, 648, 598, 622, 631,
	646, 632, 649, 652, 653, 692, 693, 638, 694, 635,
	654, 645, 644, 633, 620, 655, 656, 605, 600, 636,
	637, 623, 639, 640, 641, 573, 601, 602, 603, 604,
	0, 615, 0, 420, 421, 422, 444, 406, 0, 464,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 570, 0, 470, 458, 291, 0, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 454, 0, 455, 0, 0, 606, 0,
	459, 380, 333, 0, 0, 0, 0, 666, 674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 563,
	0, 0, 596, 643, 642, 583, 593, 0, 0, 266,
	197, 456, 0, 457, 584, 0, 592, 585, 589, 588,
	586, 587, 0, 658, 0, 0, 0, 0, 0, 0,
	554, 567, 0, 571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 564, 565, 0,
	0, 0, 0, 616, 0, 566, 0, 0, 611, 590,
	594, 0, 0, 0, 0, 256, 385, 402, 267, 376,
	415, 272, 383, 262, 348, 372, 0, 0, 258, 400,
	382, 330, 310, 311, 257, 0, 367, 289, 302, 286,
	346, 591, 614, 618, 285, 680, 612, 410, 260, 0,
	409, 345, 396, 401, 331, 325, 259, 398, 329, 324,
	314, 293, 681, 315, 316, 306, 357, 323, 358, 307,
	335, 334, 336, 0, 0, 0, 0, 0, 438, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 412, 0, 0,
	664, 0, 0, 0, 384, 0, 0, 317, 0, 0,
	0, 613, 0, 370, 351, 677, 555, 0, 368, 321,
	397, 359, 403, 386, 411, 364, 360, 251, 387, 288,
	332, 263, 265, 283, 290, 292, 294, 295, 341, 342,
	354, 375, 388, 389, 390, 287, 273, 369, 274, 304,
	275, 252, 279, 278, 280, 377, 281, 254, 355, 394,
	0, 300, 365, 328, 255, 327, 356, 393, 392, 264,
	419, 425, 426, 0, 0, 431, 0, 0, 0, 440,
	445, 446, 447, 449, 450, 451, 452, 0, 0, 0,
	0, 433, 0, 0, 0, 0, 0, 0, 424, 318,
	298, 248, 249, 469, 662, 347, 0, 0, 0, 0,
	676, 657, 659, 660, 663, 667, 668, 669, 670, 671,
	673, 675, 679, 468, 0, 0, 0, 0, 0, 465,
	353, 0, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 405, 417, 434, 437,
	0, 0, 0, 0, 253, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 678, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 617, 0, 0, 337, 338, 339,
	340, 665, 0, 271, 435, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 297, 303, 448, 305,
	270, 352, 299, 414, 312, 0, 441, 0, 442, 0,
	0, 0, 0, 344, 308, 309, 378, 313, 322, 366,
	413, 350, 371, 268, 404, 379, 326, 0, 0, 687,
	661, 686, 688, 689, 685, 690, 691, 672, 574, 0,
	621, 683, 682, 684, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 0, 246, 276,
	277, 282, 466, 463, 395, 467, 0, 250, 0, 320,
	0, 361, 296, 0, 0, 650, 627, 628, 629, 572,
	630, 624, 625, 626, 651, 619, 647, 648, 598, 622,
	631, 646, 632, 649, 652, 653, 692, 693, 638, 694,
	635, 654, 645, 644, 633, 620, 655, 656, 605, 600,
	636, 637, 623, 639, 640, 641, 573, 601, 602, 603,
	604, 0, 615, 0, 420, 421, 422, 444, 406, 0,
	464, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	1417, 0, 0, 0, 570, 0, 470, 458, 291, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 454, 0, 455, 0, 0, 606,
	0, 459, 380, 333, 0, 0, 0, 0, 666, 674,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	563, 0, 0, 596, 643, 642, 583, 593, 0, 0,
	266, 197, 456, 0, 457, 584, 0, 592, 585, 589,
	588, 586, 587, 0, 658, 0, 0, 0, 0, 0,
	0, 0, 567, 0, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 564, 565,
	0, 0, 0, 0, 616, 0, 566, 0, 0, 611,
	590, 594, 0, 0, 0, 0, 256, 385, 402, 267,
	376, 415, 272, 383, 262, 348, 372, 0, 0, 258,
	400, 382, 330, 310, 311, 257, 0, 367, 289, 302,
	286, 346, 591, 614, 618, 285, 680, 612, 410, 260,
	0, 409, 345, 396, 401, 331, 325, 259, 398, 329,
	324, 314, 293, 681, 315, 316, 306, 357, 323, 358,
	307, 335, 334, 336, 0, 0, 0, 0, 0, 438,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 609, 0, 0, 0, 412, 0,
	0, 664, 0, 0, 0, 384, 0, 0, 317, 0,
	0, 0, 613, 0, 370, 351, 677, 0, 0, 368,
	321, 397, 359, 403, 386, 411, 364, 360, 251, 387,
	288, 332, 263, 265, 283, 290, 292, 294, 295, 341,
	342, 354, 375, 388, 389, 390, 287, 273, 369, 274,
	304, 275, 252, 279, 278, 280, 377, 281, 254, 355,
	394, 0, 300, 365, 328, 255, 327, 356, 393, 392,
	264, 419, 1418, 1419, 0, 0, 431, 0, 0, 0,
	440, 445, 446, 447, 449, 450, 451, 452, 0, 0,
	0, 0, 433, 0, 0, 0, 0, 0, 0, 424,
	318, 298, 248, 249, 469, 662, 347, 0, 0, 0,
	0, 676, 657, 659, 660, 663, 667, 668, 669, 670,
	671, 673, 675, 679, 468, 0, 0, 0, 0, 0,
	465, 353, 0, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 405, 417, 434,
	437, 0, 0, 0, 0, 253, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 678, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 617, 0, 0, 337, 338,
	339, 340, 665, 0, 271, 435, 363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 430, 297, 303, 448,
	305, 270, 352, 299, 414, 312, 0, 441, 0, 442,
	0, 0, 0, 0, 344, 308, 309, 378, 313, 322,
	366, 413, 350, 371, 268, 404, 379, 326, 0, 0,
	687, 661, 686, 688, 689, 685, 690, 691, 672, 574,
	0, 621, 683, 682, 684, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 246,
	276, 277, 282, 466, 463, 395, 467, 0, 250, 0,
	320, 0, 361, 296, 0, 0, 650, 627, 628, 629,
	572, 630, 624, 625, 626, 651, 619, 647, 648, 598,
	622, 631, 646, 632, 649, 652, 653, 692, 693, 638,
	694, 635, 654, 645, 644, 633, 620, 655, 656, 605,
	600, 636, 637, 623, 639, 640, 641, 573, 601, 602,
	603, 604, 0, 615, 0, 420, 421, 422, 444, 406,
	0, 464, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 570, 0, 470, 458, 291,
	0, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 454, 0, 455, 0, 0,
	606, 0, 459, 380, 333, 0, 0, 0, 0, 666,
	674, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 596, 643, 642, 583, 593, 0,
	0, 266, 197, 456, 0, 457, 584, 0, 592, 585,
	589, 588, 586, 587, 0, 658, 0, 0, 0, 0,
	0, 0, 554, 567, 0, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	565, 0, 0, 0, 0, 616, 0, 566, 0, 0,
	611, 590, 594, 0, 0, 0, 0, 256, 385, 402,
	267, 376, 415, 272, 383, 262, 348, 372, 0, 0,
	258, 400, 382, 330, 310, 311, 257, 0, 367, 289,
	302, 286, 346, 591, 614, 618, 285, 680, 612, 410,
	260, 0, 409, 345, 396, 401, 331, 325, 259, 398,
	329, 324, 314, 293, 681, 315, 316, 306, 357, 323,
	358, 307, 335, 334, 336, 0, 0, 0, 0, 0,
	438, 439, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 412,
	0, 0, 664, 0, 0, 0, 384, 0, 0, 317,
	0, 0, 0, 613, 0, 370, 351, 677, 555, 0,
	368, 321, 397, 359, 403, 386, 411, 364, 360, 251,
	387, 288, 332, 263, 265, 283, 290, 292, 294, 295,
	341, 342, 354, 375, 388, 389, 390, 287, 273, 369,
	274, 304, 275, 252, 279, 278, 280, 377, 281, 254,
	355, 394, 0, 300, 365, 328, 255, 327, 356, 393,
	392, 264, 419, 425, 426, 0, 0, 431, 0, 0,
	0, 440, 445, 446, 447, 449, 450, 451, 452, 0,
	0, 0, 0, 433, 0, 0, 0, 0, 0, 0,
	424, 318, 298, 248, 249, 469, 662, 347, 0, 0,
	0, 0, 676, 657, 659, 660, 663, 667, 668, 669,
	670, 671, 673, 675, 679, 468, 0, 0, 0, 0,
	0, 465, 353, 0, 374, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 405, 417,
	434, 437, 0, 0, 0, 0, 253, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 678, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 617, 0, 0, 337,
	338, 339, 340, 665, 0, 271, 435, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 429, 430, 297, 303,
	448, 305, 270, 352, 299, 414, 312, 0, 441, 0,
	442, 0, 0, 0, 0, 344, 308, 309, 378, 313,
	322, 366, 413, 350, 371, 268, 404, 379, 326, 0,
	0, 687, 661, 686, 688, 689, 685, 690, 691, 672,
	574, 0, 621, 683, 682, 684, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 0,
	246, 276, 277, 282, 466, 463, 395, 467, 0, 250,
	0, 320, 0, 361, 296, 0, 0, 650, 627, 628,
	629, 572, 630, 624, 625, 626, 651, 619, 647, 648,
	598, 622, 631, 646, 632, 649, 652, 653, 692, 693,
	638, 694, 635, 654, 645, 644, 633, 620, 655, 656,
	605, 600, 636, 637, 623, 639, 640, 641, 573, 601,
	602, 603, 604, 0, 615, 0, 420, 421, 422, 444,
	406, 0, 464, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 570, 0, 470, 458,
	291, 0, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 454, 0, 455, 0,
	0, 606, 0, 459, 380, 333, 0, 0, 0, 0,
	666, 674, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 563, 0, 0, 596, 643, 642, 583, 593,
	0, 0, 266, 197, 456, 0, 457, 584, 0, 592,
	585, 589, 588, 586, 587, 0, 658, 0, 0, 0,
	0, 0, 0, 0, 567, 0, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	564, 565, 0, 0, 0, 0, 616, 0, 566, 0,
	0, 611, 590, 594, 0, 0, 0, 0, 256, 385,
	402, 267, 376, 415, 272, 383, 262, 348, 372, 0,
	0, 258, 400, 382, 330, 310, 311, 257, 0, 367,
	289, 302, 286, 346, 591, 614, 618, 285, 680, 612,
	410, 260, 0, 409, 345, 396, 401, 331, 325, 259,
	398, 329, 324, 314, 293, 681, 315, 316, 306, 357,
	323, 358, 307, 335, 334, 336, 0, 0, 0, 0,
	0, 438, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 609, 0, 0, 0,
	412, 0, 0, 664, 0, 0, 0, 384, 0, 0,
	317, 0, 0, 0, 613, 0, 370, 351, 677, 0,
	0, 368, 321, 397, 359, 403, 386, 411, 364, 360,
	251, 387, 288, 332, 263, 265, 283, 290, 292, 294,
	295, 341, 342, 354, 375, 388, 389, 390, 287, 273,
	369, 274, 304, 275, 252, 279, 278, 280, 377, 281,
	254, 355, 394, 0, 300, 365, 328, 255, 327, 356,
	393, 392, 264, 419, 425, 426, 0, 0, 431, 0,
	0, 0, 440, 445, 446, 447, 449, 450, 451, 452,
	0, 0, 0, 0, 433, 0, 0, 0, 0, 0,
	0, 424, 318, 298, 248, 249, 469, 662, 347, 0,
	0, 0, 0, 676, 657, 659, 660, 663, 667, 668,
	669, 670, 671, 673, 675, 679, 468, 0, 0, 0,
	0, 0, 465, 353, 0, 374, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 405,
	417, 434, 437, 0, 0, 0, 0, 253, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 678, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 617, 0, 0,
	337, 338, 339, 340, 665, 0, 271, 435, 363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 429, 430, 297,
	303, 448, 305, 270, 352, 299, 414, 312, 0, 441,
	0, 442, 0, 0, 0, 0, 344, 308, 309, 378,
	313, 322, 366, 413, 350, 371, 268, 404, 379, 326,
	0, 0, 687, 661, 686, 688, 689, 685, 690, 691,
	672, 574, 0, 621, 683, 682, 684, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 246, 276, 277, 282, 466, 463, 395, 467, 0,
	250, 0, 320, 0, 361, 296, 0, 0, 650, 627,
	628, 629, 572, 630, 624, 625, 626, 651, 619, 647,
	648, 598, 622, 631, 646, 632, 649, 652, 653, 692,
	693, 638, 694, 635, 654, 645, 644, 633, 620, 655,
	656, 605, 600, 636, 637, 623, 639, 640, 641, 573,
	601, 602, 603, 604, 0, 0, 0, 420, 421, 422,
	444, 406, 0, 464, 174, 51, 163, 138, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 0, 0, 470,
	458, 0, 164, 0, 0, 0, 0, 0, 0, 156,
	0, 291, 0, 165, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 454, 0, 455,
	0, 0, 115, 0, 459, 380, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 103, 0, 0,
	0, 0, 0, 168, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 456, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	385, 402, 267, 376, 415, 272, 383, 262, 348, 372,
	0, 0, 258, 400, 382, 330, 310, 311, 257, 0,
	367, 289, 302, 286, 346, 0, 399, 427, 285, 418,
	0, 410, 260, 0, 409, 345, 396, 401, 331, 325,
	259, 398, 329, 324, 314, 293, 443, 315, 316, 306,
	357, 323, 358, 307, 335, 334, 336, 0, 0, 0,
	0, 0, 438, 439, 0, 0, 0, 0, 0, 0,
	137, 162, 172, 0, 101, 0, 0, 0, 0, 0,
	0, 412, 0, 0, 189, 0, 0, 0, 384, 0,
	0, 317, 161, 155, 154, 428, 0, 370, 351, 57,
	0, 0, 368, 321, 397, 359, 403, 386, 411, 364,
	360, 251, 387, 288, 332, 263, 265, 283, 290, 292,
	294, 295, 341, 342, 354, 375, 388, 389, 390, 287,
	273, 369, 274, 304, 275, 252, 279, 278, 280, 377,
	281, 254, 355, 394, 0, 300, 365, 328, 255, 327,
	356, 393, 392, 264, 419, 425, 426, 0, 0, 431,
	157, 158, 159, 440, 445, 446, 447, 449, 450, 451,
	452, 0, 0, 0, 0, 433, 0, 0, 0, 0,
	0, 0, 424, 318, 298, 248, 249, 407, 284, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 423, 192, 0, 0, 453, 200, 0, 0,
	0, 160, 0, 201, 353, 0, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	405, 417, 434, 437, 0, 0, 0, 0, 253, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 432, 0,
	0, 337, 338, 339, 340, 301, 0, 271, 435, 363,
	113, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 50, 0, 0, 0, 0, 0, 429, 430,
	297, 303, 448, 305, 270, 352, 299, 414, 312, 0,
	441, 0, 442, 0, 0, 0, 0, 344, 308, 309,
	378, 313, 322, 366, 413, 350, 371, 268, 404, 379,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 52, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 246, 276, 277, 282, 362, 261, 395, 373,
	0, 250, 0, 320, 139, 361, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 0, 0,
	247, 242, 243, 244, 245, 0, 349, 0, 420, 421,
	422, 444, 406, 0, 202, 39, 190, 193, 195, 194,
	0, 49, 0, 291, 0, 5, 319, 0, 0, 118,
	203, 458, 0, 0, 0, 0, 0, 0, 0, 454,
	0, 455, 0, 0, 0, 0, 459, 380, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1070, 0, 0, 196, 0,
	0, 583, 593, 0, 0, 266, 197, 456, 0, 457,
	584, 0, 592, 585, 589, 588, 586, 587, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 590, 0, 0, 0, 0,
	0, 256, 385, 402, 267, 376, 415, 272, 383, 262,
	348, 372, 0, 0, 258, 400, 382, 330, 310, 311,
	257, 0, 367, 289, 302, 286, 346, 591, 399, 427,
	285, 418, 0, 410, 260, 0, 409, 345, 396, 401,
	331, 325, 259, 398, 329, 324, 314, 293, 443, 315,
	316, 306, 357, 323, 358, 307, 335, 334, 336, 0,
	0, 0, 0, 0, 438, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 412, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 317, 0, 0, 0, 428, 0, 370,
	351, 0, 0, 0, 368, 321, 397, 359, 403, 386,
	411, 364, 360, 251, 387, 288, 332, 263, 265, 283,
	290, 292, 294, 295, 341, 342, 354, 375, 388, 389,
	390, 287, 273, 369, 274, 304, 275, 252, 279, 278,
	280, 377, 281, 254, 355, 394, 0, 300, 365, 328,
	255, 327, 356, 393, 392, 264, 419, 425, 426, 0,
	0, 431, 0, 0, 0, 440, 445, 446, 447, 449,
	450, 451, 452, 0, 0, 0, 0, 433, 0, 0,
	0, 0, 0, 0, 424, 318, 298, 248, 249, 469,
	284, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 423, 0, 0, 0, 453, 468,
	0, 0, 0, 0, 0, 465, 353, 0, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 405, 417, 434, 437, 0, 0, 0, 0,
	253, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	432, 0, 0, 337, 338, 339, 340, 301, 0, 271,
	435, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 297, 303, 448, 305, 270, 352, 299, 414,
	312, 0, 441, 0, 442, 0, 0, 0, 0, 344,
	308, 309, 378, 313, 322, 366, 413, 350, 371, 268,
	404, 379, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 0, 246, 276, 277, 282, 466, 463,
	395, 467, 0, 250, 0, 320, 0, 361, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	0, 0, 247, 242, 243, 244, 245, 0, 0, 0,
	420, 421, 422, 444, 406, 0, 464, 174, 51, 163,
	138, 0, 0, 0, 0, 0, 0, 349, 487, 0,
	0, 0, 470, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	454, 0, 455, 0, 0, 0, 0, 459, 380, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 266, 197, 456, 0,
	457, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 385, 402, 267, 376, 415, 272, 383,
	262, 348, 372, 0, 0, 258, 400, 382, 330, 310,
	311, 257, 0, 367, 289, 302, 286, 346, 0, 399,
	427, 285, 418, 0, 410, 260, 0, 409, 345, 396,
	401, 331, 325, 259, 398, 329, 324, 314, 293, 443,
	315, 316, 306, 357, 323, 358, 307, 335, 334, 336,
	0, 0, 0, 0, 0, 438, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 317, 0, 0, 0, 428, 0,
	370, 351, 0, 0, 0, 368, 321, 397, 359, 403,
	386, 411, 364, 360, 251, 387, 288, 332, 263, 265,
	283, 290, 292, 294, 295, 341, 342, 354, 375, 388,
	389, 390, 287, 273, 369, 274, 304, 275, 252, 279,
	278, 280, 377, 281, 254, 355, 394, 0, 300, 365,
	328, 255, 327, 356, 393, 392, 264, 419, 425, 426,
	0, 0, 431, 0, 0, 0, 440, 445, 446, 447,
	449, 450, 451, 452, 0, 0, 0, 0, 433, 0,
	0, 0, 0, 0, 0, 424, 318, 298, 248, 249,
	469, 284, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 343, 423, 0, 0, 0, 453,
	468, 0, 0, 0, 0, 0, 465, 353, 0, 374,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 405, 417, 434, 437, 0, 0, 0,
	0, 253, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 432, 0, 0, 337, 338, 339, 340, 488, 490,
	271, 435, 363, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 429, 430, 297, 303, 448, 305, 270, 352, 299,
	414, 312, 0, 441, 0, 442, 0, 0, 0, 0,
	344, 308, 309, 378, 313, 322, 366, 413, 350, 371,
	268, 404, 379, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 0, 246, 276, 277, 282, 466,
	463, 395, 467, 0, 250, 0, 320, 139, 361, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 0, 349, 247, 242, 243, 244, 245, 0, 0,
	896, 420, 421, 422, 444, 406, 0, 464, 0, 291,
	0, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 470, 458, 454, 0, 455, 0, 0,
	0, 0, 459, 380, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 266, 197, 456, 0, 457, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	882, 0, 0, 0, 0, 0, 0, 256, 385, 402,
	267, 376, 415, 272, 383, 262, 348, 372, 0, 0,
	2154, 2156, 2157, 2158, 2159, 2160, 2161, 0, 2166, 2162,
	2163, 2164, 2165, 0, 2149, 2150, 2151, 2152, 880, 2133,
	2155, 0, 2134, 345, 2135, 2136, 2137, 2138, 2139, 2140,
	2141, 2142, 2143, 2146, 2147, 2144, 2145, 2153, 357, 323,
	358, 307, 335, 334, 336, 907, 909, 911, 913, 916,
	438, 439, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 412,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 317,
	0, 0, 0, 2148, 0, 370, 351, 0, 0, 0,
	368, 321, 397, 359, 403, 386, 411, 364, 360, 251,
	387, 288, 332, 263, 265, 283, 290, 292, 294, 295,
	341, 342, 354, 375, 388, 389, 390, 287, 273, 369,
	274, 304, 275, 252, 279, 278, 280, 377, 281, 254,
	355, 394, 0, 300, 365, 328, 255, 327, 356, 393,
	392, 264, 419, 425, 426, 0, 0, 431, 0, 0,
	0, 440, 445, 446, 447, 449, 450, 451, 452, 0,
	0, 0, 0, 433, 0, 0, 0, 0, 0, 0,
	424, 318, 298, 248, 249, 469, 284, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 343,
	423, 0, 0, 0, 453, 468, 0, 0, 0, 0,
	0, 465, 353, 0, 374, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 405, 417,
	434, 437, 0, 0, 0, 0, 253, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 432, 0, 0, 337,
	338, 339, 340, 301, 0, 271, 435, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 429, 430, 297, 303,
	448, 305, 270, 352, 299, 414, 312, 0, 441, 0,
	442, 0, 0, 0, 0, 344, 308, 309, 378, 313,
	322, 366, 413, 350, 371, 268, 404, 379, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 0,
	246, 276, 277, 282, 466, 463, 395, 467, 0, 250,
	906, 320, 0, 361, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 0, 349, 247, 242,
	243, 244, 245, 0, 0, 0, 420, 421, 422, 444,
	406, 0, 464, 0, 291, 0, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 458,
	454, 0, 455, 0, 0, 0, 0, 459, 380, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 266, 197, 456, 0,
	457, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 2009, 2012, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 385, 402, 267, 376, 415, 272, 383,
	262, 348, 372, 0, 0, 258, 400, 382, 330, 310,
	311, 257, 0, 367, 289, 302, 286, 346, 0, 399,
	427, 285, 418, 0, 410, 260, 0, 409, 345, 396,
	401, 331, 325, 259, 398, 329, 324, 314, 293, 443,
	315, 316, 306, 357, 323, 358, 307, 335, 334, 336,
	0, 0, 0, 0, 0, 438, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2013, 412, 0, 0, 0, 2008, 0,
	2007, 384, 2005, 2010, 317, 0, 0, 0, 428, 0,
	370, 351, 0, 0, 0, 368, 321, 397, 359, 403,
	386, 411, 364, 360, 251, 387, 288, 332, 263, 265,
	283, 290, 292, 294, 295, 341, 342, 354, 375, 388,
	389, 390, 287, 273, 369, 274, 304, 275, 252, 279,
	278, 280, 377, 281, 254, 355, 394, 2011, 300, 365,
	328, 255, 327, 356, 393, 392, 264, 419, 425, 426,
	0, 0, 431, 0, 0, 0, 440, 445, 446, 447,
	449, 450, 451, 452, 0, 0, 0, 0, 433, 0,
	0, 0, 0, 0, 0, 424, 318, 298, 248, 249,
	469, 284, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 343, 423, 0, 0, 0, 453,
	468, 0, 0, 0, 0, 0, 465, 353, 0, 374,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 405, 417, 434, 437, 0, 0, 0,
	0, 253, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 432, 0, 0, 337, 338, 339, 340, 301, 0,
	271, 435, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 429, 430, 297, 303, 448, 305, 270, 352, 299,
	414, 312, 0, 441, 0, 442, 0, 0, 0, 0,
	344, 308, 309, 378, 313, 322, 366, 413, 350, 371,
	268, 404, 379, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 0, 246, 276, 277, 282, 466,
	463, 395, 467, 0, 250, 0, 320, 0, 361, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 0, 0, 247, 242, 243, 244, 245, 349, 0,
	0, 420, 421, 422, 444, 406, 0, 464, 0, 0,
	1766, 0, 0, 0, 0, 291, 0, 0, 319, 0,
	0, 0, 0, 470, 458, 0, 0, 0, 0, 0,
	0, 454, 0, 455, 0, 0, 0, 0, 459, 380,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 1767, 0, 0, 0, 266, 197, 456,
	0, 457, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 1003, 1004, 1005, 1002, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 385, 402, 267, 376, 415, 272,
	383, 262, 348, 372, 0, 0, 258, 400, 382, 330,
	310, 311, 257, 0, 367, 289, 302, 286, 346, 0,
	399, 427, 285, 418, 0, 410, 260, 0, 409, 345,
	396, 401, 331, 325, 259, 398, 329, 324, 314, 293,
	443, 315, 316, 306, 357, 323, 358, 307, 335, 334,
	336, 0, 0, 0, 0, 0, 438, 439, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 317, 0, 0, 0, 428,
	0, 370, 351, 0, 0, 0, 368, 321, 397, 359,
	403, 386, 411, 364, 360, 251, 387, 288, 332, 263,
	265, 283, 290, 292, 294, 295, 341, 342, 354, 375,
	388, 389, 390, 287, 273, 369, 274, 304, 275, 252,
	279, 278, 280, 377, 281, 254, 355, 394, 0, 300,
	365, 328, 255, 327, 356, 393, 392, 264, 419, 425,
	426, 0, 0, 431, 0, 0, 0, 440, 445, 446,
	447, 449, 450, 451, 452, 0, 0, 0, 0, 433,
	0, 0, 0, 0, 0, 0, 424, 318, 298, 248,
	249, 469, 284, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 423, 0, 0, 0,
	453, 468, 0, 0, 0, 0, 0, 465, 353, 0,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 405, 417, 434, 437, 0, 0,
	0, 0, 253, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 432, 0, 0, 337, 338, 339, 340, 301,
	0, 271, 435, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 429, 430, 297, 303, 448, 305, 270, 352,
	299, 414, 312, 0, 441, 0, 442, 0, 0, 0,
	0, 344, 308, 309, 378, 313, 322, 366, 413, 350,
	371, 268, 404, 379, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 391, 0, 246, 276, 277, 282,
	466, 463, 395, 467, 0, 250, 0, 320, 0, 361,
	296, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 0, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 0, 0, 349, 247, 242, 243, 244, 245, 0,
	0, 0, 420, 421, 422, 444, 406, 0, 464, 0,
	291, 813, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 458, 454, 0, 455, 0,
	0, 0, 0, 459, 380, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 820, 821, 0, 0,
	0, 0, 266, 197, 456, 0, 457, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 824, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 385,
	808, 267, 376, 415, 272, 383, 262, 348, 372, 0,
	0, 258, 400, 382, 330, 310, 311, 257, 0, 367,
	289, 302, 286, 346, 0, 399, 427, 285, 418, 798,
	410, 260, 797, 409, 345, 396, 401, 331, 325, 259,
	398, 329, 324, 314, 293, 443, 315, 316, 306, 357,
	323, 358, 307, 335, 334, 336, 0, 0, 0, 0,
	0, 438, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	317, 0, 0, 0, 428, 0, 370, 351, 0, 0,
	0, 368, 321, 397, 359, 403, 386, 411, 811, 360,
	251, 387, 288, 332, 263, 265, 283, 290, 292, 294,
	295, 341, 342, 354, 375, 388, 389, 390, 287, 273,
	369, 274, 304, 275, 252, 279, 278, 280, 377, 281,
	254, 355, 394, 0, 300, 365, 328, 255, 327, 356,
	393, 392, 264, 419, 425, 426, 0, 0, 431, 0,
	0, 0, 440, 445, 446, 447, 449, 450, 451, 452,
	0, 0, 0, 0, 433, 0, 0, 0, 0, 0,
	0, 424, 318, 298, 248, 249, 469, 284, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	343, 423, 0, 0, 0, 453, 468, 0, 0, 0,
	0, 0, 465, 353, 0, 374, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 405,
	417, 434, 437, 0, 0, 0, 0, 253, 436, 0,
	0, 0, 0, 0, 0, 812, 0, 408, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 815, 0, 0,
	337, 338, 339, 340, 301, 0, 271, 435, 363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 429, 430, 297,
	303, 448, 305, 270, 352, 299, 414, 312, 0, 441,
	0, 442, 0, 0, 0, 0, 822, 809, 818, 810,
	313, 322, 366, 413, 350, 371, 268, 404, 379, 819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 246, 276, 277, 282, 466, 463, 395, 467, 0,
	250, 0, 320, 0, 361, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 0, 349, 247,
	242, 243, 244, 245, 0, 0, 0, 420, 421, 422,
	444, 406, 0, 464, 0, 291, 0, 0, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 470,
	458, 454, 0, 455, 0, 0, 0, 0, 459, 380,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 266, 197, 456,
	0, 457, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 2028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 385, 402, 267, 376, 415, 272,
	383, 262, 348, 372, 0, 0, 258, 400, 382, 330,
	310, 311, 257, 0, 367, 289, 302, 286, 346, 0,
	399, 427, 285, 418, 0, 410, 260, 0, 409, 345,
	396, 401, 331, 325, 259, 398, 329, 324, 314, 293,
	443, 315, 316, 306, 357, 323, 358, 307, 335, 334,
	336, 0, 0, 0, 0, 0, 438, 439, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2027, 412, 0, 0, 0, 2032,
	2030, 0, 384, 0, 2031, 317, 0, 0, 0, 428,
	0, 370, 351, 0, 0, 0, 368, 321, 397, 359,
	403, 386, 411, 364, 360, 251, 387, 288, 332, 263,
	265, 283, 290, 292, 294, 295, 341, 342, 354, 375,
	388, 389, 390, 287, 273, 369, 274, 304, 275, 252,
	279, 278, 280, 377, 281, 254, 355, 394, 0, 300,
	365, 328, 255, 327, 356, 393, 392, 264, 419, 425,
	426, 0, 0, 431, 0, 0, 0, 440, 445, 446,
	447, 449, 450, 451, 452, 0, 0, 0, 0, 433,
	0, 0, 0, 0, 0, 0, 424, 318, 298, 248,
	249, 469, 284, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 423, 0, 0, 0,
	453, 468, 0, 0, 0, 0, 0, 465, 353, 0,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 405, 417, 434, 437, 0, 0,
	0, 0, 253, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 432, 0, 0, 337, 338, 339, 340, 301,
	0, 271, 435, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 429, 430, 297, 303, 448, 305, 270, 352,
	299, 414, 312, 0, 441, 0, 442, 0, 0, 0,
	0, 344, 308, 309, 378, 313, 322, 366, 413, 350,
	371, 268, 404, 379, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 391, 0, 246, 276, 277, 282,
	466, 463, 395, 467, 0, 250, 0, 320, 0, 361,
	296, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 0, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 174, 0, 0, 247, 242, 243, 244, 245, 0,
	0, 349, 420, 421, 422, 444, 406, 0, 464, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 319, 0, 0, 470, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 454, 0, 455, 0, 0, 115,
	0, 459, 380, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 1810, 0, 196, 0, 0, 0, 0, 0, 0,
	266, 197, 456, 0, 457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 385, 402, 267,
	376, 415, 272, 383, 262, 348, 372, 0, 0, 258,
	400, 382, 330, 310, 311, 257, 0, 367, 289, 302,
	286, 346, 0, 399, 427, 285, 418, 0, 410, 260,
	0, 409, 345, 396, 401, 331, 325, 259, 398, 329,
	324, 314, 293, 443, 315, 316, 306, 357, 323, 358,
	307, 335, 334, 336, 0, 0, 0, 0, 0, 438,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 317, 0,
	0, 0, 428, 0, 370, 351, 0, 0, 0, 368,
	321, 397, 359, 403, 386, 411, 364, 360, 251, 387,
	288, 332, 263, 265, 283, 290, 292, 294, 295, 341,
	342, 354, 375, 388, 389, 390, 287, 273, 369, 274,
	304, 275, 252, 279, 278, 280, 377, 281, 254, 355,
	394, 0, 300, 365, 328, 255, 327, 356, 393, 392,
	264, 419, 425, 426, 0, 0, 431, 0, 0, 0,
	440, 445, 446, 447, 449, 450, 451, 452, 0, 0,
	0, 0, 433, 0, 0, 0, 0, 0, 0, 424,
	318, 298, 248, 249, 469, 284, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 423,
	0, 0, 0, 453, 468, 0, 0, 0, 0, 0,
	465, 353, 0, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 405, 417, 434,
	437, 0, 0, 0, 0, 253, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 432, 0, 0, 337, 338,
	339, 340, 301, 0, 271, 435, 363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 430, 297, 303, 448,
	305, 270, 352, 299, 414, 312, 0, 441, 0, 442,
	0, 0, 0, 0, 344, 308, 309, 378, 313, 322,
	366, 413, 350, 371, 268, 404, 379, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 246,
	276, 277, 282, 466, 463, 395, 467, 0, 250, 0,
	320, 139, 361, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 174, 0, 0, 247, 242, 243,
	244, 245, 0, 0, 349, 420, 421, 422, 444, 406,
	0, 464, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 319, 0, 0, 470, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 454, 0, 455,
	0, 0, 115, 0, 459, 380, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 1801, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 456, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	385, 402, 267, 376, 415, 272, 383, 262, 348, 372,
	0, 0, 258, 400, 382, 330, 310, 311, 257, 0,
	367, 289, 302, 286, 346, 0, 399, 427, 285, 418,
	0, 410, 260, 0, 409, 345, 396, 401, 331, 325,
	259, 398, 329, 324, 314, 293, 443, 315, 316, 306,
	357, 323, 358, 307, 335, 334, 336, 0, 0, 0,
	0, 0, 438, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 317, 0, 0, 0, 428, 0, 370, 351, 0,
	0, 0, 368, 321, 397, 359, 403, 386, 411, 364,
	360, 251, 387, 288, 332, 263, 265, 283, 290, 292,
	294, 295, 341, 342, 354, 375, 388, 389, 390, 287,
	273, 369, 274, 304, 275, 252, 279, 278, 280, 377,
	281, 254, 355, 394, 0, 300, 365, 328, 255, 327,
	356, 393, 392, 264, 419, 425, 426, 0, 0, 431,
	0, 0, 0, 440, 445, 446, 447, 449, 450, 451,
	452, 0, 0, 0, 0, 433, 0, 0, 0, 0,
	0, 0, 424, 318, 298, 248, 249, 469, 284, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 423, 0, 0, 0, 453, 468, 0, 0,
	0, 0, 0, 465, 353, 0, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	405, 417, 434, 437, 0, 0, 0, 0, 253, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 432, 0,
	0, 337, 338, 339, 340, 301, 0, 271, 435, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	297, 303, 448, 305, 270, 352, 299, 414, 312, 0,
	441, 0, 442, 0, 0, 0, 0, 344, 308, 309,
	378, 313, 322, 366, 413, 350, 371, 268, 404, 379,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 246, 276, 277, 282, 466, 463, 395, 467,
	0, 250, 0, 320, 139, 361, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 174, 0, 0,
	247, 242, 243, 244, 245, 0, 0, 349, 420, 421,
	422, 444, 406, 0, 464, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 319, 0, 0,
	470, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	454, 0, 455, 0, 0, 115, 0, 459, 380, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1700, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 266, 197, 456, 0,
	457, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 385, 402, 267, 376, 415, 272, 383,
	262, 348, 372, 0, 0, 258, 400, 382, 330, 310,
	311, 257, 0, 367, 289, 302, 286, 346, 0, 399,
	427, 285, 418, 0, 410, 260, 0, 409, 345, 396,
	401, 331, 325, 259, 398, 329, 324, 314, 293, 443,
	315, 316, 306, 357, 323, 358, 307, 335, 334, 336,
	0, 0, 0, 0, 0, 438, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 317, 0, 0, 0, 428, 0,
	370, 351, 0, 0, 0, 368, 321, 397, 359, 403,
	386, 411, 364, 360, 251, 387, 288, 332, 263, 265,
	283, 290, 292, 294, 295, 341, 342, 354, 375, 388,
	389, 390, 287, 273, 369, 274, 304, 275, 252, 279,
	278, 280, 377, 281, 254, 355, 394, 0, 300, 365,
	328, 255, 327, 356, 393, 392, 264, 419, 425, 426,
	0, 0, 431, 0, 0, 0, 440, 445, 446, 447,
	449, 450, 451, 452, 0, 0, 0, 0, 433, 0,
	0, 0, 0, 0, 0, 424, 318, 298, 248, 249,
	469, 284, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 343, 423, 0, 0, 0, 453,
	468, 0, 0, 0, 0, 0, 465, 353, 0, 374,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 405, 417, 434, 437, 0, 0, 0,
	0, 253, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 432, 0, 0, 337, 338, 339, 340, 301, 0,
	271, 435, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 429, 430, 297, 303, 448, 305, 270, 352, 299,
	414, 312, 0, 441, 0, 442, 0, 0, 0, 0,
	344, 308, 309, 378, 313, 322, 366, 413, 350, 371,
	268, 404, 379, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 0, 246, 276, 277, 282, 466,
	463, 395, 467, 0, 250, 0, 320, 139, 361, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 0, 349, 247, 242, 243, 244, 245, 0, 0,
	0, 420, 421, 422, 444, 406, 0, 464, 0, 291,
	0, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 470, 458, 454, 0, 455, 0, 0,
	0, 0, 459, 380, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 820, 821, 0, 0, 0,
	0, 266, 197, 456, 0, 457, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 824, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 385, 402,
	267, 376, 415, 272, 383, 262, 348, 372, 0, 0,
	258, 400, 382, 330, 310, 311, 257, 0, 367, 289,
	302, 286, 346, 0, 399, 427, 285, 418, 798, 410,
	260, 797, 409, 345, 396, 401, 331, 325, 259, 398,
	329, 324, 314, 293, 443, 315, 316, 306, 357, 323,
	358, 307, 335, 334, 336, 0, 0, 0, 0, 0,
	438, 439, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 412,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 317,
	0, 0, 0, 428, 0, 370, 351, 0, 0, 0,
	368, 321, 397, 359, 403, 386, 411, 364, 360, 251,
	387, 288, 332, 263, 265, 283, 290, 292, 294, 295,
	341, 342, 354, 375, 388, 389, 390, 287, 273, 369,
	274, 304, 275, 252, 279, 278, 280, 377, 281, 254,
	355, 394, 0, 300, 365, 328, 255, 327, 356, 393,
	392, 264, 419, 425, 426, 0, 0, 431, 0, 0,
	0, 440, 445, 446, 447, 449, 450, 451, 452, 0,
	0, 0, 0, 433, 0, 0, 0, 0, 0, 0,
	424, 318, 298, 248, 249, 469, 284, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 343,
	423, 0, 0, 0, 453, 468, 0, 0, 0, 0,
	0, 465, 353, 0, 374, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 405, 417,
	434, 437, 0, 0, 0, 0, 253, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 432, 0, 0, 337,
	338, 339, 340, 301, 0, 271, 435, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 429, 430, 297, 303,
	448, 305, 270, 352, 299, 414, 312, 0, 441, 0,
	442, 0, 0, 0, 0, 822, 1719, 818, 1720, 313,
	322, 366, 413, 350, 371, 268, 404, 379, 819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 0,
	246, 276, 277, 282, 466, 463, 395, 467, 0, 250,
	0, 320, 0, 361, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 0, 0, 247, 242,
	243, 244, 245, 0, 349, 0, 420, 421, 422, 444,
	406, 0, 464, 2476, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 319, 0, 0, 0, 470, 458,
	0, 0, 0, 0, 0, 0, 0, 454, 0, 455,
	0, 0, 0, 0, 459, 380, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 456, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	385, 402, 267, 376, 415, 272, 383, 262, 348, 372,
	0, 0, 258, 400, 382, 330, 310, 311, 257, 0,
	367, 289, 302, 286, 346, 0, 399, 427, 285, 418,
	0, 410, 260, 0, 409, 345, 396, 401, 331, 325,
	259, 398, 329, 324, 314, 293, 443, 315, 316, 306,
	357, 323, 358, 307, 335, 334, 336, 0, 0, 0,
	0, 0, 438, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 2479, 0, 0, 2478, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 317, 0, 0, 0, 428, 0, 370, 351, 0,
	0, 0, 368, 321, 397, 359, 403, 386, 411, 364,
	360, 251, 387, 288, 332, 263, 265, 283, 290, 292,
	294, 295, 341, 342, 354, 375, 388, 389, 390, 287,
	273, 369, 274, 304, 275, 252, 279, 278, 280, 377,
	281, 254, 355, 394, 0, 300, 365, 328, 255, 327,
	356, 393, 392, 264, 419, 425, 426, 0, 0, 431,
	0, 0, 0, 440, 445, 446, 447, 449, 450, 451,
	452, 0, 0, 0, 0, 433, 0, 0, 0, 0,
	0, 0, 424, 318, 298, 248, 249, 469, 284, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 423, 0, 0, 0, 453, 468, 0, 0,
	0, 0, 0, 465, 353, 0, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	405, 417, 434, 437, 0, 0, 0, 0, 253, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 432, 0,
	0, 337, 338, 339, 340, 301, 0, 271, 435, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	297, 303, 448, 305, 270, 352, 299, 414, 312, 0,
	441, 0, 442, 0, 0, 0, 0, 344, 308, 309,
	378, 313, 322, 366, 413, 350, 371, 268, 404, 379,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 246, 276, 277, 282, 466, 463, 395, 467,
	0, 250, 0, 320, 0, 361, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 0, 349,
	247, 242, 243, 244, 245, 0, 0, 0, 420, 421,
	422, 444, 406, 0, 464, 0, 291, 1255, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 458, 454, 0, 455, 0, 0, 0, 0, 459,
	380, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 1253, 0, 0, 0, 266, 197,
	456, 0, 457, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1251, 0, 0,
	0, 0, 0, 0, 256, 385, 402, 267, 376, 415,
	272, 383, 262, 348, 372, 0, 0, 258, 400, 382,
	330, 310, 311, 257, 0, 367, 289, 302, 286, 346,
	0, 399, 427, 285, 418, 0, 410, 260, 0, 409,
	345, 396, 401, 331, 325, 259, 398, 329, 324, 314,
	293, 443, 315, 316, 306, 357, 323, 358, 307, 335,
	334, 336, 0, 0, 0, 0, 0, 438, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 317, 0, 0, 0,
	428, 0, 370, 351, 0, 0, 0, 368, 321, 397,
	359, 403, 386, 411, 364, 360, 251, 387, 288, 332,
	263, 265, 283, 290, 292, 294, 295, 341, 342, 354,
	375, 388, 389, 390, 287, 273, 369, 274, 304, 275,
	252, 279, 278, 280, 377, 281, 254, 355, 394, 0,
	300, 365, 328, 255, 327, 356, 393, 392, 264, 419,
	425, 426, 0, 0, 431, 0, 0, 0, 440, 445,
	446, 447, 449, 450, 451, 452, 0, 0, 0, 0,
	433, 0, 0, 0, 0, 0, 0, 424, 318, 298,
	248, 249, 469, 284, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 343, 423, 0, 0,
	0, 453, 468, 0, 0, 0, 0, 0, 465, 353,
	0, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 405, 417, 434, 437, 0,
	0, 0, 0, 253, 436, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 432, 0, 0, 337, 338, 339, 340,
	301, 0, 271, 435, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 429, 430, 297, 303, 448, 305, 270,
	352, 299, 414, 312, 0, 441, 0, 442, 0, 0,
	0, 0, 344, 308, 309, 378, 313, 322, 366, 413,
	350, 371, 268, 404, 379, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 0, 246, 276, 277,
	282, 466, 463, 395, 467, 0, 250, 0, 320, 0,
	361, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 0, 349, 247, 242, 243, 244, 245,
	0, 0, 0, 420, 421, 422, 444, 406, 0, 464,
	0, 291, 1249, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 470, 458, 454, 0, 455,
	0, 0, 0, 0, 459, 380, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 1253,
	0, 0, 0, 266, 197, 456, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1251, 0, 0, 0, 0, 0, 0, 256,
	385, 402, 267, 376, 415, 272, 383, 262, 348, 372,
	0, 0, 258, 400, 382, 330, 310, 311, 257, 0,
	367, 289, 302, 286, 346, 0, 399, 427, 285, 418,
	0, 410, 260, 0, 409, 345, 396, 401, 331, 325,
	259, 398, 329, 324, 314, 293, 443, 315, 316, 306,
	357, 323, 358, 307, 335, 334, 336, 0, 0, 0,
	0, 0, 438, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 317, 0, 0, 0, 428, 0, 370, 351, 0,
	0, 0, 368, 321, 397, 359, 403, 386, 411, 364,
	360, 251, 387, 288, 332, 263, 265, 283, 290, 292,
	294, 295, 341, 342, 354, 375, 388, 389, 390, 287,
	273, 369, 274, 304, 275, 252, 279, 278, 280, 377,
	281, 254, 355, 394, 0, 300, 365, 328, 255, 327,
	356, 393, 392, 264, 419, 425, 426, 0, 0, 431,
	0, 0, 0, 440, 445, 446, 447, 449, 450, 451,
	452, 0, 0, 0, 0, 433, 0, 0, 0, 0,
	0, 0, 424, 318, 298, 248, 249, 469, 284, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 423, 0, 0, 0, 453, 468, 0, 0,
	0, 0, 0, 465, 353, 0, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	405, 417, 434, 437, 0, 0, 0, 0, 253, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 432, 0,
	0, 337, 338, 339, 340, 301, 0, 271, 435, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	297, 303, 448, 305, 270, 352, 299, 414, 312, 0,
	441, 0, 442, 0, 0, 0, 0, 344, 308, 309,
	378, 313, 322, 366, 413, 350, 371, 268, 404, 379,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 246, 276, 277, 282, 466, 463, 395, 467,
	0, 250, 0, 320, 0, 361, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 0, 349,
	247, 242, 243, 244, 245, 0, 0, 0, 420, 421,
	422, 444, 406, 0, 464, 0, 291, 0, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 458, 454, 0, 455, 0, 0, 0, 0, 459,
	380, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3289,
	0, 196, 643, 0, 0, 0, 0, 0, 266, 197,
	456, 0, 457, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 385, 402, 267, 376, 415,
	272, 383, 262, 348, 372, 0, 0, 258, 400, 382,
	330, 310, 311, 257, 0, 367, 289, 302, 286, 346,
	0, 399, 427, 285, 418, 0, 410, 260, 0, 409,
	345, 396, 401, 331, 325, 259, 398, 329, 324, 314,
	293, 443, 315, 316, 306, 357, 323, 358, 307, 335,
	334, 336, 0, 0, 0, 0, 0, 438, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 317, 0, 0, 0,
	428, 0, 370, 351, 0, 0, 0, 368, 321, 397,
	359, 403, 386, 411, 364, 360, 251, 387, 288, 332,
	263, 265, 283, 290, 292, 294, 295, 341, 342, 354,
	375, 388, 389, 390, 287, 273, 369, 274, 304, 275,
	252, 279, 278, 280, 377, 281, 254, 355, 394, 0,
	300, 365, 328, 255, 327, 356, 393, 392, 264, 419,
	425, 426, 0, 0, 431, 0, 0, 0, 440, 445,
	446, 447, 449, 450, 451, 452, 0, 0, 0, 0,
	433, 0, 0, 0, 0, 0, 0, 424, 318, 298,
	248, 249, 469, 284, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 343, 423, 0, 0,
	0, 453, 468, 0, 0, 0, 0, 0, 465, 353,
	0, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 405, 417, 434, 437, 0,
	0, 0, 0, 253, 436, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 432, 0, 0, 337, 338, 339, 340,
	301, 0, 271, 435, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 429, 430, 297, 303, 448, 305, 270,
	352, 299, 414, 312, 0, 441, 0, 442, 0, 0,
	0, 0, 344, 308, 309, 378, 313, 322, 366, 413,
	350, 371, 268, 404, 379, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 0, 246, 276, 277,
	282, 466, 463, 395, 467, 0, 250, 0, 320, 0,
	361, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 0, 349, 247, 242, 243, 244, 245,
	0, 0, 0, 420, 421, 422, 444, 406, 0, 464,
	0, 291, 0, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 470, 458, 454, 0, 455,
	0, 0, 0, 0, 459, 380, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 1253,
	0, 0, 0, 266, 197, 456, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1251, 0, 0, 0, 0, 0, 0, 256,
	385, 402, 267, 376, 415, 272, 383, 262, 348, 372,
	0, 0, 258, 400, 382, 330, 310, 311, 257, 0,
	367, 289, 302, 286, 346, 0, 399, 427, 285, 418,
	0, 410, 260, 0, 409, 345, 396, 401, 331, 325,
	259, 398, 329, 324, 314, 293, 443, 315, 316, 306,
	357, 323, 358, 307, 335, 334, 336, 0, 0, 0,
	0, 0, 438, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 317, 0, 0, 0, 428, 0, 370, 351, 0,
	0, 0, 368, 321, 397, 359, 403, 386, 411, 364,
	360, 251, 387, 288, 332, 263, 265, 283, 290, 292,
	294, 295, 341, 342, 354, 375, 388, 389, 390, 287,
	273, 369, 274, 304, 275, 252, 279, 278, 280, 377,
	281, 254, 355, 394, 0, 300, 365, 328, 255, 327,
	356, 393, 392, 264, 419, 425, 426, 0, 0, 431,
	0, 0, 0, 440, 445, 446, 447, 449, 450, 451,
	452, 0, 0, 0, 0, 433, 0, 0, 0, 0,
	0, 0, 424, 318, 298, 248, 249, 469, 284, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 423, 0, 0, 0, 453, 468, 0, 0,
	0, 0, 0, 465, 353, 0, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	405, 417, 434, 437, 0, 0, 0, 0, 253, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 432, 0,
	0, 337, 338, 339, 340, 301, 0, 271, 435, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	297, 303, 448, 305, 270, 352, 299, 414, 312, 0,
	441, 0, 442, 0, 0, 0, 0, 344, 308, 309,
	378, 313, 322, 366, 413, 350, 371, 268, 404, 379,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 246, 276, 277, 282, 466, 463, 395, 467,
	0, 250, 0, 320, 0, 361, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 0, 349,
	247, 242, 243, 244, 245, 0, 0, 0, 420, 421,
	422, 444, 406, 0, 464, 0, 291, 0, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 458, 454, 0, 455, 0, 0, 0, 0, 459,
	380, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 1253, 0, 0, 0, 266, 197,
	456, 0, 457, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3007, 0, 0,
	0, 0, 0, 0, 256, 385, 402, 267, 376, 415,
	272, 383, 262, 348, 372, 0, 0, 258, 400, 382,
	330, 310, 311, 257, 0, 367, 289, 302, 286, 346,
	0, 399, 427, 285, 418, 0, 410, 260, 0, 409,
	345, 396, 401, 331, 325, 259, 398, 329, 324, 314,
	293, 443, 315, 316, 306, 357, 323, 358, 307, 335,
	334, 336, 0, 0, 0, 0, 0, 438, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 317, 0, 0, 0,
	428, 0, 370, 351, 0, 0, 0, 368, 321, 397,
	359, 403, 386, 411, 364, 360, 251, 387, 288, 332,
	263, 265, 283, 290, 292, 294, 295, 341, 342, 354,
	375, 388, 389, 390, 287, 273, 369, 274, 304, 275,
	252, 279, 278, 280, 377, 281, 254, 355, 394, 0,
	300, 365, 328, 255, 327, 356, 393, 392, 264, 419,
	425, 426, 0, 0, 431, 0, 0, 0, 440, 445,
	446, 447, 449, 450, 451, 452, 0, 0, 0, 0,
	433, 0, 0, 0, 0, 0, 0, 424, 318, 298,
	248, 249, 469, 284, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 343, 423, 0, 0,
	0, 453, 468, 0, 0, 0, 0, 0, 465, 353,
	0, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 405, 417, 434, 437, 0,
	0, 0, 0, 253, 436, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 432, 0, 0, 337, 338, 339, 340,
	301, 0, 271, 435, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 429, 430, 297, 303, 448, 305, 270,
	352, 299, 414, 312, 0, 441, 0, 442, 0, 0,
	0, 0, 344, 308, 309, 378, 313, 322, 366, 413,
	350, 371, 268, 404, 379, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 0, 246, 276, 277,
	282, 466, 463, 395, 467, 0, 250, 0, 320, 0,
	361, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 0, 0, 247, 242, 243, 244, 245,
	349, 0, 0, 420, 421, 422, 444, 406, 0, 464,
	0, 0, 2097, 0, 0, 0, 0, 291, 0, 0,
	319, 0, 0, 0, 0, 470, 458, 0, 0, 0,
	0, 0, 0, 454, 0, 455, 0, 0, 0, 0,
	459, 380, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 2099, 0, 0, 0, 266,
	197, 456, 0, 457, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 385, 402, 267, 376,
	415, 272, 383, 262, 348, 372, 0, 0, 258, 400,
	382, 330, 310, 311, 257, 0, 367, 289, 302, 286,
	346, 0, 399, 427, 285, 418, 0, 410, 260, 0,
	409, 345, 396, 401, 331, 325, 259, 398, 329, 324,
	314, 293, 443, 315, 316, 306, 357, 323, 358, 307,
	335, 334, 336, 0, 0, 0, 0, 0, 438, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 317, 0, 0,
	0, 428, 0, 370, 351, 0, 0, 0, 368, 321,
	397, 359, 403, 386, 411, 364, 360, 251, 387, 288,
	332, 263, 265, 283, 290, 292, 294, 295, 341, 342,
	354, 375, 388, 389, 390, 287, 273, 369, 274, 304,
	275, 252, 279, 278, 280, 377, 281, 254, 355, 394,
	0, 300, 365, 328, 255, 327, 356, 393, 392, 264,
	419, 425, 426, 0, 0, 431, 0, 0, 0, 440,
	445, 446, 447, 449, 450, 451, 452, 0, 0, 0,
	0, 433, 0, 0, 0, 0, 0, 0, 424, 318,
	298, 248, 249, 469, 284, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 423, 0,
	0, 0, 453, 468, 0, 0, 0, 0, 0, 465,
	353, 0, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 405, 417, 434, 437,
	0, 0, 0, 0, 253, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 432, 0, 0, 337, 338, 339,
	340, 301, 0, 271, 435, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 297, 303, 448, 305,
	270, 352, 299, 414, 312, 0, 441, 0, 442, 0,
	0, 0, 0, 344, 308, 309, 378, 313, 322, 366,
	413, 350, 371, 268, 404, 379, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 0, 246, 276,
	277, 282, 466, 463, 395, 467, 0, 250, 0, 320,
	0, 361, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 0, 349, 247, 242, 243, 244,
	245, 0, 0, 0, 420, 421, 422, 444, 406, 0,
	464, 0, 291, 2118, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 458, 454, 0,
	455, 0, 0, 0, 0, 459, 380, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	1253, 0, 0, 0, 266, 197, 456, 0, 457, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 385, 402, 267, 376, 415, 272, 383, 262, 348,
	372, 0, 0, 258, 400, 382, 330, 310, 311, 257,
	0, 367, 289, 302, 286, 346, 0, 399, 427, 285,
	418, 0, 410, 260, 0, 409, 345, 396, 401, 331,
	325, 259, 398, 329, 324, 314, 293, 443, 315, 316,
	306, 357, 323, 358, 307, 335, 334, 336, 0, 0,
	0, 0, 0, 438, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 317, 0, 0, 0, 428, 0, 370, 351,
	0, 0, 0, 368, 321, 397, 359, 403, 386, 411,
	364, 360, 251, 387, 288, 332, 263, 265, 283, 290,
	292, 294, 295, 341, 342, 354, 375, 388, 389, 390,
	287, 273, 369, 274, 304, 275, 252, 279, 278, 280,
	377, 281, 254, 355, 394, 0, 300, 365, 328, 255,
	327, 356, 393, 392, 264, 419, 425, 426, 0, 0,
	431, 0, 0, 0, 440, 445, 446, 447, 449, 450,
	451, 452, 0, 0, 0, 0, 433, 0, 0, 0,
	0, 0, 0, 424, 318, 298, 248, 249, 469, 284,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 423, 0, 0, 0, 453, 468, 0,
	0, 0, 0, 0, 465, 353, 0, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 405, 417, 434, 437, 0, 0, 0, 0, 253,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 432,
	0, 0, 337, 338, 339, 340, 301, 0, 271, 435,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 429,
	430, 297, 303, 448, 305, 270, 352, 299, 414, 312,
	0, 441, 0, 442, 0, 0, 0, 0, 344, 308,
	309, 378, 313, 322, 366, 413, 350, 371, 268, 404,
	379, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 246, 276, 277, 282, 466, 463, 395,
	467, 0, 250, 0, 320, 0, 361, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	349, 247, 242, 243, 244, 245, 0, 0, 0, 420,
	421, 422, 444, 406, 0, 464, 0, 291, 0, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 470, 458, 454, 0, 455, 0, 0, 0, 0,
	459, 380, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3385, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 456, 0, 457, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 385, 402, 267, 376,
	415, 272, 383, 262, 348, 372, 0, 0, 258, 400,
	382, 330, 310, 311, 257, 0, 367, 289, 302, 286,
	346, 0, 399, 427, 285, 418, 0, 410, 260, 0,
	409, 345, 396, 401, 331, 325, 259, 398, 329, 324,
	314, 293, 443, 315, 316, 306, 357, 323, 358, 307,
	335, 334, 336, 0, 0, 0, 0, 0, 438, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 317, 0, 0,
	0, 428, 0, 370, 351, 0, 0, 0, 368, 321,
	397, 359, 403, 386, 411, 364, 360, 251, 387, 288,
	332, 263, 265, 283, 290, 292, 294, 295, 341, 342,
	354, 375, 388, 389, 390, 287, 273, 369, 274, 304,
	275, 252, 279, 278, 280, 377, 281, 254, 355, 394,
	0, 300, 365, 328, 255, 327, 356, 393, 392, 264,
	419, 425, 426, 0, 0, 431, 0, 0, 0, 440,
	445, 446, 447, 449, 450, 451, 452, 0, 0, 0,
	0, 433, 0, 0, 0, 0, 0, 0, 424, 318,
	298, 248, 249, 469, 284, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 423, 0,
	0, 0, 453, 468, 0, 0, 0, 0, 0, 465,
	353, 0, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 405, 417, 434, 437,
	0, 0, 0, 0, 253, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 432, 0, 0, 337, 338, 339,
	340, 301, 0, 271, 435, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 297, 303, 448, 305,
	270, 352, 299, 414, 312, 0, 441, 0, 442, 0,
	0, 0, 0, 344, 308, 309, 378, 313, 322, 366,
	413, 350, 371, 268, 404, 379, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 0, 246, 276,
	277, 282, 466, 463, 395, 467, 0, 250, 0, 320,
	0, 361, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 0, 349, 247, 242, 243, 244,
	245, 0, 0, 0, 420, 421, 422, 444, 406, 0,
	464, 0, 291, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 458, 454, 0,
	455, 0, 0, 0, 0, 459, 380, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 643, 0,
	0, 0, 0, 0, 266, 197, 456, 0, 457, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 385, 402, 267, 376, 415, 272, 383, 262, 348,
	372, 0, 0, 258, 400, 382, 330, 310, 311, 257,
	0, 367, 289, 302, 286, 346, 0, 399, 427, 285,
	418, 0, 410, 260, 0, 409, 345, 396, 401, 331,
	325, 259, 398, 329, 324, 314, 293, 443, 315, 316,
	306, 357, 323, 358, 307, 335, 334, 336, 0, 0,
	0, 0, 0, 438, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 317, 0, 0, 0, 428, 0, 370, 351,
	0, 0, 0, 368, 321, 397, 359, 403, 386, 411,
	364, 360, 251, 387, 288, 332, 263, 265, 283, 290,
	292, 294, 295, 341, 342, 354, 375, 388, 389, 390,
	287, 273, 369, 274, 304, 275, 252, 279, 278, 280,
	377, 281, 254, 355, 394, 0, 300, 365, 328, 255,
	327, 356, 393, 392, 264, 419, 425, 426, 0, 0,
	431, 0, 0, 0, 440, 445, 446, 447, 449, 450,
	451, 452, 0, 0, 0, 0, 433, 0, 0, 0,
	0, 0, 0, 424, 318, 298, 248, 249, 469, 284,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 423, 0, 0, 0, 453, 468, 0,
	0, 0, 0, 0, 465, 353, 0, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 405, 417, 434, 437, 0, 0, 0, 0, 253,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 432,
	0, 0, 337, 338, 339, 340, 301, 0, 271, 435,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 429,
	430, 297, 303, 448, 305, 270, 352, 299, 414, 312,
	0, 441, 0, 442, 0, 0, 0, 0, 344, 308,
	309, 378, 313, 322, 366, 413, 350, 371, 268, 404,
	379, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 246, 276, 277, 282, 466, 463, 395,
	467, 0, 250, 0, 320, 0, 361, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	349, 247, 242, 243, 244, 245, 0, 0, 0, 420,
	421, 422, 444, 406, 0, 464, 0, 291, 0, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 470, 458, 454, 0, 455, 0, 0, 0, 0,
	459, 380, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3306,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 456, 0, 457, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 385, 402, 267, 376,
	415, 272, 383, 262, 348, 372, 0, 0, 258, 400,
	382, 330, 310, 311, 257, 0, 367, 289, 302, 286,
	346, 0, 399, 427, 285, 418, 0, 410, 260, 0,
	409, 345, 396, 401, 331, 325, 259, 398, 329, 324,
	314, 293, 443, 315, 316, 306, 357, 323, 358, 307,
	335, 334, 336, 0, 0, 0, 0, 0, 438, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 317, 0, 0,
	0, 428, 0, 370, 351, 0, 0, 0, 368, 321,
	397, 359, 403, 386, 411, 364, 360, 251, 387, 288,
	332, 263, 265, 283, 290, 292, 294, 295, 341, 342,
	354, 375, 388, 389, 390, 287, 273, 369, 274, 304,
	275, 252, 279, 278, 280, 377, 281, 254, 355, 394,
	0, 300, 365, 328, 255, 327, 356, 393, 392, 264,
	419, 425, 426, 0, 0, 431, 0, 0, 0, 440,
	445, 446, 447, 449, 450, 451, 452, 0, 0, 0,
	0, 433, 0, 0, 0, 0, 0, 0, 424, 318,
	298, 248, 249, 469, 284, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 423, 0,
	0, 0, 453, 468, 0, 0, 0, 0, 0, 465,
	353, 0, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 405, 417, 434, 437,
	0, 0, 0, 0, 253, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 432, 0, 0, 337, 338, 339,
	340, 301, 0, 271, 435, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 297, 303, 448, 305,
	270, 352, 299, 414, 312, 0, 441, 0, 442, 0,
	0, 0, 0, 344, 308, 309, 378, 313, 322, 366,
	413, 350, 371, 268, 404, 379, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 0, 246, 276,
	277, 282, 466, 463, 395, 467, 0, 250, 0, 320,
	0, 361, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 0, 349, 247, 242, 243, 244,
	245, 0, 0, 0, 420, 421, 422, 444, 406, 0,
	464, 0, 291, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 458, 454, 0,
	455, 0, 0, 0, 0, 459, 380, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 266, 197, 456, 0, 457, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 385, 402, 267, 376, 415, 272, 383, 262, 348,
	372, 0, 0, 258, 400, 382, 330, 310, 311, 257,
	0, 367, 289, 302, 286, 346, 0, 399, 427, 285,
	418, 0, 410, 260, 0, 409, 345, 396, 401, 331,
	325, 259, 398, 329, 324, 314, 293, 443, 315, 316,
	306, 357, 323, 358, 307, 335, 334, 336, 0, 0,
	0, 0, 0, 438, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 3230, 0, 0, 384,
	0, 0, 317, 0, 0, 0, 428, 0, 370, 351,
	0, 0, 0, 368, 321, 397, 359, 403, 386, 411,
	364, 360, 251, 387, 288, 332, 263, 265, 283, 290,
	292, 294, 295, 341, 342, 354, 375, 388, 389, 390,
	287, 273, 369, 274, 304, 275, 252, 279, 278, 280,
	377, 281, 254, 355, 394, 0, 300, 365, 328, 255,
	327, 356, 393, 392, 264, 419, 425, 426, 0, 0,
	431, 0, 0, 0, 440, 445, 446, 447, 449, 450,
	451, 452, 0, 0, 0, 0, 433, 0, 0, 0,
	0, 0, 0, 424, 318, 298, 248, 249, 469, 284,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 423, 0, 0, 0, 453, 468, 0,
	0, 0, 0, 0, 465, 353, 0, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 405, 417, 434, 437, 0, 0, 0, 0, 253,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 432,
	0, 0, 337, 338, 339, 340, 301, 0, 271, 435,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 429,
	430, 297, 303, 448, 305, 270, 352, 299, 414, 312,
	0, 441, 0, 442, 0, 0, 0, 0, 344, 308,
	309, 378, 313, 322, 366, 413, 350, 371, 268, 404,
	379, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 246, 276, 277, 282, 466, 463, 395,
	467, 0, 250, 0, 320, 0, 361, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	349, 247, 242, 243, 244, 245, 0, 0, 0, 420,
	421, 422, 444, 406, 0, 464, 0, 291, 0, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 470, 458, 454, 0, 455, 0, 0, 0, 0,
	459, 380, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3003,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 456, 0, 457, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 385, 402, 267, 376,
	415, 272, 383, 262, 348, 372, 0, 0, 258, 400,
	382, 330, 310, 311, 257, 0, 367, 289, 302, 286,
	346, 0, 399, 427, 285, 418, 0, 410, 260, 0,
	409, 345, 396, 401, 331, 325, 259, 398, 329, 324,
	314, 293, 443, 315, 316, 306, 357, 323, 358, 307,
	335, 334, 336, 0, 0, 0, 0, 0, 438, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 317, 0, 0,
	0, 428, 0, 370, 351, 0, 0, 0, 368, 321,
	397, 359, 403, 386, 411, 364, 360, 251, 387, 288,
	332, 263, 265, 283, 290, 292, 294, 295, 341, 342,
	354, 375, 388, 389, 390, 287, 273, 369, 274, 304,
	275, 252, 279, 278, 280, 377, 281, 254, 355, 394,
	0, 300, 365, 328, 255, 327, 356, 393, 392, 264,
	419, 425, 426, 0, 0, 431, 0, 0, 0, 440,
	445, 446, 447, 449, 450, 451, 452, 0, 0, 0,
	0, 433, 0, 0, 0, 0, 0, 0, 424, 318,
	298, 248, 249, 469, 284, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 423, 0,
	0, 0, 453, 468, 0, 0, 0, 0, 0, 465,
	353, 0, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 405, 417, 434, 437,
	0, 0, 0, 0, 253, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 432, 0, 0, 337, 338, 339,
	340, 301, 0, 271, 435, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 297, 303, 448, 305,
	270, 352, 299, 414, 312, 0, 441, 0, 442, 0,
	0, 0, 0, 344, 308, 309, 378, 313, 322, 366,
	413, 350, 371, 268, 404, 379, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 0, 246, 276,
	277, 282, 466, 463, 395, 467, 0, 250, 0, 320,
	0, 361, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 0, 349, 247, 242, 243, 244,
	245, 0, 0, 0, 420, 421, 422, 444, 406, 0,
	464, 0, 291, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 458, 454, 0,
	455, 0, 0, 0, 0, 459, 380, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	2831, 0, 0, 0, 266, 197, 456, 0, 457, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 385, 402, 267, 376, 415, 272, 383, 262, 348,
	372, 0, 0, 258, 400, 382, 330, 310, 311, 257,
	0, 367, 289, 302, 286, 346, 0, 399, 427, 285,
	418, 0, 410, 260, 0, 409, 345, 396, 401, 331,
	325, 259, 398, 329, 324, 314, 293, 443, 315, 316,
	306, 357, 323, 358, 307, 335, 334, 336, 0, 0,
	0, 0, 0, 438, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 317, 0, 0, 0, 428, 0, 370, 351,
	0, 0, 0, 368, 321, 397, 359, 403, 386, 411,
	364, 360, 251, 387, 288, 332, 263, 265, 283, 290,
	292, 294, 295, 341, 342, 354, 375, 388, 389, 390,
	287, 273, 369, 274, 304, 275, 252, 279, 278, 280,
	377, 281, 254, 355, 394, 0, 300, 365, 328, 255,
	327, 356, 393, 392, 264, 419, 425, 426, 0, 0,
	431, 0, 0, 0, 440, 445, 446, 447, 449, 450,
	451, 452, 0, 0, 0, 0, 433, 0, 0, 0,
	0, 0, 0, 424, 318, 298, 248, 249, 469, 284,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 423, 0, 0, 0, 453, 468, 0,
	0, 0, 0, 0, 465, 353, 0, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 405, 417, 434, 437, 0, 0, 0, 0, 253,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 432,
	0, 0, 337, 338, 339, 340, 301, 0, 271, 435,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 429,
	430, 297, 303, 448, 305, 270, 352, 299, 414, 312,
	0, 441, 0, 442, 0, 0, 0, 0, 344, 308,
	309, 378, 313, 322, 366, 413, 350, 371, 268, 404,
	379, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 246, 276, 277, 282, 466, 463, 395,
	467, 0, 250, 0, 320, 0, 361, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	349, 247, 242, 243, 244, 245, 0, 0, 0, 420,
	421, 422, 444, 406, 0, 464, 0, 291, 0, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 470, 458, 454, 0, 455, 0, 0, 0, 0,
	459, 380, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 456, 0, 457, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 385, 402, 267, 376,
	415, 272, 383, 262, 348, 372, 0, 0, 258, 400,
	382, 330, 310, 311, 257, 0, 367, 289, 302, 286,
	346, 0, 399, 427, 285, 418, 0, 410, 260, 0,
	409, 345, 396, 401, 331, 325, 259, 398, 329, 324,
	314, 293, 443, 315, 316, 306, 357, 323, 358, 307,
	335, 334, 336, 0, 0, 0, 0, 0, 438, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 3074, 0, 0, 384, 0, 0, 317, 0, 0,
	0, 428, 0, 370, 351, 0, 0, 0, 368, 321,
	397, 359, 403, 386, 411, 364, 360, 251, 387, 288,
	332, 263, 265, 283, 290, 292, 294, 295, 341, 342,
	354, 375, 388, 389, 390, 287, 273, 369, 274, 304,
	275, 252, 279, 278, 280, 377, 281, 254, 355, 394,
	0, 300, 365, 328, 255, 327, 356, 393, 392, 264,
	419, 425, 426, 0, 0, 431, 0, 0, 0, 440,
	445, 446, 447, 449, 450, 451, 452, 0, 0, 0,
	0, 433, 0, 0, 0, 0, 0, 0, 424, 318,
	298, 248, 249, 469, 284, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 423, 0,
	0, 0, 453, 468, 0, 0, 0, 0, 0, 465,
	353, 0, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 405, 417, 434, 437,
	0, 0, 0, 0, 253, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 432, 0, 0, 337, 338, 339,
	340, 301, 0, 271, 435, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 297, 303, 448, 305,
	270, 352, 299, 414, 312, 0, 441, 0, 442, 0,
	0, 0, 0, 344, 308, 309, 378, 313, 322, 366,
	413, 350, 371, 268, 404, 379, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 0, 246, 276,
	277, 282, 466, 463, 395, 467, 0, 250, 0, 320,
	0, 361, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 0, 349, 247, 242, 243, 244,
	245, 0, 0, 0, 420, 421, 422, 444, 406, 0,
	464, 0, 291, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 458, 454, 0,
	455, 0, 0, 0, 0, 459, 380, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	2684, 0, 0, 0, 266, 197, 456, 0, 457, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 385, 402, 267, 376, 415, 272, 383, 262, 348,
	372, 0, 0, 258, 400, 382, 330, 310, 311, 257,
	0, 367, 289, 302, 286, 346, 0, 399, 427, 285,
	418, 0, 410, 260, 0, 409, 345, 396, 401, 331,
	325, 259, 398, 329, 324, 314, 293, 443, 315, 316,
	306, 357, 323, 358, 307, 335, 334, 336, 0, 0,
	0, 0, 0, 438, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 317, 0, 0, 0, 428, 0, 370, 351,
	0, 0, 0, 368, 321, 397, 359, 403, 386, 411,
	364, 360, 251, 387, 288, 332, 263, 265, 283, 290,
	292, 294, 295, 341, 342, 354, 375, 388, 389, 390,
	287, 273, 369, 274, 304, 275, 252, 279, 278, 280,
	377, 281, 254, 355, 394, 0, 300, 365, 328, 255,
	327, 356, 393, 392, 264, 419, 425, 426, 0, 0,
	431, 0, 0, 0, 440, 445, 446, 447, 449, 450,
	451, 452, 0, 0, 0, 0, 433, 0, 0, 0,
	0, 0, 0, 424, 318, 298, 248, 249, 469, 284,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 423, 0, 0, 0, 453, 468, 0,
	0, 0, 0, 0, 465, 353, 0, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 405, 417, 434, 437, 0, 0, 0, 0, 253,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 432,
	0, 0, 337, 338, 339, 340, 301, 0, 271, 435,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 429,
	430, 297, 303, 448, 305, 270, 352, 299, 414, 312,
	0, 441, 0, 442, 0, 0, 0, 0, 344, 308,
	309, 378, 313, 322, 366, 413, 350, 371, 268, 404,
	379, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 246, 276, 277, 282, 466, 463, 395,
	467, 0, 250, 0, 320, 0, 361, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	349, 247, 242, 243, 244, 245, 0, 0, 0, 420,
	421, 422, 444, 406, 0, 464, 0, 291, 0, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 470, 458, 454, 0, 455, 0, 0, 0, 0,
	459, 380, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 456, 0, 457, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2699,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 385, 402, 267, 376,
	415, 272, 383, 262, 348, 372, 0, 0, 258, 400,
	382, 330, 310, 311, 257, 0, 367, 289, 302, 286,
	346, 0, 399, 427, 285, 418, 0, 410, 260, 0,
	409, 345, 396, 401, 331, 325, 259, 398, 329, 324,
	314, 293, 443, 315, 316, 306, 357, 323, 358, 307,
	335, 334, 336, 0, 0, 0, 0, 0, 438, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 317, 0, 0,
	0, 428, 0, 370, 351, 0, 0, 0, 368, 321,
	397, 359, 403, 386, 411, 364, 360, 251, 387, 288,
	332, 263, 265, 283, 290, 292, 294, 295, 341, 342,
	354, 375, 388, 389, 390, 287, 273, 369, 274, 304,
	275, 252, 279, 278, 280, 377, 281, 254, 355, 394,
	0, 300, 365, 328, 255, 327, 356, 393, 392, 264,
	419, 425, 426, 0, 0, 431, 0, 0, 0, 440,
	445, 446, 447, 449, 450, 451, 452, 0, 0, 0,
	0, 433, 0, 0, 0, 0, 0, 0, 424, 318,
	298, 248, 249, 469, 284, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 423, 0,
	0, 0, 453, 468, 0, 0, 0, 0, 0, 465,
	353, 0, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 405, 417, 434, 437,
	0, 0, 0, 0, 253, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 432, 0, 0, 337, 338, 339,
	340, 301, 0, 271, 435, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 297, 303, 448, 305,
	270, 352, 299, 414, 312, 0, 441, 0, 442, 0,
	0, 0, 0, 344, 308, 309, 378, 313, 322, 366,
	413, 350, 371, 268, 404, 379, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 0, 246, 276,
	277, 282, 466, 463, 395, 467, 0, 250, 0, 320,
	0, 361, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 0, 349, 247, 242, 243, 244,
	245, 0, 0, 0, 420, 421, 422, 444, 406, 0,
	464, 0, 291, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 458, 454, 0,
	455, 0, 0, 0, 0, 459, 380, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1700, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 266, 197, 456, 0, 457, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 385, 402, 267, 376, 415, 272, 383, 262, 348,
	372, 0, 0, 258, 400, 382, 330, 310, 311, 257,
	0, 367, 289, 302, 286, 346, 0, 399, 427, 285,
	418, 0, 410, 260, 0, 409, 345, 396, 401, 331,
	325, 259, 398, 329, 324, 314, 293, 443, 315, 316,
	306, 357, 323, 358, 307, 335, 334, 336, 0, 0,
	0, 0, 0, 438, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 317, 0, 0, 0, 428, 0, 370, 351,
	0, 0, 0, 368, 321, 397, 359, 403, 386, 411,
	364, 360, 251, 387, 288, 332, 263, 265, 283, 290,
	292, 294, 295, 341, 342, 354, 375, 388, 389, 390,
	287, 273, 369, 274, 304, 275, 252, 279, 278, 280,
	377, 281, 254, 355, 394, 0, 300, 365, 328, 255,
	327, 356, 393, 392, 264, 419, 425, 426, 0, 0,
	431, 0, 0, 0, 440, 445, 446, 447, 449, 450,
	451, 452, 0, 0, 0, 0, 433, 0, 0, 0,
	0, 0, 0, 424, 318, 298, 248, 249, 469, 284,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 423, 0, 0, 0, 453, 468, 0,
	0, 0, 0, 0, 465, 353, 0, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 405, 417, 434, 437, 0, 0, 0, 0, 253,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 432,
	0, 0, 337, 338, 339, 340, 301, 0, 271, 435,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 429,
	430, 297, 303, 448, 305, 270, 352, 299, 414, 312,
	0, 441, 0, 442, 0, 0, 0, 0, 344, 308,
	309, 378, 313, 322, 366, 413, 350, 371, 268, 404,
	379, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 246, 276, 277, 282, 466, 463, 395,
	467, 0, 250, 0, 320, 0, 361, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	349, 247, 242, 243, 244, 245, 0, 0, 0, 420,
	421, 422, 444, 406, 0, 464, 0, 291, 0, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 470, 458, 454, 0, 455, 0, 0, 0, 0,
	459, 380, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 456, 0, 457, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 385, 402, 267, 376,
	415, 272, 383, 262, 348, 372, 0, 0, 258, 400,
	382, 330, 310, 311, 257, 0, 367, 289, 302, 286,
	346, 0, 399, 427, 285, 418, 0, 410, 260, 0,
	409, 345, 396, 401, 331, 325, 259, 398, 329, 324,
	314, 293, 443, 315, 316, 306, 357, 323, 358, 307,
	335, 334, 336, 0, 0, 0, 0, 0, 438, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 317, 0, 0,
	0, 428, 0, 370, 351, 0, 0, 0, 368, 321,
	397, 359, 403, 386, 411, 364, 360, 251, 387, 288,
	332, 263, 265, 283, 290, 292, 294, 295, 341, 342,
	354, 375, 388, 389, 390, 287, 273, 369, 274, 304,
	275, 252, 279, 278, 280, 377, 281, 254, 355, 394,
	0, 300, 365, 328, 255, 327, 356, 393, 392, 264,
	419, 425, 426, 0, 0, 431, 0, 0, 0, 440,
	445, 446, 447, 449, 450, 451, 452, 0, 0, 0,
	0, 433, 0, 0, 0, 0, 0, 0, 424, 318,
	298, 248, 249, 469, 284, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 423, 0,
	0, 0, 453, 468, 0, 0, 0, 0, 0, 465,
	353, 0, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 405, 417, 434, 437,
	0, 0, 0, 0, 253, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 432, 0, 0, 337, 338, 339,
	340, 301, 0, 271, 435, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 297, 303, 448, 305,
	270, 352, 299, 414, 312, 0, 441, 0, 442, 0,
	0, 0, 0, 344, 308, 309, 378, 313, 322, 366,
	413, 350, 371, 268, 404, 379, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 0, 246, 276,
	277, 282, 466, 463, 395, 467, 0, 250, 0, 320,
	0, 361, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 0, 349, 247, 242, 243, 244,
	245, 0, 0, 0, 420, 421, 422, 444, 406, 0,
	464, 0, 291, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 458, 454, 0,
	455, 0, 0, 0, 0, 459, 380, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	2653, 0, 0, 0, 266, 197, 456, 0, 457, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 385, 402, 267, 376, 415, 272, 383, 262, 348,
	372, 0, 0, 258, 400, 382, 330, 310, 311, 257,
	0, 367, 289, 302, 286, 346, 0, 399, 427, 285,
	418, 0, 410, 260, 0, 409, 345, 396, 401, 331,
	325, 259, 398, 329, 324, 314, 293, 443, 315, 316,
	306, 357, 323, 358, 307, 335, 334, 336, 0, 0,
	0, 0, 0, 438, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 317, 0, 0, 0, 428, 0, 370, 351,
	0, 0, 0, 368, 321, 397, 359, 403, 386, 411,
	364, 360, 251, 387, 288, 332, 263, 265, 283, 290,
	292, 294, 295, 341, 342, 354, 375, 388, 389, 390,
	287, 273, 369, 274, 304, 275, 252, 279, 278, 280,
	377, 281, 254, 355, 394, 0, 300, 365, 328, 255,
	327, 356, 393, 392, 264, 419, 425, 426, 0, 0,
	431, 0, 0, 0, 440, 445, 446, 447, 449, 450,
	451, 452, 0, 0, 0, 0, 433, 0, 0, 0,
	0, 0, 0, 424, 318, 298, 248, 249, 469, 284,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 423, 0, 0, 0, 453, 468, 0,
	0, 0, 0, 0, 465, 353, 0, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 405, 417, 434, 437, 0, 0, 0, 0, 253,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 432,
	0, 0, 337, 338, 339, 340, 301, 0, 271, 435,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 429,
	430, 297, 303, 448, 305, 270, 352, 299, 414, 312,
	0, 441, 0, 442, 0, 0, 0, 0, 344, 308,
	309, 378, 313, 322, 366, 413, 350, 371, 268, 404,
	379, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 246, 276, 277, 282, 466, 463, 395,
	467, 0, 250, 0, 320, 0, 361, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	349, 247, 242, 243, 244, 245, 0, 0, 0, 420,
	421, 422, 444, 406, 0, 464, 0, 291, 0, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 470, 458, 454, 0, 455, 0, 0, 0, 0,
	459, 380, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 456, 0, 457, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 385, 402, 267, 376,
	415, 272, 383, 262, 348, 372, 0, 0, 258, 400,
	382, 330, 310, 311, 257, 0, 367, 289, 302, 286,
	346, 0, 399, 427, 285, 418, 0, 410, 260, 0,
	409, 345, 396, 401, 331, 325, 259, 398, 329, 324,
	314, 293, 443, 315, 316, 306, 357, 323, 358, 307,
	335, 334, 336, 0, 0, 0, 0, 0, 438, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 317, 0, 0,
	0, 428, 0, 370, 351, 0, 0, 0, 368, 321,
	397, 359, 403, 386, 411, 364, 360, 251, 387, 288,
	332, 263, 265, 283, 290, 292, 294, 295, 341, 342,
	354, 375, 388, 389, 390, 287, 273, 369, 274, 304,
	275, 252, 279, 278, 280, 377, 281, 254, 355, 394,
	0, 300, 365, 328, 255, 327, 356, 393, 392, 264,
	419, 425, 426, 0, 0, 431, 0, 0, 0, 440,
	445, 446, 447, 449, 450, 451, 452, 0, 0, 0,
	0, 433, 0, 0, 0, 0, 0, 0, 424, 318,
	298, 248, 249, 469, 284, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 423, 0,
	0, 0, 453, 468, 0, 0, 0, 0, 0, 465,
	353, 0, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 405, 417, 434, 437,
	0, 0, 0, 0, 253, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 432, 0, 0, 337, 338, 339,
	340, 301, 0, 271, 435, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 297, 303, 448, 305,
	270, 352, 299, 414, 312, 0, 441, 0, 442, 0,
	0, 0, 0, 344, 308, 309, 378, 313, 322, 366,
	413, 350, 371, 268, 404, 379, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 0, 246, 276,
	277, 282, 466, 463, 395, 467, 0, 250, 0, 320,
	0, 361, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 0, 349, 247, 242, 243, 244,
	245, 0, 0, 0, 420, 421, 422, 444, 406, 0,
	464, 0, 291, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 458, 454, 0,
	455, 0, 0, 0, 0, 459, 380, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	1253, 0, 0, 0, 266, 197, 456, 0, 457, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 385, 402, 267, 376, 415, 272, 383, 262, 348,
	372, 0, 0, 258, 400, 382, 330, 310, 311, 257,
	0, 367, 289, 302, 286, 346, 0, 399, 427, 285,
	418, 0, 410, 260, 0, 409, 345, 396, 401, 331,
	325, 259, 398, 329, 324, 314, 293, 443, 315, 316,
	306, 357, 323, 358, 307, 335, 334, 336, 0, 0,
	0, 0, 0, 438, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 317, 0, 0, 0, 428, 0, 370, 351,
	0, 0, 0, 368, 321, 397, 359, 403, 386, 411,
	364, 360, 251, 387, 288, 332, 263, 265, 283, 290,
	292, 294, 295, 341, 342, 354, 375, 388, 389, 390,
	287, 273, 369, 274, 304, 275, 252, 279, 278, 280,
	377, 281, 254, 355, 394, 0, 300, 365, 328, 255,
	327, 356, 393, 392, 264, 419, 425, 426, 0, 0,
	431, 0, 0, 0, 440, 445, 446, 447, 449, 450,
	451, 452, 0, 0, 0, 0, 433, 0, 0, 0,
	0, 0, 0, 424, 318, 298, 248, 249, 469, 284,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 423, 0, 0, 0, 453, 468, 0,
	0, 0, 0, 0, 465, 353, 0, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 405, 417, 434, 437, 0, 0, 0, 0, 253,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 432,
	0, 0, 337, 338, 339, 340, 301, 0, 271, 435,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 429,
	430, 297, 303, 448, 305, 270, 352, 299, 414, 312,
	0, 441, 0, 442, 0, 0, 0, 0, 344, 308,
	309, 378, 313, 322, 366, 413, 350, 371, 268, 404,
	379, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 246, 276, 277, 282, 466, 463, 395,
	467, 0, 250, 0, 320, 0, 361, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	349, 247, 242, 243, 244, 245, 0, 0, 0, 420,
	421, 422, 444, 406, 0, 464, 0, 291, 0, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 470, 458, 454, 0, 455, 0, 0, 0, 0,
	459, 380, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 2099, 0, 0, 0, 266,
	197, 456, 0, 457, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 385, 402, 267, 376,
	415, 272, 383, 262, 348, 372, 0, 0, 258, 400,
	382, 330, 310, 311, 257, 0, 367, 289, 302, 286,
	346, 0, 399, 427, 285, 418, 0, 410, 260, 0,
	409, 345, 396, 401, 331, 325, 259, 398, 329, 324,
	314, 293, 443, 315, 316, 306, 357, 323, 358, 307,
	335, 334, 336, 0, 0, 0, 0, 0, 438, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 317, 0, 0,
	0, 428, 0, 370, 351, 0, 0, 0, 368, 321,
	397, 359, 403, 386, 411, 364, 360, 251, 387, 288,
	332, 263, 265, 283, 290, 292, 294, 295, 341, 342,
	354, 375, 388, 389, 390, 287, 273, 369, 274, 304,
	275, 252, 279, 278, 280, 377, 281, 254, 355, 394,
	0, 300, 365, 328, 255, 327, 356, 393, 392, 264,
	419, 425, 426, 0, 0, 431, 0, 0, 0, 440,
	445, 446, 447, 449, 450, 451, 452, 0, 0, 0,
	0, 433, 0, 0, 0, 0, 0, 0, 424, 318,
	298, 248, 249, 469, 284, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 423, 0,
	0, 0, 453, 468, 0, 0, 0, 0, 0, 465,
	353, 0, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 405, 417, 434, 437,
	0, 0, 0, 0, 253, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 432, 0, 0, 337, 338, 339,
	340, 301, 0, 271, 435, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 297, 303, 448, 305,
	270, 352, 299, 414, 312, 0, 441, 0, 442, 0,
	0, 0, 0, 344, 308, 309, 378, 313, 322, 366,
	413, 350, 371, 268, 404, 379, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 0, 246, 276,
	277, 282, 466, 463, 395, 467, 0, 250, 0, 320,
	0, 361, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 0, 349, 247, 242, 243, 244,
	245, 0, 0, 0, 420, 421, 422, 444, 406, 0,
	464, 0, 291, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 458, 454, 0,
	455, 0, 0, 0, 0, 459, 380, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 266, 197, 456, 0, 457, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 385, 402, 267, 376, 415, 272, 383, 262, 348,
	372, 0, 0, 258, 400, 382, 330, 310, 311, 257,
	0, 367, 289, 302, 286, 346, 0, 399, 427, 285,
	418, 0, 410, 260, 0, 409, 345, 396, 401, 331,
	325, 259, 398, 329, 324, 314, 293, 443, 315, 316,
	306, 357, 323, 358, 307, 335, 334, 336, 0, 0,
	0, 0, 0, 438, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 317, 0, 0, 0, 428, 0, 370, 351,
	0, 0, 0, 368, 321, 397, 359, 403, 386, 411,
	364, 360, 251, 387, 288, 332, 263, 265, 283, 290,
	292, 294, 295, 341, 342, 354, 375, 388, 389, 390,
	287, 273, 369, 274, 304, 275, 252, 279, 278, 280,
	377, 281, 254, 355, 394, 0, 300, 365, 328, 255,
	327, 356, 393, 392, 264, 419, 425, 426, 0, 0,
	431, 0, 0, 0, 440, 445, 446, 447, 449, 450,
	451, 452, 0, 0, 0, 0, 433, 0, 0, 0,
	0, 0, 0, 424, 318, 298, 248, 249, 469, 284,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 423, 0, 0, 0, 453, 468, 0,
	0, 0, 0, 0, 465, 353, 0, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 405, 417, 434, 437, 0, 0, 0, 0, 253,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 432,
	0, 0, 337, 338, 339, 340, 301, 0, 271, 435,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 429,
	430, 297, 303, 448, 305, 270, 352, 299, 414, 312,
	0, 441, 0, 442, 0, 0, 0, 0, 344, 308,
	309, 378, 313, 322, 366, 413, 350, 371, 268, 404,
	379, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 246, 276, 277, 282, 466, 463, 395,
	467, 0, 250, 0, 320, 0, 361, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	349, 247, 242, 243, 244, 245, 0, 0, 0, 420,
	421, 422, 444, 406, 0, 464, 0, 291, 0, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 470, 458, 454, 0, 455, 0, 0, 0, 0,
	459, 380, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 456, 0, 457, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 385, 402, 267, 376,
	415, 272, 383, 262, 348, 372, 0, 0, 258, 400,
	382, 330, 310, 311, 257, 0, 367, 289, 302, 286,
	346, 0, 399, 427, 285, 418, 0, 410, 260, 0,
	409, 345, 396, 401, 331, 325, 259, 398, 329, 324,
	314, 293, 443, 315, 316, 306, 357, 323, 358, 307,
	335, 334, 336, 0, 0, 0, 0, 0, 438, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 317, 0, 0,
	0, 428, 0, 370, 351, 0, 0, 0, 368, 321,
	397, 359, 403, 386, 411, 364, 360, 251, 387, 288,
	332, 263, 265, 283, 290, 292, 294, 295, 341, 342,
	354, 375, 388, 389, 390, 287, 273, 369, 274, 304,
	275, 252, 279, 278, 280, 377, 281, 254, 355, 394,
	0, 300, 365, 328, 255, 327, 356, 393, 392, 264,
	419, 425, 426, 0, 0, 431, 0, 0, 0, 440,
	445, 446, 447, 449, 450, 451, 452, 0, 0, 0,
	0, 433, 0, 0, 0, 0, 0, 0, 424, 318,
	298, 248, 249, 469, 284, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 423, 0,
	0, 0, 453, 468, 0, 0, 0, 0, 0, 465,
	353, 0, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 405, 417, 434, 437,
	0, 0, 0, 0, 253, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 432, 0, 0, 337, 338, 339,
	340, 301, 0, 271, 435, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 297, 303, 448, 305,
	270, 352, 299, 414, 312, 0, 441, 0, 442, 0,
	0, 0, 0, 344, 308, 309, 378, 313, 322, 366,
	413, 350, 371, 268, 404, 379, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 0, 246, 276,
	277, 282, 466, 463, 395, 467, 0, 250, 0, 320,
	0, 361, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 0, 349, 247, 242, 243, 244,
	245, 0, 0, 0, 420, 421, 422, 444, 406, 0,
	464, 0, 291, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 458, 454, 0,
	455, 0, 0, 0, 0, 459, 380, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	2173, 0, 0, 0, 266, 197, 456, 0, 457, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 385, 402, 267, 376, 415, 272, 383, 262, 348,
	372, 0, 0, 258, 400, 382, 330, 310, 311, 257,
	0, 367, 289, 302, 286, 346, 0, 399, 427, 285,
	418, 0, 410, 260, 0, 409, 345, 396, 401, 331,
	325, 259, 398, 329, 324, 314, 293, 443, 315, 316,
	306, 357, 323, 358, 307, 335, 334, 336, 0, 0,
	0, 0, 0, 438, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 317, 0, 0, 0, 428, 0, 370, 351,
	0, 0, 0, 368, 321, 397, 359, 403, 386, 411,
	364, 360, 251, 387, 288, 332, 263, 265, 283, 290,
	292, 294, 295, 341, 342, 354, 375, 388, 389, 390,
	287, 273, 369, 274, 304, 275, 252, 279, 278, 280,
	377, 281, 254, 355, 394, 0, 300, 365, 328, 255,
	327, 356, 393, 392, 264, 419, 425, 426, 0, 0,
	431, 0, 0, 0, 440, 445, 446, 447, 449, 450,
	451, 452, 0, 0, 0, 0, 433, 0, 0, 0,
	0, 0, 0, 424, 318, 298, 248, 249, 469, 284,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 423, 0, 0, 0, 453, 468, 0,
	0, 0, 0, 0, 465, 353, 0, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 405, 417, 434, 437, 0, 0, 0, 0, 253,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 432,
	0, 0, 337, 338, 339, 340, 301, 0, 271, 435,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 429,
	430, 297, 303, 448, 305, 270, 352, 299, 414, 312,
	0, 441, 0, 442, 0, 0, 0, 0, 344, 308,
	309, 378, 313, 322, 366, 413, 350, 371, 268, 404,
	379, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 246, 276, 277, 282, 466, 463, 395,
	467, 0, 250, 0, 320, 0, 361, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	1969, 247, 242, 243, 244, 245, 349, 0, 0, 420,
	421, 422, 444, 406, 0, 464, 0, 0, 0, 0,
	0, 0, 0, 291, 0, 0, 319, 0, 0, 0,
	0, 470, 458, 0, 0, 0, 0, 0, 0, 454,
	0, 455, 0, 0, 0, 0, 459, 380, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 266, 197, 456, 0, 457,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 385, 402, 267, 376, 415, 272, 383, 262,
	348, 372, 0, 0, 258, 400, 382, 330, 310, 311,
	257, 0, 367, 289, 302, 286, 346, 0, 399, 427,
	285, 418, 0, 410, 260, 0, 409, 345, 396, 401,
	331, 325, 259, 398, 329, 324, 314, 293, 443, 315,
	316, 306, 357, 323, 358, 307, 335, 334, 336, 0,
	0, 0, 0, 0, 438, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 412, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 317, 0, 0, 0, 428, 0, 370,
	351, 0, 0, 0, 368, 321, 397, 359, 403, 386,
	411, 364, 360, 251, 387, 288, 332, 263, 265, 283,
	290, 292, 294, 295, 341, 342, 354, 375, 388, 389,
	390, 287, 273, 369, 274, 304, 275, 252, 279, 278,
	280, 377, 281, 254, 355, 394, 0, 300, 365, 328,
	255, 327, 356, 393, 392, 264, 419, 425, 426, 0,
	0, 431, 0, 0, 0, 440, 445, 446, 447, 449,
	450, 451, 452, 0, 0, 0, 0, 433, 0, 0,
	0, 0, 0, 0, 424, 318, 298, 248, 249, 469,
	284, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 423, 0, 0, 0, 453, 468,
	0, 0, 0, 0, 0, 465, 353, 0, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 405, 417, 434, 437, 0, 0, 0, 0,
	253, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	432, 0, 0, 337, 338, 339, 340, 301, 0, 271,
	435, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 297, 303, 448, 305, 270, 352, 299, 414,
	312, 0, 441, 0, 442, 0, 0, 0, 0, 344,
	308, 309, 378, 313, 322, 366, 413, 350, 371, 268,
	404, 379, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 0, 246, 276, 277, 282, 466, 463,
	395, 467, 0, 250, 0, 320, 0, 361, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	0, 349, 247, 242, 243, 244, 245, 0, 0, 1687,
	420, 421, 422, 444, 406, 0, 464, 0, 291, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 458, 454, 0, 455, 0, 0, 0,
	0, 459, 380, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	266, 197, 456, 0, 457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 385, 402, 267,
	376, 415, 272, 383, 262, 348, 372, 0, 0, 258,
	400, 382, 330, 310, 311, 257, 0, 367, 289, 302,
	286, 346, 0, 399, 427, 285, 418, 0, 410, 260,
	0, 409, 345, 396, 401, 331, 325, 259, 398, 329,
	324, 314, 293, 443, 315, 316, 306, 357, 323, 358,
	307, 335, 334, 336, 0, 0, 0, 0, 0, 438,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 317, 0,
	0, 0, 428, 0, 370, 351, 0, 0, 0, 368,
	321, 397, 359, 403, 386, 411, 364, 360, 251, 387,
	288, 332, 263, 265, 283, 290, 292, 294, 295, 341,
	342, 354, 375, 388, 389, 390, 287, 273, 369, 274,
	304, 275, 252, 279, 278, 280, 377, 281, 254, 355,
	394, 0, 300, 365, 328, 255, 327, 356, 393, 392,
	264, 419, 425, 426, 0, 0, 431, 0, 0, 0,
	440, 445, 446, 447, 449, 450, 451, 452, 0, 0,
	0, 0, 433, 0, 0, 0, 0, 0, 0, 424,
	318, 298, 248, 249, 469, 284, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 423,
	0, 0, 0, 453, 468, 0, 0, 0, 0, 0,
	465, 353, 0, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 405, 417, 434,
	437, 0, 0, 0, 0, 253, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 432, 0, 0, 337, 338,
	339, 340, 301, 0, 271, 435, 363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 430, 297, 303, 448,
	305, 270, 352, 299, 414, 312, 0, 441, 0, 442,
	0, 0, 0, 0, 344, 308, 309, 378, 313, 322,
	366, 413, 350, 371, 268, 404, 379, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 246,
	276, 277, 282, 466, 463, 395, 467, 0, 250, 0,
	320, 0, 361, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 0, 349, 247, 242, 243,
	244, 245, 0, 0, 0, 420, 421, 422, 444, 406,
	0, 464, 0, 291, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 470, 458, 454,
	0, 455, 0, 0, 0, 0, 459, 380, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 1253, 0, 0, 0, 266, 197, 456, 0, 457,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 385, 402, 267, 376, 415, 272, 383, 262,
	348, 372, 0, 0, 258, 400, 382, 330, 310, 311,
	257, 0, 367, 289, 302, 286, 346, 0, 399, 427,
	285, 418, 0, 410, 260, 0, 409, 345, 396, 401,
	331, 325, 259, 398, 329, 324, 314, 293, 443, 315,
	316, 306, 357, 323, 358, 307, 335, 334, 336, 0,
	0, 0, 0, 0, 438, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 412, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 317, 0, 0, 0, 428, 0, 370,
	351, 0, 0, 0, 368, 321, 397, 359, 403, 386,
	411, 1598, 360, 251, 387, 288, 332, 263, 265, 283,
	290, 292, 294, 295, 341, 342, 354, 375, 388, 389,
	390, 287, 273, 369, 274, 304, 275, 252, 279, 278,
	280, 377, 281, 254, 355, 394, 0, 300, 365, 328,
	255, 327, 356, 393, 392, 264, 419, 425, 426, 0,
	0, 431, 0, 0, 0, 440, 445, 446, 447, 449,
	450, 451, 452, 0, 0, 0, 0, 433, 0, 0,
	0, 0, 0, 0, 424, 318, 298, 248, 249, 469,
	284, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 423, 0, 0, 0, 453, 468,
	0, 0, 0, 0, 0, 465, 353, 0, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 405, 417, 434, 437, 0, 0, 0, 0,
	253, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	432, 0, 0, 337, 338, 339, 340, 301, 0, 271,
	435, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 297, 303, 448, 305, 270, 352, 299, 414,
	312, 0, 441, 0, 442, 0, 0, 0, 0, 344,
	308, 309, 378, 313, 322, 366, 413, 350, 371, 268,
	404, 379, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 0, 246, 276, 277, 282, 466, 463,
	395, 467, 0, 250, 0, 320, 0, 361, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	0, 349, 247, 242, 243, 244, 245, 0, 0, 0,
	420, 421, 422, 444, 406, 0, 464, 0, 291, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 458, 454, 0, 455, 0, 0, 0,
	0, 459, 380, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	266, 197, 456, 0, 457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 385, 402, 267,
	376, 415, 272, 383, 262, 348, 372, 0, 0, 258,
	400, 382, 330, 310, 311, 257, 0, 367, 289, 302,
	286, 346, 0, 399, 427, 285, 418, 0, 410, 260,
	0, 409, 345, 396, 401, 331, 325, 259, 398, 329,
	324, 314, 293, 443, 315, 316, 306, 357, 323, 358,
	307, 335, 334, 336, 0, 0, 0, 0, 0, 438,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 1283, 0, 0, 0, 384, 0, 0, 317, 0,
	0, 0, 428, 0, 370, 351, 0, 0, 0, 368,
	321, 397, 359, 403, 386, 411, 364, 360, 251, 387,
	288, 332, 263, 265, 283, 290, 292, 294, 295, 341,
	342, 354, 375, 388, 389, 390, 287, 273, 369, 274,
	304, 275, 252, 279, 278, 280, 377, 281, 254, 355,
	394, 0, 300, 365, 328, 255, 327, 356, 393, 392,
	264, 419, 425, 426, 0, 0, 431, 0, 0, 0,
	440, 445, 446, 447, 449, 450, 451, 452, 0, 0,
	0, 0, 433, 0, 0, 0, 0, 0, 0, 424,
	318, 298, 248, 249, 469, 284, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 423,
	0, 0, 0, 453, 468, 0, 0, 0, 0, 0,
	465, 353, 0, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 405, 417, 434,
	437, 0, 0, 0, 0, 253, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 432, 0, 0, 337, 338,
	339, 340, 301, 0, 271, 435, 363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 430, 297, 303, 448,
	305, 270, 352, 299, 414, 312, 0, 441, 0, 442,
	0, 0, 0, 0, 344, 308, 309, 378, 313, 322,
	366, 413, 350, 371, 268, 404, 379, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 246,
	276, 277, 282, 466, 463, 395, 467, 0, 250, 0,
	320, 0, 361, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 0, 349, 247, 242, 243,
	244, 245, 0, 0, 0, 420, 421, 422, 444, 406,
	0, 464, 0, 291, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 470, 458, 454,
	0, 455, 0, 0, 0, 0, 459, 380, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 266, 197, 456, 0, 457,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 385, 402, 267, 376, 415, 272, 383, 262,
	348, 372, 0, 0, 258, 400, 382, 330, 310, 311,
	257, 0, 367, 289, 302, 286, 346, 0, 399, 427,
	285, 418, 0, 410, 260, 0, 409, 345, 396, 401,
	331, 325, 259, 398, 329, 324, 314, 293, 443, 315,
	316, 306, 357, 323, 358, 307, 335, 334, 336, 0,
	0, 0, 0, 0, 438, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 412, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 317, 0, 0, 0, 428, 0, 370,
	351, 0, 0, 0, 368, 321, 397, 359, 403, 386,
	411, 364, 360, 251, 387, 288, 332, 263, 265, 283,
	290, 292, 294, 295, 341, 342, 354, 375, 388, 389,
	390, 287, 273, 369, 274, 304, 275, 252, 279, 278,
	280, 377, 281, 254, 355, 394, 0, 300, 365, 328,
	255, 327, 356, 393, 392, 264, 419, 425, 426, 0,
	0, 431, 0, 0, 0, 440, 445, 446, 447, 449,
	450, 451, 452, 0, 0, 0, 0, 433, 0, 0,
	0, 0, 0, 0, 424, 318, 298, 248, 249, 469,
	284, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 423, 0, 0, 0, 453, 468,
	0, 0, 0, 0, 0, 465, 353, 0, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 405, 417, 434, 437, 0, 0, 0, 0,
	253, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	432, 0, 0, 337, 338, 339, 340, 301, 0, 271,
	435, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 297, 303, 448, 305, 270, 352, 299, 414,
	312, 0, 441, 0, 442, 0, 0, 0, 0, 344,
	308, 309, 378, 313, 322, 366, 413, 350, 371, 268,
	404, 379, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 752,
	0, 0, 391, 0, 246, 276, 277, 282, 466, 463,
	395, 467, 0, 250, 0, 320, 0, 361, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	0, 349, 247, 242, 243, 244, 245, 0, 0, 0,
	420, 421, 422, 444, 406, 0, 464, 0, 291, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 458, 454, 0, 455, 0, 0, 0,
	0, 459, 380, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	266, 197, 456, 0, 457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 385, 402, 267,
	376, 415, 272, 383, 262, 348, 372, 0, 0, 258,
	400, 382, 330, 310, 311, 257, 0, 367, 289, 302,
	286, 346, 0, 399, 427, 285, 418, 0, 410, 260,
	0, 409, 345, 396, 401, 331, 325, 259, 398, 329,
	324, 314, 293, 443, 315, 316, 306, 357, 323, 358,
	307, 335, 334, 336, 0, 0, 0, 0, 0, 438,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 317, 0,
	0, 0, 428, 0, 370, 351, 0, 0, 0, 368,
	321, 397, 359, 403, 386, 411, 508, 360, 251, 387,
	288, 332, 263, 265, 283, 290, 292, 294, 295, 341,
	342, 354, 375, 388, 389, 390, 287, 273, 369, 274,
	304, 275, 252, 279, 278, 280, 377, 281, 254, 355,
	394, 0, 300, 365, 328, 255, 327, 356, 393, 392,
	264, 419, 425, 426, 0, 0, 431, 0, 0, 0,
	440, 445, 446, 447, 449, 450, 451, 452, 0, 0,
	0, 0, 433, 0, 0, 0, 0, 0, 0, 424,
	318, 298, 248, 249, 469, 284, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 423,
	0, 0, 0, 453, 468, 0, 0, 0, 0, 0,
	465, 353, 0, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 405, 417, 434,
	437, 0, 0, 0, 0, 253, 436, 0, 0, 0,
	0, 0, 0, 509, 0, 408, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 432, 0, 0, 337, 338,
	339, 340, 301, 0, 271, 435, 363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 430, 297, 303, 448,
	305, 270, 352, 299, 414, 312, 0, 441, 0, 442,
	0, 0, 0, 0, 344, 308, 309, 378, 313, 322,
	366, 413, 350, 371, 268, 404, 379, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 246,
	276, 277, 282, 466, 463, 395, 467, 0, 250, 0,
	320, 0, 361, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 0, 349, 247, 242, 243,
	244, 245, 0, 0, 0, 420, 421, 422, 444, 406,
	0, 464, 0, 291, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 470, 458, 454,
	0, 455, 0, 0, 0, 0, 459, 380, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 266, 197, 456, 0, 457,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 385, 402, 267, 376, 415, 272, 383, 262,
	348, 372, 0, 0, 258, 400, 382, 330, 310, 311,
	257, 0, 367, 289, 302, 286, 346, 0, 399, 427,
	285, 418, 0, 410, 260, 0, 409, 345, 396, 401,
	331, 325, 259, 398, 329, 324, 314, 293, 443, 315,
	316, 306, 357, 323, 358, 307, 335, 334, 336, 0,
	0, 0, 0, 0, 438, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	485, 0, 0, 412, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 317, 0, 0, 0, 428, 0, 370,
	351, 0, 0, 0, 368, 321, 397, 359, 403, 386,
	411, 364, 360, 251, 387, 288, 332, 263, 265, 283,
	290, 292, 294, 295, 341, 342, 354, 375, 388, 389,
	390, 287, 273, 369, 274, 304, 275, 252, 279, 278,
	280, 377, 281, 254, 355, 394, 0, 300, 365, 328,
	255, 327, 356, 393, 392, 264, 419, 425, 426, 0,
	0, 431, 0, 0, 0, 440, 445, 446, 447, 449,
	450, 451, 452, 0, 0, 0, 0, 433, 0, 0,
	0, 0, 0, 0, 424, 318, 298, 248, 249, 469,
	284, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 423, 0, 0, 0, 453, 468,
	0, 0, 0, 0, 0, 465, 353, 0, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 405, 417, 434, 437, 0, 0, 0, 0,
	253, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	432, 0, 0, 337, 338, 339, 340, 301, 0, 271,
	435, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 297, 303, 448, 305, 270, 352, 299, 414,
	312, 0, 441, 0, 442, 0, 0, 0, 0, 344,
	308, 309, 378, 313, 322, 366, 413, 350, 371, 268,
	404, 379, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 0, 246, 276, 277, 282, 466, 463,
	395, 467, 0, 250, 0, 320, 0, 361, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	0, 349, 247, 242, 243, 244, 245, 0, 0, 0,
	420, 421, 422, 444, 406, 0, 464, 475, 291, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 458, 454, 0, 455, 0, 0, 0,
	0, 459, 380, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	266, 197, 456, 0, 457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 385, 402, 267,
	376, 415, 272, 383, 262, 348, 372, 0, 0, 258,
	400, 382, 330, 310, 311, 257, 0, 367, 289, 302,
	286, 346, 0, 399, 427, 285, 418, 0, 410, 260,
	0, 409, 345, 396, 401, 331, 325, 259, 398, 329,
	324, 314, 293, 443, 315, 316, 306, 357, 323, 358,
	307, 335, 334, 336, 0, 0, 0, 0, 0, 438,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 317, 0,
	0, 0, 428, 0, 370, 351, 0, 0, 0, 368,
	321, 397, 359, 403, 386, 411, 364, 360, 251, 387,
	288, 332, 263, 265, 283, 290, 292, 294, 295, 341,
	342, 354, 375, 388, 389, 390, 287, 273, 369, 274,
	304, 275, 252, 279, 278, 280, 377, 281, 254, 355,
	394, 0, 300, 365, 328, 255, 327, 356, 393, 392,
	264, 419, 425, 426, 0, 0, 431, 0, 0, 0,
	440, 445, 446, 447, 449, 450, 451, 452, 0, 0,
	0, 0, 433, 0, 0, 0, 0, 0, 0, 424,
	318, 298, 248, 249, 469, 284, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 423,
	0, 0, 0, 453, 468, 0, 0, 0, 0, 0,
	465, 353, 0, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 405, 417, 434,
	437, 0, 0, 0, 0, 253, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 432, 0, 0, 337, 338,
	339, 340, 301, 0, 271, 435, 363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 430, 297, 303, 448,
	305, 270, 352, 299, 414, 312, 0, 441, 0, 442,
	0, 0, 0, 0, 344, 308, 309, 378, 313, 322,
	366, 413, 350, 371, 268, 404, 379, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 246,
	276, 277, 282, 466, 463, 395, 467, 0, 250, 0,
	320, 0, 361, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 0, 349, 247, 242, 243,
	244, 245, 0, 0, 0, 420, 421, 422, 444, 406,
	0, 464, 0, 291, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 470, 458, 454,
	0, 455, 0, 0, 0, 0, 459, 380, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 266, 197, 456, 0, 457,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 385, 402, 267, 376, 415, 272, 383, 262,
	348, 372, 0, 0, 258, 400, 382, 330, 310, 311,
	257, 0, 367, 289, 302, 286, 346, 0, 399, 427,
	285, 418, 0, 410, 260, 0, 409, 345, 396, 401,
	331, 325, 259, 398, 329, 324, 314, 293, 443, 315,
	316, 306, 357, 323, 358, 307, 335, 334, 336, 0,
	0, 0, 0, 0, 438, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 412, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 317, 0, 0, 0, 428, 0, 370,
	351, 0, 0, 0, 368, 321, 397, 359, 403, 386,
	411, 364, 360, 251, 387, 288, 332, 263, 265, 283,
	290, 292, 294, 295, 341, 342, 354, 375, 388, 389,
	390, 287, 273, 369, 274, 304, 275, 252, 279, 278,
	280, 377, 281, 254, 355, 394, 0, 300, 365, 328,
	255, 327, 356, 393, 392, 264, 419, 425, 426, 0,
	0, 431, 0, 0, 0, 440, 445, 446, 447, 449,
	450, 451, 452, 0, 0, 0, 0, 433, 0, 0,
	0, 0, 0, 0, 424, 318, 298, 248, 249, 469,
	284, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 423, 0, 0, 0, 453, 468,
	0, 0, 0, 0, 0, 465, 353, 0, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 405, 417, 434, 437, 0, 0, 0, 0,
	253, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	432, 0, 0, 337, 338, 339, 340, 301, 0, 271,
	435, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 297, 303, 448, 305, 270, 352, 299, 414,
	312, 0, 441, 0, 442, 0, 0, 0, 0, 344,
	308, 309, 378, 313, 322, 366, 413, 350, 371, 268,
	404, 379, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 0, 246, 276, 277, 282, 466, 463,
	395, 467, 0, 250, 0, 320, 0, 361, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	0, 349, 247, 242, 243, 244, 245, 0, 0, 0,
	420, 421, 422, 444, 406, 0, 464, 0, 291, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 458, 454, 0, 455, 0, 0, 0,
	0, 459, 380, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	266, 197, 456, 0, 457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 385, 1233, 267,
	376, 415, 272, 383, 262, 348, 372, 0, 0, 258,
	400, 382, 330, 310, 311, 257, 0, 367, 289, 302,
	286, 346, 0, 399, 427, 285, 418, 0, 410, 260,
	0, 409, 345, 396, 401, 331, 325, 259, 398, 329,
	324, 314, 293, 443, 315, 316, 306, 357, 323, 358,
	307, 335, 334, 336, 0, 0, 0, 0, 0, 438,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 317, 0,
	0, 0, 428, 0, 370, 351, 0, 0, 0, 368,
	321, 397, 359, 403, 386, 411, 364, 360, 251, 387,
	288, 332, 263, 265, 283, 290, 292, 294, 295, 341,
	342, 354, 375, 388, 389, 390, 287, 273, 369, 274,
	304, 275, 252, 279, 278, 280, 377, 281, 254, 355,
	394, 0, 300, 365, 328, 255, 327, 356, 393, 392,
	264, 419, 425, 426, 0, 0, 431, 0, 0, 0,
	440, 445, 446, 447, 449, 450, 451, 452, 0, 0,
	0, 0, 433, 0, 0, 0, 0, 0, 0, 424,
	318, 298, 248, 249, 469, 284, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 423,
	0, 0, 0, 453, 468, 0, 0, 0, 0, 0,
	465, 353, 0, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 405, 417, 434,
	437, 0, 0, 0, 0, 253, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 432, 0, 0, 337, 338,
	339, 340, 301, 0, 271, 435, 363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 430, 297, 303, 448,
	305, 270, 352, 299, 414, 312, 0, 441, 0, 442,
	0, 0, 0, 0, 344, 308, 309, 378, 313, 322,
	366, 413, 350, 371, 268, 404, 379, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 246,
	276, 277, 282, 466, 463, 395, 467, 0, 250, 0,
	320, 0, 361, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 0, 349, 247, 242, 243,
	244, 245, 0, 0, 0, 420, 421, 422, 444, 406,
	0, 464, 0, 291, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 470, 458, 454,
	0, 455, 0, 0, 0, 0, 459, 380, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 266, 197, 456, 0, 457,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 385, 1231, 267, 376, 415, 272, 383, 262,
	348, 372, 0, 0, 258, 400, 382, 330, 310, 311,
	257, 0, 367, 289, 302, 286, 346, 0, 399, 427,
	285, 418, 0, 410, 260, 0, 409, 345, 396, 401,
	331, 325, 259, 398, 329, 324, 314, 293, 443, 315,
	316, 306, 357, 323, 358, 307, 335, 334, 336, 0,
	0, 0, 0, 0, 438, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 412, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 317, 0, 0, 0, 428, 0, 370,
	351, 0, 0, 0, 368, 321, 397, 359, 403, 386,
	411, 364, 360, 251, 387, 288, 332, 263, 265, 283,
	290, 292, 294, 295, 341, 342, 354, 375, 388, 389,
	390, 287, 273, 369, 274, 304, 275, 252, 279, 278,
	280, 377, 281, 254, 355, 394, 0, 300, 365, 328,
	255, 327, 356, 393, 392, 264, 419, 425, 426, 0,
	0, 431, 0, 0, 0, 440, 445, 446, 447, 449,
	450, 451, 452, 0, 0, 0, 0, 433, 0, 0,
	0, 0, 0, 0, 424, 318, 298, 248, 249, 469,
	284, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 423, 0, 0, 0, 453, 468,
	0, 0, 0, 0, 0, 465, 353, 0, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 405, 417, 434, 437, 0, 0, 0, 0,
	253, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	432, 0, 0, 337, 338, 339, 340, 301, 0, 271,
	435, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 297, 303, 448, 305, 270, 352, 299, 414,
	312, 0, 441, 0, 442, 0, 0, 0, 0, 344,
	308, 309, 378, 313, 322, 366, 413, 350, 371, 268,
	404, 379, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 0, 246, 276, 277, 282, 466, 463,
	395, 467, 0, 250, 0, 320, 0, 361, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	0, 349, 247, 242, 243, 244, 245, 0, 0, 0,
	420, 421, 422, 444, 406, 0, 464, 0, 291, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 458, 454, 0, 455, 0, 0, 0,
	0, 459, 380, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	266, 197, 456, 0, 457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 385, 402, 267,
	376, 415, 272, 383, 262, 348, 372, 0, 0, 258,
	400, 382, 330, 310, 311, 257, 0, 367, 289, 302,
	286, 346, 0, 399, 427, 285, 418, 0, 410, 260,
	0, 409, 345, 396, 401, 331, 325, 259, 398, 329,
	324, 314, 293, 443, 315, 316, 306, 357, 323, 358,
	307, 335, 334, 336, 0, 0, 0, 0, 0, 438,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 317, 0,
	0, 0, 428, 0, 370, 351, 0, 0, 0, 368,
	321, 397, 359, 403, 386, 411, 364, 360, 251, 387,
	288, 332, 263, 265, 549, 290, 292, 294, 295, 341,
	342, 354, 375, 388, 389, 390, 287, 273, 369, 274,
	304, 275, 252, 279, 278, 280, 377, 281, 254, 355,
	394, 0, 300, 365, 328, 255, 327, 356, 393, 392,
	264, 419, 425, 426, 0, 0, 431, 0, 0, 0,
	440, 445, 446, 447, 449, 450, 451, 452, 0, 0,
	0, 0, 433, 0, 0, 0, 0, 0, 0, 424,
	318, 298, 248, 249, 469, 284, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 423,
	0, 0, 0, 453, 468, 0, 0, 0, 0, 0,
	465, 353, 0, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 405, 417, 434,
	437, 0, 0, 0, 0, 253, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 432, 0, 0, 337, 338,
	339, 340, 301, 0, 271, 435, 363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 430, 297, 303, 448,
	305, 270, 352, 299, 414, 312, 0, 441, 0, 442,
	0, 0, 0, 0, 344, 308, 309, 378, 313, 322,
	366, 413, 350, 371, 268, 404, 379, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 896, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 246,
	276, 277, 282, 466, 463, 395, 467, 0, 250, 0,
	320, 0, 361, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 896,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 0, 0, 247, 242, 243,
	244, 245, 0, 0, 0, 420, 421, 422, 444, 406,
	1675, 464, 0, 0, 0, 1637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 470, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 882, 0, 0,
	0, 872, 0, 0, 1677, 1646, 0, 0, 0, 0,
	0, 0, 0, 0, 1678, 1679, 0, 904, 908, 910,
	912, 914, 915, 917, 0, 922, 918, 919, 920, 921,
	0, 899, 900, 901, 902, 880, 881, 905, 0, 883,
	1645, 884, 885, 886, 887, 888, 889, 890, 891, 892,
	895, 897, 893, 894, 903, 1652, 0, 0, 0, 882,
	0, 0, 907, 909, 911, 913, 916, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 904,
	908, 910, 912, 914, 915, 917, 0, 922, 918, 919,
	920, 921, 0, 899, 900, 901, 902, 880, 881, 905,
	898, 883, 0, 884, 885, 886, 887, 888, 889, 890,
	891, 892, 895, 897, 893, 894, 903, 0, 744, 0,
	745, 0, 1668, 0, 907, 909, 911, 913, 916, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1675, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 726, 0, 0, 0,
	0, 0, 898, 0, 0, 0, 0, 0, 0, 739,
	0, 735, 0, 0, 0, 0, 0, 0, 1677, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1636, 1638, 1635, 0, 1632, 0, 0,
	0, 0, 1656, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1662, 0, 0, 0, 0, 0, 3402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1652,
	0, 0, 0, 1650, 1684, 0, 0, 1651, 1653, 1655,
	0, 1657, 1658, 1659, 1663, 1664, 1665, 1667, 1670, 1671,
	1672, 0, 0, 0, 0, 0, 0, 0, 1660, 1669,
	1661, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1676, 0, 0, 0, 1668, 1675, 741, 0,
	734, 0, 0, 0, 0, 0, 0, 0, 0, 738,
	737, 0, 0, 0, 1633, 1634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 0, 0, 0,
	727, 1677, 1673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1649,
	0, 0, 0, 0, 0, 0, 1648, 1675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 0, 733, 0, 1656, 906, 732, 0,
	1666, 0, 1652, 0, 719, 0, 0, 1662, 725, 1654,
	0, 1677, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1681, 1680, 0, 0, 723, 1650, 1684, 0,
	0, 1651, 1653, 1655, 0, 1657, 1658, 1659, 1663, 1664,
	1665, 1667, 1670, 1671, 1672, 0, 0, 0, 0, 0,
	0, 0, 1660, 1669, 1661, 0, 0, 0, 0, 906,
	0, 0, 1652, 742, 0, 3129, 0, 0, 0, 1668,
	0, 0, 0, 0, 1642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1676, 0, 0, 724,
	0, 0, 528, 527, 534, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 532, 0, 533, 537, 0,
	0, 519, 0, 0, 0, 0, 1683, 0, 0, 1682,
	0, 542, 0, 0, 0, 0, 1673, 0, 0, 1668,
	0, 0, 528, 527, 534, 524, 0, 0, 0, 0,
	0, 0, 0, 1649, 531, 532, 0, 533, 537, 1656,
	1648, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	1662, 542, 0, 0, 546, 740, 0, 548, 0, 0,
	0, 0, 547, 0, 1666, 0, 0, 0, 0, 0,
	1650, 1684, 0, 1654, 1651, 1653, 1655, 0, 1657, 1658,
	1659, 1663, 1664, 1665, 1667, 1670, 1671, 1672, 0, 0,
	0, 0, 0, 0, 730, 1660, 1669, 1661, 0, 1656,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1662, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1676,
	1650, 1684, 0, 0, 1651, 1653, 1655, 0, 1657, 1658,
	1659, 1663, 1664, 1665, 1667, 1670, 1671, 1672, 0, 0,
	0, 0, 0, 0, 0, 1660, 1669, 1661, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1673,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1649, 0, 0, 1676,
	0, 0, 0, 1648, 0, 0, 0, 0, 520, 522,
	521, 0, 0, 0, 0, 0, 0, 0, 526, 0,
	0, 0, 0, 0, 0, 0, 0, 1666, 0, 0,
	530, 0, 0, 0, 0, 0, 1654, 545, 0, 1673,
	0, 0, 0, 0, 523, 0, 0, 0, 520, 522,
	521, 0, 0, 0, 0, 0, 1649, 0, 526, 0,
	0, 0, 0, 1648, 0, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 0, 0, 523, 0, 0, 1666, 0, 0,
	0, 0, 0, 0, 0, 0, 1654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	529, 535, 0, 536, 538, 0, 0, 539, 540, 541,
	0, 0, 543, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	529, 535, 0, 536, 538, 0, 0, 539, 540, 541,
	0, 0, 543, 544,
}

var yyPact = [...]int{
	304, -1000, -1000, -1000, -329, 10332, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35944,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35944,
	-325, 35389, 35389, -1000, -1000, 2322, -1000, 34834, 11475, 35944,
	341, 340, 35944, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 773, -1000, 34279, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 733, 3562, 37609, 8038, -257, -1000, 1462, -96, 2216,
	953, 961, 1018, 1018, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 38293, 796, 33724,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3216, 522, 796, 13701, 25, 20, 1462, 361, -145,
	-141, -146, 2399, -1000, 1294, 3282, 161, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8038, 8038,
	10332, -353, 10332, 8038, 35944, 35944, -1000, -1000, -1000, -1000,
	733, 3562, 8038, 2216, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -141, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -145, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -146, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 20, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	38077, -1000, 1471, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2694, 1470, 2207, 651, 35944, -1000, 1469, 651, -1000,
	-1000, -1000, 1462, 3098, -1000, 35944, 35944, 97, 1641, -1000,
	386, 323, 353, 1466, -1000, -1000, -1000, -1000, -1000, -1000,
	503, 3078, -1000, 35944, 35944, 2723, 35944, -1000, 2017, 536,
	38690, 2918, 1308, 833, 2750, -1000, -1000, 2693, -1000, 214,
	270, 221, 558, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	255, -1000, 2945, -1000, -1000, 215, -1000, -1000, 231, -1000,
	-1000, -1000, 12, -1000, -1000, -1000, -1000, -1000, -1000, -71,
	-1000, -1000, 978, 1936, 8038, -1000, 2224, -1000, 3002, -1000,
	-1000, -1000, -1000, 5176, 9751, 9751, 9751, 9751, -1000, -1000,
	2536, 8038, 2690, 2682, 2680, -1000, -1000, -1000, -1000, -1000,
	1459, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1819, -1000, -1000, -1000, 9180, -1000, 2678, 2676, 2675, 2674,
	2672, 2671, 2670, 2668, 2667, 2662, 2658, 2656, 2655, 2646,
	2429, 10894, 2644, 2206, 2205, 2641, 2640, 2639, 2203, 2429,
	2429, 2634, 2628, 2612, 2611, 2602, 2601, 2590, 2588, 2587,
	2584, 2578, 2577, 2574, 2573, 2572, 2571, 2564, 2561, 2560,
	2559, 2558, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1300, -1000, 2552, 3100, 2438,
	-1000, 2955, 2950, 2948, 2943, -311, 2551, 1983, -1000, -1000,
	63, -1000, -124, -1000, -1000, 939, -1000, 930, -1000, 35944,
	35944, 144, 915, 729, 729, 729, 729, 729, 754, 729,
	2994, 771, 765, 764, 729, -94, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1639, 1631, 2811, 855, -1000, -1000, -1000,
	-1000, 1309, 35944, -1000, 2503, 1552, 1552, 2993, 606, 596,
	556, 1552, 431, -1000, 1633, 1633, 1633, 1633, 1552, 428,
	640, 2998, 2998, 22, 1633, 3, 1552, 1552, 3, 1552,
	1552, 1552, 170, -317, -1000, -1000, -1000, -1000, 1633, 1633,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2980, 2979, 733,
	733, 35944, 154, 35944, 733, 733, 733, 741, -31, 37054,
	36499, 2017, 534, 532, 1325, 1661, -1000, 1584, 35944, 35944,
	1584, 1584, 18172, 17617, -1000, 35944, -1000, 3100, 2438, 2372,
	1468, 2371, 2438, -150, -152, -154, 733, 733, 733, 733,
	733, 165, 733, 733, 733, 733, 733, 35944, 35944, 33169,
	733, 733, 6889, 6889, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 10332, 1880, 1924, 159, -68, -324, 213,
	-1000, -1000, 35944, 2877, 204, -1000, -1000, -1000, 2446, -1000,
	2487, 2487, 2487, 2487, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2487, 2487, 2496, 2550, -1000, -1000, 2485,
	2485, 2485, 2446, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2492, 2492,
	2493, 2493, 2492, 35944, 8038, 35944, 2905, 331, 2543, -1000,
	35944, 330, 3100, 2893, 2998, 3045, -1000, -1000, 1454, 1981,
	2202, -1000, -1000, 386, 1531, -1000, 989, -1000, -1000, -1000,
	-1000, 35944, -71, 354, -1000, -1000, 2184, 2540, -1000, 527,
	1267, 1293, -1000, 217, 38730, 28723, 2017, 28723, 35944, -1000,
	-1000, -1000, -1000, -1000, -1000, 9, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 201,
	-1000, 8038, 8038, 8038, 8038, 8038, -1000, 543, 8609, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 9751, 9751, 9751, 9751,
	9751, 9751, 9751, 9751, 9751, 9751, 9751, 9751, 2534, 1640,
	9751, 9751, 9751, 9751, 1468, 2659, 1324, 234, -1000, -1000,
	-1000, -1000, -1000, 1700, 1936, 8038, 8038, 8038, 35944, -1000,
	-1000, 3348, 8038, 8038, 183, 8038, 2941, 8038, 8038, 8038,
	2362, 3940, 35944, 8038, -1000, 2360, 2359, -1000, -1000, 1828,
	8038, -1000, -1000, 8038, -1000, -1000, 8038, 9751, 8038, -1000,
	-1000, -1000, 1163, 2941, 2941, 1672, 8038, 8038, 2941, 2941,
	2941, 1606, 2941, 2941, 2941, 2941, 2941, 2941, 2941, 2941,
	2358, 2351, 2349, 2998, -257, -1000, 6318, 2893, 2998, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -313,
	2539, 35944, 2194, 2193, -339, -27, 951, 936, 941, -1000,
	2934, -1000, 2538, 35944, 729, 729, -135, 729, -1000, 35944,
	1729, 28723, 35944, 35944, 2017, 35944, 35944, 35944, 729, 729,
	729, 35944, -1000, 2843, 28723, 2817, 741, -1000, 35944, 1309,
	2933, 35944, 3054, 9751, 9751, -1000, 32614, 1633, 1552, 1552,
	-1000, -1000, 35944, -1000, -1000, -1000, 1633, 35944, 1633, 1633,
	3054, 1633, -1000, -1000, -1000, 1552, 1552, -1000, -1000, 8038,
	-1000, -1000, 1633, 1633, -1000, -1000, 3054, 35944, 8, 3054,
	3054, -3, -1000, -1000, -1000, 35944, 35944, 729, 35944, -1000,
	35944, 35944, -1000, -1000, 35944, 35944, 38194, 35944, 32059, 2964,
	-1000, 28723, 35944, 35944, 26503, -1000, 1245, -1000, -23, -1000,
	-29, -31, 1584, -31, 1584, -1000, 521, 548, 16500, 464,
	28723, 4561, -1000, -1000, 1584, 1584, 4561, 4561, 1485, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1301, -1000, 189, 2998,
	-1000, -1000, -1000, -1000, -1000, 1979, 1978, 1976, 35944, 35944,
	28723, 2017, 35944, 733, 35944, 35944, 35944, 35944, 35944, -1000,
	2537, 1451, -1000, 2909, 35944, 35944, 1283, -1000, -1000, 13146,
	1450, 1283, -1000, 1664, -1000, 8038, 10332, -296, 8038, 10332,
	10332, 8038, 10332, -1000, 8038, 164, -1000, -1000, -1000, -1000,
	1975, -1000, 1973, -1000, -1000, -1000, -1000, -1000, 2192, 2192,
	-1000, 1959, -1000, -1000, -1000, -1000, 1943, -1000, -1000, 1940,
	-1000, -1000, -1000, 2348, 978, -1000, 2185, 2743, -258, -1000,
	15382, 35944, 35944, -1000, -1000, -258, -1000, 14819, 35944, 2998,
	-1000, -271, 2893, 8038, 35944, -1000, 2991, -1000, 386, 288,
	-1000, -1000, -1000, -1000, -1000, -1000, 1448, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1292, -1000, 35944, -1000,
	-1000, 217, 28723, 29833, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 209, -1000, -1000, 172, -1000, 751, 124, 1526, -1000,
	-1000, 153, 177, 101, 849, 1936, -1000, 1744, 1744, 1735,
	-1000, 714, -1000, -1000, -1000, -1000, 2536, -1000, -1000, -1000,
	2010, 2861, -1000, 1500, 1500, 1438, 1438, 1438, 1438, 1438,
	1551, 1551, -1000, -1000, -1000, 5176, 2534, 9751, 9751, 9751,
	9751, 683, 683, 3380, 3493, -1000, 8038, 1663, -1000, 8038,
	2388, 2130, 1298, 1445, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2346, 2345, 2051, 3077, 2341, 8038,
	-1000, -1000, 1524, 1511, 1510, -1000, 2125, 7467, -1000, -1000,
	-1000, 2339, 1435, 2338, -1000, -1000, -1000, 2337, 1508, 1049,
	2324, 2562, 2323, 1291, 8038, 8038, 8038, 2319, 1505, 1504,
	8038, 8038, 8038, 8038, 2318, 8038, 8038, 8038, 8038, 8038,
	8038, 8038, 8038, 50, 50, 50, -1000, -1000, 1494, -1000,
	1936, -1000, -1000, 2893, -1000, 2529, 1931, 1289, -1000, -1000,
	-1000, 2135, -1000, -1000, 945, 920, 933, 35944, 1001, 2526,
	35944, 35944, 729, 35944, 156, -1000, 2890, 1096, -1000, 124,
	-80, 381, 1010, 2710, 3076, -176, 35944, 35944, 35944, 2932,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 31504, -1000,
	2525, 1457, -1000, -1000, 8038, -1000, -1000, 2709, 35944, 35944,
	3054, 3054, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1633,
	3054, 3054, 1330, 1552, 1633, -1000, -1000, 1633, -1000, -1000,
	1633, -1000, 1404, -1000, 35944, -1000, -1000, -1000, 2931, 2503,
	1249, -1000, 1187, 716, 716, 928, 770, 3026, 14256, -1000,
	1593, 1229, 750, 2862, 228, -1000, 1593, -208, 1593, 1593,
	1593, 1593, 1593, 1593, 1593, 495, 480, 1593, 1593, 1593,
	1593, 1593, 1593, 1593, 1593, 1593, 1593, 1593, 960, 1593,
	1593, 1593, 1593, 1593, -1000, 1593, 2524, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 566, 155, 2963, 268, 267, 1096,
	2961, 283, 2661, 1204, -1000, -1000, -1000, -1000, 20398, 20398,
	15945, 20398, -1000, 1535, -31, -38, -1000, -1000, 1245, 4561,
	1245, 4561, -1000, -1000, 749, -1000, -1000, 1010, -1000, 35944,
	35944, -1000, -1000, 2522, 1630, -1000, -1000, 10894, -1000, 4561,
	4561, -1000, -1000, 20953, 35944, -1000, -73, -1000, -55, 2893,
	-1000, -1000, -1000, 1226, -1000, -1000, 1238, 1010, 2737, 35944,
	1226, 1226, 1226, -1000, -1000, 12030, 35944, 35944, -1000, -1000,
	3054, 6889, -1000, 26503, -1000, -1000, 30943, -1000, 30388, 3054,
	1659, -1000, 10332, 1857, 152, -1000, 198, -327, 151, 1788,
	149, 1936, -1000, -1000, 2316, 2313, 1456, -1000, 1442, 2306,
	1431, 1429, -1000, -19, -1000, 2882, 1020, -1000, 2518, -1000,
	1426, 2808, -1000, 1210, -1000, 1629, 1420, -1000, 1020, 1419,
	2806, 1210, 2893, 2180, -1000, 1199, -1000, 1942, 1403, 96,
	-1000, -1000, 35944, 2184, 1417, 29833, 1104, -1000, 748, 1396,
	1395, -1000, 28723, 200, 28723, -1000, 28723, -1000, -1000, 324,
	-1000, 35944, 2891, -1000, -1000, -1000, 2135, 1627, -345, 35944,
	-1000, -1000, -1000, -1000, -1000, 1416, -1000, 683, 683, 3380,
	3474, -1000, 9751, -1000, 9751, 2636, 1656, -1000, 8038, 1825,
	3578, 3578, 1678, 19282, 35944, -1000, -1000, 8038, 8038, -1000,
	2603, -1000, -1000, -1000, -1000, 8038, 8038, 1953, -1000, 35944,
	-1000, -1000, -1000, -1000, 19282, -1000, 9751, -1000, 8038, 1158,
	2579, 1415, 50, 50, 50, 2569, 2565, 2519, 1414, 50,
	2482, 2461, 2431, 2425, 2413, 2395, 2379, 2365, -1000, 2517,
	-1000, -1000, 6318, -1000, -1000, 239, 1186, 1926, 115, -1000,
	1626, -1000, -1000, -1000, 918, 180, 2302, 1183, -1000, -1000,
	35944, -1000, -1000, -1000, 12030, 2503, 249, 35944, 2503, 64,
	1593, -1000, 549, 28723, 528, -1000, 35944, 1821, 1624, 2735,
	474, 2871, 35944, 2515, 2514, 2513, 2507, 325, 38139, 35944,
	1137, -1000, 1353, 3282, -1000, 35944, 1936, -1000, 2017, -1000,
	1552, -1000, -1000, 3054, -1000, -1000, 8038, 8038, 3054, 1552,
	1552, 1633, 35944, -1000, 325, 38139, 2930, 38194, -1000, 35944,
	-1000, -1000, -1000, 674, -1000, 888, 729, 35944, 1769, 888,
	1766, 2505, -1000, -1000, 35944, 35944, 35944, 35944, -1000, -1000,
	35944, -1000, 35944, 35944, 35944, 35944, -1000, 35944, 35944, -1000,
	35944, 1765, 1764, 2911, -1000, 1593, 1593, 883, -1000, -1000,
	523, -1000, 1923, 1918, 1917, 1916, 2179, 2177, 2170, 1593,
	1593, 1914, 2169, 29278, 2167, 1067, 1913, 1902, 1889, 1911,
	2160, 956, -1000, 2157, 1903, 1899, 1887, 35944, 2504, 2085,
	-1000, -1000, 64, 1593, 265, 35944, 1621, 549, 360, 1929,
	17062, 35944, 26503, 26503, 26503, 26503, -1000, 2767, 2763, -1000,
	2787, 2783, 2795, 35944, 26503, 2503, -1000, 29278, -1000, -1000,
	-1000, 1468, 1401, 2724, 910, 8038, -1000, -1000, -43, -60,
	-1000, -1000, -1000, 28723, 2141, 464, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2990, 35944, 35944, 686, 2300, 1181, -1000,
	-1000, -1000, 38139, 2487, 2487, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2487, 2487, 2496, -1000, -1000, 2485,
	2485, 2485, 2446, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2492, 2492, 2493, 2493, 2492, -1000, -1000, 3049,
	-1000, 1174, -1000, -1000, 1352, -1000, 3049, 1709, -334, 10332,
	1677, 1635, -1000, 8038, 10332, 8038, -298, 247, -300, -1000,
	-1000, -1000, 2140, -1000, -1000, -1000, 1881, -1000, 1879, 67,
	83, 1760, -258, 6318, 350, 35944, -258, 35944, 6318, -1000,
	35944, 337, -258, 2990, -19, 8038, 2842, -1000, -1000, 35944,
	1868, -1000, -1000, -1000, 3071, 28723, 2017, 1512, 28168, -1000,
	205, -1000, 199, 541, 2138, -1000, 763, 112, 2137, 2135,
	-1000, -1000, -1000, -1000, 9751, -1000, -1000, -1000, -1000, 1936,
	8038, 2299, -1000, 909, 909, 2290, 2279, -1000, 2487, 2487,
	-1000, 2446, 2485, 2446, 909, 909, 2278, -1000, 1948, 2361,
	-1000, 2327, 2303, 8038, -1000, 2276, 3354, 1222, -102, 50,
	50, -1000, -1000, -1000, -1000, 50, 50, 50, 50, -1000,
	50, 50, 50, 50, 50, 50, 50, 50, 661, -1000,
	2246, 1164, -1000, -1000, -1000, -1000, -1000, 183, 1161, -1000,
	2135, 2134, -1000, 2132, 2123, 1001, 38139, 2245, 2929, 12585,
	2928, 2484, 2480, 2922, 1996, -1000, -1000, -1000, 27613, 476,
	-1000, -1000, -1000, 634, 223, 1866, 484, -1000, 35944, 283,
	2831, 1620, 2122, 35944, -1000, -1000, -1000, -1000, -1000, 2871,
	-1000, 1132, 312, 25393, 12585, 12585, 12585, 315, 1637, -1000,
	651, 1039, 1350, 26503, 35944, -1000, 25948, 2242, -1000, 1010,
	3054, -1000, 1936, 1936, -1000, 3054, 3054, 1552, -1000, 315,
	-1000, 338, -1000, 2845, 38139, -1000, 35944, -1000, 35944, -1000,
	35944, 35944, 729, 8038, 2845, 35944, 740, -1000, -1000, 1027,
	303, 652, 652, 1133, -1000, 2887, -1000, -1000, -1000, 35944,
	-1000, -1000, -1000, -1000, -1000, -1000, 19282, 19282, 2960, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2114, 2112, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 35944, 1375, -1000, 1616, 1996, 27613, 1615, 1584,
	2105, 476, 1821, 1614, -1000, 2104, -1000, 1051, 35944, 35944,
	-1000, 1148, -1000, 1610, 2704, 2733, 2704, -1000, -1000, -1000,
	-1000, 2673, -1000, 2576, -1000, -1000, 1148, -1000, -1000, -1000,
	-1000, -1000, 910, -1000, 2988, 888, 888, 888, 2241, -1000,
	-1000, -1000, 1104, 2239, -1000, -1000, -1000, 3096, -1000, -1000,
	-1000, -1000, -1000, -1000, 12030, 2870, 3047, 3022, 27058, 3047,
	-1000, -334, 1568, -1000, 1771, 146, 1710, 35944, -1000, -1000,
	-1000, 2234, 2232, -274, 88, 3019, 3018, 959, -1000, 2230,
	1077, -258, -1000, -1000, 1020, -1000, -1000, -1000, -258, -1000,
	1020, -1000, 67, -1000, -1000, 2858, -1000, -1000, 2017, -1000,
	178, -1000, -1000, -1000, -1000, -1000, -1000, 122, -1000, 35944,
	-1000, 1074, 109, -1000, 1936, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 8038, -1000, -1000, -1000, 2222, -1000, -1000, 8038, 2228,
	2103, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3100, -1000, 3017, -1000, 8038,
	2227, 183, -1000, -1000, -1000, -1000, -1000, -1000, 779, 338,
	2225, 1060, -1000, -1000, -1000, -1000, 338, 24283, 12585, 338,
	-1000, 2097, 121, -1000, -1000, -1000, 2096, 2092, 1865, -1000,
	-1000, 1886, 1335, 158, -1000, -1000, -1000, -1000, -1000, -1000,
	1929, 1859, 1609, -350, -1000, 2479, -1000, 1593, 1593, 1593,
	35944, 1374, -1000, 1593, 1593, 2181, 2171, 2099, 667, 1587,
	1570, -1000, 1864, 20398, 26503, 25948, 1144, -1000, 1339, -1000,
	-1000, -1000, -1000, -1000, 3054, 667, -1000, -1000, -1000, 35944,
	280, 2478, -1000, 2466, 2702, 390, 2465, 2464, 35944, 2189,
	-1000, 2845, 35944, 627, 2867, -1000, -1000, -1000, -1000, -1000,
	437, -1000, 35944, -1000, -1000, 1446, -1000, 19282, -1000, -1000,
	1371, -1000, 2085, 2084, -1000, 121, 2082, 4561, -1000, -1000,
	2831, 2079, -1000, 35944, 1051, 1051, 3100, 35944, 6318, -1000,
	-1000, 8038, 2463, -1000, 8038, -1000, -1000, -1000, -1000, -1000,
	2456, 2849, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1530,
	-1000, 8038, 8038, -1000, -1000, 725, 10332, -303, 240, -1000,
	-1000, -1000, -276, 2078, -1000, -1000, 3016, 2058, 2012, 35944,
	-1000, -1000, 1020, 1020, -274, -1000, -1000, 1010, -1000, -1000,
	-3, 499, -1000, 2176, -1000, 2166, 50, -1000, 181, 8038,
	2094, -1000, 2091, 38139, -180, -181, 12585, -1000, 1360, -1000,
	1593, 1593, 2056, -180, -1000, -1000, 313, -1000, -1000, 273,
	-1000, -1000, 1876, 504, -1000, -1000, -1000, 1608, 1782, 2029,
	23728, 19282, 19837, 2053, -1000, -1000, 25393, 1530, 1530, 38581,
	201, 38581, 967, 1567, -1000, 1862, -1000, 1860, -1000, 3054,
	1144, 1339, -1000, -1000, 1509, -1000, 967, -1000, -1000, 280,
	-1000, -1000, 1786, 9751, -1000, -1000, 2049, 19837, 790, 1607,
	1601, 739, 2451, -1000, 444, 3089, -1000, -1000, -1000, 847,
	2450, -1000, 1756, 1741, -1000, 35944, -1000, 23728, 23728, 611,
	611, 23728, 23728, 2447, 652, -1000, -1000, 9751, -1000, -1000,
	-1000, -1000, 1593, 1405, -1000, -1000, -1000, -1000, -1000, -1000,
	1859, -1000, -1000, 2998, -1000, -1000, 1936, 35944, 1936, 24838,
	-1000, 3015, 3013, -1000, 1936, 978, -1000, -334, 35944, 35944,
	-278, 1853, -1000, 2048, 82, -1000, -1000, 991, -276, -285,
	65, 66, 1600, -1000, -1000, -1000, 2026, -1000, 860, -1000,
	-1000, -1000, 978, -1000, -1000, -174, -1000, -1000, 344, -1000,
	-1000, -1000, 24283, 1530, 1530, -181, -1000, 501, 2047, -1000,
	-1000, 243, -1000, -1000, 2041, -1000, -1000, 105, -1000, 1594,
	1346, -1000, 2446, 8038, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 639, 38521, -1000, 1229, -1000, -3, 639, 490,
	235, -1000, 1851, -1000, -1000, 3100, -1000, 475, -1000, -1000,
	3380, -1000, -1000, -1000, -1000, -1000, -1000, 2037, 2035, -1000,
	-1000, -1000, -1000, -1000, 1844, 2445, -61, 2954, 2033, -1000,
	-1000, 2439, 1341, 1340, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1334, 1331, 23728, -1000, -1000, 3380, 19282, 1593, -1000,
	-1000, 1312, 1311, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2434, -1000, -1000, 3012, -278, -1000, 2031, 737, 77, 66,
	-1000, 3011, 69, 3010, 3009, 2030, -1000, -1000, 736, -259,
	48, 37, 33, -1000, -1000, -1000, 8038, 35944, 441, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 114, -1000, -1000, -1000,
	-1000, 2029, 2020, -1000, 23728, 2887, 2086, 394, 3007, 38581,
	-1000, 1593, -1000, 394, -1000, 334, -1000, 1565, -1000, 1842,
	-1000, 2998, -1000, 320, -1000, -1000, -1000, 2015, 8038, 2429,
	1593, 1871, -169, 23728, 2605, 2567, 2521, 2325, 1279, -1000,
	19282, -1000, -1000, 23173, 35944, 2012, -1000, -1000, 2419, 1836,
	88, 76, 3006, -1000, 2012, 3005, 2012, 2012, -1000, 1732,
	-1000, 41, 39, 35, -1000, -1000, -1000, -1000, 462, -1000,
	190, -1000, -1000, -1000, 264, -1000, -1000, 2887, -1000, 3003,
	461, -1000, 19282, -1000, -1000, -1000, 1834, -1000, -1000, -1000,
	-1000, 2021, -1000, 35944, -1000, 2732, -1000, 150, 1275, 264,
	611, 264, 611, 264, 611, 264, 611, 195, -1000, -1000,
	-1000, 1202, -1000, -1000, 2946, 18727, 56, -1000, -1000, -1000,
	2013, -1000, 2012, -1000, -1000, 736, -1000, -1000, -1000, 2005,
	-1000, -1000, -1000, -1000, 1593, 1593, 2003, 300, -1000, -1000,
	-1000, 22618, 411, 408, 382, -1000, 557, -1000, -1000, -1000,
	652, -1000, -1000, 2728, 2382, 3075, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 35944, -1000, 35944, -1000,
	1200, -1000, -1000, -1000, 1338, -1000, -1000, -1000, -1000, -1000,
	-320, 1832, 1822, -1000, 35944, -1000, 35944, 406, 1818, 9751,
	2410, 9751, 2385, 427, 2384, -1000, -1000, 3084, -1000, 3080,
	761, 761, 264, 264, 264, 264, -1000, 973, -1000, 1590,
	-1000, 22063, 35944, -1000, -1000, 2001, -1000, -1000, -1000, 1192,
	2383, 3001, -1000, 3289, 35944, 2940, 35944, 2381, 1576, 9751,
	-1000, -1000, -1000, 1854, 449, -1000, 35944, 5747, -1000, 1337,
	-1000, -1000, -1000, 630, 409, -1000, 1190, -1000, 1114, 21508,
	1815, 2703, -1000, -1000, -1000, -1000, -1000, 1936, 35944, 1110,
	-1000, 35944, 396, -1000, -1000, -1000, 1106, -1000, -1000, -1000,
	-1000, 630, 2798, -1000, 1813, -1000, -1000, 38368, 829, -1000,
	-1000, 38368, 400, -1000, 629, 2136, -1000, -1000, 1081, -1000,
	35944, 821, 8038, -1000, 400, 38581, -1000, 8038, 1059, -1000,
	38581, 1056, -1000, -1000,
}

var yyPgo = [...]int{
	0, 163, 3112, 244, 172, 3713, 88, 248, 235, 232,
	245, 3711, 3709, 3703, 2901, 2898, 3702, 3701, 3699, 3698,
	3697, 3693, 3692, 3691, 3690, 3689, 3688, 3687, 3686, 3685,
	3683, 3681, 3672, 3668, 3667, 3666, 3662, 3660, 3659, 3658,
	3657, 3656, 3655, 3652, 3650, 3648, 240, 3645, 3644, 3641,
	3640, 3626, 3625, 3624, 3623, 3622, 3621, 3607, 3605, 3599,
	3598, 3597, 3596, 3595, 3594, 3592, 3591, 3588, 3584, 3581,
	3580, 3579, 3578, 3573, 3572, 3570, 3569, 3568, 3567, 216,
	3566, 2878, 3565, 3564, 3563, 3561, 3559, 3558, 3557, 222,
	3556, 3555, 3554, 3553, 3551, 3550, 3549, 3548, 3547, 3546,
	3545, 246, 3544, 3541, 3538, 3537, 3530, 3529, 238, 3528,
	170, 224, 3527, 3513, 3509, 3507, 3505, 3504, 231, 181,
	69, 3503, 42, 3502, 213, 3501, 145, 3488, 135, 3487,
	3486, 3485, 3484, 3483, 3482, 3481, 3480, 3478, 3477, 3476,
	3475, 3474, 3473, 3471, 3470, 89, 3469, 254, 3467, 71,
	3466, 3465, 119, 243, 211, 247, 2608, 253, 249, 182,
	169, 85, 3464, 2879, 3463, 166, 225, 150, 26, 3462,
	125, 3461, 255, 46, 54, 242, 132, 57, 164, 124,
	3460, 219, 102, 100, 3455, 3453, 129, 237, 174, 3451,
	97, 3450, 3448, 3447, 3446, 3445, 201, 194, 3438, 3421,
	123, 3420, 3416, 101, 3415, 73, 197, 159, 189, 3414,
	90, 121, 120, 112, 177, 3413, 109, 3412, 3410, 3409,
	3408, 175, 3406, 3402, 128, 68, 3401, 3400, 3398, 66,
	3396, 48, 3395, 28, 3392, 64, 3391, 3390, 3389, 3388,
	3387, 3386, 3385, 3384, 3383, 3381, 3380, 49, 3378, 3376,
	13, 15, 17, 3375, 25, 3373, 160, 3369, 3366, 3365,
	86, 87, 3364, 83, 1, 45, 70, 3362, 3361, 218,
	107, 96, 136, 3360, 430, 3359, 3356, 3355, 153, 3353,
	1959, 3351, 3350, 3349, 3346, 3343, 161, 3341, 212, 38,
	3340, 118, 126, 3339, 35, 47, 202, 207, 3338, 3337,
	3336, 138, 210, 115, 34, 0, 3334, 139, 3331, 3330,
	3329, 250, 3328, 227, 230, 168, 152, 276, 221, 3327,
	3326, 67, 3325, 154, 56, 55, 141, 8, 20, 217,
	3324, 14, 184, 3322, 199, 3317, 176, 36, 137, 3316,
	3313, 30, 256, 3310, 3309, 3306, 117, 3304, 3298, 116,
	75, 3293, 3288, 3285, 3284, 33, 3281, 31, 19, 3280,
	91, 3279, 241, 3278, 260, 133, 178, 167, 147, 215,
	229, 79, 76, 3277, 1714, 146, 92, 21, 3276, 220,
	3275, 183, 127, 3274, 122, 3273, 236, 388, 200, 3272,
	179, 7, 43, 32, 3271, 9, 3268, 82, 205, 3267,
	3264, 23, 51, 3263, 18, 3261, 3260, 3259, 3258, 5,
	3257, 3256, 3255, 2, 4, 3254, 3, 198, 162, 113,
	84, 62, 3252, 3250, 44, 156, 3246, 144, 155, 149,
	3244, 72, 3243, 3241, 3240, 1711, 3239, 251, 3238, 3235,
	3234, 3233, 3232, 3230, 3229, 3228, 3227, 98, 41, 3226,
	3223, 3222, 3221, 74, 131, 3220, 3219, 3218, 3217, 37,
	130, 3216, 22, 3215, 27, 29, 39, 3213, 93, 3212,
	12, 180, 3211, 3210, 16, 3209, 3208, 10, 11, 3206,
	3205, 110, 3204, 95, 24, 157, 105, 3202, 3194, 81,
	214, 134, 3193, 3192, 94, 234, 192, 3191, 185, 228,
	252, 3190, 206, 3186, 3185, 3184, 3183, 3182, 3181, 1116,
	3179, 3178, 233, 65, 77, 111, 3173, 3171, 3170, 80,
	158, 108, 106, 61, 78, 3169, 103, 190, 3168, 188,
	3167, 3162, 99, 3160, 3159, 3158, 3155, 187, 3153, 3151,
	186, 226, 3150, 3149, 425, 3135, 3130, 3129, 3126, 3124,
	3122, 3120, 3118, 3117, 3115, 258, 299, 3091,
}

//line mysql_sql.y:10696
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) alterTypeOptionUnion() *tree.TypeOption {
	v, _ := st.union.(*tree.TypeOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionUnion() *tree.ConnectorOption {
	v, _ := st.union.(*tree.ConnectorOption)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) connectorOptionsUnion() []*tree.ConnectorOption {
	v, _ := st.union.([]*tree.ConnectorOption)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) cycleOptionUnion() *tree.CycleOption {
	v, _ := st.union.(*tree.CycleOption)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fillModeUnion() tree.FillMode {
	v, _ := st.union.(tree.FillMode)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) timeFillUnion() *tree.Fill {
	v, _ := st.union.(*tree.Fill)
	return v
}

func (st *yySymType) timeIntervalUnion() *tree.Interval {
	v, _ := st.union.(*tree.Interval)
	return v
}

func (st *yySymType) timeSlidingUnion() *tree.Sliding {
	v, _ := st.union.(*tree.Sliding)
	return v
}

func (st *yySymType) timeWindowUnion() *tree.TimeWindow {
	v, _ := st.union.(*tree.TimeWindow)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 550, 553, 553, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 116, 116, 115, 535, 535, 535, 536,
	536, 112, 133, 132, 135, 135, 134, 134, 131, 131,
	127, 130, 130, 129, 129, 128, 123, 125, 125, 124,
	126, 126, 113, 101, 114, 480, 480, 479, 479, 478,
	478, 432, 432, 477, 477, 477, 476, 476, 476, 475,
	475, 474, 474, 473, 473, 471, 471, 472, 470, 469,
	469, 469, 467, 467, 467, 463, 463, 465, 464, 464,
	466, 458, 458, 461, 461, 459, 459, 459, 459, 462,
	457, 457, 457, 456, 456, 100, 100, 100, 376, 376,
	99, 99, 390, 390, 390, 390, 390, 388, 388, 388,
	388, 388, 388, 387, 387, 386, 386, 391, 391, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 90,
	90, 90, 90, 90, 95, 95, 95, 541, 541, 540,
	540, 542, 542, 542, 542, 543, 543, 93, 93, 93,
	94, 385, 385, 385, 91, 92, 92, 375, 375, 380,
	380, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 384, 384, 384, 382, 382, 381,
	381, 383, 383, 84, 84, 84, 87, 86, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 85, 85, 85,
	85, 85, 85, 80, 80, 80, 80, 80, 79, 79,
	81, 81, 372, 372, 371, 96, 96, 97, 538, 538,
	537, 539, 539, 539, 539, 98, 104, 104, 104, 104,
	104, 104, 104, 103, 103, 106, 106, 105, 107, 89,
	89, 89, 89, 89, 89, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 505, 505, 505, 507, 507, 309,
	310, 554, 312, 308, 308, 308, 501, 501, 502, 503,
	504, 504, 504, 102, 11, 11, 11, 11, 11, 11,
	11, 11, 13, 78, 83, 255, 255, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 243,
	243, 243, 238, 238, 238, 238, 239, 239, 240, 240,
	241, 241, 241, 241, 242, 242, 302, 302, 260, 260,
	260, 262, 262, 261, 259, 257, 257, 257, 257, 257,
	257, 258, 258, 258, 263, 263, 76, 82, 82, 82,
	518, 518, 77, 529, 529, 435, 435, 323, 323, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 440, 441, 319, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 53, 56,
	52, 52, 52, 361, 361, 51, 555, 555, 297, 297,
	64, 63, 55, 65, 66, 67, 68, 69, 70, 50,
	62, 62, 62, 62, 62, 62, 62, 62, 73, 452,
	452, 557, 557, 557, 71, 72, 434, 434, 434, 61,
	60, 59, 58, 57, 57, 49, 49, 48, 48, 54,
	139, 140, 316, 316, 316, 318, 318, 314, 556, 556,
	404, 404, 317, 317, 47, 47, 47, 47, 74, 315,
	315, 296, 313, 313, 313, 12, 12, 10, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 25, 26, 28, 369, 369, 366, 27, 19,
	18, 18, 22, 21, 17, 17, 20, 23, 24, 24,
	9, 9, 9, 9, 14, 14, 15, 160, 160, 211,
	211, 513, 513, 509, 509, 510, 510, 510, 511, 511,
	512, 512, 108, 446, 446, 446, 446, 446, 446, 8,
	182, 182, 445, 445, 445, 445, 445, 445, 373, 373,
	373, 490, 490, 490, 491, 181, 181, 176, 176, 447,
	447, 338, 492, 492, 455, 455, 454, 454, 453, 453,
	179, 179, 180, 180, 163, 163, 119, 119, 460, 460,
	460, 460, 468, 468, 431, 431, 247, 247, 289, 289,
	290, 290, 153, 153, 154, 154, 154, 154, 154, 154,
	544, 544, 545, 546, 547, 547, 548, 548, 548, 549,
	549, 549, 549, 549, 498, 498, 500, 500, 499, 178,
	178, 174, 174, 175, 175, 175, 173, 173, 172, 171,
	171, 170, 168, 168, 168, 169, 169, 169, 186, 186,
	156, 156, 156, 155, 155, 155, 155, 155, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	157, 157, 506, 506, 506, 436, 436, 436, 443, 443,
	271, 271, 272, 272, 270, 270, 158, 158, 159, 159,
	159, 159, 269, 269, 268, 161, 161, 167, 166, 166,
	162, 162, 162, 162, 279, 279, 278, 278, 278, 278,
	111, 117, 117, 118, 185, 185, 277, 276, 276, 276,
	184, 184, 183, 183, 177, 177, 165, 165, 165, 165,
	275, 164, 273, 534, 534, 533, 533, 532, 530, 530,
	530, 531, 531, 531, 531, 482, 482, 482, 482, 482,
	303, 303, 303, 307, 307, 306, 306, 306, 306, 306,
	311, 7, 7, 7, 7, 7, 7, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	38, 195, 196, 39, 197, 197, 198, 198, 199, 199,
	200, 201, 202, 202, 202, 202, 37, 187, 187, 188,
	188, 189, 189, 190, 191, 191, 191, 194, 192, 193,
	193, 552, 552, 551, 36, 36, 29, 146, 146, 147,
	147, 147, 149, 149, 244, 244, 244, 148, 148, 150,
	150, 150, 514, 517, 515, 515, 519, 519, 519, 520,
	520, 520, 520, 521, 521, 30, 136, 141, 524, 524,
	524, 523, 523, 525, 525, 526, 526, 293, 293, 294,
	294, 144, 145, 145, 143, 138, 152, 152, 152, 152,
	152, 137, 142, 516, 522, 522, 522, 370, 370, 367,
	368, 368, 365, 364, 364, 364, 528, 528, 527, 527,
	527, 304, 304, 31, 360, 360, 362, 363, 363, 363,
	354, 354, 354, 354, 35, 358, 358, 359, 359, 359,
	359, 359, 359, 355, 355, 357, 357, 353, 353, 353,
	353, 353, 34, 151, 151, 352, 352, 349, 349, 347,
	347, 348, 348, 346, 346, 346, 350, 350, 42, 75,
	43, 44, 45, 41, 41, 41, 351, 351, 33, 33,
	33, 121, 120, 120, 120, 120, 120, 292, 292, 291,
	291, 122, 40, 223, 223, 423, 423, 418, 418, 418,
	418, 418, 438, 438, 438, 419, 419, 419, 420, 420,
	420, 422, 422, 422, 421, 421, 421, 421, 421, 437,
	437, 439, 439, 439, 392, 392, 393, 393, 393, 396,
	396, 410, 410, 411, 411, 409, 409, 416, 416, 415,
	415, 414, 414, 413, 413, 412, 412, 412, 412, 407,
	407, 406, 406, 394, 394, 394, 394, 394, 395, 395,
	395, 405, 405, 408, 408, 267, 267, 266, 266, 231,
	231, 232, 232, 265, 265, 229, 229, 230, 230, 230,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 488, 488, 489, 234, 234,
	245, 245, 245, 245, 245, 245, 233, 233, 235, 235,
	212, 212, 210, 210, 203, 203, 204, 204, 205, 205,
	205, 209, 209, 208, 208, 208, 208, 206, 206, 207,
	207, 207, 207, 207, 207, 378, 378, 485, 485, 486,
	486, 481, 481, 481, 484, 484, 484, 484, 484, 487,
	487, 487, 483, 483, 213, 287, 287, 287, 305, 305,
	305, 305, 286, 286, 286, 228, 228, 227, 227, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 377, 377, 320, 320, 321, 321, 254, 253, 253,
	253, 253, 253, 251, 252, 250, 250, 250, 250, 250,
	249, 249, 248, 248, 248, 356, 356, 246, 246, 237,
	237, 237, 236, 236, 236, 417, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 285, 285, 285, 330, 330, 335, 335, 497, 497,
	496, 214, 214, 214, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 224, 224, 224, 401, 401, 401, 401,
	402, 402, 402, 402, 403, 403, 403, 399, 399, 400,
	400, 339, 340, 340, 444, 444, 397, 397, 398, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 451, 451,
	451, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 508, 508, 508,
	493, 493, 493, 494, 494, 494, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 495, 495, 495, 495, 495,
	495, 495, 495, 495, 495, 495, 495, 495, 495, 495,
	495, 495, 283, 283, 283, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	341, 341, 342, 342, 448, 448, 448, 448, 448, 448,
	449, 449, 450, 450, 450, 450, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 328, 280, 280, 280, 343,
	336, 336, 337, 337, 331, 331, 331, 331, 331, 331,
	331, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 326, 326, 326, 326, 326, 326, 326, 326,
	326, 326, 326, 332, 332, 334, 334, 345, 345, 345,
	344, 344, 344, 344, 344, 344, 344, 226, 226, 226,
	226, 325, 325, 325, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 216, 216, 216, 216,
	220, 220, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 221, 221, 221, 221,
	221, 219, 219, 219, 219, 219, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 109, 110, 110, 218, 288, 288,
	424, 424, 427, 427, 425, 425, 426, 428, 428, 428,
	429, 429, 429, 430, 430, 430, 433, 433, 295, 295,
	295, 301, 301, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 10, 7, 4, 1, 3, 2, 4, 5,
	5, 6, 5, 5, 3, 2, 2, 1, 3, 4,
	3, 7, 5, 8, 2, 2, 1, 3, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	2, 1, 3, 2, 1, 2, 2, 1, 2, 3,
	2, 3, 3, 3, 1, 1, 7, 7, 8, 8,
	0, 4, 7, 0, 3, 0, 2, 0, 1, 1,
	1, 1, 4, 2, 2, 3, 3, 4, 5, 3,
	4, 4, 2, 2, 2, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	2, 5, 5, 0, 2, 7, 0, 1, 0, 1,
	5, 5, 3, 3, 2, 4, 4, 4, 4, 4,
	1, 1, 1, 3, 3, 1, 1, 1, 6, 0,
	1, 1, 1, 1, 5, 5, 0, 1, 1, 3,
	3, 3, 4, 6, 7, 4, 4, 7, 8, 3,
	3, 3, 0, 2, 2, 0, 2, 2, 1, 1,
	1, 1, 0, 1, 4, 4, 5, 4, 3, 1,
	3, 1, 1, 3, 5, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 4, 1, 3, 1, 4, 6,
	6, 4, 4, 4, 4, 4, 3, 6, 3, 5,
	1, 1, 2, 2, 11, 8, 9, 1, 3, 2,
	4, 0, 2, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 4, 2, 1, 5, 4, 4, 2, 5,
	1, 3, 2, 1, 5, 4, 4, 2, 0, 5,
	4, 0, 1, 3, 3, 1, 3, 1, 3, 1,
	3, 4, 0, 1, 0, 1, 1, 3, 1, 1,
	0, 4, 1, 3, 2, 1, 0, 8, 0, 4,
	7, 4, 0, 2, 0, 2, 0, 2, 0, 4,
	1, 3, 1, 1, 6, 4, 5, 7, 4, 5,
	0, 1, 3, 8, 0, 6, 0, 4, 6, 1,
	1, 1, 1, 1, 2, 3, 1, 3, 6, 0,
	3, 0, 1, 2, 4, 4, 0, 1, 3, 1,
	3, 3, 0, 1, 1, 0, 2, 2, 0, 2,
	3, 3, 3, 1, 3, 3, 3, 3, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	7, 7, 1, 1, 1, 0, 1, 1, 1, 1,
	0, 2, 0, 3, 0, 2, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 4, 4, 3, 2, 2, 2, 3, 2, 3,
	4, 1, 3, 4, 0, 2, 1, 1, 2, 2,
	0, 1, 2, 4, 1, 3, 1, 3, 2, 3,
	1, 4, 3, 0, 1, 1, 2, 5, 2, 2,
	2, 0, 2, 3, 3, 0, 1, 3, 1, 3,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	7, 1, 1, 7, 1, 3, 0, 1, 1, 3,
	1, 3, 0, 1, 1, 1, 14, 1, 3, 0,
	1, 1, 3, 1, 1, 2, 4, 1, 1, 1,
	1, 0, 1, 2, 9, 9, 7, 1, 2, 3,
	3, 3, 0, 4, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 4, 1, 1, 3, 4, 3, 0,
	1, 1, 1, 0, 2, 7, 8, 8, 0, 3,
	3, 0, 3, 0, 3, 0, 5, 1, 3, 0,
	3, 3, 0, 2, 9, 6, 0, 2, 2, 3,
	3, 4, 4, 1, 0, 2, 2, 1, 3, 2,
	1, 3, 2, 1, 3, 2, 0, 1, 3, 4,
	3, 1, 1, 4, 1, 3, 1, 1, 1, 1,
	0, 1, 1, 1, 11, 0, 2, 3, 3, 2,
	3, 1, 1, 1, 3, 3, 4, 0, 2, 2,
	2, 2, 6, 0, 4, 1, 1, 0, 3, 0,
	1, 1, 2, 4, 4, 4, 0, 1, 8, 2,
	4, 4, 4, 9, 10, 8, 0, 2, 11, 9,
	11, 2, 2, 8, 4, 5, 3, 1, 3, 0,
	3, 5, 10, 0, 2, 0, 2, 0, 3, 2,
	4, 3, 0, 2, 1, 0, 2, 3, 0, 2,
	3, 0, 2, 1, 0, 3, 2, 4, 3, 0,
	1, 0, 1, 1, 0, 6, 0, 3, 5, 0,
	4, 0, 3, 1, 3, 4, 5, 0, 3, 1,
	3, 2, 3, 1, 2, 0, 4, 6, 5, 0,
	2, 0, 2, 4, 5, 4, 5, 1, 5, 6,
	5, 0, 3, 0, 1, 1, 3, 3, 3, 0,
	4, 1, 3, 3, 3, 0, 1, 1, 3, 2,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 5, 4, 1, 3, 3, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 1,
	1, 1, 1, 7, 9, 7, 9, 2, 1, 7,
	9, 7, 9, 8, 5, 0, 1, 0, 1, 1,
	1, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 3, 1, 3, 5, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 2, 1,
	2, 2, 1, 1, 2, 2, 2, 3, 3, 2,
	2, 1, 5, 6, 4, 1, 1, 1, 5, 4,
	1, 1, 2, 0, 1, 1, 2, 5, 0, 1,
	1, 2, 2, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 2, 2, 2, 0, 3, 0, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 3, 5, 2, 2, 2, 2, 1, 1,
	2, 5, 6, 6, 6, 6, 1, 1, 1, 1,
	1, 4, 4, 4, 0, 2, 0, 1, 1, 2,
	4, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	2, 2, 2, 0, 1, 1, 1, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 2, 5, 0,
	1, 3, 0, 1, 0, 2, 0, 1, 6, 8,
	6, 6, 5, 5, 5, 6, 6, 6, 6, 5,
	6, 6, 6, 6, 6, 6, 6, 6, 1, 1,
	1, 4, 4, 6, 8, 6, 4, 5, 4, 4,
	4, 3, 4, 6, 6, 7, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 8, 4, 2, 3, 2, 4,
	2, 2, 4, 6, 2, 2, 4, 6, 4, 2,
	0, 1, 2, 3, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 1, 3,
	0, 1, 1, 3, 3, 3, 3, 3, 2, 1,
	1, 3, 4, 3, 4, 3, 4, 3, 4, 3,
	4, 1, 3, 4, 4, 5, 4, 5, 3, 4,
	5, 6, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 1, 1, 2, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 4, 4, 1, 2, 3, 5, 1, 1, 3,
	0, 1, 0, 3, 0, 3, 3, 0, 3, 5,
	0, 3, 5, 0, 1, 1, 0, 1, 1, 2,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var yyChk = [...]int{
	-1000, -550, -553, -2, -5, 603, -1, -4, -110, -84,
	-7, -112, -113, -8, -108, -9, -10, -12, -88, -103,
	-105, -107, -106, -46, -11, -102, -79, -80, -90, -96,
	-99, -100, -101, -114, -109, -111, -153, -115, -116, 593,
	-85, -86, -87, -32, -31, -30, -29, -136, -141, 599,
	440, 13, 489, -14, -15, -498, -16, 257, -308, -309,
	-310, -312, -554, -47, -48, -49, -57, -58, -59, -60,
	-61, -71, -72, -73, -50, -51, -52, -55, -53, -64,
	-63, -65, -66, -67, -68, -69, -70, -54, -139, -140,
	-74, -56, -75, -77, -76, -82, -78, -83, -138, -143,
	-13, 232, -81, 75, -91, -92, -93, -94, -95, -97,
	-98, 365, 371, 428, 592, 60, -154, -156, 607, 608,
	157, 158, 160, 161, -33, -34, -35, -36, -37, -38,
	-40, -39, -41, -42, -43, -44, -45, 228, 15, 532,
	-17, -20, -18, -21, -19, -27, -28, -26, -23, -25,
	-137, -24, -142, -22, 252, 251, 37, 318, 319, 320,
	369, 250, 229, 14, 30, 41, 345, -155, 81, 524,
	525, 527, 230, -157, 12, 611, -6, -3, -2, -123,
	-127, -131, -134, -135, -132, -133, -4, -110, 115, 242,
	594, -305, 361, 595, 597, 596, 84, 92, -298, -300,
	365, 371, 592, 608, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 492, 579, 580, 581, 582, 520, 578, 343, 344,
	529, 269, 293, 396, 299, 306, 157, 176, 170, 198,
	190, 525, 165, 273, 311, 274, 91, 160, 475, 105,
	452, 425, 163, 288, 290, 292, 521, 522, 295, 294,
	296, 298, 523, 275, 346, 186, 181, 287, 271, 179,
	276, 39, 277, 203, 278, 279, 534, 448, 342, 454,
	303, 423, 180, 449, 291, 451, 207, 211, 466, 467,
	174, 175, 456, 469, 202, 205, 206, 249, 341, 42,
	531, 261, 470, 209, 201, 197, 478, 307, 305, 200,
	173, 196, 272, 64, 213, 212, 214, 419, 420, 421,
	422, 280, 281, 359, 465, 193, 182, 347, 166, 22,
	473, 256, 453, 372, 282, 300, 308, 208, 210, 263,
	268, 533, 524, 427, 267, 304, 471, 178, 260, 289,
	255, 474, 167, 527, 374, 283, 161, 297, 468, 477,
	63, 387, 172, 164, 246, 158, 265, 270, 284, 285,
	286, 518, 310, 309, 301, 526, 194, 262, 199, 184,
	171, 195, 159, 264, 476, 388, 590, 345, 406, 192,
	189, 266, 239, 472, 455, 162, 410, 389, 187, 312,
	586, 587, 588, 360, 340, 313, 314, 185, 253, 446,
	447, 317, 416, 333, 390, 426, 397, 391, 220, 221,
	321, 458, 460, 204, 589, 322, 323, 324, 450, 325,
	326, 327, 328, 364, 55, 57, 93, 95, 609, 62,
	-383, -381, -305, 525, 592, 371, 524, 527, 365, 345,
	608, -197, -305, 610, -163, 38, -210, -305, -163, -81,
	-15, -14, -155, -156, -210, 236, -313, 23, 423, -89,
	424, 232, 81, -305, -9, -101, -8, -108, -79, -153,
	428, -311, -305, 318, 318, -311, 236, -305, 267, 404,
	-435, 242, -387, -360, 268, -386, -362, -389, -363, 31,
	228, 230, 229, 264, 15, 369, 238, 13, 12, 370,
	250, 24, 25, 27, 14, 371, 373, 28, 374, 377,
	378, 379, 41, 382, 383, 257, 84, 92, 87, 275,
	-196, -305, -337, -331, 112, 258, -333, -326, -327, -329,
	-477, -471, -324, 81, 139, 140, 147, 113, -328, -417,
	35, 115, 541, 578, 490, -281, -282, -283, -284, -285,
	-305, -472, -470, 87, 96, 99, 102, 103, 101, 100,
	151, 183, 98, 88, 152, -156, 84, -493, 550, -299,
	571, 579, 580, 581, 582, 570, 60, -442, -450, 235,
	-448, 150, 188, 253, 184, 13, 145, 416, 185, 547,
	567, 492, 551, 574, 543, 544, 545, 538, 539, 540,
	542, 552, 554, 566, -451, 562, 572, 573, 560, 575,
	576, 577, 86, 85, 565, 564, 553, 548, 549, 555,
	537, 546, 556, 557, 563, 568, 569, 353, 105, 354,
	355, 482, 346, 356, 242, 423, 69, 357, 358, 359,
	360, 361, 489, 362, 70, 363, 352, 257, 406, 364,
	187, 204, 494, 493, 495, 486, 483, 481, 484, 485,
	487, 488, 558, 559, 561, -117, -118, 584, -544, -274,
	-545, 6, 7, 8, 9, -546, 152, -535, 425, 533,
	87, 162, 159, -374, 162, 111, 167, 166, -374, 321,
	263, -351, -146, 343, 406, 325, 93, 267, -354, -352,
	521, -437, 315, 311, 237, 108, -147, 247, 246, 106,
	482, 235, 380, 306, 55, 57, -509, -510, 225, 226,
	227, -500, 515, -499, -305, 355, 95, 26, 236, 366,
	263, 460, 458, 459, 461, 462, 463, 464, -62, -452,
	-434, 455, 454, -317, 447, 453, 445, 457, 448, 344,
	327, 326, 228, 604, 522, 516, -295, 390, 426, 479,
	480, 367, 427, 466, 468, 449, 105, 191, 188, 237,
	239, 236, 343, 482, 406, 93, 325, -509, 159, 466,
	468, 267, 404, 40, -380, 416, -379, -381, 467, 478,
	85, 86, 465, -295, 105, 446, 446, -544, -274, -154,
	-156, -111, -498, 523, 523, 523, 237, 343, 406, 267,
	238, 236, 519, 521, 239, 482, 235, 318, 366, 263,
	325, 93, -436, -506, 31, -443, 222, 223, 224, 32,
	33, -1, 119, 611, -331, -331, -6, 614, -6, -331,
	-305, -305, 154, -216, -220, -217, -219, -218, -222, -221,
	188, 189, 150, 192, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 205, 206, 203, 30, 204, 253, 184,
	185, 186, 187, 207, 170, 190, 530, 215, 171, 216,
	172, 217, 173, 218, 174, 175, 219, 176, 179, 180,
	181, 182, 178, 153, 81, 153, 87, -179, 259, -210,
	153, -179, -544, -172, -173, 11, -210, -286, -305, 425,
	122, -89, -89, 424, -501, -502, -503, -505, 232, 424,
	423, 153, 275, 16, -311, -311, 79, -210, -362, 267,
	-387, -360, 35, 78, 154, 240, 154, 78, 81, 367,
	343, 406, 368, 482, 236, 380, 239, 267, 381, 343,
	406, 236, 239, 482, 267, 343, 236, 239, 406, 267,
	381, 445, 446, 239, 26, 372, 375, 376, 446, -456,
	478, 154, 111, 108, 109, 110, -331, 129, -344, 122,
	123, 124, 125, 126, 127, 128, 136, 135, 146, 139,
	140, 141, 142, 143, 144, 145, 137, 138, 132, 112,
	130, 134, 131, 114, -156, -331, -337, 60, -329, -329,
	-329, -329, -417, -335, -331, 81, 81, 81, 153, 100,
	87, -331, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, -449, 81, 81, -341, -342, 81,
	81, -324, -286, 81, 87, 87, 81, 81, 81, 87,
	-342, -342, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, -173, 154, -172, 81, -172, -173, -157,
	-156, 31, 32, 31, 32, 31, 32, 31, 32, -547,
	601, 81, 96, 609, 220, 471, 532, 165, 166, 167,
	-195, -305, -197, 366, 239, 519, 518, 239, -147, -349,
	242, -349, -349, -349, -349, 238, -349, 23, 236, 236,
	236, -349, 489, 122, 122, 58, -511, 169, 154, -500,
	-178, 81, -316, 130, 134, -316, 23, 265, 265, 265,
	-316, 305, -555, -556, 16, 132, -314, -556, -314, -314,
	-316, -557, 238, 456, 42, 266, 265, -174, -175, 21,
	-174, 450, 446, -404, 451, 452, -318, -556, -317, -316,
	-316, -317, -316, -316, -316, 236, 239, 482, 325, 605,
	-555, -555, 30, 30, -435, -435, -210, -435, 516, -296,
	-305, -435, -435, -435, -512, 241, -541, -540, 469, -543,
	471, 159, -381, 159, -381, -362, 267, 267, 154, 122,
	23, -382, 122, 133, -381, -381, -382, -382, -233, 40,
	-304, 150, -305, 87, -233, 40, -538, -537, -210, -173,
	-157, -156, 82, 82, 82, 526, 526, 526, -435, -435,
	-435, -435, -435, -437, -435, -435, -435, -435, -435, -311,
	-187, -305, -197, 242, -435, -435, -158, -159, 141, -331,
	-305, -158, -3, -125, -124, 116, 117, 119, 595, 361,
	594, 598, 592, -381, 40, -430, 388, 387, -424, -426,
	81, -425, 81, -425, -425, -425, -425, -425, 81, 81,
	-427, 81, -427, -427, -424, -428, 81, -428, -429, 81,
	-429, -428, -305, -336, -337, -305, 38, -445, 60, -153,
	81, 30, 81, -305, -446, 60, -153, 81, 30, -173,
	-119, 38, -175, 20, 153, 96, 87, -89, 82, 154,
	-504, 102, 103, -507, 202, 194, -305, -104, 87, -7,
	-8, -9, -10, -46, -79, -153, -473, -471, 81, 31,
	415, 78, 16, -388, 236, 482, 366, 263, 239, 343,
	-386, -369, -366, -364, -304, -362, -365, -364, -391, -286,
	446, -120, 430, 429, 317, -331, -331, -331, -331, -331,
	101, 112, 340, 102, 103, -326, -345, 31, 313, 314,
	-327, -327, -327, -327, -327, -327, -327, -327, -327, -327,
	-327, -327, -334, -343, -417, 81, 132, 130, 134, 131,
	114, -329, -329, -327, -327, 82, 154, -497, -496, 116,
	-331, -331, -331, -305, -494, -495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 357, 352, 358,
	356, 346, 364, 359, 360, 187, 513, 514, 507, 508,
	509, 510, 511, 512, -336, -336, -331, -494, -336, -280,
	32, 31, -337, -337, -337, 82, -331, -508, 338, 337,
	339, -176, -305, -336, 82, 82, 82, 96, -337, -337,
	-336, -327, -336, -495, -280, -280, -280, 141, -337, -337,
	-280, -280, -280, -280, 141, -280, -280, -280, -280, -280,
	-280, -280, -280, 82, 82, 82, -174, -118, -454, -453,
	-331, 40, -119, -175, -548, 602, 81, -286, -536, 87,
	87, 612, 472, 473, 163, 166, 165, 34, 81, -187,
	-349, -349, 519, -349, -514, -305, 112, -370, -367, -364,
	-305, -305, -360, -305, -305, -210, -349, -349, -349, -210,
	-244, 52, 53, 54, -364, -148, 55, 56, -512, -499,
	34, -177, -305, -270, 17, -329, -329, -364, 267, -555,
	-316, -316, -297, -296, -318, -313, -318, -318, -270, -314,
	-316, -316, -331, -318, -314, -270, -305, 446, -270, -270,
	-404, -315, -305, -315, -349, -296, -297, -297, -210, -210,
	-255, -256, 233, 350, 351, 231, 229, 11, 230, -264,
	306, -350, 490, -239, -240, 76, 41, -242, 392, 385,
	269, 273, 91, 274, 425, 275, 238, 277, 278, 279,
	294, 296, 249, 280, 281, 282, 416, 283, 158, 295,
	284, 285, 286, 368, -234, 6, 328, 40, 50, 51,
	439, 438, 535, 532, 270, -514, -514, 30, 30, -370,
	-305, -305, -166, -161, -165, -162, -167, -273, -275, -164,
	81, -210, -156, -305, 154, 470, 472, 473, -541, -382,
	-541, -382, 31, 415, -385, 415, 31, -360, -379, 466,
	468, -375, 87, 416, -365, -384, 78, 150, -453, -382,
	-382, -384, -384, 149, 154, -539, 471, 472, 225, -174,
	96, 96, 96, -212, -210, -514, -369, -360, -305, -435,
	-212, -212, -212, -305, -305, 81, 153, 35, -305, -305,
	-269, 154, -268, 16, -306, -305, 34, 87, 153, -269,
	-126, -124, 118, -331, -6, 594, -331, -6, -6, -331,
	-6, -331, -433, 389, 96, 96, -288, 87, -288, 96,
	96, 96, 82, 87, -373, 78, -447, -338, -492, 584,
	-181, 82, -176, -490, -491, -176, -180, -305, -447, -181,
	82, -490, -174, 585, -119, -171, -170, -331, -305, 23,
	-89, -502, 153, 154, -177, -388, -368, -365, -390, 141,
	-305, -376, 154, 532, 615, 85, 240, -528, -527, 407,
	82, 154, -457, 241, 489, 87, 612, 423, 220, 221,
	101, 340, 102, 103, -417, -337, -334, -329, -329, -327,
	-327, -332, 254, -332, 111, -331, -330, -496, 118, -331,
	34, 34, 154, 79, 153, 82, 82, 16, 16, 82,
	-331, 82, 82, 82, 82, 16, 16, -331, 82, 153,
	82, 82, 82, 82, 79, 82, 154, 82, 154, -337,
	-331, -337, 82, 82, 82, -331, -331, -331, -337, 82,
	-331, -331, -331, -331, -331, -331, -331, -331, -398, 441,
	-398, -398, 154, 82, -119, 81, 96, 154, -292, -291,
	87, 164, 167, 167, 166, -196, -198, -199, -200, -201,
	-202, 132, 155, 156, 81, -210, -210, -349, -210, -517,
	393, 35, -529, 154, 40, -527, 482, -144, 317, -353,
	79, -151, 16, 532, -210, -210, -210, -223, 34, 16,
	-160, -211, -305, 81, 82, 154, -331, -361, 79, -305,
	-297, -270, -270, -318, -270, -270, 154, 22, -316, -318,
	-318, -314, 153, -296, -423, 34, -178, 154, -209, -302,
	-206, -208, 244, -321, -207, 247, -486, 245, 243, 106,
	248, 302, 107, 238, -302, -302, 244, -243, 240, 34,
	-302, -258, 238, 302, 245, 20, -257, 238, 107, -305,
	244, 248, 243, -301, 122, -295, 149, 240, 42, 368,
	-301, 536, -301, -301, -301, -301, -301, -301, -301, 276,
	276, -301, -301, -301, -301, -301, -301, -301, -301, -301,
	-301, -301, 159, -301, -301, -301, -301, -301, -301, 81,
	271, 272, -518, 393, 30, 349, 349, -529, 30, -152,
	343, 30, -276, -277, -278, -279, 67, 71, 73, 68,
	69, 70, 74, 30, 154, -303, -307, 34, -305, 87,
	-303, -156, -161, -166, -303, 81, -540, -542, 474, 471,
	477, -384, -384, 240, 81, 122, -384, -384, 40, -304,
	-537, 478, 472, -119, 154, 78, -212, -188, -189, -190,
	-191, -216, -286, 189, 192, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 205, 206, 203, 204, 253, 184,
	185, 186, 187, 207, 170, 190, 171, 172, 173, 174,
	175, 176, 179, 180, 181, 182, 178, -305, -197, -270,
	-159, -161, -305, 87, -305, 141, -270, 119, -6, 117,
	-130, -129, -128, 120, 592, 598, 119, 119, 119, 82,
	82, 82, 154, 82, 82, 82, 154, 82, 154, -460,
	451, 39, 154, 81, 82, 154, 60, 154, 122, 82,
	154, 82, 60, -119, 87, 154, -168, 36, 37, 153,
	425, -305, -471, 82, -390, 154, 240, 153, 153, -366,
	371, -304, -368, 20, 532, -286, 38, -292, 122, 612,
	-305, 82, -332, -332, 111, -329, -326, 82, 119, -331,
	117, -214, -216, 387, 388, -214, -215, -221, 150, 188,
	253, 187, 186, 184, 387, 388, -233, -305, -331, -331,
	82, -331, -331, 16, -305, -233, -327, -331, -173, 82,
	82, -397, -398, -397, -397, 82, 82, 82, 82, -397,
	82, 82, 82, 82, 82, 82, 82, 82, 81, -453,
	-549, 62, 600, 61, 415, 101, 307, 154, 96, 613,
	154, 122, 167, 379, 82, 154, -286, -188, -178, 81,
	-231, 532, -210, -178, -520, 453, 395, 405, -301, -323,
	-322, 345, 41, -440, 416, 401, 402, -367, 267, -305,
	-526, 94, 122, 78, 332, 333, 334, 335, -347, -348,
	-346, -350, -514, 81, 81, 81, 81, -418, 322, -216,
	-210, -160, -305, 16, 154, -513, 153, -1, -305, -360,
	-316, -270, -331, -331, -270, -316, -316, -318, -305, -418,
	-216, 34, -256, -213, -286, -207, -485, -486, -349, -305,
	107, -485, 107, 81, -213, -286, -286, -259, -315, -286,
	-305, -305, -305, -262, -261, -286, -305, -305, -305, 107,
	107, -238, 40, 47, 48, 49, -301, -301, 191, -241,
	40, 415, 417, 418, 96, 96, 96, 96, 87, 87,
	87, -301, -301, 96, 87, -307, 87, -487, 166, 44,
	45, 96, 96, 96, 96, 40, 87, -245, 40, 287,
	291, 288, 289, 290, 87, 96, 40, 96, 40, 96,
	40, -305, 81, -488, -489, 87, -520, -301, 349, -381,
	122, -323, -525, 317, -145, 91, 31, -182, 233, 230,
	-514, -372, -371, -286, -165, -165, -165, -165, 67, 67,
	67, 72, 67, 72, 67, -278, -372, -167, -178, -307,
	82, -534, -533, -532, -530, 75, 241, 76, -336, 471,
	475, 476, -368, -319, 87, -375, -186, 23, -210, -210,
	-439, 297, 298, 82, 154, -216, -272, 18, 153, -272,
	115, -6, -126, -128, -331, -6, -331, 594, 361, 595,
	87, 96, 96, -468, 436, 431, 433, 107, -338, -455,
	-454, 60, -153, -176, -447, -491, -453, -305, 60, -153,
	-447, -186, -460, -170, -169, 43, -305, 96, 16, -365,
	-360, 141, 141, -305, 372, -376, 87, 394, 87, 236,
	613, 87, -292, -326, -331, 82, -224, 175, 174, -224,
	82, 82, -425, -425, -424, -427, -424, -224, -224, 82,
	82, 23, 82, 82, 82, -331, 82, 82, 154, -444,
	491, -397, -397, -397, -397, -397, -397, -397, -397, -397,
	-397, -397, -397, -397, -397, -340, -339, 259, 82, 154,
	-494, 154, -291, 87, 87, 87, -200, -216, 82, 34,
	-203, -204, -205, -213, -206, -208, 34, 81, 81, 34,
	-521, 91, -515, 87, -305, -522, 91, 396, 152, 347,
	40, 397, 398, 413, 342, 96, 96, 403, -516, -305,
	-152, -524, 51, 122, 87, -210, -346, -295, 149, 278,
	325, -267, -266, -305, 87, -203, -203, -203, -419, 324,
	20, 96, 140, -179, 79, 153, -161, -211, -305, 141,
	82, -270, -270, -270, -316, -419, -153, -260, 44, 46,
	-216, -483, -305, -481, -483, -305, -481, -481, -349, -331,
	-260, -213, 240, 30, 230, -263, 330, 331, -377, 303,
	112, -377, 154, -168, -305, -233, -233, 30, 87, 87,
	-212, 82, 154, 122, -521, -515, 122, -382, 87, -522,
	-526, 122, 87, 154, -182, -182, -270, 154, 122, -184,
	-183, 78, 79, -185, 78, -183, 67, 67, -270, -532,
	-531, 23, -486, -486, -486, 82, 82, 14, -190, 40,
	-271, 19, 20, 141, -271, 119, 117, 119, 119, -305,
	82, 82, -431, 586, -464, -466, 431, 20, 20, 14,
	241, 82, -447, -447, -468, 44, 45, -360, -376, 416,
	-210, 154, 613, -331, 82, -331, 82, 87, -173, 20,
	-331, 82, -494, 234, -153, 82, 154, -153, -232, -265,
	-305, 87, -203, -153, 87, -519, 407, 87, 87, 96,
	40, 96, 152, 399, -441, -145, -523, 91, 122, 612,
	81, -301, -301, -301, -305, 82, 154, -301, -301, 82,
	82, 82, -420, 258, 96, 140, 96, 140, 96, -303,
	-161, -305, -270, -513, 153, -270, -420, -286, -228, -227,
	-225, 101, 112, 40, 385, -226, 91, 149, 292, 295,
	294, 270, 293, -254, -320, 78, 391, 330, 331, -350,
	586, 520, 243, 106, 107, 373, -321, 81, 81, 79,
	312, 81, 81, -483, 82, -260, -286, 40, -263, 40,
	303, -261, 149, -233, 82, -489, 87, -519, 87, -384,
	-524, 87, -514, -173, -371, -453, -331, 81, -331, 81,
	67, 11, 18, -324, -331, -337, 242, -6, 595, 361,
	-247, 587, 87, 20, 87, -462, 87, -372, -431, -122,
	-458, -404, 275, 82, 82, -397, -400, -399, -403, 437,
	304, 444, -337, 82, 82, -192, -216, -149, 532, -231,
	-205, 82, 154, -301, -301, 82, -149, 20, 532, 346,
	40, 96, 40, 400, 122, 102, 103, -293, -294, 87,
	-355, -357, -286, 81, -233, -235, -304, 150, 87, -266,
	-324, -324, -229, -230, -264, -350, -121, -120, -229, -421,
	158, 96, 140, 96, 96, -270, -270, -421, -225, 101,
	-327, 87, -235, -236, 40, 291, 287, 122, 122, -237,
	40, 271, 272, -246, 81, 302, 14, 191, 81, 107,
	107, -210, -355, -355, -484, 332, 333, 334, 336, 335,
	-484, -355, -355, 81, -378, -377, -327, -301, 149, -523,
	-174, -177, -482, -305, 243, 20, 20, -305, -305, -289,
	588, 96, 87, 433, -247, -432, 589, -467, 436, -461,
	-459, 431, 432, 433, 434, 122, 82, -402, 114, 399,
	403, -325, -328, 96, 99, 183, 152, 531, -150, 59,
	478, -265, -324, -324, -231, 87, 394, 87, 346, 87,
	613, 154, 122, 82, 154, -424, -331, -392, 259, 154,
	-264, -295, -122, -392, -438, 166, 323, 532, 96, 140,
	96, -173, -422, 166, 323, 87, 87, 96, 81, -448,
	30, 87, -356, 81, 82, 82, 82, 82, -355, -233,
	-301, 82, 82, 154, 81, 20, -289, 87, -469, 241,
	-465, -466, 435, -459, 20, 433, 20, 20, 87, -401,
	-402, 403, -325, -328, 584, 442, 442, 442, -194, -305,
	302, 416, -294, 87, -358, -357, -168, 82, -393, 311,
	20, -264, -301, -393, 323, 96, 140, 96, -174, 323,
	82, -331, -341, -301, 82, -249, -248, 528, -355, -358,
	79, -358, 79, -358, 79, -358, 79, 82, -233, -305,
	243, -290, -305, -462, -476, 81, 96, -464, -463, -465,
	20, -462, 20, -462, -462, 111, 443, 443, 443, -193,
	34, 438, 372, -359, 249, 341, 91, 532, 330, 331,
	-168, 20, -394, 304, 305, -395, -408, 307, -233, 96,
	82, -305, -253, -251, -252, 78, 449, 300, 301, 82,
	-484, -484, -484, -484, -254, 82, 154, -480, 30, 82,
	-475, -474, -287, -470, -305, 436, 437, 87, -462, -401,
	87, -301, -301, 87, 329, -286, 81, -406, 308, 81,
	-404, 81, -404, 107, 333, -377, -252, 78, -251, 78,
	15, 14, -358, -358, -358, -358, -305, -479, -478, -477,
	82, 154, 153, -552, -551, 606, 96, 96, -305, -391,
	-396, 309, 96, -327, 81, -327, 81, -405, 306, 81,
	-250, 297, 298, 30, 166, -250, 154, 122, -474, -305,
	87, 82, -410, 81, 20, 82, -391, 82, -391, 81,
	122, -327, 101, 40, 299, -478, 40, -331, 153, -411,
	-409, 259, -395, 82, 82, 82, -391, 96, 82, -305,
	82, 154, -305, -407, 310, 82, -409, -412, 60, 96,
	-416, -413, 81, -264, 261, 132, -416, -264, -415, -414,
	309, 262, 81, 82, 154, -305, 258, 81, -337, -414,
	-413, -337, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 841, 842, 843, 844, 845, 846, 0,
	0, 0, 0, 600, 601, 0, 567, 0, 0, 0,
	0, 0, 0, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 288, 284, 209, 210, 211, 212, 213, 295,
	296, 435, 0, 0, 0, 0, 682, -2, 56, 0,
	277, 0, 268, 268, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, -2, 613, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 343, 344, 345, 339, 340, 342,
	341, -2, 0, 613, 0, 0, 0, 690, 0, 0,
	0, 0, 0, 733, 755, 23, 0, 7, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 0, 0,
	19, 0, 19, 0, 0, 0, 1228, 1229, 1230, 1231,
	-2, 1726, 1704, 1876, 1889, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924,
	1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705,
	1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
	1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746,
	1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786,
	1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797,
	1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807,
	1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817,
	1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827,
	1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837,
	1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847,
	1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857,
	1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867,
	1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1878,
	0, 261, 259, 1676, 1704, 1726, 1779, 1790, 1791, 1825,
	1876, 0, 864, 0, 660, 0, 665, 1182, 660, 289,
	602, 603, 690, 716, 565, 0, 325, 0, 1717, 329,
	0, 0, 0, 562, 319, 320, 321, 322, 323, 324,
	0, 0, 840, 0, 0, 315, 0, 283, 1781, 0,
	0, 0, 0, 0, 0, 153, 974, 155, 976, 159,
	166, 0, 0, 171, 172, 175, 176, 177, 178, 179,
	0, 183, 0, 185, 188, 0, 190, 191, 0, 194,
	195, 196, 0, 206, 207, 208, 977, 978, 979, -2,
	84, 862, 1634, 1522, 0, 1529, 1530, 1541, 1552, 1308,
	1309, 1310, 1311, 0, 0, 0, 0, 0, 1318, 1319,
	0, 1336, 1893, 1932, 0, 1326, 1327, 1328, 1329, 1330,
	93, 105, 106, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	0, 1582, 1583, 1584, 1495, 1295, 1228, 0, 1902, 0,
	1922, 1927, 1928, 1929, 1930, 1921, 0, 0, 1480, 0,
	1470, 0, 0, -2, -2, 0, 0, 1850, -2, 1899,
	1918, 1926, 1903, 1925, 1895, 1896, 1897, 1890, 1891, 1892,
	1894, 1904, 1906, 1917, 0, 1913, 1923, 1924, 0, 0,
	0, 0, 107, 108, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1486, -2, 1488,
	1489, 1491, -2, 1493, 1494, -2, 1497, 1498, 1499, -2,
	-2, 1502, 1503, 1504, 1505, 1506, 1507, 1510, -2, -2,
	-2, -2, 1482, 1483, 1484, 1485, 1474, 1475, 1476, 1477,
	1478, 1479, -2, -2, -2, 716, 791, 0, 716, 0,
	691, 738, 741, 744, 747, 694, 0, 0, 57, 58,
	0, 278, 279, 267, 269, 0, 273, 0, 266, 0,
	0, 0, 0, 1007, 1007, 1007, 1007, 1007, 0, 1007,
	0, 0, 0, 0, 1007, 0, 897, 981, 982, 983,
	1005, 1006, 1070, 0, 0, 0, 618, 614, 615, 616,
	617, 704, 0, 706, 709, 542, 542, 490, 0, 0,
	0, 542, 0, 504, 496, 0, 0, 0, 542, 0,
	0, 711, 711, 0, 545, 552, 542, 542, -2, 542,
	542, 542, 0, 0, 1019, 510, 511, 512, 496, 496,
	515, 516, 517, 527, 528, 553, 1658, 0, 0, 435,
	435, 0, 435, 0, 435, 435, 435, 620, 1820, 1724,
	1796, 1781, 0, 0, 234, 1850, 239, 0, 1725, 1743,
	0, 0, 1761, 0, -2, 0, 305, 716, 0, 0,
	690, 0, 0, 0, 0, 0, 435, 435, 435, 435,
	435, 1069, 435, 435, 435, 435, 435, 0, 0, 0,
	435, 435, 0, 0, 756, 757, 752, 753, 754, 758,
	759, 5, 6, 19, 0, 0, 0, 0, 0, 0,
	63, 62, 0, 1635, 1653, 1587, 1588, 1589, 1640, 1591,
	1644, 1644, 1644, 1644, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1644, 1644, 0, 0, 1633, 1611, 1642,
	1642, 1642, 1640, 1637, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1647, 1647,
	1650, 1650, 1647, 0, 1520, 0, 0, 0, 0, 664,
	0, 0, 716, -2, 0, 0, 566, 326, 1232, 0,
	0, 330, 331, 0, 0, 346, 0, 349, 334, 335,
	336, 0, 133, 0, 317, 318, 0, 0, 285, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 163,
	160, 167, 170, 180, 187, 0, 199, 201, 204, 161,
	168, 173, 174, 181, 202, 162, 164, 165, 169, 203,
	205, 182, 186, 200, 184, 189, 192, 193, 198, 0,
	134, 0, 0, 0, 0, 0, 1528, 0, 0, 1560,
	1561, 1562, 1563, 1564, 1565, 1566, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 1522, 0, 0, 1314, 1315,
	1316, 1317, 1320, 0, 1337, 0, 0, 0, 0, 1581,
	1585, 0, 1520, 1520, 0, 1520, 1516, 0, 0, 0,
	0, 0, 0, 1520, 1456, 0, 0, 1458, 1471, 0,
	0, 1460, 1461, 0, 1464, 1465, 1520, 0, 1520, 1469,
	1452, 1453, 0, 1516, 1516, 1516, 0, 0, 1516, 1516,
	1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516,
	0, 0, 0, 711, 0, 717, 0, -2, 0, 735,
	737, 739, 740, 742, 743, 745, 746, 748, 749, 696,
	0, 0, 59, 0, 0, 0, 0, 271, 0, 276,
	0, 861, 0, 0, 1007, 1007, 0, 1007, 898, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1007, 1007,
	1007, 0, 1027, 0, 0, 0, 620, 619, 0, 705,
	0, 0, 764, 0, 0, 489, 0, 496, 542, 542,
	502, 503, 498, 497, 548, 549, 545, 0, 545, 545,
	764, 0, 521, 522, 523, 542, 542, 529, 712, 0,
	530, 531, 545, 0, 550, 551, 764, 0, 0, 764,
	764, 0, 539, 540, 541, 0, 0, 1007, 0, 558,
	498, 498, 1659, 1660, 0, 0, 1016, 0, 0, 0,
	561, 0, 0, 0, 0, 621, 214, 217, 0, 220,
	0, 1820, 0, 1820, 0, 227, 0, 0, 0, 0,
	0, 0, 257, 258, 0, 0, 0, 0, 248, 251,
	1176, 1177, 971, 972, 252, 253, 297, 298, 0, 711,
	734, 736, 730, 731, 732, 0, 0, 0, 0, 0,
	0, 0, 0, 435, 0, 0, 0, 0, 0, 596,
	0, 877, 598, 0, 0, 0, 772, 766, 768, 835,
	93, 772, 8, 80, 77, 0, 19, 0, 0, 19,
	19, 0, 19, 262, 0, 1656, 1654, 1655, 1590, 1641,
	0, 1616, 0, 1617, 1618, 1619, 1629, 1630, 0, 0,
	1612, 0, 1613, 1614, 1615, 1606, 0, 1607, 1608, 0,
	1609, 1610, 260, 0, 1521, 865, 0, 638, 652, 633,
	0, 641, 0, 1183, 622, 652, 624, 0, 641, 711,
	688, 0, 666, 0, 0, 327, 0, 332, 0, 0,
	348, 350, 351, 352, 337, 338, 563, 313, 314, 306,
	307, 308, 309, 310, 311, 312, 316, 103, 0, 286,
	287, 0, 0, 0, 147, 148, 149, 150, 151, 152,
	154, 138, 585, 587, 963, 975, 0, 966, 0, 157,
	197, 130, 0, 0, 0, 1523, 1524, 1525, 1526, 1527,
	1531, 0, 1533, 1535, 1537, 1539, 0, 1557, -2, -2,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1542, 1555, 1556, 0, 0, 0, 0, 0,
	0, 1553, 1553, 1548, 0, 1312, 0, 1334, 1338, 0,
	0, 0, 0, 94, 1515, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 1451, 0, 0, 1522, 0, 0, 0,
	1517, 1518, 0, 0, 0, 1411, 0, 0, 1417, 1418,
	1419, 0, 647, 0, 1481, 1457, 1472, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 790, 792, 0, 656,
	658, 659, 685, 666, 692, 0, 0, 0, 55, 60,
	53, 1039, 280, 281, 0, 0, 275, 0, -2, 0,
	0, 0, 1007, 0, 0, 912, 0, 433, 957, 0,
	0, 0, 973, 997, 1003, 0, 0, 0, 0, 1043,
	899, 904, 905, 906, 900, 901, 907, 908, 0, 707,
	0, 0, 804, 488, 0, 543, 544, 493, 1781, 498,
	764, 764, 505, 499, 506, 547, 507, 508, 509, 545,
	764, 764, 713, 542, 545, 532, 546, 545, 535, 536,
	0, 554, 559, 555, 0, 557, 513, 514, 1045, 709,
	364, 365, 406, 406, 406, 389, 406, 0, 0, 377,
	1661, 0, 0, 0, 0, 386, 1661, 0, 1661, 1661,
	1661, 1661, 1661, 1661, 1661, 0, 0, 1661, 1661, 1661,
	1661, 1661, 1661, 1661, 1661, 1661, 1661, 1661, 0, 1661,
	1661, 1661, 1661, 1661, 1162, 1661, 0, 1017, 396, 397,
	398, 399, 404, 405, 0, 430, 0, 0, 0, 433,
	0, 946, 777, 0, 778, 779, 775, 806, 830, 830,
	0, 830, 810, 1182, 0, 0, 225, 226, 215, 0,
	216, 0, 228, 229, 0, 231, 232, 233, 240, 1724,
	1796, 235, 237, 0, 0, 241, 254, 255, 256, 0,
	0, 246, 247, 0, 0, 300, 301, 303, 0, 666,
	1020, 1021, 1022, 582, 1180, 583, 584, 588, 0, 0,
	591, 592, 593, 594, 595, 879, 0, 0, 951, 952,
	764, 0, 773, 0, 769, 836, 0, 838, 0, 764,
	0, 78, 19, 0, 71, 68, 0, 0, 0, 0,
	0, 1636, 1586, 1657, 0, 0, 0, 1638, 0, 0,
	0, 0, 61, 668, 629, 0, 632, 649, 0, 653,
	0, 0, 645, 637, 642, 0, 0, 662, 623, 0,
	0, 628, 666, 0, 689, 718, 719, 722, 1233, 0,
	333, 347, 0, 0, 0, 0, 141, 960, 0, 142,
	146, 136, 0, 0, 0, 965, 0, 962, 967, 0,
	156, 0, 0, 131, 132, 1032, 1039, 0, 0, 0,
	1532, 1534, 1536, 1538, 1540, 0, 1543, 1553, 1553, 1549,
	0, 1544, 0, 1546, 0, 1523, 0, 1339, 0, 0,
	0, 0, 0, 0, 0, 1401, 1402, 0, 0, 1406,
	0, 1408, 1409, 1410, 1412, 0, 0, 0, 1416, 0,
	1455, 1473, 1459, 1462, 0, 1466, 0, 1468, 0, 716,
	0, 0, 1376, 1376, 1376, 0, 0, 0, 0, 1376,
	0, 0, 0, 0, 0, 0, 0, 0, 1331, 0,
	1332, 1333, 0, 793, 686, 0, 0, 0, 0, 1037,
	0, 282, 270, 272, 0, 0, 0, 867, 868, 870,
	0, 873, 874, 875, 879, 709, 1119, 0, 709, 919,
	1661, 1008, 437, 0, 0, 959, 0, 935, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 1047, 0, 0,
	0, 607, 611, 23, 710, 0, 765, 491, 0, 492,
	542, 500, 501, 764, 524, 525, 0, 0, 764, 542,
	542, 545, 0, 556, 1047, 0, 0, 1016, 367, 0,
	1191, 1192, 407, 0, 1198, 1207, 1007, 1265, 0, 1207,
	0, 0, 1209, 1210, 0, 0, 0, 0, 390, 391,
	0, 376, 0, 0, 0, 0, 375, 0, 0, 417,
	0, 0, 0, 0, 1662, 1661, 1661, 0, 384, 385,
	0, 388, 0, 0, 0, 0, 0, 0, 0, 1661,
	1661, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1153, 0, 0, 0, 0, 0, 0, 0,
	1168, 1169, 919, 1661, 0, 0, 0, 437, 933, 942,
	0, 0, 0, 0, 0, 0, 797, 0, 0, 796,
	0, 0, 0, 0, 0, 709, 831, 0, 833, 834,
	808, -2, 0, 777, 813, 1520, 218, 219, 0, 0,
	224, 242, 244, 0, 0, 0, 243, 245, 249, 250,
	299, 302, 304, 728, 0, 0, 1071, 0, 880, 881,
	883, 884, 0, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1709, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 878, 599, 762,
	767, 774, 837, 839, 94, 770, 762, 0, 81, 19,
	80, 72, 73, 0, 19, 0, 0, 0, 0, 1646,
	1645, 1631, 0, 1632, 1643, 1648, 0, 1651, 0, 672,
	0, 0, 652, 654, 0, 0, 652, 0, 0, 661,
	0, 0, 652, 728, 668, 0, 725, 723, 724, 0,
	0, 564, 104, 353, 0, 0, 0, 0, 0, 586,
	0, 964, 138, 0, 0, 158, 0, 0, 0, 1039,
	1036, 1519, 1545, 1547, 0, 1554, 1550, 1313, 1321, 1335,
	0, 0, 1341, 1353, 1353, 0, 0, 1344, 1644, 1644,
	1347, 1640, 1642, 1640, 1353, 1353, 0, 95, 0, 0,
	1407, 0, 0, 0, 648, 0, 0, 0, 1374, 1376,
	1376, 1382, 1377, 1383, 1384, 1376, 1376, 1376, 1376, 1389,
	1376, 1376, 1376, 1376, 1376, 1376, 1376, 1376, 1372, 657,
	0, 0, 699, 700, 701, 702, 703, 0, 0, 54,
	1039, 0, 274, 0, 0, 872, 0, 0, 0, 1184,
	0, 0, 0, 0, 923, 920, 921, 922, 0, 954,
	438, 439, 440, 441, 0, 0, 0, 958, 0, 946,
	928, 0, 0, 0, 998, 999, 1000, 1001, 1002, -2,
	1011, 0, 0, 0, 1184, 1184, 1184, 1055, 0, 1044,
	660, 0, -2, 0, 0, 609, 0, 0, 805, 494,
	764, 518, 714, 715, 533, 764, 764, 542, 560, 1055,
	1046, 0, 366, 408, 0, 1197, 1222, 1208, 1222, 1266,
	1222, 1222, 1007, 0, 408, 0, 0, 378, 414, 0,
	0, 0, 0, 374, 411, 722, 415, 416, 418, 0,
	420, 380, 392, 393, 394, 395, 0, 0, 0, 387,
	400, 401, 402, 403, 1130, 1131, 1132, 1135, 1136, 1137,
	1138, 0, 0, 1141, 1142, 1143, 1144, 1145, 1219, 1220,
	1221, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1170, 1171,
	1172, 1173, 1174, 1175, 1154, 1155, 1156, 1157, 1158, 1159,
	1160, 1161, 0, 0, 1165, 0, 923, 0, 0, 0,
	0, 954, 935, 0, 945, 0, 947, 948, 0, 0,
	630, 764, 292, 0, 800, 794, 0, 783, 798, 799,
	786, 0, 788, 0, 784, 785, 764, 776, 807, 832,
	809, 812, 814, 815, 821, 0, 0, 0, 0, 221,
	222, 223, 230, 0, 457, 236, 684, 0, 1181, 589,
	590, 1072, 1073, 597, 0, 885, 760, 0, 0, 760,
	76, 79, 0, 74, 0, 0, 0, 0, 66, 64,
	1639, 0, 0, 674, 118, 0, 0, 0, 650, 0,
	655, 652, 636, 646, 635, 643, 644, 663, 652, 627,
	626, 687, 672, 720, 721, 0, 1234, 328, 0, 961,
	138, 143, 144, 145, 139, 137, 968, 0, 970, 0,
	1034, 0, 0, 1551, 1340, 1322, 1342, 1354, 1355, 1343,
	1323, 1324, 1345, 1346, 1348, 1349, 1350, 1351, 1352, 1325,
	1403, 0, 1405, 1413, 1414, 0, 1463, 1467, 0, 0,
	0, 1380, 1381, 1385, 1386, 1387, 1388, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 716, 1373, 0, 697, 0,
	0, 0, 1038, 1040, 860, 863, 869, 871, 0, 0,
	0, 1185, 1186, 1188, 1189, 1190, 0, 0, 1184, 0,
	896, 0, 0, 914, 915, 925, 0, 0, 0, 443,
	444, 0, 0, 0, 456, 452, 453, 454, 434, 953,
	942, 931, 0, 0, 941, 0, 1012, 1661, 1661, 1661,
	0, 0, 1115, 1661, 1661, 0, 0, 0, 1058, 0,
	0, 1049, 0, 830, 0, 0, 764, 608, 611, 612,
	708, 495, 537, 534, 764, 1058, 363, 379, 409, 0,
	-2, 0, 1223, 0, 1211, 1223, 0, 0, 1222, 0,
	368, 408, 0, 0, 0, 421, 424, 425, 422, 1261,
	0, 423, 0, 413, 419, 1133, 1134, 0, 1139, 1140,
	0, 1164, 0, 0, 426, 0, 0, 0, 427, 432,
	928, 0, 943, 0, 949, 950, 716, 0, 0, 780,
	801, 0, 0, 781, 0, 782, 787, 789, 291, 816,
	0, 0, 818, 819, 820, 811, 238, 729, 882, 0,
	750, 0, 0, 771, 751, 0, 19, 0, 0, 69,
	1649, 1652, 676, 0, 673, 119, 0, 0, 0, 0,
	640, 651, 634, 625, 674, 726, 727, 140, 135, 969,
	121, 0, 1035, 0, 1415, 0, 1376, 1375, 1369, 0,
	0, 695, 0, 0, 902, 1119, 0, 1025, 0, 1121,
	1661, 1661, 0, 902, 924, 913, 0, 955, 956, 0,
	445, 446, 0, 449, 455, 926, 927, 0, 0, 939,
	0, 0, 0, 0, 1004, 1018, 0, 0, 0, -2,
	0, -2, 1064, 0, 1056, 0, 1048, 0, 1051, 764,
	764, -2, 605, 610, 0, 538, 1064, 410, 1224, -2,
	1237, 1239, 0, 1017, 1242, 1243, 0, 0, 0, 0,
	0, 0, 1287, 1251, 0, 0, 1255, 1256, 1257, 0,
	0, 1260, 0, 1569, 1570, 0, 1264, 0, 0, 0,
	0, 0, 0, 0, 1205, 369, 370, 0, 372, 373,
	1262, 412, 1661, 382, 1163, 1166, 1167, 431, 428, 429,
	931, 934, 631, 711, 293, 294, 802, 0, 795, 825,
	822, 0, 0, 886, 761, 763, 70, 75, 0, 0,
	678, 0, 675, 0, 669, 671, 129, 639, 676, 91,
	112, 0, 0, 1404, 1454, 1379, 0, 1370, 0, 1364,
	1365, 1366, 1371, 698, 693, 0, 888, 895, 909, 1023,
	1187, 1120, 0, 0, 0, 1119, 894, 0, 0, 442,
	447, 0, 450, 451, 0, 929, 930, 0, 937, 0,
	0, 993, 1640, 0, 1013, 1014, 1178, 1179, 1015, 1116,
	1117, 1118, 1074, -2, 1127, 0, 1029, 121, 1074, 1052,
	0, 1059, 0, 1057, 1050, 716, 606, 1061, 1238, 1240,
	1241, 1244, 1245, 1246, 1292, 1293, 1294, 0, 0, 1249,
	1289, 1290, 1291, 1250, 0, 0, 0, 0, 0, 1567,
	1568, 1285, 0, 0, 1212, 1214, 1215, 1216, 1217, 1218,
	1213, 0, 0, 0, 1204, 1206, 371, 0, 1661, 944,
	290, 0, 0, 826, 828, 823, 824, 65, 67, 82,
	0, 677, 120, 0, 678, 83, 0, 109, 0, 122,
	123, 0, 0, 0, 0, 0, 1378, 1367, 0, 0,
	0, 0, 0, 1571, 1572, 1573, 0, 0, 0, 910,
	911, 1122, 1123, 1124, 1024, 916, 0, 918, 448, 932,
	936, 939, 0, 985, 0, 722, 0, 1076, 0, 1016,
	1129, 1661, 1031, 1076, 1042, 0, 1054, 0, 1066, 0,
	1060, 711, 362, 0, 1063, 1247, 1248, 0, 0, 1470,
	1661, 0, 1280, 0, 985, 985, 985, 985, 0, 381,
	0, 803, 817, 0, 0, 0, 667, 92, 96, 0,
	118, 115, 0, 124, 0, 0, 0, 0, 1033, 0,
	1356, 0, 0, 0, 1360, 1361, 1362, 1363, 0, 887,
	0, 917, 938, 940, 984, 994, 995, 722, 1028, 0,
	1113, 1128, 0, 1030, 1053, 1065, 0, 1068, 604, 1062,
	1288, 0, 1254, 0, 1259, 1268, 1281, 0, 0, 1193,
	0, 1195, 0, 1199, 0, 1201, 0, 0, 383, 827,
	829, 0, 680, 670, 85, 0, 0, 113, 114, 116,
	0, 125, 0, 127, 128, 0, 1357, 1358, 1359, 0,
	889, 890, 903, 986, 1661, 1661, 0, 0, 991, 992,
	996, 0, 1101, 0, 0, 1107, 0, 1114, 1133, 1067,
	1252, 1258, 1267, 1269, 1270, 0, 1282, 1283, 1284, 1286,
	985, 985, 985, 985, 1203, 679, 0, 1041, 0, 97,
	0, 99, 101, 102, 1225, 110, 111, 117, 126, 1368,
	891, 0, 0, 989, 0, 1077, 0, 1079, 0, 0,
	0, 0, 0, 1111, 0, 1253, 1271, 0, 1272, 0,
	0, 0, 1194, 1196, 1200, 1202, 681, 86, 87, 0,
	98, 0, 0, 876, 892, 0, 987, 988, 990, 0,
	1081, 0, 1102, 0, 0, 0, 0, 0, 0, 0,
	1273, 1275, 1276, 0, 0, 1274, 0, 0, 100, 1226,
	893, 1078, 1075, 0, 1113, 1103, 0, 1105, 0, 0,
	0, 0, 1277, 1279, 1278, 88, 89, 90, 0, 0,
	1083, 0, 1099, 1104, 1106, 1108, 0, 1112, 1110, 1227,
	1082, 0, 1095, 1080, 0, 1109, 1084, -2, 0, 1100,
	1085, -2, 0, 1093, 0, 0, 1086, 1094, 0, 1089,
	0, 0, 0, 1088, 0, -2, 1096, 0, 0, 1090,
	-2, 0, 1098, 1097,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 614, 611,
	123, 122, 124, 3, 615, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 612, 135, 613, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:782
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:789
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:795
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:803
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:809
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:813
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:828
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:832
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:838
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:843
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:847
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:879
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:887
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:895
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:905
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:925
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:931
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:938
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:946
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:952
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:961
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:971
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:979
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:987
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:995
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1005
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1013
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1023
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1030
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1039
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1049
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1053
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1059
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1063
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1069
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1078
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1088
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1092
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1098
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1107
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1111
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1117
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1138
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1151
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1158
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1162
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1168
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1172
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1178
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1185
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1193
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1197
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1211
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1215
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1219
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1224
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1228
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1232
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1238
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1247
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1258
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1262
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1268
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1272
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1278
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1282
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1288
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1312
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1331
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1335
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1339
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1344
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1348
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1355
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1363
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1370
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1375
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1382
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1387
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1391
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1415
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1419
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1425
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1431
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1449
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1466
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1489
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1493
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1497
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1502
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1506
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1512
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1525
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1536
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1549
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1553
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1563
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1576
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1589
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1595
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1601
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1608
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1616
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1625
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1629
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1633
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1637
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1641
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1645
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1652
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1656
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1662
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1669
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1678
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1682
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1688
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1692
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1696
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1700
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1704
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1708
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1712
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1716
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1720
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1724
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1728
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1732
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1736
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1740
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1744
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1748
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1752
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1756
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1760
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1764
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1768
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1772
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1776
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1780
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1784
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1788
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1792
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1796
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1800
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1804
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1808
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1812
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1816
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1820
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1824
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1828
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1832
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1836
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1840
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1844
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1848
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1852
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1856
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1860
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1864
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1868
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1872
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1876
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1880
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1884
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1897
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1904
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1911
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1921
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1925
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1931
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1938
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1946
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1950
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1954
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1958
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1964
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1968
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1974
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1981
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1988
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1997
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2027
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2031
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2035
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2041
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2047
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2051
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2058
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2064
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2068
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2074
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2082
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2091
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2100
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2108
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2116
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2139
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2162
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2169
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2176
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2184
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2191
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2198
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2207
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2211
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2215
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2221
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2225
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2231
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2235
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2241
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2245
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2256
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2262
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2267
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2271
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2275
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2279
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2283
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2287
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2291
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2295
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2299
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2305
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2309
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2313
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2317
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2327
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2333
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2340
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2346
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2353
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2360
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2370
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2377
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2388
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2399
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2403
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2409
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2419
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2425
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2429
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2435
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2441
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2445
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2449
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2453
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2459
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2471
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2477
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2481
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2487
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2491
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2497
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2503
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2514
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2520
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2524
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2528
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2532
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2536
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2540
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2548
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2556
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2566
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2607
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2611
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2617
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2623
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2628
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2629
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2630
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2635
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2652
		{
			yyLOCAL = &tree.AlterSequence{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].alterTypeOptionUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].cycleOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2668
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2679
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2688
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2692
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2698
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2705
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2714
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2724
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2733
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2743
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2753
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2762
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2770
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2774
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2778
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2782
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2786
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2795
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2801
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2805
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2809
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2813
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2817
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2821
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2825
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2829
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2834
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2865
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2869
		{
			yyVAL.str = string("COLUMN")
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2874
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2880
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2886
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2895
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2899
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2905
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2912
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2920
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2927
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2934
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2941
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2948
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2955
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2963
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2970
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2977
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2987
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2991
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2998
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3010
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3018
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3026
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3039
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3045
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3056
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3071
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3076
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3080
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3085
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3089
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3105
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3109
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3113
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3117
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3121
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3125
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3129
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3133
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3137
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3141
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3145
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3149
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3153
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3157
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3161
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3165
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3171
		{
			yyVAL.item = nil
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3176
		{
			yyVAL.item = nil
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3217
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3223
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3231
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3235
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3239
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3248
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3252
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3258
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3263
		{
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3267
		{
		}
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3272
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3282
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3292
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3300
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3306
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3312
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3318
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3324
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3330
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3336
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3345
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3349
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3353
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3357
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3361
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3365
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3369
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3373
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3379
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: yyDollar[4].unresolvedObjectNameUnion(),
				DbName:    yyDollar[5].str,
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3388
		{
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3390
		{
		}
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3399
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3409
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3418
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3422
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3426
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3432
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3438
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3444
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3450
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3459
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3469
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3481
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3485
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3491
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3503
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3517
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3523
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3530
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3535
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3539
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3543
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3548
		{
			yyVAL.str = ""
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3552
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3558
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3571
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3575
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3581
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3586
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3590
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3594
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3600
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3606
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3610
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3616
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3622
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3626
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3630
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3636
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3640
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3665
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3674
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3683
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3692
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3696
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3702
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3711
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3720
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3730
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3734
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3740
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3746
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3752
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3756
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3762
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3768
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3777
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3784
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3795
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3800
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3807
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3823
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3836
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3847
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3851
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3857
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3862
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3869
		{
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3871
		{
		}
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3874
		{
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3883
		{
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3887
		{
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3892
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3901
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3908
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3914
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3922
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3929
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3936
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3956
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3966
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3970
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3976
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3983
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3989
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3997
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4004
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4011
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4030
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4034
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4038
		{
			yyLOCAL = []*tree.UpdateExpr{nil}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4043
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4047
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4051
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4057
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4066
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4070
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4076
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4080
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4086
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4090
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4096
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4101
		{
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4105
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4112
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4116
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4123
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4128
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4132
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4138
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4142
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4148
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4152
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4157
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4161
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4174
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4181
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4188
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4206
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4225
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4231
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4238
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4242
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4255
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4259
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4264
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4268
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4275
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4280
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4287
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4293
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4297
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4301
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4305
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), TimeWindow: yyDollar[3].timeWindowUnion(), OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Ep: yyDollar[6].exportParmUnion(), SelectLockInfo: yyDollar[7].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4309
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4313
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4318
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4322
		{
			yyLOCAL = yyDollar[1].timeWindowUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4328
		{
			yyLOCAL = &tree.TimeWindow{
				Interval: yyDollar[1].timeIntervalUnion(),
				Sliding:  yyDollar[2].timeSlidingUnion(),
				Fill:     yyDollar[3].timeFillUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.Interval
//line mysql_sql.y:4338
		{
			str := fmt.Sprintf("%v", yyDollar[5].item)
			v, errStr := util.GetInt64(yyDollar[5].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			yyLOCAL = &tree.Interval{
				Col:  yyDollar[3].unresolvedNameUnion(),
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Sliding
//line mysql_sql.y:4353
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Sliding
//line mysql_sql.y:4357
		{
			str := fmt.Sprintf("%v", yyDollar[3].item)
			v, errStr := util.GetInt64(yyDollar[3].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			yyLOCAL = &tree.Sliding{
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[5].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4371
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4375
		{
			yyLOCAL = &tree.Fill{
				Mode: yyDollar[3].fillModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4381
		{
			yyLOCAL = &tree.Fill{
				Mode: tree.FillValue,
				Val:  yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4390
		{
			yyLOCAL = tree.FillPrev
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4394
		{
			yyLOCAL = tree.FillNext
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4398
		{
			yyLOCAL = tree.FillNone
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4402
		{
			yyLOCAL = tree.FillNull
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4406
		{
			yyLOCAL = tree.FillLinear
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4412
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4419
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4428
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4432
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4438
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4446
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4450
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4455
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4459
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4465
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4469
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4473
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4478
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4482
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4488
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4494
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4498
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4504
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4509
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4513
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4517
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4522
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4526
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4530
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4535
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4539
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4547
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4551
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4555
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4569
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4573
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4583
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4593
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4603
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4615
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4623
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4631
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4640
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4648
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4656
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4664
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4672
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4680
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4688
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4696
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4704
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4714
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4725
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4739
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4743
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4747
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4752
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4756
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4760
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4769
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4773
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4778
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4782
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4791
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4797
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4801
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4807
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4811
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4816
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4820
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4825
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4833
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4839
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4847
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4855
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4865
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4871
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4880
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4889
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4898
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4908
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4912
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4922
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4926
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4930
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4934
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4940
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4950
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4954
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4960
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4966
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4970
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4976
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4982
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4986
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4990
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4996
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5000
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5006
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5010
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:5016
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:5020
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5026
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5030
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5040
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5053
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:5059
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5065
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:5078
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5089
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5096
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5100
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:5106
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5116
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5120
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5124
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5129
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5133
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5137
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5141
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5146
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5150
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5154
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5158
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5162
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5167
		{
			yyVAL.str = ""
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5171
		{
			yyVAL.str = yyDollar[1].str
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5175
		{
			yyVAL.str = yyDollar[2].str
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5181
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5187
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5191
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5195
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5199
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5203
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5209
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 860:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5248
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5258
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5264
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 863:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5270
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5280
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5285
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5291
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5298
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5302
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5308
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5314
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5319
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5323
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5327
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5331
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5338
		{
			if yyDollar[13].str == "" {
				yylex.Error("no function body error")
				return 1
			}
			if yyDollar[11].str == "python" && yyDollar[14].str == "" {
				yylex.Error("no handler error")
				return 1
			}

			yyLOCAL = &tree.CreateFunction{
				Replace:    yyDollar[2].streamOptionalUnion(),
				Name:       yyDollar[4].functionNameUnion(),
				Args:       yyDollar[6].funcArgsUnion(),
				ReturnType: yyDollar[9].funcReturnUnion(),
				Language:   yyDollar[11].str,
				Import:     yyDollar[12].boolValUnion(),
				Body:       yyDollar[13].str,
				Handler:    yyDollar[14].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5362
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5367
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5373
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5380
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5384
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5390
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5396
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5400
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5404
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5410
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5416
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5422
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5426
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5432
		{
			yyVAL.str = ""
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5439
		{
			yyVAL.str = yyDollar[2].str
		}
	case 894:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5445
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5454
		{
			yyLOCAL = &tree.CreateView{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5466
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5478
		{
			yyVAL.str = yyDollar[1].str
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5482
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5488
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5492
		{
			yyVAL.str = "DEFINER = "
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5496
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5501
		{
			yyVAL.str = ""
		}
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5505
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5519
		{
			yyVAL.str = ""
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5527
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5533
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5543
		{
			yyVAL.str = yyDollar[1].str
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5547
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5553
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5560
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5566
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5574
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5580
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5587
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5594
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5602
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5608
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5617
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5629
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5641
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5653
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5659
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5666
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5674
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5680
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5688
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5694
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5702
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5708
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5717
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5721
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5726
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5730
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5737
		{
			yyVAL.str = yyDollar[3].str
		}
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5742
		{
			yyVAL.str = ""
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5746
		{
			yyVAL.str = yyDollar[2].str
		}
	case 944:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5752
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5766
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5776
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5780
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5786
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5792
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5798
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5807
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5816
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5825
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5830
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5836
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5844
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5950
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5954
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5960
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5970
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5974
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5980
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5990
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5994
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5998
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6003
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6007
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6013
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6020
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6026
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6035
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6042
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:6051
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:6055
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:6061
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6075
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6079
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6083
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6088
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6092
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6096
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6100
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6106
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			} else {
				io = &tree.IndexOption{IType: tree.INDEX_TYPE_INVALID}
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6127
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6131
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				} else if opt2.AlgoParamList > 0 {
					opt1.AlgoParamList = opt2.AlgoParamList
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6155
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6159
		{
			yyLOCAL = &tree.IndexOption{AlgoParamList: int64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6163
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6167
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6171
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6175
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6181
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6185
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6191
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6196
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6201
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6205
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6209
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6213
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6217
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6223
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6234
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6238
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6248
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6252
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6257
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6261
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6267
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6271
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6277
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6281
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6285
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6290
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6294
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6300
		{
			yyLOCAL = &tree.CreateConnector{
				TableName: yyDollar[4].tableNameUnion(),
				Options:   yyDollar[7].connectorOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6309
		{
			yyLOCAL = &tree.ShowConnectors{}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6315
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.PauseDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6333
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.CancelDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6351
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.ResumeDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6369
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6380
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6391
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6402
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6406
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6412
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6424
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6433
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6446
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6453
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6463
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6473
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6481
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6490
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					StageName: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6500
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6504
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6509
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6513
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6520
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6531
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6544
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6558
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6562
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6566
		{
			yyLOCAL = &tree.TypeOption{
				Type: yyDollar[2].columnTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6572
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6576
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6583
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6590
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6597
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6604
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6608
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6612
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6616
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6620
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6627
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6634
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6638
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6645
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6652
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6656
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6662
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6668
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6672
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6679
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6686
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6693
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6700
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6704
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6709
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6713
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6717
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6722
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6726
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6736
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6740
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6747
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6754
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6758
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6767
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6771
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6777
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6781
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6787
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6796
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6806
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6810
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6816
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6820
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6826
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6833
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6842
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6846
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6851
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6855
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6860
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6864
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6869
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6873
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6883
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6887
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6898
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6906
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6914
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6922
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6933
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6942
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6952
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6962
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6966
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6971
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6975
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:6981
		{
			yyLOCAL = []*tree.ConnectorOption{yyDollar[1].connectorOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:6985
		{
			yyLOCAL = append(yyDollar[1].connectorOptionsUnion(), yyDollar[3].connectorOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:6991
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:6995
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7000
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7004
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7010
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7014
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7020
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7024
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7029
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7033
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7039
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7043
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7047
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7053
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7057
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7061
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7065
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7069
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7073
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7077
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7082
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7086
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7090
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7094
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7098
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7102
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7106
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7110
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7114
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7118
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7122
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7126
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7130
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7134
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7138
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7142
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7146
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7150
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7154
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7158
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7162
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7166
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7170
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7174
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7178
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7182
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7186
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7190
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7196
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7200
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:7206
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7212
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7216
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7222
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7226
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7230
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7234
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7238
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7242
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7256
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7260
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7269
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7274
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7280
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7287
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7291
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7297
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7301
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7305
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7311
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7315
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7321
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7330
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7339
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7368
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7399
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7413
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7419
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7428
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7437
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7446
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7455
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7465
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7473
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7479
		{
			yyVAL.str = ""
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7483
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7493
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7499
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7505
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7524
		{
			yyVAL.str = ""
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7528
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7534
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7540
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7544
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7548
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7554
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7558
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7562
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7566
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7572
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7576
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7580
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7585
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7589
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7595
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7599
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7605
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7609
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7613
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7617
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7621
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7625
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7630
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7634
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7638
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7642
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7646
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7650
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7654
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7658
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7662
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7666
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7679
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7683
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7687
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7691
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7695
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7699
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7705
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7709
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7714
		{
			yyVAL.str = ""
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7718
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7724
		{
			yyVAL.str = ""
		}
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7728
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1267:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7734
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7746
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7753
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7760
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7767
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7774
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7783
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7789
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7795
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7799
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7803
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7807
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7811
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7816
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7823
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7827
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7831
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7836
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7840
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7845
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7849
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7865
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7871
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7875
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7879
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7883
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7887
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7891
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7895
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7899
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7903
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7907
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7911
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7915
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7919
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7925
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7929
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7933
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7937
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7941
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7945
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7949
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7953
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7957
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7961
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7965
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7969
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7974
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7982
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7986
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7990
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7994
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8003
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8007
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8011
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8015
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8019
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8025
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8033
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8041
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8050
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8054
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8059
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8063
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:8069
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:8073
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:8079
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8088
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8100
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8117
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8134
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8147
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8160
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8172
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8186
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8201
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8216
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8233
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8248
		{
		}
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8255
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8259
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8263
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8269
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8273
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8277
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8281
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8287
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8291
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8295
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8301
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8309
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8319
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8323
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8330
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8335
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8339
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8344
		{
			yyVAL.str = ","
		}
	case 1375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8348
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1376:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8353
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8360
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8386
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8397
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8407
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8417
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8427
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8436
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8445
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8455
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8465
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8475
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8485
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8495
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8505
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8515
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8525
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8535
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8545
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8555
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8565
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8584
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8592
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8600
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8608
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8616
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8626
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8634
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8643
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8651
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8659
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8667
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8675
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8686
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8696
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8708
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8719
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8741
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8777
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8789
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8801
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8812
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8820
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8827
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8834
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8846
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8854
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8864
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8874
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8882
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8893
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8902
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8911
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8919
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8929
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8937
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8947
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8951
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8957
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8961
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8980
		{
		}
	case 1481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8982
		{
		}
	case 1515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9023
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9034
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9038
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9042
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:9048
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9053
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9057
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9063
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9067
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9074
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9078
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9082
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9090
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9094
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9098
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9102
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9108
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9112
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9116
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9120
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9124
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9128
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9132
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9136
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9140
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9144
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9152
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9156
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9160
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9164
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9168
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9172
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9176
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9180
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9184
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9188
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9194
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9198
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9204
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9208
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9215
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9219
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9223
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9229
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9233
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9237
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9241
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9245
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9249
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9253
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9259
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9263
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9267
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9271
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9277
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9290
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9295
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9301
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9305
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9318
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9323
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9327
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9331
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9335
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9339
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9346
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9350
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9364
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9368
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9375
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9386
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9391
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9397
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9409
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9421
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9433
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9446
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9459
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9472
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9485
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9498
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9511
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9524
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9537
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9550
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9563
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9578
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9605
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9647
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9683
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9719
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9736
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9748
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9768
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9788
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9808
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9824
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9837
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9850
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9863
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9876
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9888
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9900
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9912
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9924
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9936
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9948
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9960
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9972
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9984
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9997
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10010
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10023
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10036
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10051
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10059
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10068
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10078
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:10101
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:10106
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10112
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10119
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10123
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10128
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10132
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10138
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10144
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10151
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1649:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10158
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10167
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10174
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1652:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10181
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1653:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10190
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10194
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10198
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10204
		{
		}
	case 1657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10206
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1661:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10216
		{
			yyVAL.str = ""
		}
	case 1662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:10220
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
