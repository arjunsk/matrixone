// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const VECF32 = 57530
const VECF64 = 57531
const GEOMETRY = 57532
const POINT = 57533
const LINESTRING = 57534
const POLYGON = 57535
const GEOMETRYCOLLECTION = 57536
const MULTIPOINT = 57537
const MULTILINESTRING = 57538
const MULTIPOLYGON = 57539
const INT1 = 57540
const INT2 = 57541
const INT3 = 57542
const INT4 = 57543
const INT8 = 57544
const S3OPTION = 57545
const SQL_SMALL_RESULT = 57546
const SQL_BIG_RESULT = 57547
const SQL_BUFFER_RESULT = 57548
const LOW_PRIORITY = 57549
const HIGH_PRIORITY = 57550
const DELAYED = 57551
const CREATE = 57552
const ALTER = 57553
const DROP = 57554
const RENAME = 57555
const ANALYZE = 57556
const ADD = 57557
const RETURNS = 57558
const SCHEMA = 57559
const TABLE = 57560
const SEQUENCE = 57561
const INDEX = 57562
const VIEW = 57563
const TO = 57564
const IGNORE = 57565
const IF = 57566
const PRIMARY = 57567
const COLUMN = 57568
const CONSTRAINT = 57569
const SPATIAL = 57570
const FULLTEXT = 57571
const FOREIGN = 57572
const KEY_BLOCK_SIZE = 57573
const SHOW = 57574
const DESCRIBE = 57575
const EXPLAIN = 57576
const DATE = 57577
const ESCAPE = 57578
const REPAIR = 57579
const OPTIMIZE = 57580
const TRUNCATE = 57581
const MAXVALUE = 57582
const PARTITION = 57583
const REORGANIZE = 57584
const LESS = 57585
const THAN = 57586
const PROCEDURE = 57587
const TRIGGER = 57588
const STATUS = 57589
const VARIABLES = 57590
const ROLE = 57591
const PROXY = 57592
const AVG_ROW_LENGTH = 57593
const STORAGE = 57594
const DISK = 57595
const MEMORY = 57596
const CHECKSUM = 57597
const COMPRESSION = 57598
const DATA = 57599
const DIRECTORY = 57600
const DELAY_KEY_WRITE = 57601
const ENCRYPTION = 57602
const ENGINE = 57603
const MAX_ROWS = 57604
const MIN_ROWS = 57605
const PACK_KEYS = 57606
const ROW_FORMAT = 57607
const STATS_AUTO_RECALC = 57608
const STATS_PERSISTENT = 57609
const STATS_SAMPLE_PAGES = 57610
const DYNAMIC = 57611
const COMPRESSED = 57612
const REDUNDANT = 57613
const COMPACT = 57614
const FIXED = 57615
const COLUMN_FORMAT = 57616
const AUTO_RANDOM = 57617
const ENGINE_ATTRIBUTE = 57618
const SECONDARY_ENGINE_ATTRIBUTE = 57619
const INSERT_METHOD = 57620
const RESTRICT = 57621
const CASCADE = 57622
const ACTION = 57623
const PARTIAL = 57624
const SIMPLE = 57625
const CHECK = 57626
const ENFORCED = 57627
const RANGE = 57628
const LIST = 57629
const ALGORITHM = 57630
const LINEAR = 57631
const PARTITIONS = 57632
const SUBPARTITION = 57633
const SUBPARTITIONS = 57634
const CLUSTER = 57635
const TYPE = 57636
const ANY = 57637
const SOME = 57638
const EXTERNAL = 57639
const LOCALFILE = 57640
const URL = 57641
const PREPARE = 57642
const DEALLOCATE = 57643
const RESET = 57644
const EXTENSION = 57645
const INCREMENT = 57646
const CYCLE = 57647
const MINVALUE = 57648
const PUBLICATION = 57649
const SUBSCRIPTIONS = 57650
const PUBLICATIONS = 57651
const PROPERTIES = 57652
const PARSER = 57653
const VISIBLE = 57654
const INVISIBLE = 57655
const BTREE = 57656
const HASH = 57657
const RTREE = 57658
const BSI = 57659
const ZONEMAP = 57660
const LEADING = 57661
const BOTH = 57662
const TRAILING = 57663
const UNKNOWN = 57664
const EXPIRE = 57665
const ACCOUNT = 57666
const ACCOUNTS = 57667
const UNLOCK = 57668
const DAY = 57669
const NEVER = 57670
const PUMP = 57671
const MYSQL_COMPATIBILITY_MODE = 57672
const MODIFY = 57673
const CHANGE = 57674
const SECOND = 57675
const ASCII = 57676
const COALESCE = 57677
const COLLATION = 57678
const HOUR = 57679
const MICROSECOND = 57680
const MINUTE = 57681
const MONTH = 57682
const QUARTER = 57683
const REPEAT = 57684
const REVERSE = 57685
const ROW_COUNT = 57686
const WEEK = 57687
const REVOKE = 57688
const FUNCTION = 57689
const PRIVILEGES = 57690
const TABLESPACE = 57691
const EXECUTE = 57692
const SUPER = 57693
const GRANT = 57694
const OPTION = 57695
const REFERENCES = 57696
const REPLICATION = 57697
const SLAVE = 57698
const CLIENT = 57699
const USAGE = 57700
const RELOAD = 57701
const FILE = 57702
const TEMPORARY = 57703
const ROUTINE = 57704
const EVENT = 57705
const SHUTDOWN = 57706
const NULLX = 57707
const AUTO_INCREMENT = 57708
const APPROXNUM = 57709
const SIGNED = 57710
const UNSIGNED = 57711
const ZEROFILL = 57712
const ENGINES = 57713
const LOW_CARDINALITY = 57714
const AUTOEXTEND_SIZE = 57715
const ADMIN_NAME = 57716
const RANDOM = 57717
const SUSPEND = 57718
const ATTRIBUTE = 57719
const HISTORY = 57720
const REUSE = 57721
const CURRENT = 57722
const OPTIONAL = 57723
const FAILED_LOGIN_ATTEMPTS = 57724
const PASSWORD_LOCK_TIME = 57725
const UNBOUNDED = 57726
const SECONDARY = 57727
const RESTRICTED = 57728
const USER = 57729
const IDENTIFIED = 57730
const CIPHER = 57731
const ISSUER = 57732
const X509 = 57733
const SUBJECT = 57734
const SAN = 57735
const REQUIRE = 57736
const SSL = 57737
const NONE = 57738
const PASSWORD = 57739
const SHARED = 57740
const EXCLUSIVE = 57741
const MAX_QUERIES_PER_HOUR = 57742
const MAX_UPDATES_PER_HOUR = 57743
const MAX_CONNECTIONS_PER_HOUR = 57744
const MAX_USER_CONNECTIONS = 57745
const FORMAT = 57746
const VERBOSE = 57747
const CONNECTION = 57748
const TRIGGERS = 57749
const PROFILES = 57750
const LOAD = 57751
const INFILE = 57752
const TERMINATED = 57753
const OPTIONALLY = 57754
const ENCLOSED = 57755
const ESCAPED = 57756
const STARTING = 57757
const LINES = 57758
const ROWS = 57759
const IMPORT = 57760
const DISCARD = 57761
const MODUMP = 57762
const OVER = 57763
const PRECEDING = 57764
const FOLLOWING = 57765
const GROUPS = 57766
const DATABASES = 57767
const TABLES = 57768
const SEQUENCES = 57769
const EXTENDED = 57770
const FULL = 57771
const PROCESSLIST = 57772
const FIELDS = 57773
const COLUMNS = 57774
const OPEN = 57775
const ERRORS = 57776
const WARNINGS = 57777
const INDEXES = 57778
const SCHEMAS = 57779
const NODE = 57780
const LOCKS = 57781
const ROLES = 57782
const TABLE_NUMBER = 57783
const COLUMN_NUMBER = 57784
const TABLE_VALUES = 57785
const TABLE_SIZE = 57786
const NAMES = 57787
const GLOBAL = 57788
const PERSIST = 57789
const SESSION = 57790
const ISOLATION = 57791
const LEVEL = 57792
const READ = 57793
const WRITE = 57794
const ONLY = 57795
const REPEATABLE = 57796
const COMMITTED = 57797
const UNCOMMITTED = 57798
const SERIALIZABLE = 57799
const LOCAL = 57800
const EVENTS = 57801
const PLUGINS = 57802
const CURRENT_TIMESTAMP = 57803
const DATABASE = 57804
const CURRENT_TIME = 57805
const LOCALTIME = 57806
const LOCALTIMESTAMP = 57807
const UTC_DATE = 57808
const UTC_TIME = 57809
const UTC_TIMESTAMP = 57810
const REPLACE = 57811
const CONVERT = 57812
const SEPARATOR = 57813
const TIMESTAMPDIFF = 57814
const CURRENT_DATE = 57815
const CURRENT_USER = 57816
const CURRENT_ROLE = 57817
const SECOND_MICROSECOND = 57818
const MINUTE_MICROSECOND = 57819
const MINUTE_SECOND = 57820
const HOUR_MICROSECOND = 57821
const HOUR_SECOND = 57822
const HOUR_MINUTE = 57823
const DAY_MICROSECOND = 57824
const DAY_SECOND = 57825
const DAY_MINUTE = 57826
const DAY_HOUR = 57827
const YEAR_MONTH = 57828
const SQL_TSI_HOUR = 57829
const SQL_TSI_DAY = 57830
const SQL_TSI_WEEK = 57831
const SQL_TSI_MONTH = 57832
const SQL_TSI_QUARTER = 57833
const SQL_TSI_YEAR = 57834
const SQL_TSI_SECOND = 57835
const SQL_TSI_MINUTE = 57836
const RECURSIVE = 57837
const CONFIG = 57838
const DRAINER = 57839
const SOURCE = 57840
const STREAM = 57841
const HEADERS = 57842
const MATCH = 57843
const AGAINST = 57844
const BOOLEAN = 57845
const LANGUAGE = 57846
const WITH = 57847
const QUERY = 57848
const EXPANSION = 57849
const WITHOUT = 57850
const VALIDATION = 57851
const ADDDATE = 57852
const BIT_AND = 57853
const BIT_OR = 57854
const BIT_XOR = 57855
const CAST = 57856
const COUNT = 57857
const APPROX_COUNT = 57858
const APPROX_COUNT_DISTINCT = 57859
const APPROX_PERCENTILE = 57860
const CURDATE = 57861
const CURTIME = 57862
const DATE_ADD = 57863
const DATE_SUB = 57864
const EXTRACT = 57865
const GROUP_CONCAT = 57866
const MAX = 57867
const MID = 57868
const MIN = 57869
const NOW = 57870
const POSITION = 57871
const SESSION_USER = 57872
const STD = 57873
const STDDEV = 57874
const MEDIAN = 57875
const STDDEV_POP = 57876
const STDDEV_SAMP = 57877
const SUBDATE = 57878
const SUBSTR = 57879
const SUBSTRING = 57880
const SUM = 57881
const SYSDATE = 57882
const SYSTEM_USER = 57883
const TRANSLATE = 57884
const TRIM = 57885
const VARIANCE = 57886
const VAR_POP = 57887
const VAR_SAMP = 57888
const AVG = 57889
const RANK = 57890
const ROW_NUMBER = 57891
const DENSE_RANK = 57892
const NEXTVAL = 57893
const SETVAL = 57894
const CURRVAL = 57895
const LASTVAL = 57896
const ARROW = 57897
const ROW = 57898
const OUTFILE = 57899
const HEADER = 57900
const MAX_FILE_SIZE = 57901
const FORCE_QUOTE = 57902
const PARALLEL = 57903
const UNUSED = 57904
const BINDINGS = 57905
const DO = 57906
const DECLARE = 57907
const LOOP = 57908
const WHILE = 57909
const LEAVE = 57910
const ITERATE = 57911
const UNTIL = 57912
const CALL = 57913
const SPBEGIN = 57914
const BACKEND = 57915
const SERVERS = 57916
const KILL = 57917
const QUERY_RESULT = 57918

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'{'",
	"'}'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10315

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 114,
	21, 693,
	-2, 674,
	-1, 129,
	235, 1025,
	237, 949,
	-2, 989,
	-1, 152,
	42, 514,
	237, 514,
	264, 521,
	265, 521,
	453, 514,
	-2, 547,
	-1, 188,
	595, 1734,
	-2, 430,
	-1, 520,
	316, 130,
	427, 130,
	-2, 1644,
	-1, 583,
	81, 1440,
	-2, 1788,
	-1, 584,
	81, 1458,
	-2, 1759,
	-1, 588,
	81, 1459,
	-2, 1787,
	-1, 614,
	81, 1370,
	-2, 1854,
	-1, 615,
	81, 1371,
	-2, 1853,
	-1, 616,
	81, 1372,
	-2, 1843,
	-1, 617,
	81, 1817,
	-2, 1838,
	-1, 618,
	81, 1818,
	-2, 1839,
	-1, 619,
	81, 1819,
	-2, 1845,
	-1, 620,
	81, 1820,
	-2, 1827,
	-1, 621,
	81, 1821,
	-2, 1836,
	-1, 622,
	81, 1822,
	-2, 1846,
	-1, 623,
	81, 1823,
	-2, 1847,
	-1, 624,
	81, 1824,
	-2, 1852,
	-1, 625,
	81, 1825,
	-2, 1857,
	-1, 626,
	81, 1826,
	-2, 1858,
	-1, 628,
	81, 1437,
	-2, 1633,
	-1, 632,
	81, 1442,
	-2, 1645,
	-1, 635,
	81, 1446,
	-2, 1663,
	-1, 639,
	81, 1450,
	-2, 1705,
	-1, 640,
	81, 1451,
	-2, 1783,
	-1, 648,
	81, 1461,
	-2, 1768,
	-1, 649,
	81, 1462,
	-2, 1812,
	-1, 650,
	81, 1463,
	-2, 1778,
	-1, 651,
	81, 1464,
	-2, 1802,
	-1, 662,
	81, 1348,
	-2, 1848,
	-1, 663,
	81, 1349,
	-2, 1849,
	-1, 664,
	81, 1350,
	-2, 1850,
	-1, 668,
	21, 694,
	-2, 657,
	-1, 747,
	448, 547,
	449, 547,
	-2, 515,
	-1, 791,
	122, 1633,
	133, 1633,
	153, 1633,
	-2, 1608,
	-1, 896,
	21, 694,
	-2, 657,
	-1, 996,
	21, 693,
	-2, 1246,
	-1, 1111,
	515, 990,
	516, 990,
	-2, 867,
	-1, 1366,
	81, 1508,
	-2, 1785,
	-1, 1367,
	81, 1509,
	-2, 1786,
	-1, 1503,
	82, 839,
	-2, 845,
	-1, 1881,
	82, 1594,
	154, 1594,
	-2, 1770,
	-1, 1882,
	82, 1594,
	154, 1594,
	-2, 1769,
	-1, 1883,
	82, 1570,
	154, 1570,
	-2, 1756,
	-1, 1884,
	82, 1571,
	154, 1571,
	-2, 1761,
	-1, 1885,
	82, 1572,
	154, 1572,
	-2, 1693,
	-1, 1886,
	82, 1573,
	154, 1573,
	-2, 1687,
	-1, 1887,
	82, 1574,
	154, 1574,
	-2, 1624,
	-1, 1888,
	82, 1575,
	154, 1575,
	-2, 1758,
	-1, 1889,
	82, 1576,
	154, 1576,
	-2, 1691,
	-1, 1890,
	82, 1577,
	154, 1577,
	-2, 1686,
	-1, 1891,
	82, 1578,
	154, 1578,
	-2, 1677,
	-1, 1892,
	82, 1594,
	154, 1594,
	-2, 1678,
	-1, 1893,
	82, 1594,
	154, 1594,
	-2, 1679,
	-1, 1895,
	82, 1583,
	154, 1583,
	-2, 1802,
	-1, 1896,
	82, 1561,
	154, 1561,
	-2, 1788,
	-1, 1897,
	82, 1592,
	154, 1592,
	-2, 1759,
	-1, 1898,
	82, 1592,
	154, 1592,
	-2, 1787,
	-1, 1899,
	82, 1592,
	154, 1592,
	-2, 1646,
	-1, 1900,
	82, 1590,
	154, 1590,
	-2, 1778,
	-1, 1901,
	82, 1587,
	154, 1587,
	-2, 1668,
	-1, 1902,
	81, 1542,
	82, 1542,
	154, 1542,
	385, 1542,
	386, 1542,
	387, 1542,
	-2, 1623,
	-1, 1903,
	81, 1543,
	82, 1543,
	154, 1543,
	385, 1543,
	386, 1543,
	387, 1543,
	-2, 1625,
	-1, 1904,
	81, 1546,
	82, 1546,
	154, 1546,
	385, 1546,
	386, 1546,
	387, 1546,
	-2, 1760,
	-1, 1905,
	81, 1548,
	82, 1548,
	154, 1548,
	385, 1548,
	386, 1548,
	387, 1548,
	-2, 1743,
	-1, 1906,
	81, 1550,
	82, 1550,
	154, 1550,
	385, 1550,
	386, 1550,
	387, 1550,
	-2, 1692,
	-1, 1907,
	81, 1552,
	82, 1552,
	154, 1552,
	385, 1552,
	386, 1552,
	387, 1552,
	-2, 1673,
	-1, 1908,
	81, 1553,
	82, 1553,
	154, 1553,
	385, 1553,
	386, 1553,
	387, 1553,
	-2, 1674,
	-1, 1909,
	81, 1555,
	82, 1555,
	154, 1555,
	385, 1555,
	386, 1555,
	387, 1555,
	-2, 1622,
	-1, 1910,
	82, 1597,
	154, 1597,
	385, 1597,
	386, 1597,
	387, 1597,
	-2, 1651,
	-1, 1911,
	82, 1597,
	154, 1597,
	385, 1597,
	386, 1597,
	387, 1597,
	-2, 1664,
	-1, 1912,
	82, 1600,
	154, 1600,
	385, 1600,
	386, 1600,
	387, 1600,
	-2, 1647,
	-1, 1913,
	82, 1600,
	154, 1600,
	385, 1600,
	386, 1600,
	387, 1600,
	-2, 1708,
	-1, 1914,
	82, 1597,
	154, 1597,
	385, 1597,
	386, 1597,
	387, 1597,
	-2, 1728,
	-1, 1930,
	105, 984,
	149, 984,
	188, 984,
	191, 984,
	277, 984,
	-2, 977,
	-1, 2068,
	21, 693,
	-2, 787,
	-1, 2263,
	105, 984,
	149, 984,
	188, 984,
	191, 984,
	277, 984,
	-2, 978,
	-1, 2279,
	79, 603,
	154, 603,
	-2, 1133,
	-1, 2611,
	191, 984,
	301, 1214,
	-2, 1186,
	-1, 2750,
	105, 984,
	149, 984,
	188, 984,
	191, 984,
	-2, 1076,
	-1, 2752,
	105, 984,
	149, 984,
	188, 984,
	191, 984,
	-2, 1076,
	-1, 2762,
	79, 603,
	154, 603,
	-2, 1134,
	-1, 2770,
	191, 984,
	301, 1214,
	-2, 1187,
	-1, 2896,
	105, 984,
	149, 984,
	188, 984,
	191, 984,
	-2, 1077,
	-1, 3257,
	82, 1043,
	154, 1043,
	-2, 984,
	-1, 3261,
	82, 1043,
	154, 1043,
	-2, 984,
	-1, 3275,
	82, 1047,
	154, 1047,
	-2, 984,
	-1, 3280,
	82, 1048,
	154, 1048,
	-2, 984,
}

const yyPrivate = 57344

const yyLast = 37279

var yyAct = [...]int{
	550, 1285, 1583, 3260, 3261, 3240, 179, 3269, 1347, 3132,
	531, 3193, 529, 552, 3158, 3211, 3140, 2629, 3141, 539,
	2845, 3052, 1859, 2936, 2784, 3066, 1028, 3044, 1343, 2850,
	3070, 2692, 2971, 2880, 2881, 2693, 2878, 580, 1205, 437,
	3005, 790, 669, 2848, 533, 2961, 2268, 1146, 1275, 443,
	2747, 448, 448, 3053, 3055, 1537, 2734, 448, 464, 473,
	2895, 2282, 473, 2885, 1970, 1350, 2579, 2771, 2720, 2840,
	2396, 2567, 2395, 164, 1672, 2898, 2378, 2723, 2626, 2608,
	2062, 2318, 54, 1637, 2615, 2161, 2388, 2394, 1879, 484,
	2690, 1765, 1734, 2678, 2577, 2417, 1973, 2391, 2661, 2551,
	2254, 478, 2548, 1096, 1941, 1684, 2614, 2546, 1669, 2580,
	2264, 522, 1877, 523, 2298, 1121, 1198, 890, 2046, 1869,
	2454, 2493, 2160, 528, 1742, 1743, 1735, 1708, 1539, 1485,
	796, 1665, 723, 2437, 2110, 1760, 1640, 2051, 2000, 1761,
	2063, 2300, 2243, 2238, 1566, 1575, 1119, 784, 1971, 1155,
	1279, 175, 8, 1493, 2127, 1513, 437, 174, 7, 1154,
	1940, 842, 36, 1793, 1341, 6, 2090, 1638, 1238, 1762,
	1875, 442, 1548, 1276, 1184, 1772, 1284, 532, 521, 179,
	1921, 179, 2582, 833, 834, 113, 436, 1214, 2203, 35,
	1271, 1346, 523, 2581, 754, 1549, 1396, 1332, 1741, 1380,
	1135, 794, 14, 1738, 26, 907, 2204, 15, 1724, 1966,
	460, 540, 530, 1245, 1340, 783, 1698, 2070, 13, 1183,
	470, 457, 32, 1512, 1181, 722, 1402, 486, 1131, 1401,
	666, 1147, 487, 1264, 23, 16, 10, 165, 158, 700,
	1091, 1237, 800, 720, 161, 668, 1769, 704, 2996, 2487,
	1067, 472, 829, 1779, 831, 2487, 2737, 2163, 742, 2685,
	468, 2116, 469, 2114, 2113, 465, 2111, 1252, 1645, 1248,
	830, 826, 825, 826, 826, 163, 467, 444, 1029, 1167,
	466, 1250, 965, 966, 967, 964, 2838, 2450, 2448, 2774,
	1713, 2967, 2962, 453, 965, 966, 967, 964, 2841, 2691,
	1489, 3057, 1023, 1737, 667, 2008, 3123, 3016, 2867, 677,
	162, 162, 162, 476, 928, 8, 162, 2267, 162, 447,
	447, 7, 1083, 2156, 2269, 455, 2148, 2786, 1299, 824,
	1292, 1766, 2721, 162, 50, 154, 130, 2862, 162, 3088,
	2777, 1106, 1105, 1521, 482, 797, 2516, 162, 1777, 799,
	2772, 3017, 1507, 1111, 1925, 2794, 2795, 814, 1296, 2469,
	1289, 2773, 2088, 483, 2462, 162, 50, 154, 130, 2865,
	162, 50, 154, 130, 1333, 1436, 1084, 1337, 962, 1298,
	159, 1291, 2089, 524, 1649, 159, 112, 159, 2424, 2425,
	657, 1682, 656, 658, 659, 112, 660, 661, 2778, 2423,
	1163, 1336, 159, 1164, 1650, 1651, 3176, 159, 1317, 678,
	2128, 943, 2076, 763, 944, 2075, 159, 2240, 2077, 1497,
	1498, 1185, 1562, 1187, 1143, 670, 1150, 2241, 1152, 1153,
	1149, 1152, 1153, 936, 159, 955, 938, 3174, 1349, 159,
	3144, 3145, 946, 960, 793, 792, 3060, 448, 3060, 3119,
	3059, 3118, 2858, 3058, 3117, 3059, 3058, 448, 900, 1850,
	3162, 3163, 2969, 3122, 939, 2972, 2973, 2974, 2975, 772,
	2694, 2455, 3046, 2694, 2239, 473, 473, 3046, 448, 2456,
	1338, 2457, 3049, 2965, 1352, 910, 2143, 901, 1666, 1166,
	3063, 2793, 2703, 1974, 1656, 1328, 895, 897, 809, 806,
	801, 805, 807, 1335, 2724, 1251, 1249, 1773, 2731, 2562,
	2040, 1920, 2872, 1721, 1258, 1257, 711, 941, 2782, 2796,
	2334, 3062, 2229, 2153, 836, 2480, 812, 2552, 2991, 2482,
	804, 958, 959, 957, 2839, 2006, 998, 2449, 931, 932,
	2779, 2783, 2781, 2780, 3125, 3126, 800, 2556, 129, 2382,
	160, 2043, 2560, 2042, 2246, 3169, 3178, 2994, 2869, 2047,
	827, 828, 2627, 2628, 934, 832, 910, 894, 2576, 2808,
	152, 923, 899, 2590, 3076, 475, 937, 940, 2788, 2789,
	942, 810, 900, 2857, 795, 896, 3013, 3143, 813, 1660,
	2859, 2275, 474, 2387, 1778, 1351, 1927, 2801, 3254, 1358,
	1361, 1362, 933, 3071, 3270, 802, 1130, 2557, 2558, 3202,
	1359, 768, 3130, 3131, 767, 3134, 1175, 800, 1334, 1141,
	2796, 3173, 3134, 2559, 470, 470, 1032, 3209, 811, 1782,
	1784, 1785, 2775, 2631, 2811, 1680, 1681, 2990, 2787, 953,
	954, 2927, 517, 3234, 1165, 519, 2017, 2016, 2983, 797,
	518, 2984, 2916, 799, 914, 945, 2037, 2038, 2252, 2554,
	2258, 2259, 2260, 2261, 468, 468, 469, 469, 803, 465,
	465, 1194, 903, 904, 1193, 912, 911, 935, 1145, 1144,
	467, 467, 1767, 921, 466, 466, 2922, 1128, 1089, 443,
	1092, 2995, 2707, 1127, 1767, 1126, 1033, 3277, 2486, 1767,
	773, 3271, 3214, 3265, 2986, 3241, 3006, 2754, 1064, 2362,
	891, 2533, 920, 1976, 1794, 892, 1969, 769, 2836, 1097,
	797, 3043, 723, 482, 799, 898, 916, 917, 2937, 2938,
	2939, 2941, 2940, 3015, 826, 2985, 826, 3124, 826, 2092,
	826, 1182, 3014, 808, 826, 2623, 919, 826, 1000, 1001,
	1002, 1003, 2485, 1004, 2149, 2112, 912, 911, 2269, 1768,
	1103, 2080, 1780, 2004, 1770, 1986, 2792, 1253, 1109, 448,
	1979, 1177, 1151, 1152, 1153, 905, 1989, 437, 437, 471,
	771, 3179, 1969, 1991, 471, 2866, 437, 437, 1108, 1148,
	1209, 1209, 1107, 448, 667, 477, 1098, 1099, 1100, 1101,
	1102, 2541, 1104, 928, 1152, 1153, 1781, 1110, 2929, 2332,
	2868, 473, 1092, 443, 2563, 1667, 1241, 1241, 1207, 1207,
	131, 131, 131, 2630, 2791, 2157, 131, 179, 131, 1211,
	2553, 3264, 2624, 2992, 2483, 1142, 437, 1360, 3215, 51,
	1990, 1124, 1216, 131, 51, 922, 1129, 1116, 131, 1975,
	2419, 2421, 2555, 1139, 1977, 770, 2245, 131, 2627, 2628,
	1090, 1157, 1158, 2228, 1160, 1161, 1162, 1783, 1041, 1042,
	2873, 2495, 2494, 3276, 1863, 131, 1657, 1329, 1087, 795,
	131, 2434, 2435, 1132, 1136, 1136, 1136, 1283, 927, 1286,
	1259, 1865, 1864, 2335, 1294, 2336, 2337, 1501, 2918, 1500,
	1980, 1069, 2917, 1862, 1203, 1204, 1132, 1132, 1978, 968,
	1085, 1086, 2249, 2250, 1315, 1071, 2923, 2924, 997, 948,
	2353, 2354, 949, 1499, 1189, 1191, 1006, 2248, 1209, 668,
	1209, 900, 679, 1201, 1202, 2029, 1137, 1138, 1094, 717,
	718, 719, 680, 1300, 2903, 1976, 1979, 3217, 1012, 2979,
	951, 1825, 963, 3054, 1824, 2363, 2365, 2366, 2367, 2364,
	713, 764, 714, 683, 2658, 1118, 1176, 928, 3212, 3213,
	1985, 1659, 1540, 800, 1983, 1310, 1311, 800, 1923, 2060,
	1540, 2130, 2654, 1254, 1233, 1168, 1169, 2280, 764, 2744,
	2595, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376,
	1377, 1378, 1379, 1156, 1853, 2574, 1159, 1391, 1392, 2148,
	1400, 1192, 3283, 1095, 682, 2420, 715, 3282, 685, 684,
	1439, 1440, 1441, 3273, 1449, 947, 963, 817, 822, 823,
	3238, 2625, 2003, 1455, 3255, 1281, 1456, 1173, 2633, 453,
	1217, 671, 2352, 3250, 766, 1348, 1227, 765, 2061, 1465,
	1466, 1458, 1232, 1290, 1273, 1274, 1278, 1297, 1242, 1282,
	2234, 1215, 1231, 952, 1243, 2281, 3244, 1314, 470, 1345,
	2231, 766, 3243, 3221, 765, 1313, 1980, 1262, 1324, 1265,
	1266, 1975, 1969, 1974, 963, 1972, 1977, 3195, 950, 963,
	1267, 1268, 1922, 2135, 1363, 3274, 1326, 448, 2092, 1511,
	1209, 1515, 1516, 2061, 1518, 1519, 1775, 1872, 468, 2061,
	469, 448, 1483, 465, 1209, 3251, 1306, 2658, 723, 1342,
	1323, 1538, 3152, 1320, 467, 2281, 1209, 668, 466, 1302,
	1873, 1874, 1177, 2575, 1319, 3146, 3098, 464, 1775, 2983,
	1978, 1486, 2984, 1093, 1775, 1775, 1857, 1301, 3037, 1448,
	1322, 1321, 1318, 1766, 1339, 1648, 1561, 2978, 1964, 3196,
	1858, 1344, 1829, 1330, 1567, 1567, 3036, 1177, 3032, 1177,
	1177, 774, 1757, 448, 3031, 1511, 1511, 925, 3030, 1209,
	1634, 1635, 1647, 3029, 963, 1678, 1510, 671, 1701, 1565,
	1431, 1432, 1517, 1435, 3153, 2986, 437, 1506, 1209, 1240,
	1240, 1450, 1382, 2998, 1117, 1389, 1390, 2999, 2999, 1520,
	712, 1522, 1523, 1524, 1457, 1394, 1459, 819, 820, 821,
	3038, 1331, 1195, 448, 1511, 1209, 2985, 1689, 3197, 448,
	1692, 1693, 965, 966, 967, 964, 1696, 1697, 1945, 926,
	2999, 1703, 2891, 1546, 1547, 1434, 2999, 1133, 179, 1585,
	2999, 179, 179, 926, 179, 2999, 965, 966, 967, 964,
	1556, 1557, 1629, 1630, 2765, 2596, 2815, 2642, 1554, 1569,
	1460, 2439, 2414, 2210, 2202, 2999, 1132, 2730, 1856, 2283,
	2151, 2164, 2146, 1560, 1661, 2139, 1563, 1564, 2137, 2132,
	1555, 1514, 1449, 1449, 1745, 1550, 1484, 1552, 1553, 1449,
	1449, 1136, 2514, 2125, 1752, 1530, 1653, 2150, 1655, 1568,
	1558, 1686, 1675, 1676, 2892, 1688, 2123, 1543, 1673, 1674,
	1490, 1712, 2121, 2119, 1715, 1716, 1699, 1718, 1538, 2950,
	1065, 1944, 1209, 1764, 1691, 1541, 1542, 1668, 2092, 2643,
	1534, 1571, 1572, 1535, 2061, 963, 963, 1353, 1354, 1355,
	1356, 1357, 1559, 963, 1945, 1545, 980, 2133, 1551, 928,
	2138, 2133, 1570, 1134, 2142, 1508, 1854, 1961, 1820, 1805,
	1514, 1835, 1756, 1834, 800, 2126, 1823, 1814, 1706, 1525,
	1813, 800, 1505, 1758, 893, 1787, 1303, 2813, 2124, 1746,
	1812, 1398, 1399, 1677, 2120, 2120, 1774, 1307, 1433, 1636,
	1791, 1792, 1633, 1945, 2072, 1009, 1443, 913, 1652, 893,
	1654, 1662, 888, 886, 2591, 2600, 1342, 1740, 2477, 3230,
	1461, 1462, 1463, 3218, 1740, 1467, 1468, 1469, 1470, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 2111, 1853, 1687,
	2979, 1573, 1122, 963, 2980, 963, 1123, 2001, 963, 963,
	1487, 1197, 963, 2997, 1491, 3077, 2904, 1494, 1709, 1707,
	1199, 1133, 963, 1830, 1804, 1832, 800, 1683, 1775, 1308,
	470, 1200, 1839, 2920, 2919, 2757, 893, 797, 2755, 1726,
	2736, 799, 2683, 2659, 797, 1438, 1437, 2652, 799, 2647,
	2592, 1685, 2644, 965, 966, 967, 964, 1685, 1749, 3078,
	2905, 1710, 1747, 522, 3248, 900, 1915, 448, 2569, 2488,
	468, 2384, 469, 2256, 1755, 465, 1438, 1437, 1754, 2758,
	1388, 448, 2756, 448, 448, 448, 467, 2136, 1759, 2082,
	466, 1113, 1112, 902, 2593, 1942, 1385, 1387, 1384, 1803,
	1386, 965, 966, 967, 964, 1949, 1177, 1397, 2171, 1800,
	1196, 1750, 2686, 1751, 1795, 2105, 1954, 979, 978, 988,
	989, 981, 982, 983, 984, 985, 986, 987, 980, 797,
	1177, 1397, 681, 799, 2441, 3116, 1786, 1134, 1509, 1246,
	2180, 1710, 1487, 1996, 1788, 967, 964, 1487, 1487, 964,
	2932, 2931, 1799, 2458, 2324, 1471, 1382, 2323, 1789, 1790,
	981, 982, 983, 984, 985, 986, 987, 980, 885, 881,
	882, 883, 884, 2255, 2185, 2306, 2184, 2183, 2181, 1880,
	965, 966, 967, 964, 2304, 1933, 1464, 2002, 2875, 2876,
	1711, 2115, 3233, 1714, 2911, 3259, 1717, 3247, 2870, 1719,
	1011, 2728, 2374, 2065, 2065, 1647, 2065, 983, 984, 985,
	986, 987, 980, 1010, 2372, 1917, 2370, 481, 965, 966,
	967, 964, 3203, 3198, 437, 437, 1453, 2684, 965, 966,
	967, 964, 900, 3136, 1957, 1951, 1952, 2173, 1209, 448,
	1454, 1866, 2182, 2359, 3107, 1955, 1956, 1849, 1851, 1852,
	1924, 448, 686, 3232, 2871, 900, 443, 2729, 2373, 3079,
	1241, 3022, 1647, 3018, 2963, 2100, 2086, 2102, 2907, 2906,
	2371, 179, 2369, 2759, 2727, 1136, 1032, 2561, 1950, 1958,
	1963, 2473, 1959, 2453, 2067, 2452, 2071, 800, 2069, 2007,
	2357, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2356, 2358,
	2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027,
	2028, 2355, 2030, 2031, 2032, 2033, 2034, 2144, 2035, 1968,
	1764, 2347, 2078, 2341, 2079, 1962, 1960, 1209, 2340, 1209,
	1967, 1209, 2339, 2338, 1729, 1916, 900, 1728, 1797, 1727,
	1723, 1801, 2083, 2084, 2106, 2099, 1033, 1981, 1982, 1932,
	1987, 1934, 1935, 1936, 2195, 1722, 2094, 2154, 965, 966,
	967, 964, 1304, 1082, 2735, 1209, 2189, 2107, 2389, 1880,
	1808, 1189, 1191, 2547, 2044, 2186, 2187, 3168, 2846, 3164,
	1811, 2196, 3120, 2073, 1953, 3065, 1209, 2097, 1818, 517,
	797, 2879, 519, 1207, 799, 3041, 2104, 518, 3026, 3021,
	2198, 3020, 2993, 2188, 2964, 2913, 1831, 965, 966, 967,
	964, 1836, 1837, 1838, 1207, 1246, 1841, 1842, 1843, 1844,
	1845, 1846, 1847, 1848, 2197, 2095, 2087, 2096, 2098, 1860,
	1861, 2888, 900, 2200, 988, 989, 981, 982, 983, 984,
	985, 986, 987, 980, 553, 563, 965, 966, 967, 964,
	2158, 2175, 2874, 554, 2844, 562, 555, 559, 558, 556,
	557, 2842, 965, 966, 967, 964, 2155, 971, 972, 973,
	974, 975, 976, 977, 969, 2507, 2822, 2141, 2819, 2817,
	2169, 1816, 2379, 1209, 1946, 2726, 2253, 2725, 2221, 2147,
	2722, 2152, 1511, 2712, 448, 2145, 965, 966, 967, 964,
	2279, 965, 966, 967, 964, 1247, 2285, 1215, 560, 3085,
	3137, 2706, 2162, 2165, 2166, 2668, 2653, 2649, 1342, 1685,
	2640, 2639, 2294, 2570, 2538, 2179, 2537, 900, 2484, 2235,
	965, 966, 967, 964, 2506, 2303, 965, 966, 967, 964,
	561, 2451, 900, 900, 900, 1567, 2232, 1815, 900, 2428,
	2314, 2315, 2316, 900, 2368, 2320, 2321, 2360, 2322, 2350,
	965, 966, 967, 964, 3069, 2348, 2265, 2168, 2344, 3081,
	2222, 2343, 2225, 965, 966, 967, 964, 2342, 2852, 2266,
	1855, 2065, 1731, 2205, 2206, 613, 612, 2276, 1725, 2211,
	965, 966, 967, 964, 1496, 2375, 1305, 1487, 2286, 1487,
	1585, 1040, 1036, 437, 965, 966, 967, 964, 1511, 900,
	1647, 1647, 1647, 1647, 1035, 889, 2976, 1487, 1487, 2242,
	2894, 900, 1647, 2236, 1281, 2065, 2287, 2752, 2751, 2301,
	1802, 2750, 2743, 2301, 2291, 2292, 2297, 2302, 2251, 2711,
	2698, 1209, 2288, 1240, 2689, 1278, 2290, 2688, 1282, 1273,
	1274, 2308, 2677, 448, 448, 8, 2851, 2309, 2310, 2676,
	2278, 7, 2313, 2601, 2289, 2512, 2505, 2319, 179, 2284,
	2296, 2497, 2492, 179, 1514, 2436, 1266, 2233, 2305, 2299,
	2293, 2230, 965, 966, 967, 964, 1267, 1268, 2122, 2312,
	2118, 2805, 2117, 2410, 1449, 162, 1449, 154, 130, 2468,
	1840, 2330, 2331, 2472, 965, 966, 967, 964, 1833, 1209,
	1828, 1826, 2479, 1822, 1821, 2345, 2346, 965, 966, 967,
	964, 2349, 1819, 2397, 978, 988, 989, 981, 982, 983,
	984, 985, 986, 987, 980, 2397, 1810, 1807, 1806, 2381,
	1730, 2442, 1482, 2380, 2172, 1481, 2446, 2385, 1480, 1452,
	2383, 1451, 2190, 2191, 1442, 1221, 1219, 2409, 2411, 668,
	2193, 2194, 2270, 3272, 159, 2413, 1486, 3229, 2277, 2412,
	3223, 2467, 3210, 2199, 2429, 800, 2426, 2398, 2399, 2400,
	2401, 3207, 800, 162, 3205, 3106, 1030, 2465, 3039, 3028,
	3023, 1261, 2500, 2471, 2502, 900, 2443, 1487, 2440, 2476,
	2223, 2224, 1494, 2550, 2444, 2945, 2930, 2481, 2926, 2422,
	2709, 2830, 2828, 2565, 2803, 2802, 2799, 2459, 448, 2464,
	2466, 2461, 672, 673, 674, 675, 2798, 671, 900, 2738,
	2585, 2584, 900, 900, 900, 1272, 965, 966, 967, 964,
	1263, 1647, 1942, 1120, 2599, 2510, 2489, 2376, 2475, 2509,
	2603, 2490, 159, 2307, 2273, 2463, 2272, 2271, 1277, 2496,
	2508, 2613, 2470, 2616, 1280, 2616, 2616, 2573, 2503, 2504,
	900, 965, 966, 967, 964, 965, 966, 967, 964, 1269,
	800, 2540, 2220, 2131, 2635, 2081, 965, 966, 967, 964,
	2036, 1209, 1209, 1943, 2632, 1383, 159, 3097, 1220, 2265,
	1694, 1504, 2634, 2534, 1503, 1327, 1293, 2542, 1270, 1880,
	1066, 2539, 1063, 1062, 1061, 1060, 1059, 1058, 1057, 1207,
	1207, 2431, 2432, 1056, 2597, 1055, 2586, 2587, 2588, 2636,
	2637, 1054, 2566, 1053, 2572, 2501, 1052, 448, 800, 1051,
	1050, 1049, 2550, 1048, 1047, 2612, 2598, 2611, 2621, 1046,
	2517, 2518, 1045, 1511, 1511, 2594, 2519, 2520, 2521, 2522,
	2545, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2606,
	2619, 2617, 2618, 1044, 2498, 2499, 2602, 2219, 1043, 2622,
	2604, 2605, 1039, 3095, 2218, 1172, 1038, 1174, 2217, 1178,
	1179, 1180, 1037, 1034, 1027, 1026, 1024, 1023, 1022, 1021,
	2189, 1020, 1019, 965, 966, 967, 964, 2216, 1018, 2687,
	965, 966, 967, 964, 965, 966, 967, 964, 2607, 1222,
	1223, 1224, 1225, 1226, 1017, 1228, 1229, 1230, 1016, 1015,
	1014, 1235, 1236, 965, 966, 967, 964, 2215, 1013, 1008,
	3093, 2214, 2641, 1007, 2646, 2650, 448, 2651, 2645, 930,
	2655, 2656, 565, 114, 887, 2445, 3091, 2447, 114, 2666,
	2648, 2213, 2800, 965, 966, 967, 964, 965, 966, 967,
	964, 3184, 2670, 1948, 2212, 1487, 2673, 2674, 2675, 1929,
	1487, 918, 2662, 2663, 2657, 2209, 2571, 965, 966, 967,
	964, 3182, 2208, 3142, 2682, 2665, 2257, 2093, 1733, 2669,
	965, 966, 967, 964, 929, 2667, 2408, 454, 2057, 2058,
	114, 965, 966, 967, 964, 2699, 2403, 2491, 965, 966,
	967, 964, 2700, 2207, 2701, 2406, 2404, 2402, 2702, 3258,
	2407, 2405, 2140, 2705, 2713, 2832, 2134, 2742, 1114, 2511,
	1532, 1533, 2833, 99, 2568, 2748, 900, 2201, 2718, 965,
	966, 967, 964, 2227, 445, 2065, 1647, 2762, 979, 978,
	988, 989, 981, 982, 983, 984, 985, 986, 987, 980,
	2609, 900, 2610, 965, 966, 967, 964, 1827, 2005, 53,
	2613, 2192, 2810, 52, 900, 2715, 2129, 800, 2535, 2536,
	2717, 2831, 1621, 2543, 900, 1255, 2170, 2159, 450, 1209,
	1527, 1528, 1529, 1860, 1861, 1685, 449, 965, 966, 967,
	964, 1068, 798, 2733, 1287, 1511, 114, 1918, 1695, 900,
	924, 2764, 965, 966, 967, 964, 800, 1207, 1393, 3061,
	2583, 114, 2544, 114, 451, 2760, 2797, 2814, 452, 2761,
	2749, 2326, 2835, 2295, 2237, 179, 1938, 2790, 2327, 2328,
	2329, 2620, 1536, 1502, 965, 966, 967, 964, 900, 3155,
	2824, 3025, 2806, 2809, 2804, 1438, 1437, 2719, 1080, 1081,
	1078, 1079, 2739, 2740, 2741, 2812, 2860, 1076, 1077, 2638,
	2816, 2045, 2048, 2821, 2818, 2768, 2763, 1074, 1075, 2825,
	2041, 1632, 2766, 1171, 2826, 2767, 1170, 956, 2807, 900,
	1209, 1209, 2823, 2672, 2091, 900, 2745, 1753, 2319, 1125,
	1070, 3224, 3128, 2897, 2704, 2897, 3113, 2820, 2837, 2053,
	2056, 2057, 2058, 2054, 3111, 2055, 2059, 3072, 1207, 2886,
	2847, 3051, 3050, 2397, 3048, 3040, 2958, 2957, 2884, 1209,
	2843, 2714, 2696, 2695, 2680, 2861, 1992, 2912, 2863, 1073,
	2889, 2679, 2438, 1540, 3186, 3185, 1140, 448, 2474, 900,
	900, 1931, 1809, 900, 900, 915, 3185, 2886, 3186, 2928,
	2697, 2890, 2397, 2901, 2430, 671, 61, 2900, 166, 3,
	2, 2948, 1186, 2947, 2764, 2942, 2074, 1679, 1213, 1538,
	1, 2955, 2934, 2935, 1495, 2797, 2943, 2944, 2910, 2959,
	2960, 676, 2914, 2415, 2416, 2671, 2790, 2418, 2053, 2056,
	2057, 2058, 2054, 2882, 2055, 2059, 672, 673, 674, 675,
	1771, 671, 2386, 2989, 2039, 1919, 3227, 2564, 1115, 716,
	1444, 1312, 2952, 816, 909, 1309, 2982, 908, 2951, 906,
	1395, 567, 1736, 2377, 2953, 1690, 2351, 2893, 2954, 2908,
	2909, 2708, 3154, 2748, 3192, 3105, 3157, 1325, 2710, 3008,
	2853, 551, 3042, 2968, 3109, 2970, 2849, 2987, 1776, 961,
	2977, 2981, 2460, 2882, 2882, 738, 604, 2882, 2882, 979,
	978, 988, 989, 981, 982, 983, 984, 985, 986, 987,
	980, 3000, 578, 1025, 1295, 1288, 2515, 818, 3003, 577,
	3009, 3004, 3011, 3002, 3010, 2732, 900, 2247, 2433, 3012,
	1209, 3019, 2949, 815, 114, 114, 798, 739, 3225, 1720,
	2966, 1256, 1260, 2902, 2753, 2589, 3024, 2274, 499, 498,
	505, 495, 3268, 3257, 3239, 3222, 3133, 3253, 1207, 3033,
	502, 503, 3172, 504, 508, 3208, 2856, 490, 3034, 2854,
	2855, 3201, 3129, 488, 1658, 435, 781, 513, 3056, 2946,
	900, 1732, 489, 3047, 1947, 3045, 3121, 3027, 697, 1928,
	3073, 979, 978, 988, 989, 981, 982, 983, 984, 985,
	986, 987, 980, 3068, 698, 699, 2263, 996, 2262, 900,
	1364, 970, 1487, 3064, 3067, 1381, 1209, 2531, 2532, 3100,
	3103, 1005, 3075, 1487, 527, 1798, 2827, 2244, 2785, 2829,
	2427, 3083, 60, 59, 58, 3090, 3092, 3094, 3096, 57,
	2882, 3104, 3089, 2834, 1207, 2933, 1702, 3080, 187, 3112,
	569, 3114, 3115, 3110, 3099, 1209, 3108, 186, 2877, 3102,
	3159, 549, 548, 547, 546, 3138, 545, 2052, 2050, 3035,
	2049, 1642, 3127, 1641, 1700, 2317, 2311, 1988, 1993, 1574,
	3139, 3086, 3087, 1207, 2925, 2361, 1526, 3161, 1984, 1591,
	2333, 1588, 1587, 3135, 2882, 3147, 2325, 3148, 2921, 3149,
	3160, 3150, 2915, 3151, 1618, 2746, 2896, 2769, 2770, 900,
	2776, 1937, 841, 837, 3165, 839, 3056, 840, 3166, 838,
	2178, 2174, 1965, 2882, 2578, 1871, 1870, 1868, 3074, 1867,
	1088, 2988, 2716, 1878, 3191, 3180, 1876, 2664, 3183, 3181,
	3175, 3177, 2660, 1072, 3084, 1744, 3194, 1492, 2226, 1643,
	3199, 1639, 900, 3187, 3188, 3189, 3190, 1930, 1422, 2864,
	3200, 1531, 690, 491, 493, 492, 1926, 3204, 97, 3206,
	726, 144, 47, 497, 88, 87, 96, 3161, 3220, 142,
	46, 171, 3216, 170, 173, 501, 900, 172, 900, 169,
	3160, 3219, 516, 2108, 3226, 2109, 3228, 168, 1244, 494,
	167, 2899, 665, 3231, 37, 33, 12, 11, 3194, 3235,
	900, 34, 21, 22, 3242, 20, 1316, 19, 3246, 3249,
	25, 31, 3252, 3170, 30, 107, 106, 29, 162, 50,
	154, 130, 1422, 105, 104, 103, 102, 3256, 101, 725,
	3263, 3167, 28, 18, 3267, 3266, 155, 3001, 41, 764,
	40, 3275, 39, 147, 3278, 9, 95, 156, 3263, 3281,
	3280, 93, 3279, 3267, 27, 94, 1348, 91, 1218, 92,
	89, 72, 71, 454, 70, 85, 112, 965, 966, 967,
	964, 84, 83, 2513, 82, 81, 80, 78, 79, 737,
	69, 100, 68, 67, 66, 65, 90, 159, 76, 114,
	1348, 86, 1348, 496, 500, 506, 77, 507, 509, 75,
	74, 510, 511, 512, 73, 1418, 514, 515, 64, 63,
	62, 1415, 128, 126, 1348, 1417, 1414, 1416, 1420, 1421,
	127, 125, 766, 1419, 124, 765, 979, 978, 988, 989,
	981, 982, 983, 984, 985, 986, 987, 980, 123, 122,
	1012, 121, 120, 42, 43, 44, 1422, 45, 138, 137,
	139, 141, 143, 114, 140, 135, 133, 114, 136, 134,
	132, 751, 55, 116, 117, 17, 118, 119, 114, 727,
	24, 4, 0, 0, 0, 0, 0, 3082, 114, 1418,
	991, 0, 995, 0, 0, 1415, 0, 0, 0, 1417,
	1414, 1416, 1420, 1421, 2167, 0, 729, 1419, 992, 994,
	990, 0, 993, 979, 978, 988, 989, 981, 982, 983,
	984, 985, 986, 987, 980, 1796, 0, 0, 979, 978,
	988, 989, 981, 982, 983, 984, 985, 986, 987, 980,
	0, 0, 0, 129, 153, 160, 0, 98, 0, 979,
	978, 988, 989, 981, 982, 983, 984, 985, 986, 987,
	980, 0, 0, 0, 0, 152, 146, 145, 0, 750,
	749, 0, 56, 0, 0, 1425, 1426, 1427, 1428, 1429,
	1430, 1423, 1424, 0, 0, 0, 748, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 724, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 728, 759,
	0, 0, 0, 1418, 0, 0, 0, 0, 0, 1415,
	0, 0, 0, 1417, 1414, 1416, 1420, 1421, 0, 0,
	0, 1419, 755, 148, 149, 150, 0, 0, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1425,
	1426, 1427, 1428, 1429, 1430, 1423, 1424, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 756, 760,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 108,
	0, 0, 3237, 151, 0, 109, 745, 0, 743, 747,
	763, 0, 0, 0, 744, 741, 740, 0, 746, 731,
	732, 730, 733, 734, 735, 736, 0, 761, 0, 762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	757, 758, 979, 978, 988, 989, 981, 982, 983, 984,
	985, 986, 987, 980, 0, 0, 0, 0, 0, 0,
	0, 0, 110, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 1646, 0, 0, 753, 0, 0,
	0, 0, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1425, 1426, 1427, 1428, 1429, 1430, 1423,
	1424, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 0, 0, 114, 114, 0, 114, 0, 0, 0,
	0, 0, 0, 0, 752, 0, 0, 0, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 585,
	0, 0, 0, 0, 798, 0, 0, 0, 330, 0,
	0, 798, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 541, 0, 0, 0, 273, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 111, 38, 0,
	0, 431, 0, 432, 48, 5, 576, 0, 115, 359,
	314, 0, 0, 0, 0, 636, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 534, 0, 0,
	566, 613, 612, 553, 563, 0, 0, 251, 185, 433,
	0, 434, 554, 0, 562, 555, 559, 558, 556, 557,
	0, 628, 0, 0, 0, 0, 996, 0, 525, 538,
	0, 542, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 536, 0, 0, 0,
	0, 586, 0, 537, 0, 0, 581, 560, 564, 0,
	0, 0, 0, 242, 364, 380, 252, 355, 393, 257,
	362, 247, 329, 352, 0, 0, 244, 378, 361, 311,
	292, 293, 243, 0, 347, 271, 284, 268, 327, 561,
	584, 588, 267, 650, 582, 388, 246, 0, 387, 326,
	374, 379, 312, 306, 245, 376, 310, 305, 296, 275,
	651, 297, 298, 288, 338, 304, 339, 289, 316, 315,
	317, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 390, 0, 0, 634, 0, 0,
	0, 363, 0, 0, 299, 0, 0, 0, 583, 0,
	350, 332, 647, 526, 0, 348, 302, 375, 340, 381,
	365, 389, 344, 341, 237, 366, 270, 313, 248, 250,
	265, 272, 274, 276, 277, 322, 323, 335, 354, 367,
	368, 369, 269, 258, 349, 259, 286, 260, 238, 262,
	261, 263, 356, 264, 240, 336, 373, 0, 282, 345,
	309, 241, 308, 337, 372, 371, 249, 397, 403, 404,
	0, 0, 409, 0, 0, 0, 417, 422, 423, 424,
	426, 427, 428, 429, 0, 0, 0, 0, 411, 0,
	0, 0, 1446, 1445, 1447, 402, 280, 234, 235, 441,
	632, 328, 0, 0, 0, 0, 646, 627, 629, 630,
	633, 637, 638, 639, 640, 641, 643, 645, 649, 440,
	0, 0, 0, 0, 0, 439, 334, 2068, 353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 383, 395, 412, 415, 0, 0, 0, 0,
	239, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	587, 0, 0, 318, 319, 320, 321, 635, 0, 256,
	413, 343, 0, 0, 1646, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 0, 407,
	408, 279, 285, 425, 287, 255, 333, 281, 392, 294,
	859, 418, 0, 419, 0, 0, 0, 0, 325, 290,
	291, 357, 295, 303, 346, 391, 331, 351, 253, 382,
	358, 307, 0, 0, 657, 631, 656, 658, 659, 655,
	660, 661, 642, 544, 0, 591, 653, 652, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 233, 0, 236, 0, 301, 0, 342,
	278, 0, 0, 620, 597, 598, 599, 543, 600, 594,
	595, 596, 621, 589, 617, 618, 568, 592, 601, 616,
	602, 619, 622, 623, 662, 663, 608, 664, 605, 624,
	615, 614, 603, 590, 625, 626, 575, 570, 606, 607,
	593, 609, 610, 611, 571, 572, 573, 574, 0, 0,
	845, 398, 399, 400, 421, 384, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	867, 871, 873, 875, 877, 878, 880, 0, 885, 881,
	882, 883, 884, 0, 862, 863, 864, 865, 843, 844,
	868, 0, 846, 0, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 858, 860, 856, 857, 866, 0, 0,
	0, 162, 50, 154, 130, 870, 872, 874, 876, 879,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	0, 0, 0, 0, 1619, 0, 147, 0, 0, 1581,
	156, 0, 0, 0, 0, 0, 114, 0, 0, 0,
	0, 0, 861, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 1621, 1590,
	0, 0, 0, 0, 100, 0, 0, 0, 1622, 1623,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1589, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1596,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1646, 1646, 1646, 1646, 116, 117, 0, 118,
	119, 0, 0, 0, 1646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	713, 0, 714, 0, 0, 0, 1612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 114, 0, 0, 695, 0,
	0, 0, 0, 0, 0, 0, 129, 153, 160, 0,
	98, 707, 0, 710, 0, 114, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 0, 152, 146,
	145, 0, 0, 0, 0, 56, 1580, 1582, 1579, 0,
	1576, 0, 0, 0, 0, 1600, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1606, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1594, 1628, 0, 0,
	1595, 1597, 1599, 0, 1601, 1602, 1603, 1607, 1608, 1609,
	1611, 1614, 1615, 1616, 0, 0, 148, 149, 150, 0,
	869, 1604, 1613, 1605, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1584, 0, 0, 0, 0, 0, 0,
	114, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1620, 0, 0, 0, 709,
	0, 703, 108, 691, 0, 0, 151, 0, 109, 0,
	706, 705, 0, 0, 0, 0, 1577, 1578, 0, 0,
	0, 0, 0, 1646, 0, 0, 0, 688, 0, 0,
	0, 696, 0, 0, 1617, 0, 0, 0, 114, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 0, 0, 0, 1592, 0,
	0, 0, 0, 0, 0, 110, 0, 0, 0, 0,
	712, 0, 0, 0, 0, 702, 49, 0, 0, 701,
	0, 0, 1610, 0, 0, 687, 0, 0, 0, 694,
	0, 1598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1625, 1624, 0, 692, 0, 0, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 51, 0, 0, 0, 689,
	0, 541, 0, 0, 0, 273, 1488, 0, 300, 0,
	0, 0, 0, 711, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 432, 0, 1586, 576, 0, 0, 359,
	314, 131, 0, 0, 0, 636, 644, 0, 0, 693,
	0, 0, 0, 0, 1670, 0, 0, 534, 0, 0,
	566, 613, 612, 553, 563, 0, 0, 251, 185, 433,
	1627, 434, 554, 1626, 562, 555, 559, 558, 556, 557,
	0, 628, 0, 0, 0, 0, 0, 0, 525, 538,
	0, 542, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 38, 0, 0, 0, 0, 0, 48, 0, 0,
	0, 115, 0, 0, 0, 535, 536, 0, 0, 0,
	0, 586, 0, 537, 708, 0, 1671, 560, 564, 0,
	0, 0, 0, 242, 364, 380, 252, 355, 393, 257,
	362, 247, 329, 352, 0, 0, 244, 378, 361, 311,
	292, 293, 243, 0, 347, 271, 284, 268, 327, 561,
	584, 588, 267, 650, 582, 388, 246, 114, 387, 326,
	374, 379, 312, 306, 245, 376, 310, 305, 296, 275,
	651, 297, 298, 288, 338, 304, 339, 289, 316, 315,
	317, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 114, 0, 0, 0,
	579, 0, 0, 0, 390, 0, 0, 634, 1646, 0,
	0, 363, 0, 0, 299, 0, 0, 0, 583, 0,
	350, 332, 647, 526, 0, 348, 302, 375, 340, 381,
	365, 389, 344, 341, 237, 366, 270, 313, 248, 250,
	265, 272, 274, 276, 277, 322, 323, 335, 354, 367,
	368, 369, 269, 258, 349, 259, 286, 260, 238, 262,
	261, 263, 356, 264, 240, 336, 373, 0, 282, 345,
	309, 241, 308, 337, 372, 371, 249, 397, 403, 404,
	0, 0, 409, 0, 0, 0, 417, 422, 423, 424,
	426, 427, 428, 429, 0, 0, 0, 114, 411, 0,
	0, 0, 0, 0, 0, 402, 280, 234, 235, 441,
	632, 328, 0, 0, 0, 0, 646, 627, 629, 630,
	633, 637, 638, 639, 640, 641, 643, 645, 649, 440,
	0, 0, 0, 0, 0, 439, 334, 0, 353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 383, 395, 412, 415, 0, 0, 0, 0,
	239, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	587, 0, 0, 318, 319, 320, 321, 635, 0, 256,
	413, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 279, 285, 425, 287, 255, 333, 281, 392, 294,
	0, 418, 0, 419, 0, 0, 0, 0, 325, 290,
	291, 357, 295, 303, 346, 391, 331, 351, 253, 382,
	358, 307, 0, 0, 657, 631, 656, 658, 659, 655,
	660, 661, 642, 544, 0, 591, 653, 652, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 233, 0, 236, 0, 301, 0, 342,
	278, 0, 0, 620, 597, 598, 599, 543, 600, 594,
	595, 596, 621, 589, 617, 618, 568, 592, 601, 616,
	602, 619, 622, 623, 662, 663, 608, 664, 605, 624,
	615, 614, 603, 590, 625, 626, 575, 570, 606, 607,
	593, 609, 610, 611, 571, 572, 573, 574, 162, 585,
	0, 398, 399, 400, 421, 384, 0, 438, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 0, 0, 0, 273, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 432, 0, 0, 999, 0, 0, 359,
	314, 0, 0, 0, 0, 636, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 534, 0, 0,
	566, 613, 612, 553, 563, 0, 0, 251, 185, 433,
	0, 434, 554, 0, 562, 555, 559, 558, 556, 557,
	0, 628, 0, 0, 0, 0, 0, 0, 525, 538,
	0, 542, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 536, 0, 0, 0,
	0, 586, 0, 537, 0, 0, 581, 560, 564, 0,
	0, 0, 0, 242, 364, 380, 252, 355, 393, 257,
	362, 247, 329, 352, 0, 0, 244, 378, 361, 311,
	292, 293, 243, 0, 347, 271, 284, 268, 327, 561,
	584, 588, 267, 650, 582, 388, 246, 0, 387, 326,
	374, 379, 312, 306, 245, 376, 310, 305, 296, 275,
	651, 297, 298, 288, 338, 304, 339, 289, 316, 315,
	317, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 390, 0, 0, 634, 0, 0,
	0, 363, 0, 0, 299, 0, 0, 0, 583, 0,
	350, 332, 647, 526, 0, 348, 302, 375, 340, 381,
	365, 389, 344, 341, 237, 366, 270, 313, 248, 250,
	265, 272, 274, 276, 277, 322, 323, 335, 354, 367,
	368, 369, 269, 258, 349, 259, 286, 260, 238, 262,
	261, 263, 356, 264, 240, 336, 373, 0, 282, 345,
	309, 241, 308, 337, 372, 371, 249, 397, 403, 404,
	0, 0, 409, 0, 0, 0, 417, 422, 423, 424,
	426, 427, 428, 429, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 402, 280, 234, 235, 441,
	632, 328, 0, 0, 0, 0, 646, 627, 629, 630,
	633, 637, 638, 639, 640, 641, 643, 645, 649, 440,
	0, 0, 0, 0, 0, 439, 334, 0, 353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 383, 395, 412, 415, 0, 0, 0, 0,
	239, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	587, 0, 0, 318, 319, 320, 321, 635, 0, 256,
	413, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 279, 285, 425, 287, 255, 333, 281, 392, 294,
	0, 418, 0, 419, 0, 0, 0, 0, 325, 290,
	291, 357, 295, 303, 346, 391, 331, 351, 253, 382,
	358, 307, 0, 0, 657, 631, 656, 658, 659, 655,
	660, 661, 642, 544, 0, 591, 653, 652, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 233, 0, 236, 0, 301, 131, 342,
	278, 0, 0, 620, 597, 598, 599, 543, 600, 594,
	595, 596, 621, 589, 617, 618, 568, 592, 601, 616,
	602, 619, 622, 623, 662, 663, 608, 664, 605, 624,
	615, 614, 603, 590, 625, 626, 575, 570, 606, 607,
	593, 609, 610, 611, 571, 572, 573, 574, 0, 585,
	0, 398, 399, 400, 421, 384, 0, 438, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 0, 0, 0, 273, 3236, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 432, 0, 0, 576, 0, 0, 359,
	314, 0, 0, 0, 0, 636, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 534, 0, 0,
	566, 613, 612, 553, 563, 0, 0, 251, 185, 433,
	0, 434, 554, 0, 562, 555, 559, 558, 556, 557,
	0, 628, 0, 0, 0, 0, 0, 0, 525, 538,
	0, 542, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 536, 0, 0, 0,
	0, 586, 0, 537, 0, 0, 581, 560, 564, 0,
	0, 0, 0, 242, 364, 380, 252, 355, 393, 257,
	362, 247, 329, 352, 0, 0, 244, 378, 361, 311,
	292, 293, 243, 0, 347, 271, 284, 268, 327, 561,
	584, 588, 267, 650, 582, 388, 246, 0, 387, 326,
	374, 379, 312, 306, 245, 376, 310, 305, 296, 275,
	651, 297, 298, 288, 338, 304, 339, 289, 316, 315,
	317, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 390, 0, 0, 634, 0, 0,
	0, 363, 0, 0, 299, 0, 0, 0, 583, 0,
	350, 332, 647, 526, 0, 348, 302, 375, 340, 381,
	365, 389, 344, 341, 237, 366, 270, 313, 248, 250,
	265, 272, 274, 276, 277, 322, 323, 335, 354, 367,
	368, 369, 269, 258, 349, 259, 286, 260, 238, 262,
	261, 263, 356, 264, 240, 336, 373, 0, 282, 345,
	309, 241, 308, 337, 372, 371, 249, 397, 403, 404,
	0, 0, 409, 0, 0, 0, 417, 422, 423, 424,
	426, 427, 428, 429, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 402, 280, 234, 235, 441,
	632, 328, 0, 0, 0, 0, 646, 627, 629, 630,
	633, 637, 638, 639, 640, 641, 643, 645, 649, 440,
	0, 0, 0, 0, 0, 439, 334, 0, 353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 383, 395, 412, 415, 0, 0, 0, 0,
	239, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	587, 0, 0, 318, 319, 320, 321, 635, 0, 256,
	413, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 279, 285, 425, 287, 255, 333, 281, 392, 294,
	0, 418, 0, 419, 0, 0, 0, 0, 325, 290,
	291, 357, 295, 303, 346, 391, 331, 351, 253, 382,
	358, 307, 0, 0, 657, 631, 656, 658, 659, 655,
	660, 661, 642, 544, 0, 591, 653, 652, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 233, 0, 236, 0, 301, 0, 342,
	278, 0, 0, 620, 597, 598, 599, 543, 600, 594,
	595, 596, 621, 589, 617, 618, 568, 592, 601, 616,
	602, 619, 622, 623, 662, 663, 608, 664, 605, 624,
	615, 614, 603, 590, 625, 626, 575, 570, 606, 607,
	593, 609, 610, 611, 571, 572, 573, 574, 0, 585,
	0, 398, 399, 400, 421, 384, 0, 438, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 0, 0, 0, 273, 1488, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 432, 0, 0, 576, 0, 0, 359,
	314, 0, 0, 0, 0, 636, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 534, 0, 0,
	566, 613, 612, 553, 563, 0, 0, 251, 185, 433,
	0, 434, 554, 0, 562, 555, 559, 558, 556, 557,
	0, 628, 0, 0, 0, 0, 0, 0, 525, 538,
	0, 542, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 536, 0, 0, 0,
	0, 586, 0, 537, 0, 0, 581, 560, 564, 0,
	0, 0, 0, 242, 364, 380, 252, 355, 393, 257,
	362, 247, 329, 352, 0, 0, 244, 378, 361, 311,
	292, 293, 243, 0, 347, 271, 284, 268, 327, 561,
	584, 588, 267, 650, 582, 388, 246, 0, 387, 326,
	374, 379, 312, 306, 245, 376, 310, 305, 296, 275,
	651, 297, 298, 288, 338, 304, 339, 289, 316, 315,
	317, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 390, 0, 0, 634, 0, 0,
	0, 363, 0, 0, 299, 0, 0, 0, 583, 0,
	350, 332, 647, 526, 0, 348, 302, 375, 340, 381,
	365, 389, 344, 341, 237, 366, 270, 313, 248, 250,
	265, 272, 274, 276, 277, 322, 323, 335, 354, 367,
	368, 369, 269, 258, 349, 259, 286, 260, 238, 262,
	261, 263, 356, 264, 240, 336, 373, 0, 282, 345,
	309, 241, 308, 337, 372, 371, 249, 397, 403, 404,
	0, 0, 409, 0, 0, 0, 417, 422, 423, 424,
	426, 427, 428, 429, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 402, 280, 234, 235, 441,
	632, 328, 0, 0, 0, 0, 646, 627, 629, 630,
	633, 637, 638, 639, 640, 641, 643, 645, 649, 440,
	0, 0, 0, 0, 0, 439, 334, 0, 353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 383, 395, 412, 415, 0, 0, 0, 0,
	239, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	587, 0, 0, 318, 319, 320, 321, 635, 0, 256,
	413, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 279, 285, 425, 287, 255, 333, 281, 392, 294,
	0, 418, 0, 419, 0, 0, 0, 0, 325, 290,
	291, 357, 295, 303, 346, 391, 331, 351, 253, 382,
	358, 307, 0, 0, 657, 631, 656, 658, 659, 655,
	660, 661, 642, 544, 0, 591, 653, 652, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 233, 0, 236, 0, 301, 0, 342,
	278, 0, 0, 620, 597, 598, 599, 543, 600, 594,
	595, 596, 621, 589, 617, 618, 568, 592, 601, 616,
	602, 619, 622, 623, 662, 663, 608, 664, 605, 624,
	615, 614, 603, 590, 625, 626, 575, 570, 606, 607,
	593, 609, 610, 611, 571, 572, 573, 574, 0, 585,
	0, 398, 399, 400, 421, 384, 0, 438, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 0, 0, 0, 273, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 432, 0, 0, 576, 0, 0, 359,
	314, 0, 0, 0, 0, 636, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 534, 0, 0,
	566, 613, 612, 553, 563, 0, 0, 251, 185, 433,
	0, 434, 554, 0, 562, 555, 559, 558, 556, 557,
	0, 628, 0, 0, 0, 0, 0, 0, 525, 538,
	0, 542, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 536, 1239, 0, 0,
	0, 586, 0, 537, 0, 0, 581, 560, 564, 0,
	0, 0, 0, 242, 364, 380, 252, 355, 393, 257,
	362, 247, 329, 352, 0, 0, 244, 378, 361, 311,
	292, 293, 243, 0, 347, 271, 284, 268, 327, 561,
	584, 588, 267, 650, 582, 388, 246, 0, 387, 326,
	374, 379, 312, 306, 245, 376, 310, 305, 296, 275,
	651, 297, 298, 288, 338, 304, 339, 289, 316, 315,
	317, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 390, 0, 0, 634, 0, 0,
	0, 363, 0, 0, 299, 0, 0, 0, 583, 0,
	350, 332, 647, 526, 0, 348, 302, 375, 340, 381,
	365, 389, 344, 341, 237, 366, 270, 313, 248, 250,
	265, 272, 274, 276, 277, 322, 323, 335, 354, 367,
	368, 369, 269, 258, 349, 259, 286, 260, 238, 262,
	261, 263, 356, 264, 240, 336, 373, 0, 282, 345,
	309, 241, 308, 337, 372, 371, 249, 397, 403, 404,
	0, 0, 409, 0, 0, 0, 417, 422, 423, 424,
	426, 427, 428, 429, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 402, 280, 234, 235, 441,
	632, 328, 0, 0, 0, 0, 646, 627, 629, 630,
	633, 637, 638, 639, 640, 641, 643, 645, 649, 440,
	0, 0, 0, 0, 0, 439, 334, 0, 353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 383, 395, 412, 415, 0, 0, 0, 0,
	239, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	587, 0, 0, 318, 319, 320, 321, 635, 0, 256,
	413, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 279, 285, 425, 287, 255, 333, 281, 392, 294,
	0, 418, 0, 419, 0, 0, 0, 0, 325, 290,
	291, 357, 295, 303, 346, 391, 331, 351, 253, 382,
	358, 307, 0, 0, 657, 631, 656, 658, 659, 655,
	660, 661, 642, 544, 0, 591, 653, 652, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 233, 0, 236, 0, 301, 0, 342,
	278, 0, 0, 620, 597, 598, 599, 543, 600, 594,
	595, 596, 621, 589, 617, 618, 568, 592, 601, 616,
	602, 619, 622, 623, 662, 663, 608, 664, 605, 624,
	615, 614, 603, 590, 625, 626, 575, 570, 606, 607,
	593, 609, 610, 611, 571, 572, 573, 574, 0, 0,
	0, 398, 399, 400, 421, 384, 585, 438, 0, 1817,
	0, 0, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 0,
	0, 0, 273, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 0,
	432, 0, 0, 576, 0, 0, 359, 314, 0, 0,
	0, 0, 636, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 534, 0, 0, 566, 613, 612,
	553, 563, 0, 0, 251, 185, 433, 0, 434, 554,
	0, 562, 555, 559, 558, 556, 557, 0, 628, 0,
	0, 0, 0, 0, 0, 525, 538, 0, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 536, 0, 0, 0, 0, 586, 0,
	537, 0, 0, 581, 560, 564, 0, 0, 0, 0,
	242, 364, 380, 252, 355, 393, 257, 362, 247, 329,
	352, 0, 0, 244, 378, 361, 311, 292, 293, 243,
	0, 347, 271, 284, 268, 327, 561, 584, 588, 267,
	650, 582, 388, 246, 0, 387, 326, 374, 379, 312,
	306, 245, 376, 310, 305, 296, 275, 651, 297, 298,
	288, 338, 304, 339, 289, 316, 315, 317, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 390, 0, 0, 634, 0, 0, 0, 363, 0,
	0, 299, 0, 0, 0, 583, 0, 350, 332, 647,
	526, 0, 348, 302, 375, 340, 381, 365, 389, 344,
	341, 237, 366, 270, 313, 248, 250, 265, 272, 274,
	276, 277, 322, 323, 335, 354, 367, 368, 369, 269,
	258, 349, 259, 286, 260, 238, 262, 261, 263, 356,
	264, 240, 336, 373, 0, 282, 345, 309, 241, 308,
	337, 372, 371, 249, 397, 403, 404, 0, 0, 409,
	0, 0, 0, 417, 422, 423, 424, 426, 427, 428,
	429, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 402, 280, 234, 235, 441, 632, 328, 0,
	0, 0, 0, 646, 627, 629, 630, 633, 637, 638,
	639, 640, 641, 643, 645, 649, 440, 0, 0, 0,
	0, 0, 439, 334, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 383,
	395, 412, 415, 0, 0, 0, 0, 239, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 587, 0, 0,
	318, 319, 320, 321, 635, 0, 256, 413, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 279, 285,
	425, 287, 255, 333, 281, 392, 294, 0, 418, 0,
	419, 0, 0, 0, 0, 325, 290, 291, 357, 295,
	303, 346, 391, 331, 351, 253, 382, 358, 307, 0,
	0, 657, 631, 656, 658, 659, 655, 660, 661, 642,
	544, 0, 591, 653, 652, 654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	233, 0, 236, 0, 301, 0, 342, 278, 0, 0,
	620, 597, 598, 599, 543, 600, 594, 595, 596, 621,
	589, 617, 618, 568, 592, 601, 616, 602, 619, 622,
	623, 662, 663, 608, 664, 605, 624, 615, 614, 603,
	590, 625, 626, 575, 570, 606, 607, 593, 609, 610,
	611, 571, 572, 573, 574, 0, 585, 0, 398, 399,
	400, 421, 384, 0, 438, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 0,
	0, 0, 273, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 0,
	432, 0, 0, 576, 0, 0, 359, 314, 0, 0,
	0, 0, 636, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 534, 0, 0, 566, 613, 612,
	553, 563, 0, 0, 251, 185, 433, 0, 434, 554,
	0, 562, 555, 559, 558, 556, 557, 0, 628, 0,
	0, 0, 0, 0, 0, 525, 538, 0, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 536, 0, 0, 0, 0, 586, 0,
	537, 0, 0, 581, 560, 564, 0, 0, 0, 0,
	242, 364, 380, 252, 355, 393, 257, 362, 247, 329,
	352, 0, 0, 244, 378, 361, 311, 292, 293, 243,
	0, 347, 271, 284, 268, 327, 561, 584, 588, 267,
	650, 582, 388, 246, 0, 387, 326, 374, 379, 312,
	306, 245, 376, 310, 305, 296, 275, 651, 297, 298,
	288, 338, 304, 339, 289, 316, 315, 317, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 390, 0, 0, 634, 0, 0, 0, 363, 0,
	0, 299, 0, 0, 0, 583, 0, 350, 332, 647,
	526, 0, 348, 302, 375, 340, 381, 365, 389, 344,
	341, 237, 366, 270, 313, 248, 250, 265, 272, 274,
	276, 277, 322, 323, 335, 354, 367, 368, 369, 269,
	258, 349, 259, 286, 260, 238, 262, 261, 263, 356,
	264, 240, 336, 373, 0, 282, 345, 309, 241, 308,
	337, 372, 371, 249, 397, 403, 404, 0, 0, 409,
	0, 0, 0, 417, 422, 423, 424, 426, 427, 428,
	429, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 402, 280, 234, 235, 441, 632, 328, 0,
	0, 0, 0, 646, 627, 629, 630, 633, 637, 638,
	639, 640, 641, 643, 645, 649, 440, 0, 0, 0,
	0, 0, 439, 334, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 383,
	395, 412, 415, 0, 0, 0, 0, 239, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 587, 0, 0,
	318, 319, 320, 321, 635, 0, 256, 413, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 279, 285,
	425, 287, 255, 333, 281, 392, 294, 0, 418, 0,
	419, 0, 0, 0, 0, 325, 290, 291, 357, 295,
	303, 346, 391, 331, 351, 253, 382, 358, 307, 0,
	0, 657, 631, 656, 658, 659, 655, 660, 661, 642,
	544, 0, 591, 653, 652, 654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	233, 0, 236, 0, 301, 0, 342, 278, 0, 0,
	620, 597, 598, 599, 543, 600, 594, 595, 596, 621,
	589, 617, 618, 568, 592, 601, 616, 602, 619, 622,
	623, 662, 663, 608, 664, 605, 624, 615, 614, 603,
	590, 625, 626, 575, 570, 606, 607, 593, 609, 610,
	611, 571, 572, 573, 574, 0, 585, 0, 398, 399,
	400, 421, 384, 0, 438, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 1365, 0, 0, 0, 541, 0,
	0, 0, 273, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 0,
	432, 0, 0, 576, 0, 0, 359, 314, 0, 0,
	0, 0, 636, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 534, 0, 0, 566, 613, 612,
	553, 563, 0, 0, 251, 185, 433, 0, 434, 554,
	0, 562, 555, 559, 558, 556, 557, 0, 628, 0,
	0, 0, 0, 0, 0, 0, 538, 0, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 536, 0, 0, 0, 0, 586, 0,
	537, 0, 0, 581, 560, 564, 0, 0, 0, 0,
	242, 364, 380, 252, 355, 393, 257, 362, 247, 329,
	352, 0, 0, 244, 378, 361, 311, 292, 293, 243,
	0, 347, 271, 284, 268, 327, 561, 584, 588, 267,
	650, 582, 388, 246, 0, 387, 326, 374, 379, 312,
	306, 245, 376, 310, 305, 296, 275, 651, 297, 298,
	288, 338, 304, 339, 289, 316, 315, 317, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 390, 0, 0, 634, 0, 0, 0, 363, 0,
	0, 299, 0, 0, 0, 583, 0, 350, 332, 647,
	0, 0, 348, 302, 375, 340, 381, 365, 389, 344,
	341, 237, 366, 270, 313, 248, 250, 265, 272, 274,
	276, 277, 322, 323, 335, 354, 367, 368, 369, 269,
	258, 349, 259, 286, 260, 238, 262, 261, 263, 356,
	264, 240, 336, 373, 0, 282, 345, 309, 241, 308,
	337, 372, 371, 249, 397, 1366, 1367, 0, 0, 409,
	0, 0, 0, 417, 422, 423, 424, 426, 427, 428,
	429, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 402, 280, 234, 235, 441, 632, 328, 0,
	0, 0, 0, 646, 627, 629, 630, 633, 637, 638,
	639, 640, 641, 643, 645, 649, 440, 0, 0, 0,
	0, 0, 439, 334, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 383,
	395, 412, 415, 0, 0, 0, 0, 239, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 587, 0, 0,
	318, 319, 320, 321, 635, 0, 256, 413, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 279, 285,
	425, 287, 255, 333, 281, 392, 294, 0, 418, 0,
	419, 0, 0, 0, 0, 325, 290, 291, 357, 295,
	303, 346, 391, 331, 351, 253, 382, 358, 307, 0,
	0, 657, 631, 656, 658, 659, 655, 660, 661, 642,
	544, 0, 591, 653, 652, 654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	233, 0, 236, 0, 301, 0, 342, 278, 0, 0,
	620, 597, 598, 599, 543, 600, 594, 595, 596, 621,
	589, 617, 618, 568, 592, 601, 616, 602, 619, 622,
	623, 662, 663, 608, 664, 605, 624, 615, 614, 603,
	590, 625, 626, 575, 570, 606, 607, 593, 609, 610,
	611, 571, 572, 573, 574, 0, 585, 0, 398, 399,
	400, 421, 384, 0, 438, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 0,
	0, 0, 273, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 0,
	432, 0, 0, 576, 0, 0, 359, 314, 0, 0,
	0, 0, 636, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 613, 612,
	553, 563, 0, 0, 251, 185, 433, 0, 434, 554,
	0, 562, 555, 559, 558, 556, 557, 0, 628, 0,
	0, 0, 0, 0, 0, 525, 538, 0, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 536, 0, 0, 0, 0, 586, 0,
	537, 0, 0, 581, 560, 564, 0, 0, 0, 0,
	242, 364, 380, 252, 355, 393, 257, 362, 247, 329,
	352, 0, 0, 244, 378, 361, 311, 292, 293, 243,
	0, 347, 271, 284, 268, 327, 561, 584, 588, 267,
	650, 582, 388, 246, 0, 387, 326, 374, 379, 312,
	306, 245, 376, 310, 305, 296, 275, 651, 297, 298,
	288, 338, 304, 339, 289, 316, 315, 317, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 390, 0, 0, 634, 0, 0, 0, 363, 0,
	0, 299, 0, 0, 0, 583, 0, 350, 332, 647,
	526, 0, 348, 302, 375, 340, 381, 365, 389, 344,
	341, 237, 366, 270, 313, 248, 250, 265, 272, 274,
	276, 277, 322, 323, 335, 354, 367, 368, 369, 269,
	258, 349, 259, 286, 260, 238, 262, 261, 263, 356,
	264, 240, 336, 373, 0, 282, 345, 309, 241, 308,
	337, 372, 371, 249, 397, 403, 404, 0, 0, 409,
	0, 0, 0, 417, 422, 423, 424, 426, 427, 428,
	429, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 402, 280, 234, 235, 441, 632, 328, 0,
	0, 0, 0, 646, 627, 629, 630, 633, 637, 638,
	639, 640, 641, 643, 645, 649, 440, 0, 0, 0,
	0, 0, 439, 334, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 383,
	395, 412, 415, 0, 0, 0, 0, 239, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 587, 0, 0,
	318, 319, 320, 321, 635, 0, 256, 413, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 279, 285,
	425, 287, 255, 333, 281, 392, 294, 0, 418, 0,
	419, 0, 0, 0, 0, 325, 290, 291, 357, 295,
	303, 346, 391, 331, 351, 253, 382, 358, 307, 0,
	0, 657, 631, 656, 658, 659, 655, 660, 661, 642,
	544, 0, 591, 653, 652, 654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	233, 0, 236, 0, 301, 0, 342, 278, 0, 0,
	620, 597, 598, 599, 543, 600, 594, 595, 596, 621,
	589, 617, 618, 568, 592, 601, 616, 602, 619, 622,
	623, 662, 663, 608, 664, 605, 624, 615, 614, 603,
	590, 625, 626, 575, 570, 606, 607, 593, 609, 610,
	611, 571, 572, 573, 574, 0, 585, 0, 398, 399,
	400, 421, 384, 0, 438, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 0,
	0, 0, 273, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 0,
	432, 0, 0, 576, 0, 0, 359, 314, 0, 0,
	0, 0, 636, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 534, 0, 0, 566, 613, 612,
	553, 563, 0, 0, 251, 185, 433, 0, 434, 554,
	0, 562, 555, 559, 558, 556, 557, 0, 628, 0,
	0, 0, 0, 0, 0, 0, 538, 0, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 536, 0, 0, 0, 0, 586, 0,
	537, 0, 0, 581, 560, 564, 0, 0, 0, 0,
	242, 364, 380, 252, 355, 393, 257, 362, 247, 329,
	352, 0, 0, 244, 378, 361, 311, 292, 293, 243,
	0, 347, 271, 284, 268, 327, 561, 584, 588, 267,
	650, 582, 388, 246, 0, 387, 326, 374, 379, 312,
	306, 245, 376, 310, 305, 296, 275, 651, 297, 298,
	288, 338, 304, 339, 289, 316, 315, 317, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 390, 0, 0, 634, 0, 0, 0, 363, 0,
	0, 299, 0, 0, 0, 583, 0, 350, 332, 647,
	0, 0, 348, 302, 375, 340, 381, 365, 389, 344,
	341, 237, 366, 270, 313, 248, 250, 265, 272, 274,
	276, 277, 322, 323, 335, 354, 367, 368, 369, 269,
	258, 349, 259, 286, 260, 238, 262, 261, 263, 356,
	264, 240, 336, 373, 0, 282, 345, 309, 241, 308,
	337, 372, 371, 249, 397, 403, 404, 0, 0, 409,
	0, 0, 0, 417, 422, 423, 424, 426, 427, 428,
	429, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 402, 280, 234, 235, 441, 632, 328, 0,
	0, 0, 0, 646, 627, 629, 630, 633, 637, 638,
	639, 640, 641, 643, 645, 649, 440, 0, 0, 0,
	0, 0, 439, 334, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 383,
	395, 412, 415, 0, 0, 0, 0, 239, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 587, 0, 0,
	318, 319, 320, 321, 635, 0, 256, 413, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 279, 285,
	425, 287, 255, 333, 281, 392, 294, 0, 418, 0,
	419, 0, 0, 0, 0, 325, 290, 291, 357, 295,
	303, 346, 391, 331, 351, 253, 382, 358, 307, 0,
	0, 657, 631, 656, 658, 659, 655, 660, 661, 642,
	544, 0, 591, 653, 652, 654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	233, 0, 236, 0, 301, 0, 342, 278, 0, 0,
	620, 597, 598, 599, 543, 600, 594, 595, 596, 621,
	589, 617, 618, 568, 592, 601, 616, 602, 619, 622,
	623, 662, 663, 608, 664, 605, 624, 615, 614, 603,
	590, 625, 626, 575, 570, 606, 607, 593, 609, 610,
	611, 571, 572, 573, 574, 0, 0, 0, 398, 399,
	400, 421, 384, 0, 438, 162, 50, 154, 130, 0,
	0, 0, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	147, 0, 273, 0, 156, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 0,
	432, 0, 0, 112, 0, 0, 359, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 100, 0,
	0, 0, 0, 0, 159, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 251, 185, 433, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 364, 380, 252, 355, 393, 257, 362, 247, 329,
	352, 0, 0, 244, 378, 361, 311, 292, 293, 243,
	0, 347, 271, 284, 268, 327, 0, 377, 405, 267,
	396, 0, 388, 246, 0, 387, 326, 374, 379, 312,
	306, 245, 376, 310, 305, 296, 275, 420, 297, 298,
	288, 338, 304, 339, 289, 316, 315, 317, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	129, 153, 160, 0, 98, 0, 0, 0, 0, 0,
	0, 390, 0, 0, 177, 0, 0, 0, 363, 0,
	0, 299, 152, 146, 145, 406, 0, 350, 332, 56,
	0, 0, 348, 302, 375, 340, 381, 365, 389, 344,
	341, 237, 366, 270, 313, 248, 250, 265, 272, 274,
	276, 277, 322, 323, 335, 354, 367, 368, 369, 269,
	258, 349, 259, 286, 260, 238, 262, 261, 263, 356,
	264, 240, 336, 373, 0, 282, 345, 309, 241, 308,
	337, 372, 371, 249, 397, 403, 404, 0, 0, 409,
	148, 149, 150, 417, 422, 423, 424, 426, 427, 428,
	429, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 402, 280, 234, 235, 385, 266, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 401, 180, 0, 0, 430, 188, 0, 0, 0,
	151, 0, 189, 334, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 383,
	395, 412, 415, 0, 0, 0, 0, 239, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 410, 0, 0,
	318, 319, 320, 321, 283, 0, 256, 413, 343, 110,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 0, 0, 0, 0, 0, 407, 408, 279, 285,
	425, 287, 255, 333, 281, 392, 294, 0, 418, 0,
	419, 0, 0, 0, 0, 325, 290, 291, 357, 295,
	303, 346, 391, 331, 351, 253, 382, 358, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	233, 0, 236, 0, 301, 131, 342, 278, 0, 0,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 0, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 0, 0,
	0, 229, 230, 231, 232, 0, 330, 0, 398, 399,
	400, 421, 384, 0, 190, 38, 178, 181, 183, 182,
	0, 48, 5, 273, 0, 115, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 431,
	0, 432, 0, 0, 0, 0, 0, 359, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1031, 0, 0, 184, 0,
	0, 553, 563, 0, 0, 251, 185, 433, 0, 434,
	554, 0, 562, 555, 559, 558, 556, 557, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 560, 0, 0, 0, 0,
	0, 242, 364, 380, 252, 355, 393, 257, 362, 247,
	329, 352, 0, 0, 244, 378, 361, 311, 292, 293,
	243, 0, 347, 271, 284, 268, 327, 561, 377, 405,
	267, 396, 0, 388, 246, 0, 387, 326, 374, 379,
	312, 306, 245, 376, 310, 305, 296, 275, 420, 297,
	298, 288, 338, 304, 339, 289, 316, 315, 317, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 0, 0, 0, 363,
	0, 0, 299, 0, 0, 0, 406, 0, 350, 332,
	0, 0, 0, 348, 302, 375, 340, 381, 365, 389,
	344, 341, 237, 366, 270, 313, 248, 250, 265, 272,
	274, 276, 277, 322, 323, 335, 354, 367, 368, 369,
	269, 258, 349, 259, 286, 260, 238, 262, 261, 263,
	356, 264, 240, 336, 373, 0, 282, 345, 309, 241,
	308, 337, 372, 371, 249, 397, 403, 404, 0, 0,
	409, 0, 0, 0, 417, 422, 423, 424, 426, 427,
	428, 429, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 402, 280, 234, 235, 441, 266, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 401, 0, 0, 0, 430, 440, 0, 0,
	0, 0, 0, 439, 334, 0, 353, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	383, 395, 412, 415, 0, 0, 0, 0, 239, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 410, 0,
	0, 318, 319, 320, 321, 283, 0, 256, 413, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 279,
	285, 425, 287, 255, 333, 281, 392, 294, 0, 418,
	0, 419, 0, 0, 0, 0, 325, 290, 291, 357,
	295, 303, 346, 391, 331, 351, 253, 382, 358, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 233, 0, 236, 0, 301, 0, 342, 278, 0,
	0, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 0, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 0,
	0, 0, 229, 230, 231, 232, 0, 0, 0, 398,
	399, 400, 421, 384, 0, 438, 162, 50, 154, 130,
	0, 0, 0, 0, 0, 0, 330, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 431,
	0, 432, 0, 0, 0, 0, 0, 359, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 0, 0, 184, 0,
	0, 0, 0, 0, 0, 251, 185, 433, 0, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 364, 380, 252, 355, 393, 257, 362, 247,
	329, 352, 0, 0, 244, 378, 361, 311, 292, 293,
	243, 0, 347, 271, 284, 268, 327, 0, 377, 405,
	267, 396, 0, 388, 246, 0, 387, 326, 374, 379,
	312, 306, 245, 376, 310, 305, 296, 275, 420, 297,
	298, 288, 338, 304, 339, 289, 316, 315, 317, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 462, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 0, 0, 0, 363,
	0, 0, 299, 0, 0, 0, 406, 0, 350, 332,
	0, 0, 0, 348, 302, 375, 340, 381, 365, 389,
	344, 341, 237, 366, 270, 313, 248, 250, 265, 272,
	274, 276, 277, 322, 323, 335, 354, 367, 368, 369,
	269, 258, 349, 259, 286, 260, 238, 262, 261, 263,
	356, 264, 240, 336, 373, 0, 282, 345, 309, 241,
	308, 337, 372, 371, 249, 397, 403, 404, 0, 0,
	409, 0, 0, 0, 417, 422, 423, 424, 426, 427,
	428, 429, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 402, 280, 234, 235, 441, 266, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 401, 0, 0, 0, 430, 440, 0, 0,
	0, 0, 0, 439, 334, 0, 353, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	383, 395, 412, 415, 0, 0, 0, 0, 239, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 410, 0,
	0, 318, 319, 320, 321, 459, 461, 256, 413, 343,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 279,
	285, 425, 287, 255, 333, 281, 392, 294, 0, 418,
	0, 419, 0, 0, 0, 0, 325, 290, 291, 357,
	295, 303, 346, 391, 331, 351, 253, 382, 358, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	51, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 233, 0, 236, 0, 301, 131, 342, 278, 0,
	0, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 0, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 330,
	0, 0, 229, 230, 231, 232, 0, 859, 0, 398,
	399, 400, 421, 384, 0, 438, 273, 0, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 0, 432, 0, 0, 0, 0, 0,
	359, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 251, 185,
	433, 0, 434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 845, 0, 0,
	0, 0, 0, 0, 242, 364, 380, 252, 355, 393,
	257, 362, 247, 329, 352, 0, 0, 1902, 1904, 1905,
	1906, 1907, 1908, 1909, 0, 1914, 1910, 1911, 1912, 1913,
	0, 1897, 1898, 1899, 1900, 843, 1881, 1903, 0, 1882,
	326, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891,
	1894, 1895, 1892, 1893, 1901, 338, 304, 339, 289, 316,
	315, 317, 870, 872, 874, 876, 879, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 0, 0, 0,
	0, 0, 363, 0, 0, 299, 0, 0, 0, 1896,
	0, 350, 332, 0, 0, 0, 348, 302, 375, 340,
	381, 365, 389, 344, 341, 237, 366, 270, 313, 248,
	250, 265, 272, 274, 276, 277, 322, 323, 335, 354,
	367, 368, 369, 269, 258, 349, 259, 286, 260, 238,
	262, 261, 263, 356, 264, 240, 336, 373, 0, 282,
	345, 309, 241, 308, 337, 372, 371, 249, 397, 403,
	404, 0, 0, 409, 0, 0, 0, 417, 422, 423,
	424, 426, 427, 428, 429, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 402, 280, 234, 235,
	441, 266, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 401, 0, 0, 0, 430,
	440, 0, 0, 0, 0, 0, 439, 334, 0, 353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 383, 395, 412, 415, 0, 0, 0,
	0, 239, 414, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 410, 0, 0, 318, 319, 320, 321, 283, 0,
	256, 413, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 408, 279, 285, 425, 287, 255, 333, 281, 392,
	294, 0, 418, 0, 419, 0, 0, 0, 0, 325,
	290, 291, 357, 295, 303, 346, 391, 331, 351, 253,
	382, 358, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 233, 0, 236, 869, 301, 0,
	342, 278, 0, 0, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 0, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 330, 0, 0, 229, 230, 231, 232, 0,
	0, 0, 398, 399, 400, 421, 384, 0, 438, 273,
	0, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 431, 0, 432, 0, 0,
	0, 0, 0, 359, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 0, 0, 0, 0, 0,
	0, 251, 185, 433, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 1976, 1979, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 364, 380,
	252, 355, 393, 257, 362, 247, 329, 352, 0, 0,
	244, 378, 361, 311, 292, 293, 243, 0, 347, 271,
	284, 268, 327, 0, 377, 405, 267, 396, 0, 388,
	246, 0, 387, 326, 374, 379, 312, 306, 245, 376,
	310, 305, 296, 275, 420, 297, 298, 288, 338, 304,
	339, 289, 316, 315, 317, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1980, 390, 0,
	0, 0, 1975, 0, 1974, 363, 1972, 1977, 299, 0,
	0, 0, 406, 0, 350, 332, 0, 0, 0, 348,
	302, 375, 340, 381, 365, 389, 344, 341, 237, 366,
	270, 313, 248, 250, 265, 272, 274, 276, 277, 322,
	323, 335, 354, 367, 368, 369, 269, 258, 349, 259,
	286, 260, 238, 262, 261, 263, 356, 264, 240, 336,
	373, 1978, 282, 345, 309, 241, 308, 337, 372, 371,
	249, 397, 403, 404, 0, 0, 409, 0, 0, 0,
	417, 422, 423, 424, 426, 427, 428, 429, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 402,
	280, 234, 235, 441, 266, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 401, 0,
	0, 0, 430, 440, 0, 0, 0, 0, 0, 439,
	334, 0, 353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 383, 395, 412, 415,
	0, 0, 0, 0, 239, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 410, 0, 0, 318, 319, 320,
	321, 283, 0, 256, 413, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 408, 279, 285, 425, 287, 255,
	333, 281, 392, 294, 0, 418, 0, 419, 0, 0,
	0, 0, 325, 290, 291, 357, 295, 303, 346, 391,
	331, 351, 253, 382, 358, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 233, 0, 236,
	0, 301, 0, 342, 278, 0, 0, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	0, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 0, 0, 0, 229, 230,
	231, 232, 330, 0, 0, 398, 399, 400, 421, 384,
	0, 438, 0, 0, 1704, 0, 0, 0, 0, 273,
	0, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 431, 0, 432, 0, 0,
	0, 0, 0, 359, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 0, 0, 1705, 0, 0,
	0, 251, 185, 433, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 965, 966,
	967, 964, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 364, 380,
	252, 355, 393, 257, 362, 247, 329, 352, 0, 0,
	244, 378, 361, 311, 292, 293, 243, 0, 347, 271,
	284, 268, 327, 0, 377, 405, 267, 396, 0, 388,
	246, 0, 387, 326, 374, 379, 312, 306, 245, 376,
	310, 305, 296, 275, 420, 297, 298, 288, 338, 304,
	339, 289, 316, 315, 317, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 0, 0, 0, 363, 0, 0, 299, 0,
	0, 0, 406, 0, 350, 332, 0, 0, 0, 348,
	302, 375, 340, 381, 365, 389, 344, 341, 237, 366,
	270, 313, 248, 250, 265, 272, 274, 276, 277, 322,
	323, 335, 354, 367, 368, 369, 269, 258, 349, 259,
	286, 260, 238, 262, 261, 263, 356, 264, 240, 336,
	373, 0, 282, 345, 309, 241, 308, 337, 372, 371,
	249, 397, 403, 404, 0, 0, 409, 0, 0, 0,
	417, 422, 423, 424, 426, 427, 428, 429, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 402,
	280, 234, 235, 441, 266, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 401, 0,
	0, 0, 430, 440, 0, 0, 0, 0, 0, 439,
	334, 0, 353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 383, 395, 412, 415,
	0, 0, 0, 0, 239, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 410, 0, 0, 318, 319, 320,
	321, 283, 0, 256, 413, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 408, 279, 285, 425, 287, 255,
	333, 281, 392, 294, 0, 418, 0, 419, 0, 0,
	0, 0, 325, 290, 291, 357, 295, 303, 346, 391,
	331, 351, 253, 382, 358, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 233, 0, 236,
	0, 301, 0, 342, 278, 0, 0, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	0, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 330, 0, 0, 229, 230,
	231, 232, 0, 0, 0, 398, 399, 400, 421, 384,
	0, 438, 273, 780, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 0,
	432, 0, 0, 0, 0, 0, 359, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 787, 788,
	0, 0, 0, 0, 251, 185, 433, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 791, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 364, 775, 252, 355, 393, 257, 362, 247, 329,
	352, 0, 0, 244, 378, 361, 311, 292, 293, 243,
	0, 347, 271, 284, 268, 327, 0, 377, 405, 267,
	396, 766, 388, 246, 765, 387, 326, 374, 379, 312,
	306, 245, 376, 310, 305, 296, 275, 420, 297, 298,
	288, 338, 304, 339, 289, 316, 315, 317, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 0, 0, 0, 0, 0, 363, 0,
	0, 299, 0, 0, 0, 406, 0, 350, 332, 0,
	0, 0, 348, 302, 375, 340, 381, 365, 389, 778,
	341, 237, 366, 270, 313, 248, 250, 265, 272, 274,
	276, 277, 322, 323, 335, 354, 367, 368, 369, 269,
	258, 349, 259, 286, 260, 238, 262, 261, 263, 356,
	264, 240, 336, 373, 0, 282, 345, 309, 241, 308,
	337, 372, 371, 249, 397, 403, 404, 0, 0, 409,
	0, 0, 0, 417, 422, 423, 424, 426, 427, 428,
	429, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 402, 280, 234, 235, 441, 266, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 401, 0, 0, 0, 430, 440, 0, 0, 0,
	0, 0, 439, 334, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 383,
	395, 412, 415, 0, 0, 0, 0, 239, 414, 0,
	0, 0, 0, 0, 0, 779, 0, 386, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 782, 0, 0,
	318, 319, 320, 321, 283, 0, 256, 413, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 279, 285,
	425, 287, 255, 333, 281, 392, 294, 0, 418, 0,
	419, 0, 0, 0, 0, 789, 776, 785, 777, 295,
	303, 346, 391, 331, 351, 253, 382, 358, 786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	233, 0, 236, 0, 301, 0, 342, 278, 0, 0,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 0, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 330, 0,
	0, 229, 230, 231, 232, 0, 0, 0, 398, 399,
	400, 421, 384, 0, 438, 273, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 432, 0, 0, 0, 0, 0, 359,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 251, 185, 433,
	0, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 1995, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 364, 380, 252, 355, 393, 257,
	362, 247, 329, 352, 0, 0, 244, 378, 361, 311,
	292, 293, 243, 0, 347, 271, 284, 268, 327, 0,
	377, 405, 267, 396, 0, 388, 246, 0, 387, 326,
	374, 379, 312, 306, 245, 376, 310, 305, 296, 275,
	420, 297, 298, 288, 338, 304, 339, 289, 316, 315,
	317, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1994, 390, 0, 0, 0, 1999, 1997,
	0, 363, 0, 1998, 299, 0, 0, 0, 406, 0,
	350, 332, 0, 0, 0, 348, 302, 375, 340, 381,
	365, 389, 344, 341, 237, 366, 270, 313, 248, 250,
	265, 272, 274, 276, 277, 322, 323, 335, 354, 367,
	368, 369, 269, 258, 349, 259, 286, 260, 238, 262,
	261, 263, 356, 264, 240, 336, 373, 0, 282, 345,
	309, 241, 308, 337, 372, 371, 249, 397, 403, 404,
	0, 0, 409, 0, 0, 0, 417, 422, 423, 424,
	426, 427, 428, 429, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 402, 280, 234, 235, 441,
	266, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 401, 0, 0, 0, 430, 440,
	0, 0, 0, 0, 0, 439, 334, 0, 353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 383, 395, 412, 415, 0, 0, 0, 0,
	239, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	410, 0, 0, 318, 319, 320, 321, 283, 0, 256,
	413, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 279, 285, 425, 287, 255, 333, 281, 392, 294,
	0, 418, 0, 419, 0, 0, 0, 0, 325, 290,
	291, 357, 295, 303, 346, 391, 331, 351, 253, 382,
	358, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 233, 0, 236, 0, 301, 0, 342,
	278, 0, 859, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 0, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 0, 0, 0, 229, 230, 231, 232, 162, 0,
	0, 398, 399, 400, 421, 384, 0, 438, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 432, 0, 0, 112, 0, 0, 359,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 1748, 0,
	184, 0, 845, 0, 0, 0, 835, 251, 185, 433,
	0, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 867, 871, 873, 875, 877, 878, 880, 0,
	885, 881, 882, 883, 884, 0, 862, 863, 864, 865,
	843, 844, 868, 0, 846, 0, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 858, 860, 856, 857, 866,
	0, 0, 0, 0, 0, 0, 0, 870, 872, 874,
	876, 879, 0, 242, 364, 380, 252, 355, 393, 257,
	362, 247, 329, 352, 0, 0, 244, 378, 361, 311,
	292, 293, 243, 0, 347, 271, 284, 268, 327, 0,
	377, 405, 267, 396, 861, 388, 246, 0, 387, 326,
	374, 379, 312, 306, 245, 376, 310, 305, 296, 275,
	420, 297, 298, 288, 338, 304, 339, 289, 316, 315,
	317, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 0, 0,
	0, 363, 0, 0, 299, 0, 0, 0, 406, 0,
	350, 332, 0, 0, 0, 348, 302, 375, 340, 381,
	365, 389, 344, 341, 237, 366, 270, 313, 248, 250,
	265, 272, 274, 276, 277, 322, 323, 335, 354, 367,
	368, 369, 269, 258, 349, 259, 286, 260, 238, 262,
	261, 263, 356, 264, 240, 336, 373, 0, 282, 345,
	309, 241, 308, 337, 372, 371, 249, 397, 403, 404,
	0, 0, 409, 0, 0, 0, 417, 422, 423, 424,
	426, 427, 428, 429, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 402, 280, 234, 235, 441,
	266, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 401, 0, 0, 0, 430, 440,
	0, 0, 0, 0, 0, 439, 334, 0, 353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 383, 395, 412, 415, 0, 0, 0, 0,
	239, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	410, 0, 0, 318, 319, 320, 321, 283, 0, 256,
	413, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 279, 285, 425, 287, 255, 333, 281, 392, 294,
	0, 418, 869, 419, 0, 0, 0, 0, 325, 290,
	291, 357, 295, 303, 346, 391, 331, 351, 253, 382,
	358, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 233, 0, 236, 0, 301, 131, 342,
	278, 0, 0, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 0, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 0, 0, 0, 229, 230, 231, 232, 162, 0,
	0, 398, 399, 400, 421, 384, 0, 438, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 432, 0, 0, 112, 0, 0, 359,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 1739, 0,
	184, 0, 0, 0, 0, 0, 0, 251, 185, 433,
	0, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 364, 380, 252, 355, 393, 257,
	362, 247, 329, 352, 0, 0, 244, 378, 361, 311,
	292, 293, 243, 0, 347, 271, 284, 268, 327, 0,
	377, 405, 267, 396, 0, 388, 246, 0, 387, 326,
	374, 379, 312, 306, 245, 376, 310, 305, 296, 275,
	420, 297, 298, 288, 338, 304, 339, 289, 316, 315,
	317, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 0, 0,
	0, 363, 0, 0, 299, 0, 0, 0, 406, 0,
	350, 332, 0, 0, 0, 348, 302, 375, 340, 381,
	365, 389, 344, 341, 237, 366, 270, 313, 248, 250,
	265, 272, 274, 276, 277, 322, 323, 335, 354, 367,
	368, 369, 269, 258, 349, 259, 286, 260, 238, 262,
	261, 263, 356, 264, 240, 336, 373, 0, 282, 345,
	309, 241, 308, 337, 372, 371, 249, 397, 403, 404,
	0, 0, 409, 0, 0, 0, 417, 422, 423, 424,
	426, 427, 428, 429, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 402, 280, 234, 235, 441,
	266, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 401, 0, 0, 0, 430, 440,
	0, 0, 0, 0, 0, 439, 334, 0, 353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 383, 395, 412, 415, 0, 0, 0, 0,
	239, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	410, 0, 0, 318, 319, 320, 321, 283, 0, 256,
	413, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 279, 285, 425, 287, 255, 333, 281, 392, 294,
	0, 418, 0, 419, 0, 0, 0, 0, 325, 290,
	291, 357, 295, 303, 346, 391, 331, 351, 253, 382,
	358, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 233, 0, 236, 0, 301, 131, 342,
	278, 0, 0, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 0, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 0, 0, 0, 229, 230, 231, 232, 162, 0,
	0, 398, 399, 400, 421, 384, 0, 438, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 432, 0, 0, 112, 0, 0, 359,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1644, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 251, 185, 433,
	0, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 364, 380, 252, 355, 393, 257,
	362, 247, 329, 352, 0, 0, 244, 378, 361, 311,
	292, 293, 243, 0, 347, 271, 284, 268, 327, 0,
	377, 405, 267, 396, 0, 388, 246, 0, 387, 326,
	374, 379, 312, 306, 245, 376, 310, 305, 296, 275,
	420, 297, 298, 288, 338, 304, 339, 289, 316, 315,
	317, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 0, 0,
	0, 363, 0, 0, 299, 0, 0, 0, 406, 0,
	350, 332, 0, 0, 0, 348, 302, 375, 340, 381,
	365, 389, 344, 341, 237, 366, 270, 313, 248, 250,
	265, 272, 274, 276, 277, 322, 323, 335, 354, 367,
	368, 369, 269, 258, 349, 259, 286, 260, 238, 262,
	261, 263, 356, 264, 240, 336, 373, 0, 282, 345,
	309, 241, 308, 337, 372, 371, 249, 397, 403, 404,
	0, 0, 409, 0, 0, 0, 417, 422, 423, 424,
	426, 427, 428, 429, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 402, 280, 234, 235, 441,
	266, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 401, 0, 0, 0, 430, 440,
	0, 0, 0, 0, 0, 439, 334, 0, 353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 383, 395, 412, 415, 0, 0, 0, 0,
	239, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	410, 0, 0, 318, 319, 320, 321, 283, 0, 256,
	413, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 279, 285, 425, 287, 255, 333, 281, 392, 294,
	0, 418, 0, 419, 0, 0, 0, 0, 325, 290,
	291, 357, 295, 303, 346, 391, 331, 351, 253, 382,
	358, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 233, 0, 236, 0, 301, 131, 342,
	278, 0, 0, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 0, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 330, 0, 0, 229, 230, 231, 232, 0, 0,
	0, 398, 399, 400, 421, 384, 0, 438, 273, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 431, 0, 432, 0, 0, 0,
	0, 0, 359, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 787, 788, 0, 0, 0, 0,
	251, 185, 433, 0, 434, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 791, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 364, 380, 252,
	355, 393, 257, 362, 247, 329, 352, 0, 0, 244,
	378, 361, 311, 292, 293, 243, 0, 347, 271, 284,
	268, 327, 0, 377, 405, 267, 396, 766, 388, 246,
	765, 387, 326, 374, 379, 312, 306, 245, 376, 310,
	305, 296, 275, 420, 297, 298, 288, 338, 304, 339,
	289, 316, 315, 317, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 0,
	0, 0, 0, 0, 363, 0, 0, 299, 0, 0,
	0, 406, 0, 350, 332, 0, 0, 0, 348, 302,
	375, 340, 381, 365, 389, 344, 341, 237, 366, 270,
	313, 248, 250, 265, 272, 274, 276, 277, 322, 323,
	335, 354, 367, 368, 369, 269, 258, 349, 259, 286,
	260, 238, 262, 261, 263, 356, 264, 240, 336, 373,
	0, 282, 345, 309, 241, 308, 337, 372, 371, 249,
	397, 403, 404, 0, 0, 409, 0, 0, 0, 417,
	422, 423, 424, 426, 427, 428, 429, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 402, 280,
	234, 235, 441, 266, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 401, 0, 0,
	0, 430, 440, 0, 0, 0, 0, 0, 439, 334,
	0, 353, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 383, 395, 412, 415, 0,
	0, 0, 0, 239, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 410, 0, 0, 318, 319, 320, 321,
	283, 0, 256, 413, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 279, 285, 425, 287, 255, 333,
	281, 392, 294, 0, 418, 0, 419, 0, 0, 0,
	0, 789, 1663, 785, 1664, 295, 303, 346, 391, 331,
	351, 253, 382, 358, 786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 233, 0, 236, 0,
	301, 0, 342, 278, 0, 0, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 0,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 330, 0, 0, 229, 230, 231,
	232, 0, 0, 2390, 398, 399, 400, 421, 384, 0,
	438, 273, 0, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 431, 0, 432,
	0, 0, 0, 0, 0, 359, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 0, 0, 251, 185, 433, 0, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	364, 380, 252, 355, 393, 257, 362, 247, 329, 352,
	0, 0, 244, 378, 361, 311, 292, 293, 243, 0,
	347, 271, 284, 268, 327, 0, 377, 405, 267, 396,
	0, 388, 246, 0, 387, 326, 374, 379, 312, 306,
	245, 376, 310, 305, 296, 275, 420, 297, 298, 288,
	338, 304, 339, 289, 316, 315, 317, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 2393, 0, 0, 2392, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 0, 0, 0, 363, 0, 0,
	299, 0, 0, 0, 406, 0, 350, 332, 0, 0,
	0, 348, 302, 375, 340, 381, 365, 389, 344, 341,
	237, 366, 270, 313, 248, 250, 265, 272, 274, 276,
	277, 322, 323, 335, 354, 367, 368, 369, 269, 258,
	349, 259, 286, 260, 238, 262, 261, 263, 356, 264,
	240, 336, 373, 0, 282, 345, 309, 241, 308, 337,
	372, 371, 249, 397, 403, 404, 0, 0, 409, 0,
	0, 0, 417, 422, 423, 424, 426, 427, 428, 429,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 402, 280, 234, 235, 441, 266, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	401, 0, 0, 0, 430, 440, 0, 0, 0, 0,
	0, 439, 334, 0, 353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 383, 395,
	412, 415, 0, 0, 0, 0, 239, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 410, 0, 0, 318,
	319, 320, 321, 283, 0, 256, 413, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 279, 285, 425,
	287, 255, 333, 281, 392, 294, 0, 418, 0, 419,
	0, 0, 0, 0, 325, 290, 291, 357, 295, 303,
	346, 391, 331, 351, 253, 382, 358, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 233,
	0, 236, 0, 301, 0, 342, 278, 0, 0, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 0, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 330, 0, 0,
	229, 230, 231, 232, 0, 0, 0, 398, 399, 400,
	421, 384, 0, 438, 273, 1212, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 0, 432, 0, 0, 0, 0, 0, 359, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 1210, 0, 0, 0, 251, 185, 433, 0,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1208, 0, 0, 0, 0,
	0, 0, 242, 364, 380, 252, 355, 393, 257, 362,
	247, 329, 352, 0, 0, 244, 378, 361, 311, 292,
	293, 243, 0, 347, 271, 284, 268, 327, 0, 377,
	405, 267, 396, 0, 388, 246, 0, 387, 326, 374,
	379, 312, 306, 245, 376, 310, 305, 296, 275, 420,
	297, 298, 288, 338, 304, 339, 289, 316, 315, 317,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 0, 0, 0,
	363, 0, 0, 299, 0, 0, 0, 406, 0, 350,
	332, 0, 0, 0, 348, 302, 375, 340, 381, 365,
	389, 344, 341, 237, 366, 270, 313, 248, 250, 265,
	272, 274, 276, 277, 322, 323, 335, 354, 367, 368,
	369, 269, 258, 349, 259, 286, 260, 238, 262, 261,
	263, 356, 264, 240, 336, 373, 0, 282, 345, 309,
	241, 308, 337, 372, 371, 249, 397, 403, 404, 0,
	0, 409, 0, 0, 0, 417, 422, 423, 424, 426,
	427, 428, 429, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 402, 280, 234, 235, 441, 266,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 401, 0, 0, 0, 430, 440, 0,
	0, 0, 0, 0, 439, 334, 0, 353, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 383, 395, 412, 415, 0, 0, 0, 0, 239,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 410,
	0, 0, 318, 319, 320, 321, 283, 0, 256, 413,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	279, 285, 425, 287, 255, 333, 281, 392, 294, 0,
	418, 0, 419, 0, 0, 0, 0, 325, 290, 291,
	357, 295, 303, 346, 391, 331, 351, 253, 382, 358,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 233, 0, 236, 0, 301, 0, 342, 278,
	0, 0, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 0, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	330, 0, 0, 229, 230, 231, 232, 0, 0, 0,
	398, 399, 400, 421, 384, 0, 438, 273, 1206, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 431, 0, 432, 0, 0, 0, 0,
	0, 359, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 1210, 0, 0, 0, 251,
	185, 433, 0, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1208, 0,
	0, 0, 0, 0, 0, 242, 364, 380, 252, 355,
	393, 257, 362, 247, 329, 352, 0, 0, 244, 378,
	361, 311, 292, 293, 243, 0, 347, 271, 284, 268,
	327, 0, 377, 405, 267, 396, 0, 388, 246, 0,
	387, 326, 374, 379, 312, 306, 245, 376, 310, 305,
	296, 275, 420, 297, 298, 288, 338, 304, 339, 289,
	316, 315, 317, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	0, 0, 0, 363, 0, 0, 299, 0, 0, 0,
	406, 0, 350, 332, 0, 0, 0, 348, 302, 375,
	340, 381, 365, 389, 344, 341, 237, 366, 270, 313,
	248, 250, 265, 272, 274, 276, 277, 322, 323, 335,
	354, 367, 368, 369, 269, 258, 349, 259, 286, 260,
	238, 262, 261, 263, 356, 264, 240, 336, 373, 0,
	282, 345, 309, 241, 308, 337, 372, 371, 249, 397,
	403, 404, 0, 0, 409, 0, 0, 0, 417, 422,
	423, 424, 426, 427, 428, 429, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 402, 280, 234,
	235, 441, 266, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 401, 0, 0, 0,
	430, 440, 0, 0, 0, 0, 0, 439, 334, 0,
	353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 383, 395, 412, 415, 0, 0,
	0, 0, 239, 414, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 394, 0, 0, 0,
	0, 0, 410, 0, 0, 318, 319, 320, 321, 283,
	0, 256, 413, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 408, 279, 285, 425, 287, 255, 333, 281,
	392, 294, 0, 418, 0, 419, 0, 0, 0, 0,
	325, 290, 291, 357, 295, 303, 346, 391, 331, 351,
	253, 382, 358, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 233, 0, 236, 0, 301,
	0, 342, 278, 0, 0, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 0, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 330, 0, 0, 229, 230, 231, 232,
	0, 0, 0, 398, 399, 400, 421, 384, 0, 438,
	273, 0, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 0, 432, 0,
	0, 0, 0, 0, 359, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3156, 0, 184, 613, 0, 0, 0,
	0, 0, 251, 185, 433, 0, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 364,
	380, 252, 355, 393, 257, 362, 247, 329, 352, 0,
	0, 244, 378, 361, 311, 292, 293, 243, 0, 347,
	271, 284, 268, 327, 0, 377, 405, 267, 396, 0,
	388, 246, 0, 387, 326, 374, 379, 312, 306, 245,
	376, 310, 305, 296, 275, 420, 297, 298, 288, 338,
	304, 339, 289, 316, 315, 317, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 0, 0, 0, 363, 0, 0, 299,
	0, 0, 0, 406, 0, 350, 332, 0, 0, 0,
	348, 302, 375, 340, 381, 365, 389, 344, 341, 237,
	366, 270, 313, 248, 250, 265, 272, 274, 276, 277,
	322, 323, 335, 354, 367, 368, 369, 269, 258, 349,
	259, 286, 260, 238, 262, 261, 263, 356, 264, 240,
	336, 373, 0, 282, 345, 309, 241, 308, 337, 372,
	371, 249, 397, 403, 404, 0, 0, 409, 0, 0,
	0, 417, 422, 423, 424, 426, 427, 428, 429, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	402, 280, 234, 235, 441, 266, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 401,
	0, 0, 0, 430, 440, 0, 0, 0, 0, 0,
	439, 334, 0, 353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 383, 395, 412,
	415, 0, 0, 0, 0, 239, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 410, 0, 0, 318, 319,
	320, 321, 283, 0, 256, 413, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 279, 285, 425, 287,
	255, 333, 281, 392, 294, 0, 418, 0, 419, 0,
	0, 0, 0, 325, 290, 291, 357, 295, 303, 346,
	391, 331, 351, 253, 382, 358, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 233, 0,
	236, 0, 301, 0, 342, 278, 0, 0, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 0, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 330, 0, 0, 229,
	230, 231, 232, 0, 0, 0, 398, 399, 400, 421,
	384, 0, 438, 273, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 431,
	0, 432, 0, 0, 0, 0, 0, 359, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 0,
	0, 1210, 0, 0, 0, 251, 185, 433, 0, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1208, 0, 0, 0, 0, 0,
	0, 242, 364, 380, 252, 355, 393, 257, 362, 247,
	329, 352, 0, 0, 244, 378, 361, 311, 292, 293,
	243, 0, 347, 271, 284, 268, 327, 0, 377, 405,
	267, 396, 0, 388, 246, 0, 387, 326, 374, 379,
	312, 306, 245, 376, 310, 305, 296, 275, 420, 297,
	298, 288, 338, 304, 339, 289, 316, 315, 317, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 0, 0, 0, 363,
	0, 0, 299, 0, 0, 0, 406, 0, 350, 332,
	0, 0, 0, 348, 302, 375, 340, 381, 365, 389,
	344, 341, 237, 366, 270, 313, 248, 250, 265, 272,
	274, 276, 277, 322, 323, 335, 354, 367, 368, 369,
	269, 258, 349, 259, 286, 260, 238, 262, 261, 263,
	356, 264, 240, 336, 373, 0, 282, 345, 309, 241,
	308, 337, 372, 371, 249, 397, 403, 404, 0, 0,
	409, 0, 0, 0, 417, 422, 423, 424, 426, 427,
	428, 429, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 402, 280, 234, 235, 441, 266, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 401, 0, 0, 0, 430, 440, 0, 0,
	0, 0, 0, 439, 334, 0, 353, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	383, 395, 412, 415, 0, 0, 0, 0, 239, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 410, 0,
	0, 318, 319, 320, 321, 283, 0, 256, 413, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 279,
	285, 425, 287, 255, 333, 281, 392, 294, 0, 418,
	0, 419, 0, 0, 0, 0, 325, 290, 291, 357,
	295, 303, 346, 391, 331, 351, 253, 382, 358, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 233, 0, 236, 0, 301, 0, 342, 278, 0,
	0, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 0, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 330,
	0, 0, 229, 230, 231, 232, 0, 0, 0, 398,
	399, 400, 421, 384, 0, 438, 273, 0, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 0, 432, 0, 0, 0, 0, 0,
	359, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 1210, 0, 0, 0, 251, 185,
	433, 0, 434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2887, 0, 0,
	0, 0, 0, 0, 242, 364, 380, 252, 355, 393,
	257, 362, 247, 329, 352, 0, 0, 244, 378, 361,
	311, 292, 293, 243, 0, 347, 271, 284, 268, 327,
	0, 377, 405, 267, 396, 0, 388, 246, 0, 387,
	326, 374, 379, 312, 306, 245, 376, 310, 305, 296,
	275, 420, 297, 298, 288, 338, 304, 339, 289, 316,
	315, 317, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 0, 0, 0,
	0, 0, 363, 0, 0, 299, 0, 0, 0, 406,
	0, 350, 332, 0, 0, 0, 348, 302, 375, 340,
	381, 365, 389, 344, 341, 237, 366, 270, 313, 248,
	250, 265, 272, 274, 276, 277, 322, 323, 335, 354,
	367, 368, 369, 269, 258, 349, 259, 286, 260, 238,
	262, 261, 263, 356, 264, 240, 336, 373, 0, 282,
	345, 309, 241, 308, 337, 372, 371, 249, 397, 403,
	404, 0, 0, 409, 0, 0, 0, 417, 422, 423,
	424, 426, 427, 428, 429, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 402, 280, 234, 235,
	441, 266, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 401, 0, 0, 0, 430,
	440, 0, 0, 0, 0, 0, 439, 334, 0, 353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 383, 395, 412, 415, 0, 0, 0,
	0, 239, 414, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 410, 0, 0, 318, 319, 320, 321, 283, 0,
	256, 413, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 408, 279, 285, 425, 287, 255, 333, 281, 392,
	294, 0, 418, 0, 419, 0, 0, 0, 0, 325,
	290, 291, 357, 295, 303, 346, 391, 331, 351, 253,
	382, 358, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 233, 0, 236, 0, 301, 0,
	342, 278, 0, 0, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 0, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 0, 0, 0, 229, 230, 231, 232, 330,
	0, 0, 398, 399, 400, 421, 384, 0, 438, 0,
	0, 2064, 0, 0, 0, 0, 273, 0, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 0, 432, 0, 0, 0, 0, 0,
	359, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 2066, 0, 0, 0, 251, 185,
	433, 0, 434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 364, 380, 252, 355, 393,
	257, 362, 247, 329, 352, 0, 0, 244, 378, 361,
	311, 292, 293, 243, 0, 347, 271, 284, 268, 327,
	0, 377, 405, 267, 396, 0, 388, 246, 0, 387,
	326, 374, 379, 312, 306, 245, 376, 310, 305, 296,
	275, 420, 297, 298, 288, 338, 304, 339, 289, 316,
	315, 317, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 0, 0, 0,
	0, 0, 363, 0, 0, 299, 0, 0, 0, 406,
	0, 350, 332, 0, 0, 0, 348, 302, 375, 340,
	381, 365, 389, 344, 341, 237, 366, 270, 313, 248,
	250, 265, 272, 274, 276, 277, 322, 323, 335, 354,
	367, 368, 369, 269, 258, 349, 259, 286, 260, 238,
	262, 261, 263, 356, 264, 240, 336, 373, 0, 282,
	345, 309, 241, 308, 337, 372, 371, 249, 397, 403,
	404, 0, 0, 409, 0, 0, 0, 417, 422, 423,
	424, 426, 427, 428, 429, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 402, 280, 234, 235,
	441, 266, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 401, 0, 0, 0, 430,
	440, 0, 0, 0, 0, 0, 439, 334, 0, 353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 383, 395, 412, 415, 0, 0, 0,
	0, 239, 414, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 410, 0, 0, 318, 319, 320, 321, 283, 0,
	256, 413, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 408, 279, 285, 425, 287, 255, 333, 281, 392,
	294, 0, 418, 0, 419, 0, 0, 0, 0, 325,
	290, 291, 357, 295, 303, 346, 391, 331, 351, 253,
	382, 358, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 233, 0, 236, 0, 301, 0,
	342, 278, 0, 0, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 0, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 330, 0, 0, 229, 230, 231, 232, 0,
	0, 0, 398, 399, 400, 421, 384, 0, 438, 273,
	2085, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 431, 0, 432, 0, 0,
	0, 0, 0, 359, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 0, 0, 1210, 0, 0,
	0, 251, 185, 433, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 364, 380,
	252, 355, 393, 257, 362, 247, 329, 352, 0, 0,
	244, 378, 361, 311, 292, 293, 243, 0, 347, 271,
	284, 268, 327, 0, 377, 405, 267, 396, 0, 388,
	246, 0, 387, 326, 374, 379, 312, 306, 245, 376,
	310, 305, 296, 275, 420, 297, 298, 288, 338, 304,
	339, 289, 316, 315, 317, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 0, 0, 0, 363, 0, 0, 299, 0,
	0, 0, 406, 0, 350, 332, 0, 0, 0, 348,
	302, 375, 340, 381, 365, 389, 344, 341, 237, 366,
	270, 313, 248, 250, 265, 272, 274, 276, 277, 322,
	323, 335, 354, 367, 368, 369, 269, 258, 349, 259,
	286, 260, 238, 262, 261, 263, 356, 264, 240, 336,
	373, 0, 282, 345, 309, 241, 308, 337, 372, 371,
	249, 397, 403, 404, 0, 0, 409, 0, 0, 0,
	417, 422, 423, 424, 426, 427, 428, 429, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 402,
	280, 234, 235, 441, 266, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 401, 0,
	0, 0, 430, 440, 0, 0, 0, 0, 0, 439,
	334, 0, 353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 383, 395, 412, 415,
	0, 0, 0, 0, 239, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 410, 0, 0, 318, 319, 320,
	321, 283, 0, 256, 413, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 408, 279, 285, 425, 287, 255,
	333, 281, 392, 294, 0, 418, 0, 419, 0, 0,
	0, 0, 325, 290, 291, 357, 295, 303, 346, 391,
	331, 351, 253, 382, 358, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 233, 0, 236,
	0, 301, 0, 342, 278, 0, 0, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	0, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 330, 0, 0, 229, 230,
	231, 232, 0, 0, 0, 398, 399, 400, 421, 384,
	0, 438, 273, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 0,
	432, 0, 0, 0, 0, 0, 359, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3245, 0, 184, 0, 0,
	0, 0, 0, 0, 251, 185, 433, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 364, 380, 252, 355, 393, 257, 362, 247, 329,
	352, 0, 0, 244, 378, 361, 311, 292, 293, 243,
	0, 347, 271, 284, 268, 327, 0, 377, 405, 267,
	396, 0, 388, 246, 0, 387, 326, 374, 379, 312,
	306, 245, 376, 310, 305, 296, 275, 420, 297, 298,
	288, 338, 304, 339, 289, 316, 315, 317, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 0, 0, 0, 0, 0, 363, 0,
	0, 299, 0, 0, 0, 406, 0, 350, 332, 0,
	0, 0, 348, 302, 375, 340, 381, 365, 389, 344,
	341, 237, 366, 270, 313, 248, 250, 265, 272, 274,
	276, 277, 322, 323, 335, 354, 367, 368, 369, 269,
	258, 349, 259, 286, 260, 238, 262, 261, 263, 356,
	264, 240, 336, 373, 0, 282, 345, 309, 241, 308,
	337, 372, 371, 249, 397, 403, 404, 0, 0, 409,
	0, 0, 0, 417, 422, 423, 424, 426, 427, 428,
	429, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 402, 280, 234, 235, 441, 266, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 401, 0, 0, 0, 430, 440, 0, 0, 0,
	0, 0, 439, 334, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 383,
	395, 412, 415, 0, 0, 0, 0, 239, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 410, 0, 0,
	318, 319, 320, 321, 283, 0, 256, 413, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 279, 285,
	425, 287, 255, 333, 281, 392, 294, 0, 418, 0,
	419, 0, 0, 0, 0, 325, 290, 291, 357, 295,
	303, 346, 391, 331, 351, 253, 382, 358, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	233, 0, 236, 0, 301, 0, 342, 278, 0, 0,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 0, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 330, 0,
	0, 229, 230, 231, 232, 0, 0, 0, 398, 399,
	400, 421, 384, 0, 438, 273, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 432, 0, 0, 0, 0, 0, 359,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 613, 0, 0, 0, 0, 0, 251, 185, 433,
	0, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 364, 380, 252, 355, 393, 257,
	362, 247, 329, 352, 0, 0, 244, 378, 361, 311,
	292, 293, 243, 0, 347, 271, 284, 268, 327, 0,
	377, 405, 267, 396, 0, 388, 246, 0, 387, 326,
	374, 379, 312, 306, 245, 376, 310, 305, 296, 275,
	420, 297, 298, 288, 338, 304, 339, 289, 316, 315,
	317, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 0, 0,
	0, 363, 0, 0, 299, 0, 0, 0, 406, 0,
	350, 332, 0, 0, 0, 348, 302, 375, 340, 381,
	365, 389, 344, 341, 237, 366, 270, 313, 248, 250,
	265, 272, 274, 276, 277, 322, 323, 335, 354, 367,
	368, 369, 269, 258, 349, 259, 286, 260, 238, 262,
	261, 263, 356, 264, 240, 336, 373, 0, 282, 345,
	309, 241, 308, 337, 372, 371, 249, 397, 403, 404,
	0, 0, 409, 0, 0, 0, 417, 422, 423, 424,
	426, 427, 428, 429, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 402, 280, 234, 235, 441,
	266, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 401, 0, 0, 0, 430, 440,
	0, 0, 0, 0, 0, 439, 334, 0, 353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 383, 395, 412, 415, 0, 0, 0, 0,
	239, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	410, 0, 0, 318, 319, 320, 321, 283, 0, 256,
	413, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 279, 285, 425, 287, 255, 333, 281, 392, 294,
	0, 418, 0, 419, 0, 0, 0, 0, 325, 290,
	291, 357, 295, 303, 346, 391, 331, 351, 253, 382,
	358, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 233, 0, 236, 0, 301, 0, 342,
	278, 0, 0, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 0, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 330, 0, 0, 229, 230, 231, 232, 0, 0,
	0, 398, 399, 400, 421, 384, 0, 438, 273, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 431, 0, 432, 0, 0, 0,
	0, 0, 359, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3171, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	251, 185, 433, 0, 434, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 364, 380, 252,
	355, 393, 257, 362, 247, 329, 352, 0, 0, 244,
	378, 361, 311, 292, 293, 243, 0, 347, 271, 284,
	268, 327, 0, 377, 405, 267, 396, 0, 388, 246,
	0, 387, 326, 374, 379, 312, 306, 245, 376, 310,
	305, 296, 275, 420, 297, 298, 288, 338, 304, 339,
	289, 316, 315, 317, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 0,
	0, 0, 0, 0, 363, 0, 0, 299, 0, 0,
	0, 406, 0, 350, 332, 0, 0, 0, 348, 302,
	375, 340, 381, 365, 389, 344, 341, 237, 366, 270,
	313, 248, 250, 265, 272, 274, 276, 277, 322, 323,
	335, 354, 367, 368, 369, 269, 258, 349, 259, 286,
	260, 238, 262, 261, 263, 356, 264, 240, 336, 373,
	0, 282, 345, 309, 241, 308, 337, 372, 371, 249,
	397, 403, 404, 0, 0, 409, 0, 0, 0, 417,
	422, 423, 424, 426, 427, 428, 429, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 402, 280,
	234, 235, 441, 266, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 401, 0, 0,
	0, 430, 440, 0, 0, 0, 0, 0, 439, 334,
	0, 353, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 383, 395, 412, 415, 0,
	0, 0, 0, 239, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 410, 0, 0, 318, 319, 320, 321,
	283, 0, 256, 413, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 279, 285, 425, 287, 255, 333,
	281, 392, 294, 0, 418, 0, 419, 0, 0, 0,
	0, 325, 290, 291, 357, 295, 303, 346, 391, 331,
	351, 253, 382, 358, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 233, 0, 236, 0,
	301, 0, 342, 278, 0, 0, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 0,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 330, 0, 0, 229, 230, 231,
	232, 0, 0, 0, 398, 399, 400, 421, 384, 0,
	438, 273, 0, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 431, 0, 432,
	0, 0, 0, 0, 0, 359, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 0, 0, 251, 185, 433, 0, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	364, 380, 252, 355, 393, 257, 362, 247, 329, 352,
	0, 0, 244, 378, 361, 311, 292, 293, 243, 0,
	347, 271, 284, 268, 327, 0, 377, 405, 267, 396,
	0, 388, 246, 0, 387, 326, 374, 379, 312, 306,
	245, 376, 310, 305, 296, 275, 420, 297, 298, 288,
	338, 304, 339, 289, 316, 315, 317, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 3101, 0, 0, 363, 0, 0,
	299, 0, 0, 0, 406, 0, 350, 332, 0, 0,
	0, 348, 302, 375, 340, 381, 365, 389, 344, 341,
	237, 366, 270, 313, 248, 250, 265, 272, 274, 276,
	277, 322, 323, 335, 354, 367, 368, 369, 269, 258,
	349, 259, 286, 260, 238, 262, 261, 263, 356, 264,
	240, 336, 373, 0, 282, 345, 309, 241, 308, 337,
	372, 371, 249, 397, 403, 404, 0, 0, 409, 0,
	0, 0, 417, 422, 423, 424, 426, 427, 428, 429,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 402, 280, 234, 235, 441, 266, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	401, 0, 0, 0, 430, 440, 0, 0, 0, 0,
	0, 439, 334, 0, 353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 383, 395,
	412, 415, 0, 0, 0, 0, 239, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 410, 0, 0, 318,
	319, 320, 321, 283, 0, 256, 413, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 279, 285, 425,
	287, 255, 333, 281, 392, 294, 0, 418, 0, 419,
	0, 0, 0, 0, 325, 290, 291, 357, 295, 303,
	346, 391, 331, 351, 253, 382, 358, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 233,
	0, 236, 0, 301, 0, 342, 278, 0, 0, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 0, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 330, 0, 0,
	229, 230, 231, 232, 0, 0, 0, 398, 399, 400,
	421, 384, 0, 438, 273, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 0, 432, 0, 0, 0, 0, 0, 359, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2883, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 251, 185, 433, 0,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 364, 380, 252, 355, 393, 257, 362,
	247, 329, 352, 0, 0, 244, 378, 361, 311, 292,
	293, 243, 0, 347, 271, 284, 268, 327, 0, 377,
	405, 267, 396, 0, 388, 246, 0, 387, 326, 374,
	379, 312, 306, 245, 376, 310, 305, 296, 275, 420,
	297, 298, 288, 338, 304, 339, 289, 316, 315, 317,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 0, 0, 0,
	363, 0, 0, 299, 0, 0, 0, 406, 0, 350,
	332, 0, 0, 0, 348, 302, 375, 340, 381, 365,
	389, 344, 341, 237, 366, 270, 313, 248, 250, 265,
	272, 274, 276, 277, 322, 323, 335, 354, 367, 368,
	369, 269, 258, 349, 259, 286, 260, 238, 262, 261,
	263, 356, 264, 240, 336, 373, 0, 282, 345, 309,
	241, 308, 337, 372, 371, 249, 397, 403, 404, 0,
	0, 409, 0, 0, 0, 417, 422, 423, 424, 426,
	427, 428, 429, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 402, 280, 234, 235, 441, 266,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 401, 0, 0, 0, 430, 440, 0,
	0, 0, 0, 0, 439, 334, 0, 353, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 383, 395, 412, 415, 0, 0, 0, 0, 239,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 410,
	0, 0, 318, 319, 320, 321, 283, 0, 256, 413,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	279, 285, 425, 287, 255, 333, 281, 392, 294, 0,
	418, 0, 419, 0, 0, 0, 0, 325, 290, 291,
	357, 295, 303, 346, 391, 331, 351, 253, 382, 358,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 233, 0, 236, 0, 301, 0, 342, 278,
	0, 0, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 0, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	330, 0, 0, 229, 230, 231, 232, 0, 0, 0,
	398, 399, 400, 421, 384, 0, 438, 273, 0, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 431, 0, 432, 0, 0, 0, 0,
	0, 359, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 0, 0, 251,
	185, 433, 0, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 364, 380, 252, 355,
	393, 257, 362, 247, 329, 352, 0, 0, 244, 378,
	361, 311, 292, 293, 243, 0, 347, 271, 284, 268,
	327, 0, 377, 405, 267, 396, 0, 388, 246, 0,
	387, 326, 374, 379, 312, 306, 245, 376, 310, 305,
	296, 275, 420, 297, 298, 288, 338, 304, 339, 289,
	316, 315, 317, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	2956, 0, 0, 363, 0, 0, 299, 0, 0, 0,
	406, 0, 350, 332, 0, 0, 0, 348, 302, 375,
	340, 381, 365, 389, 344, 341, 237, 366, 270, 313,
	248, 250, 265, 272, 274, 276, 277, 322, 323, 335,
	354, 367, 368, 369, 269, 258, 349, 259, 286, 260,
	238, 262, 261, 263, 356, 264, 240, 336, 373, 0,
	282, 345, 309, 241, 308, 337, 372, 371, 249, 397,
	403, 404, 0, 0, 409, 0, 0, 0, 417, 422,
	423, 424, 426, 427, 428, 429, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 402, 280, 234,
	235, 441, 266, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 401, 0, 0, 0,
	430, 440, 0, 0, 0, 0, 0, 439, 334, 0,
	353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 383, 395, 412, 415, 0, 0,
	0, 0, 239, 414, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 394, 0, 0, 0,
	0, 0, 410, 0, 0, 318, 319, 320, 321, 283,
	0, 256, 413, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 408, 279, 285, 425, 287, 255, 333, 281,
	392, 294, 0, 418, 0, 419, 0, 0, 0, 0,
	325, 290, 291, 357, 295, 303, 346, 391, 331, 351,
	253, 382, 358, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 233, 0, 236, 0, 301,
	0, 342, 278, 0, 0, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 0, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 330, 0, 0, 229, 230, 231, 232,
	0, 0, 0, 398, 399, 400, 421, 384, 0, 438,
	273, 0, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 0, 432, 0,
	0, 0, 0, 0, 359, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 251, 185, 433, 0, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 364,
	380, 252, 355, 393, 257, 362, 247, 329, 352, 0,
	0, 244, 378, 361, 311, 292, 293, 243, 0, 347,
	271, 284, 268, 327, 0, 377, 405, 267, 396, 0,
	388, 246, 0, 387, 326, 374, 379, 312, 306, 245,
	376, 310, 305, 296, 275, 420, 297, 298, 288, 338,
	304, 339, 289, 316, 315, 317, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 0, 0, 0, 363, 0, 0, 299,
	0, 0, 0, 406, 0, 350, 332, 0, 0, 0,
	348, 302, 375, 340, 381, 365, 389, 344, 341, 237,
	366, 270, 313, 248, 250, 265, 272, 274, 276, 277,
	322, 323, 335, 354, 367, 368, 369, 269, 258, 349,
	259, 286, 260, 238, 262, 261, 263, 356, 264, 240,
	336, 373, 0, 282, 345, 309, 241, 308, 337, 372,
	371, 249, 397, 403, 404, 0, 0, 409, 0, 0,
	0, 417, 422, 423, 424, 426, 427, 428, 429, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	402, 280, 234, 235, 441, 266, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 401,
	0, 0, 0, 430, 440, 0, 0, 0, 0, 0,
	439, 334, 0, 353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 383, 395, 412,
	415, 0, 0, 0, 0, 239, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 410, 0, 0, 318, 319,
	320, 321, 283, 0, 256, 413, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 279, 285, 425, 287,
	255, 333, 281, 392, 294, 0, 418, 0, 419, 0,
	0, 0, 0, 325, 290, 291, 357, 295, 303, 346,
	391, 331, 351, 253, 382, 358, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 233, 0,
	236, 0, 301, 0, 342, 278, 0, 0, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 0, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 330, 0, 0, 229,
	230, 231, 232, 0, 0, 0, 398, 399, 400, 421,
	384, 0, 438, 273, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 431,
	0, 432, 0, 0, 0, 0, 0, 359, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1644, 0, 0, 184, 0,
	0, 0, 0, 0, 0, 251, 185, 433, 0, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 364, 380, 252, 355, 393, 257, 362, 247,
	329, 352, 0, 0, 244, 378, 361, 311, 292, 293,
	243, 0, 347, 271, 284, 268, 327, 0, 377, 405,
	267, 396, 0, 388, 246, 0, 387, 326, 374, 379,
	312, 306, 245, 376, 310, 305, 296, 275, 420, 297,
	298, 288, 338, 304, 339, 289, 316, 315, 317, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 0, 0, 0, 363,
	0, 0, 299, 0, 0, 0, 406, 0, 350, 332,
	0, 0, 0, 348, 302, 375, 340, 381, 365, 389,
	344, 341, 237, 366, 270, 313, 248, 250, 265, 272,
	274, 276, 277, 322, 323, 335, 354, 367, 368, 369,
	269, 258, 349, 259, 286, 260, 238, 262, 261, 263,
	356, 264, 240, 336, 373, 0, 282, 345, 309, 241,
	308, 337, 372, 371, 249, 397, 403, 404, 0, 0,
	409, 0, 0, 0, 417, 422, 423, 424, 426, 427,
	428, 429, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 402, 280, 234, 235, 441, 266, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 401, 0, 0, 0, 430, 440, 0, 0,
	0, 0, 0, 439, 334, 0, 353, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	383, 395, 412, 415, 0, 0, 0, 0, 239, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 410, 0,
	0, 318, 319, 320, 321, 283, 0, 256, 413, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 279,
	285, 425, 287, 255, 333, 281, 392, 294, 0, 418,
	0, 419, 0, 0, 0, 0, 325, 290, 291, 357,
	295, 303, 346, 391, 331, 351, 253, 382, 358, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 233, 0, 236, 0, 301, 0, 342, 278, 0,
	0, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 0, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 330,
	0, 0, 229, 230, 231, 232, 0, 0, 0, 398,
	399, 400, 421, 384, 0, 438, 273, 0, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 0, 432, 0, 0, 0, 0, 0,
	359, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 251, 185,
	433, 0, 434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2681, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 364, 380, 252, 355, 393,
	257, 362, 247, 329, 352, 0, 0, 244, 378, 361,
	311, 292, 293, 243, 0, 347, 271, 284, 268, 327,
	0, 377, 405, 267, 396, 0, 388, 246, 0, 387,
	326, 374, 379, 312, 306, 245, 376, 310, 305, 296,
	275, 420, 297, 298, 288, 338, 304, 339, 289, 316,
	315, 317, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 0, 0, 0,
	0, 0, 363, 0, 0, 299, 0, 0, 0, 406,
	0, 350, 332, 0, 0, 0, 348, 302, 375, 340,
	381, 365, 389, 344, 341, 237, 366, 270, 313, 248,
	250, 265, 272, 274, 276, 277, 322, 323, 335, 354,
	367, 368, 369, 269, 258, 349, 259, 286, 260, 238,
	262, 261, 263, 356, 264, 240, 336, 373, 0, 282,
	345, 309, 241, 308, 337, 372, 371, 249, 397, 403,
	404, 0, 0, 409, 0, 0, 0, 417, 422, 423,
	424, 426, 427, 428, 429, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 402, 280, 234, 235,
	441, 266, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 401, 0, 0, 0, 430,
	440, 0, 0, 0, 0, 0, 439, 334, 0, 353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 383, 395, 412, 415, 0, 0, 0,
	0, 239, 414, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 410, 0, 0, 318, 319, 320, 321, 283, 0,
	256, 413, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 408, 279, 285, 425, 287, 255, 333, 281, 392,
	294, 0, 418, 0, 419, 0, 0, 0, 0, 325,
	290, 291, 357, 295, 303, 346, 391, 331, 351, 253,
	382, 358, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 233, 0, 236, 0, 301, 0,
	342, 278, 0, 0, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 0, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 330, 0, 0, 229, 230, 231, 232, 0,
	0, 0, 398, 399, 400, 421, 384, 0, 438, 273,
	0, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 431, 0, 432, 0, 0,
	0, 0, 0, 359, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 0, 0, 2549, 0, 0,
	0, 251, 185, 433, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 364, 380,
	252, 355, 393, 257, 362, 247, 329, 352, 0, 0,
	244, 378, 361, 311, 292, 293, 243, 0, 347, 271,
	284, 268, 327, 0, 377, 405, 267, 396, 0, 388,
	246, 0, 387, 326, 374, 379, 312, 306, 245, 376,
	310, 305, 296, 275, 420, 297, 298, 288, 338, 304,
	339, 289, 316, 315, 317, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 0, 0, 0, 363, 0, 0, 299, 0,
	0, 0, 406, 0, 350, 332, 0, 0, 0, 348,
	302, 375, 340, 381, 365, 389, 344, 341, 237, 366,
	270, 313, 248, 250, 265, 272, 274, 276, 277, 322,
	323, 335, 354, 367, 368, 369, 269, 258, 349, 259,
	286, 260, 238, 262, 261, 263, 356, 264, 240, 336,
	373, 0, 282, 345, 309, 241, 308, 337, 372, 371,
	249, 397, 403, 404, 0, 0, 409, 0, 0, 0,
	417, 422, 423, 424, 426, 427, 428, 429, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 402,
	280, 234, 235, 441, 266, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 401, 0,
	0, 0, 430, 440, 0, 0, 0, 0, 0, 439,
	334, 0, 353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 383, 395, 412, 415,
	0, 0, 0, 0, 239, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 410, 0, 0, 318, 319, 320,
	321, 283, 0, 256, 413, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 408, 279, 285, 425, 287, 255,
	333, 281, 392, 294, 0, 418, 0, 419, 0, 0,
	0, 0, 325, 290, 291, 357, 295, 303, 346, 391,
	331, 351, 253, 382, 358, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 233, 0, 236,
	0, 301, 0, 342, 278, 0, 0, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	0, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 330, 0, 0, 229, 230,
	231, 232, 0, 0, 0, 398, 399, 400, 421, 384,
	0, 438, 273, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 0,
	432, 0, 0, 0, 0, 0, 359, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 251, 185, 433, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 364, 380, 252, 355, 393, 257, 362, 247, 329,
	352, 0, 0, 244, 378, 361, 311, 292, 293, 243,
	0, 347, 271, 284, 268, 327, 0, 377, 405, 267,
	396, 0, 388, 246, 0, 387, 326, 374, 379, 312,
	306, 245, 376, 310, 305, 296, 275, 420, 297, 298,
	288, 338, 304, 339, 289, 316, 315, 317, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 0, 0, 0, 0, 0, 363, 0,
	0, 299, 0, 0, 0, 406, 0, 350, 332, 0,
	0, 0, 348, 302, 375, 340, 381, 365, 389, 344,
	341, 237, 366, 270, 313, 248, 250, 265, 272, 274,
	276, 277, 322, 323, 335, 354, 367, 368, 369, 269,
	258, 349, 259, 286, 260, 238, 262, 261, 263, 356,
	264, 240, 336, 373, 0, 282, 345, 309, 241, 308,
	337, 372, 371, 249, 397, 403, 404, 0, 0, 409,
	0, 0, 0, 417, 422, 423, 424, 426, 427, 428,
	429, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 402, 280, 234, 235, 441, 266, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 401, 0, 0, 0, 430, 440, 0, 0, 0,
	0, 0, 439, 334, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 383,
	395, 412, 415, 0, 0, 0, 0, 239, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 410, 0, 0,
	318, 319, 320, 321, 283, 0, 256, 413, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 279, 285,
	425, 287, 255, 333, 281, 392, 294, 0, 418, 0,
	419, 0, 0, 0, 0, 325, 290, 291, 357, 295,
	303, 346, 391, 331, 351, 253, 382, 358, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	233, 0, 236, 0, 301, 0, 342, 278, 0, 0,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 0, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 330, 0,
	0, 229, 230, 231, 232, 0, 0, 0, 398, 399,
	400, 421, 384, 0, 438, 273, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 432, 0, 0, 0, 0, 0, 359,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 1210, 0, 0, 0, 251, 185, 433,
	0, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 364, 380, 252, 355, 393, 257,
	362, 247, 329, 352, 0, 0, 244, 378, 361, 311,
	292, 293, 243, 0, 347, 271, 284, 268, 327, 0,
	377, 405, 267, 396, 0, 388, 246, 0, 387, 326,
	374, 379, 312, 306, 245, 376, 310, 305, 296, 275,
	420, 297, 298, 288, 338, 304, 339, 289, 316, 315,
	317, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 0, 0,
	0, 363, 0, 0, 299, 0, 0, 0, 406, 0,
	350, 332, 0, 0, 0, 348, 302, 375, 340, 381,
	365, 389, 344, 341, 237, 366, 270, 313, 248, 250,
	265, 272, 274, 276, 277, 322, 323, 335, 354, 367,
	368, 369, 269, 258, 349, 259, 286, 260, 238, 262,
	261, 263, 356, 264, 240, 336, 373, 0, 282, 345,
	309, 241, 308, 337, 372, 371, 249, 397, 403, 404,
	0, 0, 409, 0, 0, 0, 417, 422, 423, 424,
	426, 427, 428, 429, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 402, 280, 234, 235, 441,
	266, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 401, 0, 0, 0, 430, 440,
	0, 0, 0, 0, 0, 439, 334, 0, 353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 383, 395, 412, 415, 0, 0, 0, 0,
	239, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	410, 0, 0, 318, 319, 320, 321, 283, 0, 256,
	413, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 279, 285, 425, 287, 255, 333, 281, 392, 294,
	0, 418, 0, 419, 0, 0, 0, 0, 325, 290,
	291, 357, 295, 303, 346, 391, 331, 351, 253, 382,
	358, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 233, 0, 236, 0, 301, 0, 342,
	278, 0, 0, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 0, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 330, 0, 0, 229, 230, 231, 232, 0, 0,
	0, 398, 399, 400, 421, 384, 0, 438, 273, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 431, 0, 432, 0, 0, 0,
	0, 0, 359, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 2066, 0, 0, 0,
	251, 185, 433, 0, 434, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 364, 380, 252,
	355, 393, 257, 362, 247, 329, 352, 0, 0, 244,
	378, 361, 311, 292, 293, 243, 0, 347, 271, 284,
	268, 327, 0, 377, 405, 267, 396, 0, 388, 246,
	0, 387, 326, 374, 379, 312, 306, 245, 376, 310,
	305, 296, 275, 420, 297, 298, 288, 338, 304, 339,
	289, 316, 315, 317, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 0,
	0, 0, 0, 0, 363, 0, 0, 299, 0, 0,
	0, 406, 0, 350, 332, 0, 0, 0, 348, 302,
	375, 340, 381, 365, 389, 344, 341, 237, 366, 270,
	313, 248, 250, 265, 272, 274, 276, 277, 322, 323,
	335, 354, 367, 368, 369, 269, 258, 349, 259, 286,
	260, 238, 262, 261, 263, 356, 264, 240, 336, 373,
	0, 282, 345, 309, 241, 308, 337, 372, 371, 249,
	397, 403, 404, 0, 0, 409, 0, 0, 0, 417,
	422, 423, 424, 426, 427, 428, 429, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 402, 280,
	234, 235, 441, 266, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 401, 0, 0,
	0, 430, 440, 0, 0, 0, 0, 0, 439, 334,
	0, 353, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 383, 395, 412, 415, 0,
	0, 0, 0, 239, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 410, 0, 0, 318, 319, 320, 321,
	283, 0, 256, 413, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 279, 285, 425, 287, 255, 333,
	281, 392, 294, 0, 418, 0, 419, 0, 0, 0,
	0, 325, 290, 291, 357, 295, 303, 346, 391, 331,
	351, 253, 382, 358, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 233, 0, 236, 0,
	301, 0, 342, 278, 0, 0, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 0,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 330, 0, 0, 229, 230, 231,
	232, 0, 0, 0, 398, 399, 400, 421, 384, 0,
	438, 273, 0, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 431, 0, 432,
	0, 0, 0, 0, 0, 359, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 0, 0, 251, 185, 433, 0, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	364, 380, 252, 355, 393, 257, 362, 247, 329, 352,
	0, 0, 244, 378, 361, 311, 292, 293, 243, 0,
	347, 271, 284, 268, 327, 0, 377, 405, 267, 396,
	0, 388, 246, 0, 387, 326, 374, 379, 312, 306,
	245, 376, 310, 305, 296, 275, 420, 297, 298, 288,
	338, 304, 339, 289, 316, 315, 317, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 0, 0, 0, 363, 0, 0,
	299, 0, 0, 0, 406, 0, 350, 332, 0, 0,
	0, 348, 302, 375, 340, 381, 365, 389, 344, 341,
	237, 366, 270, 313, 248, 250, 265, 272, 274, 276,
	277, 322, 323, 335, 354, 367, 368, 369, 269, 258,
	349, 259, 286, 260, 238, 262, 261, 263, 356, 264,
	240, 336, 373, 0, 282, 345, 309, 241, 308, 337,
	372, 371, 249, 397, 403, 404, 0, 0, 409, 0,
	0, 0, 417, 422, 423, 424, 426, 427, 428, 429,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 402, 280, 234, 235, 441, 266, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	401, 0, 0, 0, 430, 440, 0, 0, 0, 0,
	0, 439, 334, 0, 353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 383, 395,
	412, 415, 0, 0, 0, 0, 239, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 410, 0, 0, 318,
	319, 320, 321, 283, 0, 256, 413, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 279, 285, 425,
	287, 255, 333, 281, 392, 294, 0, 418, 0, 419,
	0, 0, 0, 0, 325, 290, 291, 357, 295, 303,
	346, 391, 331, 351, 253, 382, 358, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 233,
	0, 236, 0, 301, 0, 342, 278, 0, 0, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 0, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 330, 0, 0,
	229, 230, 231, 232, 0, 0, 0, 398, 399, 400,
	421, 384, 0, 438, 273, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 0, 432, 0, 0, 0, 0, 0, 359, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 251, 185, 433, 0,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2103, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 364, 380, 252, 355, 393, 257, 362,
	247, 329, 352, 0, 0, 244, 378, 361, 311, 292,
	293, 243, 0, 347, 271, 284, 268, 327, 0, 377,
	405, 267, 396, 0, 388, 246, 0, 387, 326, 374,
	379, 312, 306, 245, 376, 310, 305, 296, 275, 420,
	297, 298, 288, 338, 304, 339, 289, 316, 315, 317,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 0, 0, 0,
	363, 0, 0, 299, 0, 0, 0, 406, 0, 350,
	332, 0, 0, 0, 348, 302, 375, 340, 381, 365,
	389, 344, 341, 237, 366, 270, 313, 248, 250, 265,
	272, 274, 276, 277, 322, 323, 335, 354, 367, 368,
	369, 269, 258, 349, 259, 286, 260, 238, 262, 261,
	263, 356, 264, 240, 336, 373, 0, 282, 345, 309,
	241, 308, 337, 372, 371, 249, 397, 403, 404, 0,
	0, 409, 0, 0, 0, 417, 422, 423, 424, 426,
	427, 428, 429, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 402, 280, 234, 235, 441, 266,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 401, 0, 0, 0, 430, 440, 0,
	0, 0, 0, 0, 439, 334, 0, 353, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 383, 395, 412, 415, 0, 0, 0, 0, 239,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 410,
	0, 0, 318, 319, 320, 321, 283, 0, 256, 413,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	279, 285, 425, 287, 255, 333, 281, 392, 294, 0,
	418, 0, 419, 0, 0, 0, 0, 325, 290, 291,
	357, 295, 303, 346, 391, 331, 351, 253, 382, 358,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 233, 0, 236, 0, 301, 0, 342, 278,
	0, 0, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 0, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	330, 0, 0, 229, 230, 231, 232, 0, 0, 0,
	398, 399, 400, 421, 384, 0, 438, 273, 0, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 431, 0, 432, 0, 0, 0, 0,
	0, 359, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 2101, 0, 0, 0, 251,
	185, 433, 0, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 364, 380, 252, 355,
	393, 257, 362, 247, 329, 352, 0, 0, 244, 378,
	361, 311, 292, 293, 243, 0, 347, 271, 284, 268,
	327, 0, 377, 405, 267, 396, 0, 388, 246, 0,
	387, 326, 374, 379, 312, 306, 245, 376, 310, 305,
	296, 275, 420, 297, 298, 288, 338, 304, 339, 289,
	316, 315, 317, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	0, 0, 0, 363, 0, 0, 299, 0, 0, 0,
	406, 0, 350, 332, 0, 0, 0, 348, 302, 375,
	340, 381, 365, 389, 344, 341, 237, 366, 270, 313,
	248, 250, 265, 272, 274, 276, 277, 322, 323, 335,
	354, 367, 368, 369, 269, 258, 349, 259, 286, 260,
	238, 262, 261, 263, 356, 264, 240, 336, 373, 0,
	282, 345, 309, 241, 308, 337, 372, 371, 249, 397,
	403, 404, 0, 0, 409, 0, 0, 0, 417, 422,
	423, 424, 426, 427, 428, 429, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 402, 280, 234,
	235, 441, 266, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 401, 0, 0, 0,
	430, 440, 0, 0, 0, 0, 0, 439, 334, 0,
	353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 383, 395, 412, 415, 0, 0,
	0, 0, 239, 414, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 394, 0, 0, 0,
	0, 0, 410, 0, 0, 318, 319, 320, 321, 283,
	0, 256, 413, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 408, 279, 285, 425, 287, 255, 333, 281,
	392, 294, 0, 418, 0, 419, 0, 0, 0, 0,
	325, 290, 291, 357, 295, 303, 346, 391, 331, 351,
	253, 382, 358, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 233, 0, 236, 0, 301,
	0, 342, 278, 0, 0, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 0, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 0, 1939, 0, 229, 230, 231, 232,
	330, 0, 0, 398, 399, 400, 421, 384, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 431, 0, 432, 0, 0, 0, 0,
	0, 359, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 0, 0, 251,
	185, 433, 0, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 364, 380, 252, 355,
	393, 257, 362, 247, 329, 352, 0, 0, 244, 378,
	361, 311, 292, 293, 243, 0, 347, 271, 284, 268,
	327, 0, 377, 405, 267, 396, 0, 388, 246, 0,
	387, 326, 374, 379, 312, 306, 245, 376, 310, 305,
	296, 275, 420, 297, 298, 288, 338, 304, 339, 289,
	316, 315, 317, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	0, 0, 0, 363, 0, 0, 299, 0, 0, 0,
	406, 0, 350, 332, 0, 0, 0, 348, 302, 375,
	340, 381, 365, 389, 344, 341, 237, 366, 270, 313,
	248, 250, 265, 272, 274, 276, 277, 322, 323, 335,
	354, 367, 368, 369, 269, 258, 349, 259, 286, 260,
	238, 262, 261, 263, 356, 264, 240, 336, 373, 0,
	282, 345, 309, 241, 308, 337, 372, 371, 249, 397,
	403, 404, 0, 0, 409, 0, 0, 0, 417, 422,
	423, 424, 426, 427, 428, 429, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 402, 280, 234,
	235, 441, 266, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 401, 0, 0, 0,
	430, 440, 0, 0, 0, 0, 0, 439, 334, 0,
	353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 383, 395, 412, 415, 0, 0,
	0, 0, 239, 414, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 394, 0, 0, 0,
	0, 0, 410, 0, 0, 318, 319, 320, 321, 283,
	0, 256, 413, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 408, 279, 285, 425, 287, 255, 333, 281,
	392, 294, 0, 418, 0, 419, 0, 0, 0, 0,
	325, 290, 291, 357, 295, 303, 346, 391, 331, 351,
	253, 382, 358, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 233, 0, 236, 0, 301,
	0, 342, 278, 0, 0, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 0, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 330, 0, 0, 229, 230, 231, 232,
	0, 1631, 0, 398, 399, 400, 421, 384, 0, 438,
	273, 0, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 0, 432, 0,
	0, 0, 0, 0, 359, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 251, 185, 433, 0, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 364,
	380, 252, 355, 393, 257, 362, 247, 329, 352, 0,
	0, 244, 378, 361, 311, 292, 293, 243, 0, 347,
	271, 284, 268, 327, 0, 377, 405, 267, 396, 0,
	388, 246, 0, 387, 326, 374, 379, 312, 306, 245,
	376, 310, 305, 296, 275, 420, 297, 298, 288, 338,
	304, 339, 289, 316, 315, 317, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 0, 0, 0, 363, 0, 0, 299,
	0, 0, 0, 406, 0, 350, 332, 0, 0, 0,
	348, 302, 375, 340, 381, 365, 389, 344, 341, 237,
	366, 270, 313, 248, 250, 265, 272, 274, 276, 277,
	322, 323, 335, 354, 367, 368, 369, 269, 258, 349,
	259, 286, 260, 238, 262, 261, 263, 356, 264, 240,
	336, 373, 0, 282, 345, 309, 241, 308, 337, 372,
	371, 249, 397, 403, 404, 0, 0, 409, 0, 0,
	0, 417, 422, 423, 424, 426, 427, 428, 429, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	402, 280, 234, 235, 441, 266, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 401,
	0, 0, 0, 430, 440, 0, 0, 0, 0, 0,
	439, 334, 0, 353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 383, 395, 412,
	415, 0, 0, 0, 0, 239, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 410, 0, 0, 318, 319,
	320, 321, 283, 0, 256, 413, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 279, 285, 425, 287,
	255, 333, 281, 392, 294, 0, 418, 0, 419, 0,
	0, 0, 0, 325, 290, 291, 357, 295, 303, 346,
	391, 331, 351, 253, 382, 358, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 233, 0,
	236, 0, 301, 0, 342, 278, 0, 0, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 0, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 330, 0, 0, 229,
	230, 231, 232, 0, 0, 0, 398, 399, 400, 421,
	384, 0, 438, 273, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 431,
	0, 432, 0, 0, 0, 0, 0, 359, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 0,
	0, 1210, 0, 0, 0, 251, 185, 433, 0, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 364, 380, 252, 355, 393, 257, 362, 247,
	329, 352, 0, 0, 244, 378, 361, 311, 292, 293,
	243, 0, 347, 271, 284, 268, 327, 0, 377, 405,
	267, 396, 0, 388, 246, 0, 387, 326, 374, 379,
	312, 306, 245, 376, 310, 305, 296, 275, 420, 297,
	298, 288, 338, 304, 339, 289, 316, 315, 317, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 0, 0, 0, 363,
	0, 0, 299, 0, 0, 0, 406, 0, 350, 332,
	0, 0, 0, 348, 302, 375, 340, 381, 365, 389,
	1544, 341, 237, 366, 270, 313, 248, 250, 265, 272,
	274, 276, 277, 322, 323, 335, 354, 367, 368, 369,
	269, 258, 349, 259, 286, 260, 238, 262, 261, 263,
	356, 264, 240, 336, 373, 0, 282, 345, 309, 241,
	308, 337, 372, 371, 249, 397, 403, 404, 0, 0,
	409, 0, 0, 0, 417, 422, 423, 424, 426, 427,
	428, 429, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 402, 280, 234, 235, 441, 266, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 401, 0, 0, 0, 430, 440, 0, 0,
	0, 0, 0, 439, 334, 0, 353, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	383, 395, 412, 415, 0, 0, 0, 0, 239, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 410, 0,
	0, 318, 319, 320, 321, 283, 0, 256, 413, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 279,
	285, 425, 287, 255, 333, 281, 392, 294, 0, 418,
	0, 419, 0, 0, 0, 0, 325, 290, 291, 357,
	295, 303, 346, 391, 331, 351, 253, 382, 358, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 233, 0, 236, 0, 301, 0, 342, 278, 0,
	0, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 0, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 330,
	0, 0, 229, 230, 231, 232, 0, 0, 0, 398,
	399, 400, 421, 384, 0, 438, 273, 0, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 0, 432, 0, 0, 0, 0, 0,
	359, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 251, 185,
	433, 0, 434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 364, 380, 252, 355, 393,
	257, 362, 247, 329, 352, 0, 0, 244, 378, 361,
	311, 292, 293, 243, 0, 347, 271, 284, 268, 327,
	0, 377, 405, 267, 396, 0, 388, 246, 0, 387,
	326, 374, 379, 312, 306, 245, 376, 310, 305, 296,
	275, 420, 297, 298, 288, 338, 304, 339, 289, 316,
	315, 317, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 0, 1234, 0,
	0, 0, 363, 0, 0, 299, 0, 0, 0, 406,
	0, 350, 332, 0, 0, 0, 348, 302, 375, 340,
	381, 365, 389, 344, 341, 237, 366, 270, 313, 248,
	250, 265, 272, 274, 276, 277, 322, 323, 335, 354,
	367, 368, 369, 269, 258, 349, 259, 286, 260, 238,
	262, 261, 263, 356, 264, 240, 336, 373, 0, 282,
	345, 309, 241, 308, 337, 372, 371, 249, 397, 403,
	404, 0, 0, 409, 0, 0, 0, 417, 422, 423,
	424, 426, 427, 428, 429, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 402, 280, 234, 235,
	441, 266, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 401, 0, 0, 0, 430,
	440, 0, 0, 0, 0, 0, 439, 334, 0, 353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 383, 395, 412, 415, 0, 0, 0,
	0, 239, 414, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 410, 0, 0, 318, 319, 320, 321, 283, 0,
	256, 413, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 408, 279, 285, 425, 287, 255, 333, 281, 392,
	294, 0, 418, 0, 419, 0, 0, 0, 0, 325,
	290, 291, 357, 295, 303, 346, 391, 331, 351, 253,
	382, 358, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 233, 0, 236, 0, 301, 0,
	342, 278, 0, 0, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 0, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 330, 0, 0, 229, 230, 231, 232, 0,
	0, 0, 398, 399, 400, 421, 384, 0, 438, 273,
	0, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 431, 0, 432, 0, 0,
	0, 0, 0, 359, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 0, 0, 0, 0, 0,
	0, 251, 185, 433, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 364, 380,
	252, 355, 393, 257, 362, 247, 329, 352, 0, 0,
	244, 378, 361, 311, 292, 293, 243, 0, 347, 271,
	284, 268, 327, 0, 377, 405, 267, 396, 0, 388,
	246, 0, 387, 326, 374, 379, 312, 306, 245, 376,
	310, 305, 296, 275, 420, 297, 298, 288, 338, 304,
	339, 289, 316, 315, 317, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 0, 0, 0, 363, 0, 0, 299, 0,
	0, 0, 406, 0, 350, 332, 0, 0, 0, 348,
	302, 375, 340, 381, 365, 389, 344, 341, 237, 366,
	270, 313, 248, 250, 265, 272, 274, 276, 277, 322,
	323, 335, 354, 367, 368, 369, 269, 258, 349, 259,
	286, 260, 238, 262, 261, 263, 356, 264, 240, 336,
	373, 0, 282, 345, 309, 241, 308, 337, 372, 371,
	249, 397, 403, 404, 0, 0, 409, 0, 0, 0,
	417, 422, 423, 424, 426, 427, 428, 429, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 402,
	280, 234, 235, 441, 266, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 401, 0,
	0, 0, 430, 440, 0, 0, 0, 0, 0, 439,
	334, 0, 353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 383, 395, 412, 415,
	0, 0, 0, 0, 239, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 410, 0, 0, 318, 319, 320,
	321, 283, 0, 256, 413, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 408, 279, 285, 425, 287, 255,
	333, 281, 392, 294, 0, 418, 0, 419, 0, 0,
	0, 0, 325, 290, 291, 357, 295, 303, 346, 391,
	331, 351, 253, 382, 358, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 721, 0, 0, 370, 0, 233, 0, 236,
	0, 301, 0, 342, 278, 0, 0, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	0, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 330, 0, 0, 229, 230,
	231, 232, 0, 0, 0, 398, 399, 400, 421, 384,
	0, 438, 273, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 0,
	432, 0, 0, 0, 0, 0, 359, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 251, 185, 433, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 364, 380, 252, 355, 393, 257, 362, 247, 329,
	352, 0, 0, 244, 378, 361, 311, 292, 293, 243,
	0, 347, 271, 284, 268, 327, 0, 377, 405, 267,
	396, 0, 388, 246, 0, 387, 326, 374, 379, 312,
	306, 245, 376, 310, 305, 296, 275, 420, 297, 298,
	288, 338, 304, 339, 289, 316, 315, 317, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 0, 0, 0, 0, 0, 363, 0,
	0, 299, 0, 0, 0, 406, 0, 350, 332, 0,
	0, 0, 348, 302, 375, 340, 381, 365, 389, 479,
	341, 237, 366, 270, 313, 248, 250, 265, 272, 274,
	276, 277, 322, 323, 335, 354, 367, 368, 369, 269,
	258, 349, 259, 286, 260, 238, 262, 261, 263, 356,
	264, 240, 336, 373, 0, 282, 345, 309, 241, 308,
	337, 372, 371, 249, 397, 403, 404, 0, 0, 409,
	0, 0, 0, 417, 422, 423, 424, 426, 427, 428,
	429, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 402, 280, 234, 235, 441, 266, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 401, 0, 0, 0, 430, 440, 0, 0, 0,
	0, 0, 439, 334, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 383,
	395, 412, 415, 0, 0, 0, 0, 239, 414, 0,
	0, 0, 0, 0, 0, 480, 0, 386, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 410, 0, 0,
	318, 319, 320, 321, 283, 0, 256, 413, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 279, 285,
	425, 287, 255, 333, 281, 392, 294, 0, 418, 0,
	419, 0, 0, 0, 0, 325, 290, 291, 357, 295,
	303, 346, 391, 331, 351, 253, 382, 358, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	233, 0, 236, 0, 301, 0, 342, 278, 0, 0,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 0, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 330, 0,
	0, 229, 230, 231, 232, 0, 0, 0, 398, 399,
	400, 421, 384, 0, 438, 273, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 432, 0, 0, 0, 0, 0, 359,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 251, 185, 433,
	0, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 364, 380, 252, 355, 393, 257,
	362, 247, 329, 352, 0, 0, 244, 378, 361, 311,
	292, 293, 243, 0, 347, 271, 284, 268, 327, 0,
	377, 405, 267, 396, 0, 388, 246, 0, 387, 326,
	374, 379, 312, 306, 245, 376, 310, 305, 296, 275,
	420, 297, 298, 288, 338, 304, 339, 289, 316, 315,
	317, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 456, 0, 0, 390, 0, 0, 0, 0, 0,
	0, 363, 0, 0, 299, 0, 0, 0, 406, 0,
	350, 332, 0, 0, 0, 348, 302, 375, 340, 381,
	365, 389, 344, 341, 237, 366, 270, 313, 248, 250,
	265, 272, 274, 276, 277, 322, 323, 335, 354, 367,
	368, 369, 269, 258, 349, 259, 286, 260, 238, 262,
	261, 263, 356, 264, 240, 336, 373, 0, 282, 345,
	309, 241, 308, 337, 372, 371, 249, 397, 403, 404,
	0, 0, 409, 0, 0, 0, 417, 422, 423, 424,
	426, 427, 428, 429, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 402, 280, 234, 235, 441,
	266, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 401, 0, 0, 0, 430, 440,
	0, 0, 0, 0, 0, 439, 334, 0, 353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 383, 395, 412, 415, 0, 0, 0, 0,
	239, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	410, 0, 0, 318, 319, 320, 321, 283, 0, 256,
	413, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 279, 285, 425, 287, 255, 333, 281, 392, 294,
	0, 418, 0, 419, 0, 0, 0, 0, 325, 290,
	291, 357, 295, 303, 346, 391, 331, 351, 253, 382,
	358, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 233, 0, 236, 0, 301, 0, 342,
	278, 0, 0, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 0, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 0, 330, 0, 229, 230, 231, 232, 0, 0,
	0, 398, 399, 400, 421, 384, 0, 438, 446, 273,
	0, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 431, 0, 432, 0, 0,
	0, 0, 0, 359, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 0, 0, 0, 0, 0,
	0, 251, 185, 433, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 364, 380,
	252, 355, 393, 257, 362, 247, 329, 352, 0, 0,
	244, 378, 361, 311, 292, 293, 243, 0, 347, 271,
	284, 268, 327, 0, 377, 405, 267, 396, 0, 388,
	246, 0, 387, 326, 374, 379, 312, 306, 245, 376,
	310, 305, 296, 275, 420, 297, 298, 288, 338, 304,
	339, 289, 316, 315, 317, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 0, 0, 0, 363, 0, 0, 299, 0,
	0, 0, 406, 0, 350, 332, 0, 0, 0, 348,
	302, 375, 340, 381, 365, 389, 344, 341, 237, 366,
	270, 313, 248, 250, 265, 272, 274, 276, 277, 322,
	323, 335, 354, 367, 368, 369, 269, 258, 349, 259,
	286, 260, 238, 262, 261, 263, 356, 264, 240, 336,
	373, 0, 282, 345, 309, 241, 308, 337, 372, 371,
	249, 397, 403, 404, 0, 0, 409, 0, 0, 0,
	417, 422, 423, 424, 426, 427, 428, 429, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 402,
	280, 234, 235, 441, 266, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 401, 0,
	0, 0, 430, 440, 0, 0, 0, 0, 0, 439,
	334, 0, 353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 383, 395, 412, 415,
	0, 0, 0, 0, 239, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 410, 0, 0, 318, 319, 320,
	321, 283, 0, 256, 413, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 408, 279, 285, 425, 287, 255,
	333, 281, 392, 294, 0, 418, 0, 419, 0, 0,
	0, 0, 325, 290, 291, 357, 295, 303, 346, 391,
	331, 351, 253, 382, 358, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 233, 0, 236,
	0, 301, 0, 342, 278, 0, 0, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	0, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 330, 0, 0, 229, 230,
	231, 232, 0, 0, 0, 398, 399, 400, 421, 384,
	0, 438, 273, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 0,
	432, 0, 0, 0, 0, 0, 359, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 251, 185, 433, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 364, 380, 252, 355, 393, 257, 362, 247, 329,
	352, 0, 0, 244, 378, 361, 311, 292, 293, 243,
	0, 347, 271, 284, 268, 327, 0, 377, 405, 267,
	396, 0, 388, 246, 0, 387, 326, 374, 379, 312,
	306, 245, 376, 310, 305, 296, 275, 420, 297, 298,
	288, 338, 304, 339, 289, 316, 315, 317, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 0, 0, 0, 0, 0, 363, 0,
	0, 299, 0, 0, 0, 406, 0, 350, 332, 0,
	0, 0, 348, 302, 375, 340, 381, 365, 389, 344,
	341, 237, 366, 270, 313, 248, 250, 265, 272, 274,
	276, 277, 322, 323, 335, 354, 367, 368, 369, 269,
	258, 349, 259, 286, 260, 238, 262, 261, 263, 356,
	264, 240, 336, 373, 0, 282, 345, 309, 241, 308,
	337, 372, 371, 249, 397, 403, 404, 0, 0, 409,
	0, 0, 0, 417, 422, 423, 424, 426, 427, 428,
	429, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 402, 280, 234, 235, 441, 266, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 401, 0, 0, 0, 430, 440, 0, 0, 0,
	0, 0, 439, 334, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 383,
	395, 412, 415, 0, 0, 0, 0, 239, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 410, 0, 0,
	318, 319, 320, 321, 283, 0, 256, 413, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 279, 285,
	425, 287, 255, 333, 281, 392, 294, 0, 418, 0,
	419, 0, 0, 0, 0, 325, 290, 291, 357, 295,
	303, 346, 391, 331, 351, 253, 382, 358, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	233, 0, 236, 0, 301, 0, 342, 278, 0, 0,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 0, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 330, 0,
	0, 229, 230, 231, 232, 0, 0, 0, 398, 399,
	400, 421, 384, 0, 438, 273, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 432, 0, 0, 0, 0, 0, 359,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 251, 185, 433,
	0, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 364, 1190, 252, 355, 393, 257,
	362, 247, 329, 352, 0, 0, 244, 378, 361, 311,
	292, 293, 243, 0, 347, 271, 284, 268, 327, 0,
	377, 405, 267, 396, 0, 388, 246, 0, 387, 326,
	374, 379, 312, 306, 245, 376, 310, 305, 296, 275,
	420, 297, 298, 288, 338, 304, 339, 289, 316, 315,
	317, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 0, 0,
	0, 363, 0, 0, 299, 0, 0, 0, 406, 0,
	350, 332, 0, 0, 0, 348, 302, 375, 340, 381,
	365, 389, 344, 341, 237, 366, 270, 313, 248, 250,
	265, 272, 274, 276, 277, 322, 323, 335, 354, 367,
	368, 369, 269, 258, 349, 259, 286, 260, 238, 262,
	261, 263, 356, 264, 240, 336, 373, 0, 282, 345,
	309, 241, 308, 337, 372, 371, 249, 397, 403, 404,
	0, 0, 409, 0, 0, 0, 417, 422, 423, 424,
	426, 427, 428, 429, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 402, 280, 234, 235, 441,
	266, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 401, 0, 0, 0, 430, 440,
	0, 0, 0, 0, 0, 439, 334, 0, 353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 383, 395, 412, 415, 0, 0, 0, 0,
	239, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	410, 0, 0, 318, 319, 320, 321, 283, 0, 256,
	413, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 279, 285, 425, 287, 255, 333, 281, 392, 294,
	0, 418, 0, 419, 0, 0, 0, 0, 325, 290,
	291, 357, 295, 303, 346, 391, 331, 351, 253, 382,
	358, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 233, 0, 236, 0, 301, 0, 342,
	278, 0, 0, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 0, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 330, 0, 0, 229, 230, 231, 232, 0, 0,
	0, 398, 399, 400, 421, 384, 0, 438, 273, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 431, 0, 432, 0, 0, 0,
	0, 0, 359, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	251, 185, 433, 0, 434, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 364, 1188, 252,
	355, 393, 257, 362, 247, 329, 352, 0, 0, 244,
	378, 361, 311, 292, 293, 243, 0, 347, 271, 284,
	268, 327, 0, 377, 405, 267, 396, 0, 388, 246,
	0, 387, 326, 374, 379, 312, 306, 245, 376, 310,
	305, 296, 275, 420, 297, 298, 288, 338, 304, 339,
	289, 316, 315, 317, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 0,
	0, 0, 0, 0, 363, 0, 0, 299, 0, 0,
	0, 406, 0, 350, 332, 0, 0, 0, 348, 302,
	375, 340, 381, 365, 389, 344, 341, 237, 366, 270,
	313, 248, 250, 265, 272, 274, 276, 277, 322, 323,
	335, 354, 367, 368, 369, 269, 258, 349, 259, 286,
	260, 238, 262, 261, 263, 356, 264, 240, 336, 373,
	0, 282, 345, 309, 241, 308, 337, 372, 371, 249,
	397, 403, 404, 0, 0, 409, 0, 0, 0, 417,
	422, 423, 424, 426, 427, 428, 429, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 402, 280,
	234, 235, 441, 266, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 401, 0, 0,
	0, 430, 440, 0, 0, 0, 0, 0, 439, 334,
	0, 353, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 383, 395, 412, 415, 0,
	0, 0, 0, 239, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 410, 0, 0, 318, 319, 320, 321,
	283, 0, 256, 413, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 279, 285, 425, 287, 255, 333,
	281, 392, 294, 0, 418, 0, 419, 0, 0, 0,
	0, 325, 290, 291, 357, 295, 303, 346, 391, 331,
	351, 253, 382, 358, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 233, 0, 236, 0,
	301, 0, 342, 278, 0, 0, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 0,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 330, 0, 0, 229, 230, 231,
	232, 0, 0, 0, 398, 399, 400, 421, 384, 0,
	438, 273, 0, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 431, 0, 432,
	0, 0, 0, 0, 0, 359, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 0, 0, 251, 185, 433, 0, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	364, 380, 252, 355, 393, 257, 362, 247, 329, 352,
	0, 0, 244, 378, 361, 311, 292, 293, 243, 0,
	347, 271, 284, 268, 327, 0, 377, 405, 267, 396,
	0, 388, 246, 0, 387, 326, 374, 379, 312, 306,
	245, 376, 310, 305, 296, 275, 420, 297, 298, 288,
	338, 304, 339, 289, 316, 315, 317, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 0, 0, 0, 363, 0, 0,
	299, 0, 0, 0, 406, 0, 350, 332, 0, 0,
	0, 348, 302, 375, 340, 381, 365, 389, 344, 341,
	237, 366, 270, 313, 248, 250, 520, 272, 274, 276,
	277, 322, 323, 335, 354, 367, 368, 369, 269, 258,
	349, 259, 286, 260, 238, 262, 261, 263, 356, 264,
	240, 336, 373, 0, 282, 345, 309, 241, 308, 337,
	372, 371, 249, 397, 403, 404, 0, 0, 409, 0,
	0, 0, 417, 422, 423, 424, 426, 427, 428, 429,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 402, 280, 234, 235, 441, 266, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	401, 0, 0, 0, 430, 440, 0, 0, 0, 0,
	0, 439, 334, 0, 353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 383, 395,
	412, 415, 0, 0, 0, 0, 239, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 410, 0, 0, 318,
	319, 320, 321, 283, 0, 256, 413, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 279, 285, 425,
	287, 255, 333, 281, 392, 294, 859, 418, 0, 419,
	0, 0, 0, 0, 325, 290, 291, 357, 295, 303,
	346, 391, 331, 351, 253, 382, 358, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 1619, 233,
	0, 236, 0, 301, 0, 342, 278, 0, 0, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 1621, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 0, 0, 0,
	229, 230, 231, 232, 0, 0, 845, 398, 399, 400,
	421, 384, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3262, 0, 0, 867, 871, 873, 875,
	877, 878, 880, 1596, 885, 881, 882, 883, 884, 0,
	862, 863, 864, 865, 843, 844, 868, 0, 846, 0,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 858,
	860, 856, 857, 866, 0, 0, 0, 0, 0, 0,
	0, 870, 872, 874, 876, 879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 499, 498, 505, 495,
	0, 0, 0, 0, 0, 0, 1619, 0, 502, 503,
	1612, 504, 508, 0, 0, 490, 0, 0, 861, 0,
	0, 0, 0, 0, 0, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1621, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 517, 0,
	0, 519, 0, 0, 0, 0, 518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1600,
	0, 1596, 1621, 0, 0, 0, 0, 0, 0, 0,
	1606, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1594, 1628, 0, 0, 1595, 1597, 1599, 0, 1601, 1602,
	1603, 1607, 1608, 1609, 1611, 1614, 1615, 1616, 0, 0,
	0, 0, 0, 1596, 0, 1604, 1613, 1605, 0, 0,
	0, 2176, 2177, 0, 3007, 0, 0, 0, 1612, 499,
	498, 505, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 502, 503, 0, 504, 508, 0, 0, 490, 1620,
	0, 0, 0, 0, 0, 0, 0, 0, 513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1612, 491, 493, 492, 0, 0, 0, 0, 1617, 0,
	0, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 517, 0, 501, 519, 1593, 0, 1600, 0, 518,
	516, 0, 1592, 0, 0, 0, 0, 494, 1606, 0,
	0, 485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1610, 0, 1594, 1628,
	0, 0, 1595, 1597, 1599, 1598, 1601, 1602, 1603, 1607,
	1608, 1609, 1611, 1614, 1615, 1616, 869, 0, 0, 1600,
	0, 0, 0, 1604, 1613, 1605, 0, 0, 0, 0,
	1606, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1594, 1628, 0, 0, 1595, 1597, 1599, 1620, 1601, 1602,
	1603, 1607, 1608, 1609, 1611, 1614, 1615, 1616, 0, 0,
	0, 0, 0, 0, 0, 1604, 1613, 1605, 0, 0,
	0, 496, 500, 506, 0, 507, 509, 0, 0, 510,
	511, 512, 0, 0, 514, 515, 1617, 0, 0, 0,
	0, 0, 0, 0, 491, 493, 492, 0, 0, 1620,
	0, 0, 0, 1593, 497, 0, 0, 0, 0, 0,
	1592, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 0, 0, 516, 0, 0, 0, 0, 0, 0,
	494, 0, 0, 0, 1610, 0, 0, 0, 1617, 0,
	0, 0, 0, 1598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1593, 0, 0, 0, 0,
	0, 0, 1592, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1610, 0, 0, 0,
	0, 0, 0, 0, 0, 1598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 496, 500, 506, 0, 507, 509,
	0, 0, 510, 511, 512, 0, 0, 514, 515,
}

var yyPact = [...]int{
	3236, -1000, -1000, -1000, -319, 10463, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34463, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34463, -316,
	33920, 33920, -1000, -1000, 2123, -1000, 33376, 11584, 34463, 275,
	258, 34463, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 560, -1000,
	32833, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 482, 36734,
	36092, 8213, -269, -1000, 2850, -114, 770, 783, 852, 852,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4515,
	715, 32290, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3164, 376, 715, 13763, 2, 1, 2850, 326,
	264, -1000, 996, 4389, 153, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 8213, 8213, 10463, -325,
	10463, 8213, 34463, 34463, -1000, -1000, -1000, -1000, 482, 36734,
	8213, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 14802, -1000, 1260, -1000, -1000,
	-1000, -1000, 2413, 1259, 1968, 452, 34463, -1000, 1256, 452,
	-1000, -1000, -1000, 2850, 2850, -1000, 34463, 34463, 64, 1411,
	-1000, 358, 353, 335, 1254, -1000, -1000, -1000, -1000, -1000,
	-1000, 380, 2789, -1000, 34463, 34463, 2442, 34463, -1000, 1745,
	417, 36897, 2625, 1099, 649, 2466, -1000, -1000, 2408, -1000,
	173, 198, 176, 684, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 197, -1000, 2711, -1000, -1000, 163, -1000, -1000, 158,
	-1000, -1000, -1000, 0, -1000, -1000, -1000, -1000, -1000, -1000,
	-97, -1000, -1000, 798, 1862, 8213, -1000, 1785, -1000, 3298,
	-1000, -1000, -1000, -1000, 5406, 9893, 9893, 9893, 9893, -1000,
	-1000, 2255, 8213, 2402, 2398, -1000, -1000, -1000, -1000, -1000,
	1252, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1553, -1000, -1000, -1000, 9333, -1000, 2397, 2389, 2388, 2387,
	2383, 2367, 2361, 2360, 2358, 2357, 2356, 2355, 2354, 2353,
	2145, 11014, 2352, 1967, 1955, 2351, 2345, 2341, 1954, 2145,
	2145, 2337, 2332, 2311, 2308, 2303, 2302, 2300, 2299, 2298,
	2295, 2292, 2290, 2284, 2282, 2277, 2276, 2275, 2274, 2273,
	2272, 2271, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1176, -1000, 2269, 2613, 2729,
	2211, 2769, 2696, 2686, 2679, 2677, 1707, -1000, -1000, -1000,
	-146, -1000, -1000, 745, -1000, 711, -1000, 34463, 34463, 34463,
	905, 478, 478, 478, 478, 478, 478, 523, 478, -174,
	557, 553, 533, 478, -1000, -1000, -1000, -1000, -1000, -1000,
	-133, -1000, 1410, 1409, 2520, 678, -1000, -1000, -1000, -1000,
	1050, 34463, -1000, 2202, 1312, 1312, 2726, 431, 429, 423,
	1312, 302, -1000, 1445, 1445, 1445, 1445, 1312, 382, 414,
	2729, 2729, -17, 1445, -33, 1312, 1312, -33, 1312, 1312,
	1312, 165, -312, -1000, -1000, -1000, 1445, 1445, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2706, 2703, 482, 34463, 103,
	34463, 482, 482, 482, 501, -45, 35549, 35006, 1745, 408,
	405, 1068, 1428, -1000, 1338, 34463, 34463, 1338, 1338, 18158,
	17615, -1000, 34463, -1000, 2729, 2211, -1000, 2114, 2256, 2113,
	2211, 482, 482, 482, 482, 482, 138, 482, 482, 482,
	34463, 34463, 31747, 482, 482, 7086, 7086, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 10463, 1739, 1828, 150,
	-78, -320, 186, -1000, -1000, 34463, 2595, 129, -1000, -1000,
	-1000, 2150, -1000, 2199, 2199, 2199, 2199, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2199, 2199, 2238, 2267,
	-1000, -1000, 2194, 2194, 2194, 2150, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2217, 2217, 2223, 2223, 2217, 34463, 8213, 34463, 2616,
	300, 2265, -1000, 34463, 298, 2729, 2613, 2729, -1000, -1000,
	1233, 1706, 1949, -1000, -1000, 358, 1315, -1000, 873, -1000,
	-1000, -1000, -1000, 34463, -97, 321, -1000, -1000, 1940, 2264,
	-1000, 464, 1085, 1205, -1000, 139, 2956, 27396, 1745, 27396,
	34463, -1000, -1000, -1000, -1000, -1000, -1000, -5, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 168, -1000, 8213, 8213, 8213, 8213, 8213, -1000, 498,
	8773, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9893, 9893,
	9893, 9893, 9893, 9893, 9893, 9893, 9893, 9893, 9893, 9893,
	2254, 1406, 9893, 9893, 9893, 9893, 2256, 2586, 1061, 221,
	-1000, -1000, -1000, -1000, -1000, 1455, 1862, 8213, 8213, 34463,
	-1000, -1000, 3189, 8213, 8213, 3065, 8213, 2674, 8213, 8213,
	8213, 2112, 3766, 34463, 8213, -1000, 2109, 2107, -1000, -1000,
	1584, 8213, -1000, -1000, 8213, -1000, -1000, 8213, 9893, 8213,
	-1000, -1000, -1000, 2991, 2674, 2674, 1485, 8213, 8213, 2674,
	2674, 2674, 1454, 2674, 2674, 2674, 2674, 2674, 2674, 2674,
	2674, 2106, 2103, 2100, 2729, -269, 6526, -1000, -274, 2613,
	8213, -1000, -1000, 8213, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1947, -50, 760, 733, 732, -1000, 2659, -1000,
	2263, 2260, 1229, 478, -1000, -134, 34463, 1466, 34463, 27396,
	34463, 34463, 1745, 34463, 34463, 478, -173, 478, 478, 478,
	34463, -1000, 2588, 27396, 2525, 501, -1000, 34463, 1050, 2658,
	34463, 2776, 9893, 9893, -1000, 31204, 1445, 1312, 1312, -1000,
	-1000, 34463, -1000, -1000, -1000, 1445, 34463, 1445, 1445, 2776,
	1445, -1000, -1000, -1000, 1312, 1312, -1000, -1000, -1000, -1000,
	1445, 1445, -1000, -1000, 2776, 34463, -21, 2776, 2776, -20,
	-1000, -1000, -1000, 34463, 34463, 478, 34463, -1000, 34463, 34463,
	-1000, -1000, 34463, 4418, 34463, 30661, 2701, -1000, 27396, 34463,
	34463, 25224, -1000, 1001, -1000, -83, -1000, -65, -45, 1338,
	-45, 1338, -1000, 463, 558, 16529, 401, 27396, 4846, -1000,
	-1000, 1338, 1338, 4846, 4846, 1244, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1031, -1000, 167, 2613, -1000, -1000, -1000,
	-1000, -1000, 34463, 34463, 27396, 1745, 34463, 482, 34463, 34463,
	34463, -1000, 2259, -1000, 2623, 34463, 34463, 1172, -1000, -1000,
	13220, 1225, 1172, -1000, 1463, -1000, 8213, 10463, -293, 8213,
	10463, 10463, 8213, 10463, -1000, 8213, 126, -1000, -1000, -1000,
	-1000, 1699, -1000, 1684, -1000, -1000, -1000, -1000, -1000, 1941,
	1941, -1000, 1683, -1000, -1000, -1000, -1000, 1681, -1000, -1000,
	1678, -1000, -1000, -1000, 2098, 798, -1000, 1935, 2460, -270,
	-1000, 15426, 34463, 34463, -1000, -1000, -270, -1000, 14866, 34463,
	2613, -1000, 2613, 34463, -1000, 2724, -1000, 358, 254, -1000,
	-1000, -1000, -1000, -1000, -1000, 1219, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1018, -1000, 34463, -1000, -1000,
	139, 27396, 28482, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	177, -1000, -1000, 161, -1000, 525, 102, 1314, -1000, -1000,
	108, 166, 586, 1862, -1000, 1475, 1475, 1478, -1000, 528,
	-1000, -1000, -1000, -1000, 2255, -1000, -1000, -1000, 1737, 2028,
	-1000, 1506, 1506, 1210, 1210, 1210, 1210, 1210, 1461, 1461,
	-1000, -1000, -1000, 5406, 2254, 9893, 9893, 9893, 9893, 461,
	461, 3507, 3334, -1000, 8213, 1431, -1000, 8213, 2036, 1385,
	1216, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2096, 2095, 1794, 2786, 2094, 8213, -1000, -1000, 1308,
	1298, 1295, -1000, 1905, 7653, -1000, -1000, -1000, 2080, 1215,
	2072, -1000, -1000, -1000, 2071, 1294, 872, 2069, 2463, 2068,
	1008, 8213, 8213, 8213, 2066, 1291, 1289, 8213, 8213, 8213,
	8213, 2058, 8213, 8213, 8213, 8213, 8213, 8213, 8213, 8213,
	21, 21, 21, -1000, -1000, 1284, -1000, 1862, -1000, 1933,
	-1000, 1124, 1006, -1000, 1833, -1000, -1000, -1000, -1000, 739,
	707, 725, 34463, 975, 12127, 34463, 34463, -1000, 2202, 2622,
	120, -1000, 938, -1000, 102, -125, 280, 813, 2440, 2785,
	34463, 478, 34463, 34463, 34463, 2652, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 30118, -1000, 2252, 1249, -1000, -1000,
	8213, -1000, -1000, 2434, 34463, 34463, 2776, 2776, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 34463, 2776, 2776, 1312, 1445,
	-1000, -1000, 1445, -1000, -1000, 1445, -1000, 1214, -1000, 34463,
	-1000, -1000, -1000, 2202, 1004, -1000, 839, 473, 473, 731,
	539, 2766, 14306, -1000, 1325, 883, 524, 2576, 169, -1000,
	1325, -221, 1325, 1325, 1325, 1325, 1325, 1325, 1325, 372,
	371, 1325, 1325, 1325, 1325, 1325, 1325, 1325, 1325, 1325,
	1325, 1325, 776, 1325, 1325, 1325, 1325, 1325, -1000, 1325,
	2249, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 386, 119,
	2700, 206, 204, 938, 2691, 218, 2692, 949, -1000, -1000,
	-1000, -1000, 20337, 20337, 15986, 20337, -1000, 1323, -45, -56,
	-1000, -1000, 1001, 4846, 1001, 4846, -1000, -1000, 522, -1000,
	-1000, 813, -1000, 34463, 34463, -1000, -1000, 2244, 1407, -1000,
	-1000, 11014, -1000, 4846, 4846, -1000, -1000, 20880, 34463, -1000,
	-113, -1000, -87, 2721, 944, -1000, -1000, 999, 813, 2459,
	34463, 944, -1000, -1000, 12127, 34463, -1000, -1000, 2776, 7086,
	-1000, 25224, -1000, -1000, 29568, -1000, 29025, 2776, 1436, -1000,
	10463, 1690, 146, -1000, 174, -323, 144, 1512, 142, 1862,
	-1000, -1000, 2050, 2048, 1241, -1000, 1240, 2046, 1234, 1221,
	-1000, -38, -1000, 2587, 827, -1000, 2242, -1000, 1207, 2516,
	-1000, 939, -1000, 1405, 1206, -1000, 827, 1203, 2512, 939,
	2721, -1000, 1211, 63, -1000, -1000, 34463, 1940, 1200, 28482,
	855, -1000, 515, 1154, 1127, -1000, 27396, 154, 27396, -1000,
	27396, -1000, -1000, 303, -1000, 34463, 2599, -1000, -1000, -1000,
	1865, -339, -1000, -1000, -1000, -1000, -1000, 1199, -1000, 461,
	461, 3507, 3313, -1000, 9893, -1000, 9893, 2554, 1429, -1000,
	8213, 1560, 36516, 1430, 19244, 34463, -1000, -1000, 8213, 8213,
	-1000, 2539, -1000, -1000, -1000, -1000, 8213, 8213, 1778, -1000,
	34463, -1000, -1000, -1000, -1000, 19244, -1000, 9893, -1000, 8213,
	1030, 2505, 1192, 21, 21, 21, 2481, 2450, 2443, 1191,
	21, 2432, 2419, 2399, 2395, 2365, 2346, 2342, 2335, -1000,
	2241, -1000, -1000, 6526, -1000, -38, 8213, 8213, 8213, 2550,
	-1000, -1000, -1000, -1000, -1000, 696, 145, 2039, 916, -1000,
	-1000, 34463, -1000, -1000, -1000, 2035, 906, -1000, -1000, -1000,
	4190, 2199, 2199, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2199, 2199, 2238, -1000, -1000, 2194, 2194, 2194,
	2150, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2217, 2217, 2223, 2223, 2217, -1000, 2202, 2650, -1000, 24,
	1325, 513, 27396, 392, -1000, 34463, 1519, 1391, 2458, 329,
	2592, 34463, 236, 34463, 2216, 2215, 2213, 270, 4190, 34463,
	971, -1000, 1126, 4389, -1000, 34463, 1862, -1000, 1745, -1000,
	1312, -1000, -1000, 2776, 1231, -1000, -1000, 2776, 1312, 1312,
	1445, 34463, -1000, 2649, 4418, -1000, 34463, -1000, -1000, -1000,
	607, -1000, 663, 478, 34463, 1517, 663, 1508, 2212, -1000,
	-1000, 34463, 34463, 34463, 34463, -1000, -1000, 34463, -1000, 34463,
	34463, 34463, 34463, -1000, 34463, 34463, -1000, 34463, 1490, 1487,
	2641, -1000, 1325, 1325, 618, -1000, -1000, 480, -1000, 1677,
	1676, 1672, 1667, 1930, 1924, 1921, 1325, 1325, 1665, 1918,
	27939, 1912, 876, 1655, 1642, 1634, 1643, 1910, 669, -1000,
	1907, 1616, 1614, 1602, 34463, 2206, 1835, -1000, -1000, 24,
	1325, 202, 34463, 1389, 513, 277, 1717, 17072, 34463, 25224,
	25224, 25224, 25224, -1000, 2500, 2489, -1000, 2499, 2498, 2479,
	34463, 25224, 2202, -1000, 27939, -1000, -1000, -1000, 2256, 1190,
	2781, 775, 8213, -1000, -1000, -69, -84, -1000, -1000, -1000,
	27396, 1902, 401, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2800, 34463, 34463, 585, 2033, -1000, 2774, -1000, 894,
	-1000, -1000, 1118, -1000, 2774, 1459, -321, 10463, 1383, 1317,
	-1000, 8213, 10463, 8213, -295, 178, -297, -1000, -1000, -1000,
	1894, -1000, -1000, -1000, 1629, -1000, 1627, 38, 51, 1486,
	-270, 6526, 304, 34463, -270, 34463, 6526, -1000, 34463, 299,
	-270, -1000, 34463, 1625, -1000, -1000, -1000, 2782, 27396, 1745,
	1277, 26853, -1000, 155, -1000, 172, 442, 1881, -1000, 517,
	101, -1000, 1387, 1865, -1000, -1000, -1000, 9893, -1000, -1000,
	-1000, -1000, 1862, 8213, 2030, -1000, 697, 697, 2029, -1000,
	2199, 2199, -1000, 2150, 2194, 2150, 697, 697, 2024, -1000,
	1892, 2218, -1000, 2207, 2203, 8213, -1000, 2023, 3221, 1148,
	-142, 21, 21, -1000, -1000, -1000, -1000, 21, 21, 21,
	21, -1000, 21, 21, 21, 21, 21, 21, 21, 21,
	453, -1000, 38, 1862, 1862, -1000, -1000, 2584, -1000, 1879,
	1877, 975, 4190, 568, 12127, 2593, 2638, 306, 1722, -1000,
	-1000, -1000, 26310, 436, -1000, -1000, -1000, 507, 212, 1621,
	413, -1000, 34463, 218, 2533, 1386, 1876, 34463, -1000, -1000,
	-1000, -1000, -1000, 2592, -1000, 856, 244, 12670, 2636, 2190,
	2189, 12670, 12670, 12670, 250, 1394, -1000, 452, 911, 1112,
	25224, 34463, -1000, 24681, 2021, -1000, 813, 2776, -1000, 34463,
	-1000, 2776, 2776, 1312, -1000, 306, -1000, 2566, 4190, -1000,
	34463, -1000, 34463, -1000, 34463, 34463, 478, 8213, 2566, 34463,
	506, -1000, -1000, 802, 233, 521, 521, 884, -1000, 2607,
	-1000, -1000, -1000, 34463, -1000, -1000, -1000, -1000, -1000, -1000,
	19244, 19244, 2689, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1874, 1873, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 34463, 1185, -1000, 1370,
	1722, 26310, 1367, 1338, 1870, 436, 1519, 1365, -1000, 1869,
	-1000, 828, 34463, 34463, -1000, 963, -1000, 1361, 2444, 2457,
	2444, -1000, -1000, -1000, -1000, 2478, -1000, 1888, -1000, -1000,
	963, -1000, -1000, -1000, -1000, -1000, 775, -1000, 2720, 663,
	663, 663, 2017, -1000, -1000, -1000, 855, 2010, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2772, 2764, 25767,
	2772, -1000, -321, 1363, -1000, 1550, 140, 1433, 34463, -1000,
	-1000, -1000, 2005, 2002, -276, 42, 2763, 2762, 2796, -1000,
	1998, 850, -270, -1000, -1000, 827, -1000, -1000, -1000, -270,
	-1000, 827, -1000, -1000, 1745, -1000, 160, -1000, -1000, -1000,
	-1000, -1000, -1000, 78, -1000, 34463, -1000, 1865, 1864, 95,
	-1000, 1862, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 8213, -1000, -1000,
	-1000, 2168, -1000, -1000, 8213, 1997, 1846, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2804, -1000, 2761, -276, -1000, -1000, -1000, -1000, -1000,
	-1000, 4190, -1000, 1797, 306, -190, -1000, 1843, 99, -1000,
	-1000, -1000, 1840, 1838, 1618, -1000, -1000, 1601, 1125, 111,
	-1000, -1000, -1000, -1000, -1000, -1000, 1717, 1713, 1358, -340,
	-1000, 2188, -1000, 1325, 1325, 1325, 34463, 1990, 835, -1000,
	-1000, -1000, -1000, 306, 34463, 12670, 1989, 1986, 1985, 450,
	1382, 1379, -1000, 1617, 20337, 25224, 24681, 955, -1000, 1111,
	-1000, -1000, -1000, 2776, -1000, -1000, 2776, -1000, -1000, -1000,
	34463, 249, 2185, -1000, 2175, 2423, 286, 2174, 2173, 34463,
	2049, -1000, 2566, 34463, 529, 2582, -1000, -1000, -1000, -1000,
	-1000, 332, -1000, 34463, -1000, -1000, 1238, -1000, 19244, -1000,
	-1000, 1184, -1000, 1835, 1832, -1000, 99, 1831, 4846, -1000,
	-1000, 2533, 1829, -1000, 34463, 828, 828, 2804, 34463, 6526,
	-1000, -1000, 8213, 2171, -1000, 8213, -1000, -1000, -1000, -1000,
	-1000, 2170, 2564, -1000, -1000, -1000, -1000, -1000, -1000, 8213,
	8213, -1000, -1000, 477, 10463, -298, 175, -1000, -1000, -1000,
	-278, 1814, -1000, -1000, 2760, 1807, 1731, 34463, -1000, 827,
	827, 813, -1000, -1000, -20, -1000, -1000, -1000, 2014, -1000,
	1936, 21, -1000, 149, 8213, -278, -184, -1000, -1000, -190,
	-1000, 310, -1000, -1000, 288, -1000, -1000, 214, -1000, -1000,
	1598, 472, -1000, -1000, -1000, 1805, 1526, 1744, 23595, 19244,
	19787, 1784, -1000, -198, 12670, -1000, 1160, -1000, 1325, 1978,
	36802, 168, 36802, 786, 1360, -1000, 1613, -1000, 1612, -1000,
	2776, 955, 1111, -1000, -1000, 1274, -1000, -1000, -1000, -1000,
	249, -1000, -1000, 1533, 9893, -1000, -1000, 1758, 19787, 612,
	1352, 1351, 646, 2167, -1000, 340, 2795, -1000, -1000, -1000,
	617, 2165, -1000, 1484, 1483, -1000, 34463, -1000, 23595, 23595,
	397, 397, 23595, 23595, 2164, 521, -1000, -1000, 9893, -1000,
	-1000, -1000, -1000, 1325, 1180, -1000, -1000, -1000, -1000, -1000,
	-1000, 1713, -1000, -1000, 2729, -1000, -1000, 1862, 34463, 1862,
	24138, -1000, 2757, 2756, 1862, 798, -1000, -321, 34463, 34463,
	-285, 1608, -1000, 1757, 53, -1000, -1000, 810, -287, 29,
	37, -1000, -1000, -1000, 1974, -1000, 1043, -1000, -1000, -1000,
	798, -285, 34463, -1000, 336, -1000, -1000, 441, 1755, -1000,
	-1000, 213, -1000, -1000, -1000, -1000, -1000, 94, -1000, 1331,
	1121, -1000, 2150, 8213, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 34463, 1797, -198, 448, 36750, -1000, 883, -1000,
	-20, 448, 420, 211, -1000, 1607, -1000, -1000, 2804, -1000,
	-1000, -1000, 3507, -1000, -1000, -1000, -1000, -1000, -1000, 1754,
	1752, -1000, -1000, -1000, -1000, -1000, 1605, 2149, -88, 2671,
	1751, -1000, -1000, 2148, 1101, 1096, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1092, 1086, 23595, -1000, -1000, 3507, 19244,
	1325, -1000, -1000, 1084, 1066, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2147, -1000, -1000, 2755, -1000, 1748, 481, 45,
	37, -1000, 2754, 52, 2752, 2751, -1000, -1000, 552, -272,
	17, 16, 7, -1000, -1000, -1000, 8213, -1000, 2635, -1000,
	151, -1000, 76, -1000, -1000, -1000, 1744, 1738, -1000, 23595,
	2607, 1922, -1000, -1000, -1000, 293, 2747, 36802, -1000, 1325,
	-1000, 293, -1000, 252, -1000, 1359, -1000, 1603, -1000, 2729,
	-1000, -1000, 1927, 8213, 2145, 1325, 1867, -179, 23595, 2417,
	2401, 2344, 2258, 1054, -1000, 19244, -1000, -1000, 23052, 34463,
	1731, -1000, 2144, 1588, 42, 40, 2744, -1000, 1731, 2736,
	1731, 1731, 1464, -1000, 14, 11, 9, -1000, -1000, -1000,
	-1000, 1735, -1000, -1000, -1000, -1000, 215, -1000, -1000, 2607,
	-1000, 2732, 309, -1000, 19244, -1000, -1000, -1000, 1577, -1000,
	-1000, -1000, 1868, -1000, 34463, -1000, 2455, -1000, 141, 1053,
	215, 397, 215, 397, 215, 397, 215, 397, 148, -1000,
	-1000, -1000, 1040, -1000, -1000, 2669, 18701, 27, -1000, -1000,
	-1000, 1732, -1000, 1731, -1000, -1000, 552, -1000, -1000, -1000,
	-1000, -1000, 1325, 1730, 227, -1000, -1000, -1000, 22509, 314,
	356, 325, -1000, 449, -1000, -1000, -1000, 521, -1000, -1000,
	2453, 2433, 2780, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 34463, -1000, 34463, -1000, 1005, -1000, -1000,
	-1000, 1075, -1000, -1000, -1000, -1000, -1000, 1567, -1000, 34463,
	-1000, 34463, 301, 1566, 9893, 2143, 9893, 2140, 322, 2131,
	-1000, -1000, 2794, -1000, 2791, 672, 672, 215, 215, 215,
	215, -1000, 793, -1000, 1301, -1000, 21966, 34463, -1000, -1000,
	991, 2129, 2731, -1000, 2876, 34463, 2784, 34463, 2126, 1297,
	9893, -1000, -1000, -1000, 1592, 345, -1000, 34463, 5966, -1000,
	877, -1000, -1000, 447, 316, -1000, 990, -1000, 984, 21423,
	1541, 1422, -1000, -1000, -1000, -1000, -1000, 1862, 34463, 961,
	-1000, 34463, 289, -1000, -1000, -1000, 952, -1000, -1000, -1000,
	-1000, 447, 2509, -1000, 1539, -1000, -1000, 36602, 571, -1000,
	-1000, 36602, 296, -1000, 440, 2122, -1000, -1000, 941, -1000,
	34463, 616, 8213, -1000, 296, 36802, -1000, 8213, 935, -1000,
	36802, 930, -1000, -1000,
}

var yyPgo = [...]int{
	0, 165, 2818, 237, 157, 3401, 73, 236, 218, 207,
	235, 3400, 3395, 2623, 2619, 3392, 3390, 3389, 3388, 3386,
	3385, 3384, 3382, 3381, 3380, 3379, 3378, 3377, 3375, 3374,
	3373, 3372, 3371, 3369, 3368, 3354, 3351, 3350, 3343, 3342,
	234, 3340, 3339, 3338, 3334, 3330, 3329, 3326, 3321, 3318,
	3316, 3315, 3314, 3313, 3312, 3310, 3309, 3308, 3307, 3306,
	3305, 3304, 3302, 3301, 3295, 3294, 3292, 3291, 3290, 3289,
	3287, 3285, 204, 3284, 2583, 3281, 3276, 3275, 3272, 3270,
	3268, 3263, 210, 3262, 3258, 3256, 3255, 3254, 3253, 3247,
	3246, 3245, 3244, 3241, 222, 3240, 3237, 3236, 3235, 3233,
	3232, 202, 3231, 151, 189, 3227, 3226, 3225, 3224, 3222,
	230, 250, 65, 3221, 43, 3220, 213, 3218, 127, 3217,
	134, 3215, 3213, 3209, 3207, 3204, 3203, 3201, 3200, 3199,
	3196, 3195, 3194, 3192, 3191, 3188, 3186, 86, 3182, 247,
	3181, 68, 3179, 3177, 118, 162, 185, 238, 2492, 244,
	241, 168, 160, 83, 3171, 2594, 3169, 167, 217, 136,
	22, 3168, 153, 3167, 130, 42, 47, 231, 125, 55,
	146, 117, 3165, 203, 97, 98, 3162, 3157, 166, 240,
	170, 3156, 112, 3153, 3152, 3151, 3150, 178, 171, 3149,
	3147, 119, 3146, 3145, 94, 3144, 66, 193, 148, 182,
	3142, 268, 104, 105, 109, 3141, 3140, 88, 3139, 3137,
	3135, 3133, 161, 3132, 3131, 121, 67, 3130, 3128, 3127,
	60, 3126, 46, 3125, 38, 3124, 63, 3122, 3118, 3116,
	3112, 3111, 3110, 3109, 3108, 3106, 3105, 3104, 69, 3102,
	3101, 15, 16, 18, 3100, 24, 3099, 145, 3098, 3097,
	3096, 79, 81, 3095, 78, 2, 50, 3094, 216, 128,
	93, 133, 3093, 425, 3091, 3090, 3088, 137, 3087, 375,
	3086, 3084, 3083, 3082, 3081, 114, 3080, 208, 45, 3079,
	85, 122, 3078, 36, 41, 195, 172, 3077, 3070, 3068,
	138, 209, 80, 28, 0, 3066, 140, 3059, 3054, 3053,
	251, 3052, 221, 200, 144, 115, 258, 159, 3050, 3048,
	64, 3047, 142, 44, 54, 123, 12, 19, 212, 3045,
	383, 163, 3044, 199, 3041, 176, 1, 126, 3038, 3037,
	26, 278, 3035, 3031, 3030, 110, 3028, 3026, 103, 75,
	3025, 3024, 3009, 3008, 33, 3007, 34, 25, 3006, 89,
	3004, 232, 3002, 191, 139, 164, 155, 135, 214, 223,
	70, 72, 3001, 1572, 131, 91, 17, 2999, 215, 2996,
	147, 116, 2995, 108, 2994, 227, 363, 197, 2993, 169,
	8, 40, 30, 2992, 9, 2991, 188, 206, 2990, 2989,
	21, 53, 2986, 29, 2985, 2982, 2977, 2976, 5, 2975,
	2974, 2973, 4, 7, 2972, 3, 211, 2967, 2965, 2964,
	2963, 48, 233, 2962, 190, 173, 150, 2961, 90, 2960,
	2959, 2957, 1657, 2953, 239, 2949, 2948, 2947, 2945, 2939,
	2937, 2936, 2935, 2934, 92, 37, 2933, 2932, 2916, 2915,
	74, 129, 2912, 2909, 2908, 2906, 32, 154, 2905, 20,
	2904, 31, 27, 35, 2903, 120, 2902, 13, 177, 2901,
	2897, 14, 2896, 2895, 10, 11, 2894, 2892, 106, 2888,
	84, 23, 141, 96, 2886, 2883, 76, 198, 124, 2882,
	2881, 229, 226, 196, 2880, 82, 225, 243, 2879, 205,
	2877, 2875, 2874, 2873, 2871, 2870, 1016, 2869, 2868, 224,
	61, 87, 102, 2867, 2865, 2864, 77, 143, 107, 99,
	56, 71, 2862, 100, 175, 2860, 180, 2847, 2845, 95,
	2844, 2843, 2841, 2834, 2830, 187, 2828, 2827, 174, 219,
	2826, 2822, 2820, 2816, 228, 149, 2796,
}

//line mysql_sql.y:10315
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 524, 532, 532, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 108, 522, 522, 522, 523, 523, 105, 125,
	124, 127, 127, 126, 126, 123, 123, 119, 122, 122,
	121, 121, 120, 115, 117, 117, 116, 118, 118, 106,
	94, 107, 467, 467, 466, 466, 465, 465, 419, 419,
	464, 464, 464, 463, 463, 463, 462, 462, 461, 461,
	460, 460, 458, 458, 459, 457, 456, 456, 456, 454,
	454, 454, 450, 450, 452, 451, 451, 453, 445, 445,
	448, 448, 446, 446, 446, 446, 449, 444, 444, 444,
	443, 443, 93, 93, 93, 365, 365, 92, 92, 379,
	379, 379, 379, 379, 377, 377, 377, 377, 377, 377,
	376, 376, 375, 375, 380, 380, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 83, 83, 83, 83,
	83, 88, 88, 88, 529, 529, 528, 528, 530, 530,
	530, 530, 531, 531, 86, 86, 86, 87, 374, 374,
	374, 84, 85, 85, 364, 364, 369, 369, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 373, 373, 373, 371, 371, 370, 370, 372, 372,
	77, 77, 77, 80, 79, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 78, 78, 78, 78, 78, 78,
	73, 73, 73, 73, 73, 72, 72, 74, 74, 361,
	361, 360, 89, 89, 90, 526, 526, 525, 527, 527,
	527, 527, 91, 97, 97, 97, 97, 97, 97, 97,
	96, 96, 99, 99, 98, 100, 82, 82, 82, 82,
	82, 82, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 492, 492, 492, 494, 494, 298, 299, 533, 301,
	297, 297, 297, 488, 488, 489, 490, 491, 491, 491,
	95, 11, 11, 11, 11, 11, 11, 11, 71, 76,
	246, 246, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 234, 234, 234, 229, 229, 229,
	229, 230, 230, 231, 231, 232, 232, 232, 232, 233,
	233, 291, 291, 251, 251, 251, 253, 253, 252, 250,
	248, 248, 248, 248, 248, 248, 249, 249, 249, 254,
	254, 69, 75, 75, 75, 505, 505, 70, 516, 516,
	422, 422, 312, 312, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	427, 428, 308, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 47, 50, 46, 46, 46, 350, 350, 45,
	534, 534, 286, 286, 58, 57, 49, 59, 60, 61,
	62, 63, 64, 44, 56, 56, 56, 56, 56, 56,
	56, 56, 67, 67, 439, 439, 536, 536, 536, 65,
	66, 421, 421, 421, 55, 54, 53, 52, 51, 51,
	43, 43, 42, 42, 48, 131, 132, 305, 305, 305,
	307, 307, 303, 535, 535, 393, 393, 306, 306, 41,
	41, 41, 41, 68, 304, 304, 285, 302, 302, 302,
	12, 12, 10, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 23, 24, 26, 358,
	358, 355, 25, 18, 17, 20, 16, 16, 19, 21,
	22, 22, 9, 9, 9, 9, 13, 13, 14, 152,
	152, 202, 202, 500, 500, 496, 496, 497, 497, 497,
	498, 498, 499, 499, 101, 433, 433, 433, 433, 433,
	433, 8, 174, 174, 432, 432, 432, 432, 432, 432,
	362, 362, 477, 477, 477, 478, 173, 173, 168, 168,
	434, 434, 327, 479, 479, 442, 442, 441, 441, 440,
	440, 171, 171, 172, 172, 155, 155, 111, 111, 447,
	447, 447, 447, 455, 455, 418, 418, 238, 238, 278,
	278, 279, 279, 145, 145, 146, 146, 146, 146, 146,
	146, 485, 485, 487, 487, 486, 170, 170, 166, 166,
	167, 167, 167, 165, 165, 164, 163, 163, 162, 160,
	160, 160, 161, 161, 161, 178, 178, 148, 148, 148,
	147, 147, 147, 147, 147, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 149, 149, 493,
	493, 493, 423, 423, 423, 430, 430, 260, 260, 261,
	261, 259, 259, 150, 150, 151, 151, 151, 151, 258,
	258, 257, 153, 153, 159, 158, 158, 154, 154, 154,
	154, 268, 268, 267, 267, 267, 267, 104, 109, 109,
	110, 177, 177, 266, 265, 265, 265, 176, 176, 175,
	175, 169, 169, 157, 157, 157, 157, 264, 156, 262,
	521, 521, 520, 520, 519, 517, 517, 517, 518, 518,
	518, 518, 469, 469, 469, 469, 469, 292, 292, 292,
	296, 296, 295, 295, 295, 295, 295, 300, 7, 7,
	7, 7, 7, 7, 30, 30, 30, 30, 30, 30,
	30, 30, 30, 36, 186, 187, 37, 188, 188, 189,
	189, 190, 190, 191, 192, 193, 193, 193, 193, 35,
	179, 179, 180, 180, 181, 181, 182, 183, 183, 183,
	185, 184, 34, 34, 27, 138, 138, 139, 139, 139,
	139, 141, 141, 235, 235, 235, 140, 140, 142, 142,
	142, 501, 504, 502, 502, 506, 506, 506, 507, 507,
	507, 507, 508, 508, 28, 128, 133, 511, 511, 511,
	510, 510, 512, 512, 513, 513, 282, 282, 283, 283,
	136, 137, 137, 135, 130, 144, 144, 144, 144, 144,
	129, 134, 503, 509, 509, 509, 359, 359, 356, 357,
	357, 354, 353, 353, 353, 515, 515, 514, 514, 514,
	293, 293, 29, 349, 349, 351, 352, 352, 352, 343,
	343, 343, 343, 33, 347, 347, 348, 348, 348, 348,
	348, 344, 344, 346, 346, 342, 342, 342, 342, 342,
	32, 143, 143, 341, 341, 338, 338, 336, 336, 337,
	337, 335, 335, 335, 339, 339, 39, 39, 39, 340,
	340, 31, 31, 31, 113, 112, 112, 112, 281, 281,
	280, 280, 114, 38, 214, 214, 407, 407, 407, 407,
	407, 425, 425, 425, 408, 408, 408, 409, 409, 409,
	410, 410, 410, 410, 410, 424, 424, 426, 426, 426,
	381, 381, 382, 382, 382, 385, 385, 399, 399, 400,
	400, 398, 398, 405, 405, 404, 404, 403, 403, 402,
	402, 401, 401, 401, 401, 396, 396, 395, 395, 383,
	383, 383, 383, 383, 384, 384, 384, 394, 394, 397,
	397, 222, 222, 223, 223, 256, 220, 220, 221, 221,
	221, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 475, 475, 476, 225,
	225, 236, 236, 236, 236, 236, 236, 224, 224, 226,
	226, 203, 203, 201, 201, 194, 194, 195, 195, 196,
	196, 196, 200, 200, 199, 199, 199, 199, 197, 197,
	198, 198, 198, 198, 198, 198, 367, 367, 472, 472,
	473, 473, 468, 468, 468, 471, 471, 471, 471, 471,
	474, 474, 474, 470, 470, 204, 276, 276, 276, 294,
	294, 294, 294, 275, 275, 275, 219, 219, 218, 218,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 366, 366, 309, 309, 310, 310, 245, 244,
	244, 244, 244, 244, 242, 243, 241, 241, 241, 241,
	241, 240, 240, 239, 239, 239, 345, 345, 237, 237,
	228, 228, 228, 227, 227, 227, 406, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 274, 274, 274, 319, 319, 324, 324, 484, 484,
	483, 205, 205, 205, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 215, 215, 215, 390, 390, 390, 390,
	391, 391, 391, 391, 392, 392, 392, 388, 388, 389,
	389, 328, 329, 329, 431, 431, 386, 386, 387, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 438, 438,
	438, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 495, 495, 495,
	480, 480, 480, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 272, 272, 272, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	330, 330, 331, 331, 435, 435, 435, 435, 435, 435,
	436, 436, 437, 437, 437, 437, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 317, 269, 269, 269, 332,
	325, 325, 326, 326, 320, 320, 320, 320, 320, 320,
	320, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 315, 315, 315, 315, 315, 315, 315, 315,
	315, 315, 315, 321, 321, 323, 323, 334, 334, 334,
	333, 333, 333, 333, 333, 333, 333, 217, 217, 217,
	217, 314, 314, 314, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 207, 207, 207, 207,
	211, 211, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 212, 212, 212, 212,
	212, 210, 210, 210, 210, 210, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 102, 103, 103, 209, 277, 277,
	411, 411, 414, 414, 412, 412, 413, 415, 415, 415,
	416, 416, 416, 417, 417, 417, 420, 420, 284, 284,
	284, 290, 290, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 1, 3, 3, 1, 2, 2,
	2, 1, 2, 2, 3, 4, 4, 6, 1, 1,
	1, 2, 4, 6, 1, 4, 1, 3, 3, 4,
	4, 4, 4, 3, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 2, 2, 0, 1, 4, 2, 4,
	1, 5, 3, 2, 1, 2, 2, 4, 4, 5,
	2, 1, 3, 4, 4, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 2, 4, 3, 3, 1, 1, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 1, 7, 4,
	1, 3, 2, 4, 5, 5, 6, 5, 5, 3,
	2, 2, 1, 3, 4, 3, 7, 5, 8, 2,
	2, 1, 3, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 2, 1, 3, 2, 1,
	2, 2, 1, 2, 3, 2, 3, 3, 3, 1,
	1, 7, 7, 8, 8, 0, 4, 7, 0, 3,
	0, 2, 0, 1, 1, 1, 1, 4, 2, 2,
	3, 3, 4, 5, 3, 4, 4, 2, 2, 2,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 2, 5, 5, 0, 2, 7,
	0, 1, 0, 1, 5, 5, 3, 3, 2, 4,
	4, 4, 4, 4, 1, 1, 1, 3, 3, 1,
	1, 1, 6, 8, 0, 1, 1, 1, 1, 5,
	5, 0, 1, 1, 3, 3, 3, 4, 6, 7,
	4, 4, 7, 8, 3, 3, 3, 0, 2, 2,
	0, 2, 2, 1, 1, 1, 1, 0, 1, 4,
	4, 5, 4, 3, 1, 3, 1, 1, 3, 5,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 4, 1,
	3, 1, 4, 6, 6, 4, 4, 4, 3, 6,
	3, 5, 1, 1, 2, 2, 11, 8, 9, 1,
	3, 2, 4, 0, 2, 0, 1, 1, 1, 1,
	0, 1, 0, 1, 4, 2, 1, 5, 4, 4,
	2, 5, 1, 3, 2, 1, 5, 4, 4, 2,
	0, 5, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 5, 3, 4, 6, 4,
	5, 2, 3, 1, 3, 6, 0, 3, 0, 1,
	2, 4, 4, 0, 1, 3, 1, 3, 3, 0,
	1, 1, 0, 2, 2, 0, 2, 3, 3, 3,
	1, 3, 3, 3, 3, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 7, 7, 1,
	1, 1, 0, 1, 1, 1, 1, 0, 2, 0,
	3, 0, 2, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 3, 1, 1, 1, 4, 4, 4,
	3, 2, 2, 2, 3, 2, 3, 4, 1, 3,
	4, 0, 2, 1, 1, 2, 2, 0, 1, 2,
	4, 1, 3, 1, 3, 2, 3, 1, 4, 3,
	0, 1, 1, 2, 5, 2, 2, 2, 0, 2,
	3, 3, 0, 1, 3, 1, 3, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 7, 1, 1, 7, 1, 3, 0,
	1, 1, 3, 1, 3, 0, 1, 1, 1, 12,
	1, 3, 0, 1, 1, 3, 1, 1, 2, 4,
	1, 1, 9, 8, 7, 1, 2, 2, 3, 3,
	3, 0, 4, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 4, 1, 1, 3, 4, 3, 0, 1,
	1, 1, 0, 2, 7, 8, 8, 0, 3, 3,
	0, 2, 0, 3, 0, 5, 1, 3, 0, 3,
	3, 0, 2, 9, 6, 0, 2, 2, 3, 3,
	4, 4, 1, 0, 2, 2, 1, 3, 2, 1,
	3, 2, 1, 3, 2, 0, 1, 3, 4, 3,
	1, 1, 4, 1, 3, 1, 1, 1, 1, 0,
	1, 1, 1, 11, 0, 2, 3, 2, 3, 1,
	1, 1, 3, 3, 4, 0, 2, 2, 2, 2,
	6, 0, 4, 1, 1, 0, 3, 0, 1, 1,
	2, 4, 4, 4, 0, 1, 9, 10, 8, 0,
	2, 11, 9, 11, 2, 2, 4, 5, 1, 3,
	0, 3, 5, 10, 0, 2, 0, 3, 2, 4,
	3, 0, 2, 1, 0, 2, 3, 0, 2, 3,
	0, 3, 2, 4, 3, 0, 1, 0, 1, 1,
	0, 6, 0, 3, 5, 0, 4, 0, 3, 1,
	3, 4, 5, 0, 3, 1, 3, 2, 3, 1,
	2, 0, 4, 6, 5, 0, 2, 0, 2, 4,
	5, 4, 5, 1, 5, 6, 5, 0, 3, 0,
	1, 0, 4, 1, 3, 3, 0, 1, 1, 3,
	2, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 5, 4, 1, 3, 3, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 0, 1, 1, 3, 1,
	1, 1, 1, 1, 7, 9, 7, 9, 2, 1,
	7, 9, 7, 9, 8, 5, 0, 1, 0, 1,
	1, 1, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 3, 1, 3, 5, 1,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 2,
	1, 2, 2, 1, 1, 2, 2, 2, 3, 3,
	2, 2, 1, 5, 6, 4, 1, 1, 1, 5,
	4, 1, 1, 2, 0, 1, 1, 2, 5, 0,
	1, 1, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 2, 2, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 3, 5, 2, 2, 2, 2, 1,
	1, 2, 5, 6, 6, 6, 1, 1, 1, 1,
	1, 4, 4, 4, 0, 2, 0, 1, 1, 2,
	4, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	2, 2, 2, 0, 1, 1, 1, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 2, 5, 0,
	1, 3, 0, 1, 0, 2, 0, 1, 6, 8,
	6, 6, 5, 5, 5, 6, 6, 6, 6, 5,
	6, 6, 6, 6, 6, 6, 6, 6, 1, 1,
	1, 4, 4, 6, 8, 6, 4, 5, 4, 4,
	4, 3, 4, 6, 6, 7, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 8, 4, 2, 3, 2, 4,
	2, 2, 4, 6, 2, 2, 4, 6, 4, 2,
	0, 1, 2, 3, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 1, 3,
	0, 1, 1, 3, 3, 3, 3, 3, 2, 1,
	1, 3, 4, 3, 4, 3, 4, 3, 4, 3,
	4, 1, 3, 4, 4, 5, 4, 5, 3, 4,
	5, 6, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 1, 1, 2, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 4, 4, 1, 2, 3, 5, 1, 1, 3,
	0, 1, 0, 3, 0, 3, 3, 0, 3, 5,
	0, 3, 5, 0, 1, 1, 0, 1, 1, 2,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -524, -532, -2, -5, 589, -1, -4, -103, -77,
	-7, -105, -106, -8, -101, -9, -10, -12, -81, -96,
	-98, -100, -99, -40, -11, -95, -72, -73, -83, -89,
	-92, -93, -94, -107, -102, -104, -145, -108, 582, -78,
	-79, -80, -30, -29, -28, -27, -128, -133, 588, 437,
	13, 486, -13, -14, -485, -15, 256, -297, -298, -299,
	-301, -533, -41, -42, -43, -51, -52, -53, -54, -55,
	-65, -66, -67, -44, -45, -46, -49, -47, -58, -57,
	-59, -60, -61, -62, -63, -64, -48, -131, -132, -68,
	-50, -70, -69, -75, -71, -76, -130, -135, 231, -74,
	75, -84, -85, -86, -87, -88, -90, -91, 363, 369,
	426, 581, 60, -146, -148, 592, 157, 158, 160, 161,
	-31, -32, -33, -34, -35, -36, -38, -37, -39, 227,
	15, 522, -16, -19, -17, -20, -18, -25, -26, -24,
	-21, -23, -129, -22, -134, 251, 250, 37, 317, 318,
	319, 367, 249, 228, 14, 30, 41, 343, -147, 81,
	229, -149, 12, 594, -6, -3, -2, -115, -119, -123,
	-126, -127, -124, -125, -4, -103, 115, 241, 583, -294,
	359, 584, 586, 585, 84, 92, -287, -289, 363, 369,
	581, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 489, 568,
	569, 570, 571, 517, 341, 342, 519, 268, 292, 394,
	298, 305, 157, 176, 170, 198, 190, 165, 272, 310,
	273, 91, 160, 472, 105, 449, 423, 163, 287, 289,
	291, 294, 293, 295, 297, 274, 344, 186, 181, 286,
	270, 179, 275, 39, 276, 203, 277, 278, 524, 445,
	340, 451, 302, 421, 180, 446, 290, 448, 207, 211,
	463, 464, 174, 175, 453, 466, 202, 205, 206, 248,
	42, 521, 260, 467, 209, 201, 197, 475, 306, 304,
	200, 173, 196, 271, 64, 213, 212, 214, 417, 418,
	419, 420, 279, 280, 357, 462, 193, 182, 345, 166,
	22, 470, 255, 450, 370, 281, 299, 307, 208, 210,
	262, 267, 523, 425, 266, 303, 468, 178, 259, 288,
	254, 471, 167, 372, 282, 161, 296, 465, 474, 63,
	385, 172, 164, 245, 158, 264, 269, 283, 284, 285,
	515, 309, 308, 300, 194, 261, 199, 184, 171, 195,
	159, 263, 473, 386, 579, 343, 404, 192, 189, 265,
	238, 469, 452, 162, 408, 387, 187, 311, 575, 576,
	577, 358, 339, 312, 313, 185, 252, 443, 444, 316,
	414, 332, 388, 424, 395, 389, 220, 320, 455, 457,
	204, 578, 321, 322, 323, 447, 324, 325, 326, 327,
	362, 55, 57, 93, 95, -372, -370, -294, 581, 369,
	363, 343, -188, -294, 593, -155, 38, -201, -294, -155,
	-74, -14, -13, -147, -148, -201, 235, -302, 23, 421,
	-82, 422, 231, 81, -294, -9, -94, -8, -101, -72,
	-145, 426, -300, -294, 317, 317, -300, 235, -294, 266,
	402, -422, 241, -376, -349, 267, -375, -351, -378, -352,
	31, 227, 229, 228, 263, 15, 367, 237, 13, 12,
	368, 249, 24, 25, 27, 14, 369, 371, 28, 372,
	375, 376, 377, 41, 380, 381, 256, 84, 92, 87,
	274, -187, -294, -326, -320, 112, 257, -322, -315, -316,
	-318, -464, -458, -313, 81, 139, 140, 147, 113, -317,
	-406, 35, 115, 531, 487, -270, -271, -272, -273, -274,
	-294, -459, -457, 87, 96, 99, 102, 103, 101, 100,
	151, 183, 98, 88, 152, -148, 84, -480, 540, -288,
	561, 568, 569, 570, 571, 560, 60, -429, -437, 234,
	-435, 150, 188, 252, 184, 13, 145, 414, 185, 537,
	557, 489, 541, 564, 533, 534, 535, 528, 529, 530,
	532, 542, 544, 556, -438, 552, 562, 563, 550, 565,
	566, 567, 86, 85, 555, 554, 543, 538, 539, 545,
	527, 536, 546, 547, 553, 558, 559, 351, 105, 352,
	353, 479, 344, 354, 241, 421, 69, 355, 356, 357,
	358, 359, 486, 360, 70, 361, 350, 256, 404, 362,
	187, 204, 491, 490, 492, 483, 480, 478, 481, 482,
	484, 485, 548, 549, 551, -109, -110, 573, -164, -165,
	-263, 11, 6, 7, 8, 9, -522, 423, 523, 162,
	159, -363, 162, 111, 167, 166, -363, 320, 262, 364,
	-138, 238, 341, 404, 324, 93, 266, -343, -341, -340,
	-424, 314, 310, 236, -139, 246, 245, 106, 479, 234,
	108, 378, 305, 55, 57, -496, -497, 224, 225, 226,
	-487, 512, -486, -294, 353, 95, 26, 235, 364, 262,
	457, 455, 456, 458, 459, 460, 461, -56, -439, -421,
	452, 451, -306, 444, 450, 442, 454, 445, 342, 326,
	325, 227, 590, 513, -284, 388, 424, 476, 477, 365,
	425, 463, 465, 446, 105, 191, 188, 238, 235, 341,
	479, 404, 93, 324, -496, 159, 463, 465, 266, 402,
	40, -369, 414, -368, -370, 464, 475, 85, 86, 462,
	-284, 105, 443, 443, -165, -263, -164, -146, -148, -104,
	-485, 236, 341, 404, 266, 237, 235, 238, 479, 234,
	317, 364, 262, 324, 93, -423, -493, 31, -430, 221,
	222, 223, 32, 33, -1, 119, 594, -320, -320, -6,
	595, -6, -320, -294, -294, 154, -207, -211, -208, -210,
	-209, -213, -212, 188, 189, 150, 192, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 205, 206, 203, 30,
	204, 252, 184, 185, 186, 187, 207, 170, 190, 520,
	215, 171, 216, 172, 217, 173, 218, 174, 175, 219,
	176, 179, 180, 181, 182, 178, 153, 81, 153, 87,
	-171, 258, -201, 153, -171, -165, -164, -165, -201, -275,
	-294, 423, 122, -82, -82, 422, -488, -489, -490, -492,
	231, 422, 421, 153, 274, 16, -300, -300, 79, -201,
	-351, 266, -376, -349, 35, 78, 154, 239, 154, 78,
	81, 365, 341, 404, 366, 479, 235, 378, 238, 266,
	379, 341, 404, 235, 238, 479, 266, 341, 235, 238,
	404, 266, 379, 442, 443, 238, 26, 370, 373, 374,
	443, -443, 475, 154, 111, 108, 109, 110, -320, 129,
	-333, 122, 123, 124, 125, 126, 127, 128, 136, 135,
	146, 139, 140, 141, 142, 143, 144, 145, 137, 138,
	132, 112, 130, 134, 131, 114, -148, -320, -326, 60,
	-318, -318, -318, -318, -406, -324, -320, 81, 81, 153,
	100, 87, -320, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, -436, 81, 81, -330, -331,
	81, 81, -313, -275, 81, 87, 87, 81, 81, 81,
	87, -331, -331, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, -165, 154, 81, -111, 38, -167,
	21, -149, -148, 20, 31, 32, 31, 32, 31, 32,
	31, 32, 96, 468, 522, 165, 166, 167, -186, -294,
	-188, -179, -294, 238, -139, 108, -338, 241, -338, -338,
	-338, -338, -338, 237, -338, 516, 515, 235, 235, 235,
	-338, 486, 122, 122, 58, -498, 169, 154, -487, -170,
	81, -305, 130, 134, -305, 23, 264, 264, 264, -305,
	304, -534, -535, 16, 132, -303, -535, -303, -303, -305,
	-536, 237, 453, 42, 265, 264, -166, -167, -166, 447,
	443, -393, 448, 449, -307, -535, -306, -305, -305, -306,
	-305, -305, -305, 235, 238, 479, 324, 591, -534, -534,
	30, 30, -422, -201, -422, 513, -285, -294, -422, -422,
	-422, -499, 240, -529, -528, 466, -531, 468, 159, -370,
	159, -370, -351, 266, 266, 154, 122, 23, -371, 122,
	133, -370, -370, -371, -371, -224, 40, -293, 150, -294,
	87, -224, 40, -526, -525, -201, -166, -149, -148, 82,
	82, 82, -422, -422, -422, -422, -422, -424, -422, -422,
	-422, -300, -179, -188, 241, -422, -422, -150, -151, 141,
	-320, -294, -150, -3, -117, -116, 116, 117, 119, 584,
	359, 583, 587, 581, -370, 40, -417, 386, 385, -411,
	-413, 81, -412, 81, -412, -412, -412, -412, -412, 81,
	81, -414, 81, -414, -414, -411, -415, 81, -415, -416,
	81, -416, -415, -294, -325, -326, -294, 38, -432, 60,
	-145, 81, 30, 81, -294, -433, 60, -145, 81, 30,
	-166, -111, -167, 153, 96, 87, -82, 82, 154, -491,
	102, 103, -494, 202, 194, -294, -97, 87, -7, -8,
	-9, -10, -40, -72, -145, -460, -458, 81, 31, 413,
	78, 16, -377, 235, 479, 364, 262, 238, 341, -375,
	-358, -355, -353, -293, -351, -354, -353, -380, -275, 443,
	-112, 427, 316, -320, -320, -320, -320, -320, 101, 112,
	339, 102, 103, -315, -334, 31, 312, 313, -316, -316,
	-316, -316, -316, -316, -316, -316, -316, -316, -316, -316,
	-323, -332, -406, 81, 132, 130, 134, 131, 114, -318,
	-318, -316, -316, 82, 154, -484, -483, 116, -320, -320,
	-294, -481, -482, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 355, 350, 356, 354, 344, 362,
	357, 358, 187, 510, 511, 504, 505, 506, 507, 508,
	509, -325, -325, -320, -481, -325, -269, 32, 31, -326,
	-326, -326, 82, -320, -495, 337, 336, 338, -168, -294,
	-325, 82, 82, 82, 96, -326, -326, -325, -316, -325,
	-482, -269, -269, -269, 141, -326, -326, -269, -269, -269,
	-269, 141, -269, -269, -269, -269, -269, -269, -269, -269,
	82, 82, 82, -166, -110, -441, -440, -320, 40, 574,
	-111, -320, -163, -162, -320, -523, 87, 469, 470, 163,
	166, 165, 34, 81, 81, 153, -338, 486, -201, 112,
	-501, -294, -359, -356, -353, -294, -294, -349, -294, -294,
	-338, 516, -338, -338, -338, -201, -235, 52, 53, 54,
	-353, -140, 55, 56, -499, -486, 34, -169, -294, -259,
	17, -318, -318, -353, 266, -534, -305, -305, -286, -285,
	-307, -302, -307, -307, -259, -535, -305, -305, -307, -303,
	-259, -294, 443, -259, -259, -393, -304, -294, -304, -338,
	-285, -286, -286, -201, -246, -247, 232, 348, 349, 230,
	228, 11, 229, -255, 305, -339, 487, -230, -231, 76,
	41, -233, 390, 383, 268, 272, 91, 273, 423, 274,
	237, 276, 277, 278, 293, 295, 248, 279, 280, 281,
	414, 282, 158, 294, 283, 284, 285, 366, -225, 6,
	327, 40, 50, 51, 436, 435, 525, 522, 269, -501,
	-501, 30, 30, -359, -294, -294, -158, -153, -157, -154,
	-159, -262, -264, -156, 81, -201, -148, -294, 154, 467,
	469, 470, -529, -371, -529, -371, 31, 413, -374, 413,
	31, -349, -368, 463, 465, -364, 87, 414, -354, -373,
	78, 150, -440, -371, -371, -373, -373, 149, 154, -527,
	468, 469, 224, -111, -203, -201, -501, -358, -349, -294,
	-422, -203, -294, -294, 81, 35, -294, -294, -258, 154,
	-257, 16, -295, -294, 34, 87, 153, -258, -118, -116,
	118, -320, -6, 583, -320, -6, -6, -320, -6, -320,
	-420, 387, 96, 96, -277, 87, -277, 96, 96, 96,
	82, 87, -362, 78, -434, -327, -479, 573, -173, 82,
	-168, -477, -478, -168, -172, -294, -434, -173, 82, -477,
	-111, -111, -294, 23, -82, -489, 153, 154, -169, -377,
	-357, -354, -379, 141, -294, -365, 154, 522, 598, 85,
	239, -515, -514, 405, 82, 154, -444, 240, 486, 87,
	596, 220, 101, 339, 102, 103, -406, -326, -323, -318,
	-318, -316, -316, -321, 253, -321, 111, -320, -319, -483,
	118, -320, 34, 154, 79, 153, 82, 82, 16, 16,
	82, -320, 82, 82, 82, 82, 16, 16, -320, 82,
	153, 82, 82, 82, 82, 79, 82, 154, 82, 154,
	-326, -320, -326, 82, 82, 82, -320, -320, -320, -326,
	82, -320, -320, -320, -320, -320, -320, -320, -320, -387,
	438, -387, -387, 154, 82, 87, 154, 22, 154, -160,
	36, 37, 164, 167, 167, 166, -187, -189, -190, -191,
	-192, -193, 132, 155, 156, -180, -181, -182, -183, -207,
	-275, 189, 192, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 205, 206, 203, 204, 252, 184, 185, 186,
	187, 207, 170, 190, 171, 172, 173, 174, 175, 176,
	179, 180, 181, 182, 178, -294, -201, -170, 35, -504,
	391, -516, 154, 40, -514, 479, -136, 316, -342, 79,
	-143, 16, -201, -338, -201, -201, -201, -214, 34, 16,
	-152, -202, -294, 81, 82, 154, -320, -350, 79, -294,
	-286, -259, -259, -201, -294, -259, -259, -305, -307, -307,
	-303, 153, -285, -170, 154, -200, -291, -197, -199, 243,
	-310, -198, 246, -473, 244, 242, 106, 247, 301, 107,
	237, -291, -291, 243, -234, 239, 34, -291, -249, 237,
	301, 244, 20, -248, 237, 107, -294, 243, 247, 242,
	-290, 122, -284, 149, 239, 42, 366, -290, 526, -290,
	-290, -290, -290, -290, -290, -290, 275, 275, -290, -290,
	-290, -290, -290, -290, -290, -290, -290, -290, -290, 159,
	-290, -290, -290, -290, -290, -290, 81, 270, 271, -505,
	391, 30, 347, 347, -516, 30, -144, 341, 30, -265,
	-266, -267, -268, 67, 71, 73, 68, 69, 70, 74,
	30, 154, -292, -296, 34, -294, 87, -292, -148, -153,
	-158, -292, 81, -528, -530, 471, 468, 474, -373, -373,
	239, 81, 122, -373, -373, 40, -293, -525, 475, 469,
	-178, 23, 154, 78, -203, -180, -188, -259, -151, -153,
	-294, 87, -294, 141, -259, 119, -6, 117, -122, -121,
	-120, 120, 581, 587, 119, 119, 119, 82, 82, 82,
	154, 82, 82, 82, 154, 82, 154, -447, 448, 39,
	154, 81, 82, 154, 60, 154, 122, 82, 154, 82,
	60, -178, 153, 423, -294, -458, 82, -379, 154, 239,
	153, 153, -355, 369, -293, -357, 20, 522, -275, 38,
	-281, -280, 87, 596, 82, -321, -321, 111, -318, -315,
	82, 119, -320, 117, -205, -207, 385, 386, -206, -212,
	150, 188, 252, 187, 186, 184, 385, 386, -224, -294,
	-320, -320, 82, -320, -320, 16, -294, -224, -316, -320,
	-165, 82, 82, -386, -387, -386, -386, 82, 82, 82,
	82, -386, 82, 82, 82, 82, 82, 82, 82, 82,
	81, -440, -447, -320, -320, -162, -161, 43, 167, 377,
	82, 154, -275, 82, 154, -207, -170, 34, -507, 450,
	393, 403, -290, -312, -311, 343, 41, -427, 414, 399,
	400, -356, 266, -294, -513, 94, 122, 78, 331, 332,
	333, 334, -336, -337, -335, -339, -501, 81, -222, 522,
	-201, 81, 81, 81, -407, 321, -207, -201, -152, -294,
	16, 154, -500, 153, -1, -294, -349, -305, -259, -535,
	-259, -305, -305, -307, -294, 34, -247, -204, -275, -198,
	-472, -473, -338, -294, 107, -472, 107, 81, -204, -275,
	-275, -250, -304, -275, -294, -294, -294, -253, -252, -275,
	-294, -294, -294, 107, 107, -229, 40, 47, 48, 49,
	-290, -290, 191, -232, 40, 413, 415, 416, 96, 96,
	96, 96, 87, 87, 87, -290, -290, 96, 87, -296,
	87, -474, 166, 44, 45, 96, 96, 96, 96, 40,
	87, -236, 40, 286, 290, 287, 288, 289, 87, 96,
	40, 96, 40, 96, 40, -294, 81, -475, -476, 87,
	-507, -290, 347, -370, 122, -312, -512, 316, -137, 91,
	31, -174, 232, 229, -501, -361, -360, -275, -157, -157,
	-157, -157, 67, 67, 67, 72, 67, 72, 67, -267,
	-361, -159, -170, -296, 82, -521, -520, -519, -517, 75,
	240, 76, -325, 468, 472, 473, -357, -308, 87, -364,
	14, -201, -201, -426, 296, 297, 82, -261, 18, 153,
	-261, 115, -6, -118, -120, -320, -6, -320, 583, 359,
	584, 87, 96, 96, -455, 433, 428, 430, 107, -327,
	-442, -441, 60, -145, -168, -434, -478, -440, -294, 60,
	-145, -434, -294, 96, 16, -354, -349, 141, 141, -294,
	370, -365, 87, 392, 87, 235, 597, 154, 122, -281,
	-315, -320, 82, -215, 175, 174, -215, 82, -412, -412,
	-411, -414, -411, -215, -215, 82, 82, 23, 82, 82,
	82, -320, 82, 82, 154, -431, 488, -386, -386, -386,
	-386, -386, -386, -386, -386, -386, -386, -386, -386, -386,
	-386, -329, -328, 258, -455, 44, 45, 87, 87, -191,
	-207, 233, -182, 40, 34, -145, -508, 91, -502, 87,
	-294, -509, 91, 394, 152, 345, 40, 395, 396, 411,
	340, 96, 96, 401, -503, -294, -144, -511, 51, 122,
	87, -201, -335, -284, 149, 277, 324, -194, -195, -196,
	-204, -197, -199, 34, 81, 81, -194, -194, -194, -408,
	323, 20, 96, 140, -171, 79, 153, -153, -202, -294,
	141, 82, -259, -294, -259, -259, -305, -145, -251, 44,
	46, -207, -470, -294, -468, -470, -294, -468, -468, -338,
	-320, -251, -204, 239, 30, 229, -254, 329, 330, -366,
	302, 112, -366, 154, -160, -294, -224, -224, 30, 87,
	87, -203, 82, 154, 122, -508, -502, 122, -371, 87,
	-509, -513, 122, 87, 154, -174, -174, -259, 154, 122,
	-176, -175, 78, 79, -177, 78, -175, 67, 67, -259,
	-519, -518, 23, -473, -473, -473, 82, 82, -260, 19,
	20, 141, -260, 119, 117, 119, 119, -294, 82, 82,
	-418, 575, -451, -453, 428, 20, 20, 14, 82, -434,
	-434, -349, -365, 414, -201, -280, 87, 597, -320, 82,
	-320, 82, 87, -165, 20, -418, -184, -207, -313, -145,
	-141, 522, 87, -506, 405, 87, 87, 96, 40, 96,
	152, 397, -428, -137, -510, 91, 122, 596, 81, -290,
	-290, -290, -294, 82, 154, -145, -223, -256, -294, -194,
	82, 82, 82, -409, 257, 96, 140, 96, 140, 96,
	-292, -153, -294, -259, -500, 153, -259, -259, -275, -219,
	-218, -216, 101, 112, 40, 383, -217, 91, 149, 291,
	294, 293, 269, 292, -245, -309, 78, 389, 329, 330,
	-339, 575, 517, 242, 106, 107, 371, -310, 81, 81,
	79, 311, 81, 81, -470, 82, -251, -275, 40, -254,
	40, 302, -252, 149, -224, 82, -476, 87, -506, 87,
	-373, -511, 87, -501, -165, -360, -440, -320, 81, -320,
	81, 67, 11, 18, -320, -326, 241, -6, 584, 359,
	-238, 576, 87, 20, 87, -449, 87, -361, -114, -445,
	-393, 82, 82, -386, -389, -388, -392, 434, 303, 441,
	-326, -238, 521, -141, -142, 59, 475, 20, 522, 344,
	40, 96, 40, 398, 87, 102, 103, -282, -283, 87,
	-344, -346, -275, 81, -224, -226, -293, 150, 87, -222,
	-196, 82, 154, -290, 82, -220, -221, -255, -339, -113,
	-112, -220, -410, 158, 96, 140, 96, 96, -259, -259,
	-216, 101, -316, 87, -226, -227, 40, 290, 286, 122,
	122, -228, 40, 270, 271, -237, 81, 301, 14, 191,
	81, 107, 107, -201, -344, -344, -471, 331, 332, 333,
	335, 334, -471, -344, -344, 81, -367, -366, -316, -290,
	149, -510, -166, -169, -469, -294, 242, 20, 20, -294,
	-294, -278, 577, 96, 87, 430, -419, 578, -454, 433,
	-448, -446, 428, 429, 430, 431, 82, -391, 114, 397,
	401, -314, -317, 96, 99, 183, 152, -278, -185, -294,
	301, 87, 392, 87, 344, 597, 154, 122, 82, 154,
	-411, -320, -256, -313, -222, -381, 258, 154, -255, -284,
	-114, -381, -425, 166, 322, 522, 96, 140, 96, -165,
	87, 87, 96, 81, -435, 30, 87, -345, 81, 82,
	82, 82, 82, -344, -224, -290, 82, 82, 154, 81,
	20, 87, -456, 240, -452, -453, 432, -446, 20, 430,
	20, 20, -390, -391, 401, -314, -317, 573, 439, 439,
	439, 34, 370, 414, -283, 87, -347, -346, -160, 82,
	-382, 310, 20, -255, -290, -382, 322, 96, 140, 96,
	-166, 82, -320, -330, -290, 82, -240, -239, 518, -344,
	-347, 79, -347, 79, -347, 79, -347, 79, 82, -224,
	-294, 242, -279, -294, -449, -463, 81, 96, -451, -450,
	-452, 20, -449, 20, -449, -449, 111, 440, 440, 440,
	87, -348, 248, 91, 522, 329, 330, -160, 20, -383,
	303, 304, -384, -397, 306, -224, 96, 82, -294, -244,
	-242, -243, 78, 446, 299, 300, 82, -471, -471, -471,
	-471, -245, 82, 154, -467, 30, 82, -462, -461, -276,
	-457, -294, 433, 434, 87, -449, -390, -290, 87, 328,
	-275, 81, -395, 307, 81, -393, 81, -393, 107, 332,
	-366, -243, 78, -242, 78, 15, 14, -347, -347, -347,
	-347, -294, -466, -465, -464, 82, 154, 153, 96, -294,
	-380, -385, 308, 96, -316, 81, -316, 81, -394, 305,
	81, -241, 296, 297, 30, 166, -241, 154, 122, -461,
	-294, 82, -399, 81, 20, 82, -380, 82, -380, 81,
	122, -316, 101, 40, 298, -465, 40, -320, 153, -400,
	-398, 258, -384, 82, 82, 82, -380, 96, 82, -294,
	82, 154, -294, -396, 309, 82, -398, -401, 60, 96,
	-405, -402, 81, -255, 260, 132, -405, -255, -404, -403,
	308, 261, 81, 82, 154, -294, 257, 81, -326, -403,
	-402, -326, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 260,
	261, 262, 818, 819, 820, 821, 822, 823, 0, 0,
	0, 0, 592, 593, 0, 562, 0, 0, 0, 0,
	0, 0, 453, 454, 455, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 351, 352, 353, 354, 355, 356, 357, 0, 285,
	281, 206, 207, 208, 209, 210, 292, 293, 430, 0,
	0, 0, 0, 673, -2, 53, 274, 0, 265, 265,
	824, 825, 826, 827, 828, 829, 830, 831, 832, -2,
	605, 0, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 340, 341, 342, 336, 337,
	339, 338, -2, 0, 605, 0, 0, 0, 693, 0,
	0, 710, 732, 23, 0, 7, 9, 10, 11, 12,
	13, 14, 15, 16, 17, 18, 0, 0, 19, 0,
	19, 0, 0, 0, 1179, 1180, 1181, 1182, -2, 1672,
	1650, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835,
	1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845,
	1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855,
	1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865,
	1866, 1867, 1868, 1869, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680,
	1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700,
	1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
	1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720,
	1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730,
	1731, 1732, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741,
	1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751,
	1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761,
	1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771,
	1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781,
	1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791,
	1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801,
	1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811,
	1812, 1813, 1814, 1815, 1816, 0, 258, 256, 1650, 1672,
	1734, 1767, 0, 837, 0, 651, 0, 656, 1133, 651,
	286, 594, 595, 693, 693, 560, 0, 322, 0, 1663,
	326, 0, 0, 0, 557, 316, 317, 318, 319, 320,
	321, 0, 0, 817, 0, 0, 312, 0, 280, 1725,
	0, 0, 0, 0, 0, 0, 150, 943, 152, 945,
	156, 163, 0, 0, 168, 169, 172, 173, 174, 175,
	176, 0, 180, 0, 182, 185, 0, 187, 188, 0,
	191, 192, 193, 0, 203, 204, 205, 946, 947, 948,
	-2, 81, 835, 1584, 1472, 0, 1479, 1480, 1491, 1502,
	1259, 1260, 1261, 1262, 0, 0, 0, 0, 0, 1269,
	1270, 0, 1286, 1831, 0, 1276, 1277, 1278, 1279, 1280,
	90, 102, 103, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
	0, 1532, 1533, 1534, 1445, 1246, 1179, 0, 1840, 0,
	1860, 1865, 1866, 1867, 1868, 1859, 0, 0, 1430, 0,
	1420, 0, 0, -2, -2, 0, 0, 1792, -2, 1837,
	1856, 1864, 1841, 1863, 1833, 1834, 1835, 1828, 1829, 1830,
	1832, 1842, 1844, 1855, 0, 1851, 1861, 1862, 0, 0,
	0, 0, 104, 105, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1436, -2, 1438,
	1439, 1441, -2, 1443, 1444, -2, 1447, 1448, 1449, -2,
	-2, 1452, 1453, 1454, 1455, 1456, 1457, 1460, -2, -2,
	-2, -2, 1432, 1433, 1434, 1435, 1424, 1425, 1426, 1427,
	1428, 1429, -2, -2, -2, 693, 768, 0, -2, 0,
	0, 0, 715, 718, 721, 724, 0, 54, 55, 275,
	276, 264, 266, 0, 270, 0, 263, 0, 0, 0,
	0, 975, 975, 975, 975, 975, 975, 0, 975, 0,
	0, 0, 0, 975, 865, 950, 951, 952, 973, 974,
	0, 1026, 0, 0, 0, 610, 606, 607, 608, 609,
	681, 0, 683, 686, 537, 537, 484, 0, 0, 0,
	537, 0, 498, 490, 0, 0, 0, 537, 0, 0,
	688, 688, 0, 540, 547, 537, 537, -2, 537, 537,
	537, 0, 0, 504, 505, 506, 490, 490, 509, 510,
	511, 522, 523, 548, 1608, 0, 0, 430, 0, 430,
	0, 430, 430, 430, 612, 1762, 1670, 1739, 1725, 0,
	0, 231, 1792, 236, 0, 1671, 1688, 0, 0, 1706,
	0, -2, 0, 302, 688, 0, 694, 0, 693, 0,
	0, 430, 430, 430, 430, 430, 1025, 430, 430, 430,
	0, 0, 0, 430, 430, 0, 0, 733, 734, 729,
	730, 731, 735, 736, 5, 6, 19, 0, 0, 0,
	0, 0, 0, 60, 59, 0, 1585, 1603, 1537, 1538,
	1539, 1590, 1541, 1594, 1594, 1594, 1594, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1594, 1594, 0, 0,
	1583, 1561, 1592, 1592, 1592, 1590, 1587, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1597, 1597, 1600, 1600, 1597, 0, 1470, 0, 0,
	0, 0, 655, 0, 0, 688, -2, 0, 561, 323,
	1183, 0, 0, 327, 328, 0, 0, 343, 0, 346,
	331, 332, 333, 0, 130, 0, 314, 315, 0, 0,
	282, 0, 0, 0, 431, 0, 0, 0, 0, 0,
	0, 160, 157, 164, 167, 177, 184, 0, 196, 198,
	201, 158, 165, 170, 171, 178, 199, 159, 161, 162,
	166, 200, 202, 179, 183, 197, 181, 186, 189, 190,
	195, 0, 131, 0, 0, 0, 0, 0, 1478, 0,
	0, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 1472, 0, 0,
	1265, 1266, 1267, 1268, 1271, 0, 1287, 0, 0, 0,
	1531, 1535, 0, 1470, 1470, 0, 1470, 1466, 0, 0,
	0, 0, 0, 0, 1470, 1406, 0, 0, 1408, 1421,
	0, 0, 1410, 1411, 0, 1414, 1415, 1470, 0, 1470,
	1419, 1402, 1403, 0, 1466, 1466, 1466, 0, 0, 1466,
	1466, 1466, 1466, 1466, 1466, 1466, 1466, 1466, 1466, 1466,
	1466, 0, 0, 0, 688, 0, 0, 676, 0, 657,
	0, 712, 714, 0, 716, 717, 719, 720, 722, 723,
	725, 726, 56, 0, 0, 268, 0, 273, 0, 834,
	0, 0, 850, 975, 866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 975, 0, 975, 975, 975,
	0, -2, 0, 0, 0, 612, 611, 0, 682, 0,
	0, 741, 0, 0, 483, 0, 490, 537, 537, 496,
	497, 492, 491, 543, 544, 540, 0, 540, 540, 741,
	0, 516, 517, 518, 537, 537, 524, 689, 525, 526,
	540, 0, 545, 546, 741, 0, 0, 741, 741, 0,
	534, 535, 536, 0, 0, 975, 0, 553, 492, 492,
	1609, 1610, 0, 984, 0, 0, 0, 556, 0, 0,
	0, 0, 613, 211, 214, 0, 217, 0, 1762, 0,
	1762, 0, 224, 0, 0, 0, 0, 0, 0, 254,
	255, 0, 0, 0, 0, 245, 248, 1127, 1128, 940,
	941, 249, 250, 294, 295, 0, 657, 711, 713, 707,
	708, 709, 0, 0, 0, 0, 0, 430, 0, 0,
	0, 588, 0, 590, 0, 0, 0, 749, 743, 745,
	812, 90, 749, 8, 77, 74, 0, 19, 0, 0,
	19, 19, 0, 19, 259, 0, 1606, 1604, 1605, 1540,
	1591, 0, 1566, 0, 1567, 1568, 1569, 1579, 1580, 0,
	0, 1562, 0, 1563, 1564, 1565, 1556, 0, 1557, 1558,
	0, 1559, 1560, 257, 0, 1471, 838, 0, 630, 643,
	625, 0, 632, 0, 1134, 614, 643, 616, 0, 632,
	657, 679, 657, 0, 324, 0, 329, 0, 0, 345,
	347, 348, 349, 334, 335, 558, 310, 311, 303, 304,
	305, 306, 307, 308, 309, 313, 100, 0, 283, 284,
	0, 0, 0, 144, 145, 146, 147, 148, 149, 151,
	135, 579, 581, 932, 944, 0, 935, 0, 154, 194,
	127, 0, 0, 1473, 1474, 1475, 1476, 1477, 1481, 0,
	1483, 1485, 1487, 1489, 0, 1507, -2, -2, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	1492, 1505, 1506, 0, 0, 0, 0, 0, 0, 1503,
	1503, 1498, 0, 1263, 0, 1284, 1288, 0, 0, 0,
	91, 1465, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 0, 0, 1472, 0, 0, 0, 1467, 1468, 0,
	0, 0, 1361, 0, 0, 1367, 1368, 1369, 0, 638,
	0, 1431, 1407, 1422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 767, 769, 0, 647, 649, 650, 0,
	677, 690, 695, 696, 699, 52, 57, 277, 278, 0,
	0, 272, 0, -2, 852, 0, 0, 867, 686, 0,
	0, 881, 428, 926, 0, 0, 0, 942, 965, 971,
	0, 975, 0, 0, 0, 1004, 868, 873, 874, 875,
	869, 870, 876, 877, 0, 684, 0, 0, 781, 482,
	0, 538, 539, 487, 1725, 492, 741, 741, 499, 493,
	500, 542, 501, 502, 503, 0, 741, 741, 537, 540,
	527, 541, 540, 530, 531, 0, 549, 554, 550, 0,
	552, 507, 508, 686, 359, 360, 401, 401, 401, 384,
	401, 0, 0, 372, 1611, 0, 0, 0, 0, 381,
	1611, 0, 1611, 1611, 1611, 1611, 1611, 1611, 1611, 0,
	0, 1611, 1611, 1611, 1611, 1611, 1611, 1611, 1611, 1611,
	1611, 1611, 0, 1611, 1611, 1611, 1611, 1611, 1113, 1611,
	0, 985, 391, 392, 393, 394, 399, 400, 0, 425,
	0, 0, 0, 428, 0, 915, 754, 0, 755, 756,
	752, 783, 807, 807, 0, 807, 787, 1133, 0, 0,
	222, 223, 212, 0, 213, 0, 225, 226, 0, 228,
	229, 230, 237, 1670, 1739, 232, 234, 0, 0, 238,
	251, 252, 253, 0, 0, 243, 244, 0, 0, 297,
	298, 300, 0, 705, 576, 1131, 577, 578, 582, 0,
	0, 585, 586, 587, 852, 0, 920, 921, 741, 0,
	750, 0, 746, 813, 0, 815, 0, 741, 0, 75,
	19, 0, 68, 65, 0, 0, 0, 0, 0, 1586,
	1536, 1607, 0, 0, 0, 1588, 0, 0, 0, 0,
	58, 659, 621, 0, 624, 640, 0, 644, 0, 0,
	636, 629, 633, 0, 0, 653, 615, 0, 0, 620,
	705, 680, 1184, 0, 330, 344, 0, 0, 0, 0,
	138, 929, 0, 139, 143, 133, 0, 0, 0, 934,
	0, 931, 936, 0, 153, 0, 0, 128, 129, 995,
	1000, 0, 1482, 1484, 1486, 1488, 1490, 0, 1493, 1503,
	1503, 1499, 0, 1494, 0, 1496, 0, 1473, 0, 1289,
	0, 0, 0, 0, 0, 0, 1351, 1352, 0, 0,
	1356, 0, 1358, 1359, 1360, 1362, 0, 0, 0, 1366,
	0, 1405, 1423, 1409, 1412, 0, 1416, 0, 1418, 0,
	693, 0, 0, 1326, 1326, 1326, 0, 0, 0, 0,
	1326, 0, 0, 0, 0, 0, 0, 0, 0, 1281,
	0, 1282, 1283, 0, 770, 659, 0, 0, 0, 702,
	700, 701, 279, 267, 269, 0, 0, 0, 840, 841,
	843, 0, 846, 847, 848, 0, 853, 854, 856, 857,
	0, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1655, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 851, 686, 0, 976, 888,
	1611, 432, 0, 0, 928, 0, 904, 0, 0, 0,
	-2, 0, 1071, 0, 0, 0, 0, 1006, 0, 0,
	0, 599, 603, 23, 687, 0, 742, 485, 0, 486,
	537, 494, 495, 741, 1133, 519, 520, 741, 537, 537,
	540, 0, 551, 0, 984, 362, 0, 1142, 1143, 402,
	0, 1149, 1158, 975, 1216, 0, 1158, 0, 0, 1160,
	1161, 0, 0, 0, 0, 385, 386, 0, 371, 0,
	0, 0, 0, 370, 0, 0, 412, 0, 0, 0,
	0, 1612, 1611, 1611, 0, 379, 380, 0, 383, 0,
	0, 0, 0, 0, 0, 0, 1611, 1611, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1104,
	0, 0, 0, 0, 0, 0, 0, 1119, 1120, 888,
	1611, 0, 0, 0, 432, 902, 911, 0, 0, 0,
	0, 0, 0, 774, 0, 0, 773, 0, 0, 0,
	0, 0, 686, 808, 0, 810, 811, 785, -2, 0,
	754, 790, 1470, 215, 216, 0, 0, 221, 239, 241,
	0, 0, 0, 240, 242, 246, 247, 296, 299, 301,
	675, 0, 0, 0, 1027, 0, 591, 739, 744, 751,
	814, 816, 91, 747, 739, 0, 78, 19, 77, 69,
	70, 0, 19, 0, 0, 0, 0, 1596, 1595, 1581,
	0, 1582, 1593, 1598, 0, 1601, 0, 663, 0, 0,
	643, 645, 0, 0, 643, 0, 0, 652, 0, 0,
	643, 678, 0, 0, 559, 101, 350, 0, 0, 0,
	0, 0, 580, 0, 933, 135, 0, 0, 155, 0,
	0, 998, 0, 1000, 1469, 1495, 1497, 0, 1504, 1500,
	1264, 1272, 1285, 0, 0, 1291, 1303, 1303, 0, 1294,
	1594, 1594, 1297, 1590, 1592, 1590, 1303, 1303, 0, 92,
	0, 0, 1357, 0, 0, 0, 639, 0, 0, 0,
	1324, 1326, 1326, 1332, 1327, 1333, 1334, 1326, 1326, 1326,
	1326, 1339, 1326, 1326, 1326, 1326, 1326, 1326, 1326, 1326,
	1322, 648, 663, 691, 692, 697, 698, 0, 271, 0,
	0, 845, 0, 0, 0, 858, 0, 0, 892, 889,
	890, 891, 0, 923, 433, 434, 435, 436, 0, 0,
	0, 927, 0, 915, 897, 0, 0, 0, 966, 967,
	968, 969, 970, -2, 979, 0, 0, 1135, 0, 0,
	0, 1135, 1135, 1135, 1014, 0, 1005, 651, 0, -2,
	0, 0, 601, 0, 0, 782, 488, 741, 512, 0,
	528, 741, 741, 537, 555, 0, 361, 403, 0, 1148,
	1173, 1159, 1173, 1217, 1173, 1173, 975, 0, 403, 0,
	0, 373, 409, 0, 0, 0, 0, 369, 406, 699,
	410, 411, 413, 0, 415, 375, 387, 388, 389, 390,
	0, 0, 0, 382, 395, 396, 397, 398, 1081, 1082,
	1083, 1086, 1087, 1088, 1089, 0, 0, 1092, 1093, 1094,
	1095, 1096, 1170, 1171, 1172, 1097, 1098, 1099, 1100, 1101,
	1102, 1103, 1121, 1122, 1123, 1124, 1125, 1126, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1112, 0, 0, 1116, 0,
	892, 0, 0, 0, 0, 923, 904, 0, 914, 0,
	916, 917, 0, 0, 622, 741, 289, 0, 777, 771,
	0, 760, 775, 776, 763, 0, 765, 0, 761, 762,
	741, 753, 784, 809, 786, 789, 791, 792, 798, 0,
	0, 0, 0, 218, 219, 220, 227, 0, 452, 233,
	706, 1132, 583, 584, 1028, 1029, 589, 737, 0, 0,
	737, 73, 76, 0, 71, 0, 0, 0, 0, 63,
	61, 1589, 0, 0, 665, 115, 0, 0, 0, 641,
	0, 646, 643, 628, 637, 627, 634, 635, 654, 643,
	619, 618, 1185, 325, 0, 930, 135, 140, 141, 142,
	136, 134, 937, 0, 939, 0, 996, 1000, 0, 0,
	1501, 1290, 1273, 1292, 1304, 1305, 1293, 1274, 1295, 1296,
	1298, 1299, 1300, 1301, 1302, 1275, 1353, 0, 1355, 1363,
	1364, 0, 1413, 1417, 0, 0, 0, 1330, 1331, 1335,
	1336, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1346,
	1347, 693, 1323, 0, 665, 703, 704, 833, 836, 842,
	844, 0, 855, 0, 0, 871, 864, 0, 0, 883,
	884, 894, 0, 0, 0, 438, 439, 0, 0, 0,
	451, 447, 448, 449, 429, 922, 911, 900, 0, 0,
	910, 0, 980, 1611, 1611, 1611, 0, 0, 1136, 1137,
	1139, 1140, 1141, 0, 0, 1135, 0, 0, 0, 1017,
	0, 0, 1008, 0, 807, 0, 0, 741, 600, 603,
	604, 685, 489, 741, 532, 529, 741, 358, 374, 404,
	0, -2, 0, 1174, 0, 1162, 1174, 0, 0, 1173,
	0, 363, 403, 0, 0, 0, 416, 419, 420, 417,
	1212, 0, 418, 0, 408, 414, 1084, 1085, 0, 1090,
	1091, 0, 1115, 0, 0, 421, 0, 0, 0, 422,
	427, 897, 0, 912, 0, 918, 919, 693, 0, 0,
	757, 778, 0, 0, 758, 0, 759, 764, 766, 288,
	793, 0, 0, 795, 796, 797, 788, 235, 727, 0,
	0, 748, 728, 0, 19, 0, 0, 66, 1599, 1602,
	667, 0, 664, 116, 0, 0, 0, 0, 642, 626,
	617, 137, 132, 938, 118, 999, 1001, 997, 0, 1365,
	0, 1326, 1325, 1319, 0, 667, 0, 861, 859, 871,
	863, 878, 893, 882, 0, 924, 925, 0, 440, 441,
	0, 444, 450, 895, 896, 0, 0, 908, 0, 0,
	0, 0, 972, 1071, 0, 988, 0, 1073, 1611, 0,
	-2, 0, -2, 1020, 0, 1015, 0, 1007, 0, 1010,
	741, 741, -2, 597, 602, 0, 513, 533, 405, 1175,
	-2, 1188, 1190, 0, 985, 1193, 1194, 0, 0, 0,
	0, 0, 0, 1238, 1202, 0, 0, 1206, 1207, 1208,
	0, 0, 1211, 0, 1519, 1520, 0, 1215, 0, 0,
	0, 0, 0, 0, 0, 1156, 364, 365, 0, 367,
	368, 1213, 407, 1611, 377, 1114, 1117, 1118, 426, 423,
	424, 900, 903, 623, 688, 290, 291, 779, 0, 772,
	802, 799, 0, 0, 738, 740, 67, 72, 0, 0,
	669, 0, 666, 0, 660, 662, 126, 631, 88, 109,
	0, 1354, 1404, 1329, 0, 1320, 0, 1314, 1315, 1316,
	1321, 669, 0, 862, 0, 879, 880, 0, 0, 437,
	442, 0, 445, 446, 901, 898, 899, 0, 906, 0,
	0, 961, 1590, 0, 981, 982, 1129, 1130, 983, 986,
	1138, 1072, 0, 0, 1071, 1030, -2, 1078, 0, 992,
	118, 1030, 1011, 0, 1018, 0, 1016, 1009, 693, 598,
	1189, 1191, 1192, 1195, 1196, 1197, 1243, 1244, 1245, 0,
	0, 1200, 1240, 1241, 1242, 1201, 0, 0, 0, 0,
	0, 1517, 1518, 1236, 0, 0, 1163, 1165, 1166, 1167,
	1168, 1169, 1164, 0, 0, 0, 1155, 1157, 366, 0,
	1611, 913, 287, 0, 0, 803, 805, 800, 801, 62,
	64, 79, 0, 668, 117, 0, 80, 0, 106, 0,
	119, 120, 0, 0, 0, 0, 1328, 1317, 0, 0,
	0, 0, 0, 1521, 1522, 1523, 0, 658, 0, 860,
	0, 885, 0, 887, 443, 905, 908, 0, 954, 0,
	699, 0, 1074, 1075, 987, 1032, 0, 984, 1080, 1611,
	994, 1032, 1003, 0, 1013, 0, 1022, 0, 1019, 688,
	1198, 1199, 0, 0, 1420, 1611, 0, 1231, 0, 954,
	954, 954, 954, 0, 376, 0, 780, 794, 0, 0,
	0, 89, 93, 0, 115, 112, 0, 121, 0, 0,
	0, 0, 0, 1306, 0, 0, 0, 1310, 1311, 1312,
	1313, 0, 872, 886, 907, 909, 953, 962, 963, 699,
	991, 0, 1069, 1079, 0, 993, 1012, 1021, 0, 1024,
	596, 1239, 0, 1205, 0, 1210, 1219, 1232, 0, 0,
	1144, 0, 1146, 0, 1150, 0, 1152, 0, 0, 378,
	804, 806, 0, 671, 661, 82, 0, 0, 110, 111,
	113, 0, 122, 0, 124, 125, 0, 1307, 1308, 1309,
	849, 955, 1611, 0, 0, 959, 960, 964, 0, 1057,
	0, 0, 1063, 0, 1070, 1084, 1023, 1203, 1209, 1218,
	1220, 1221, 0, 1233, 1234, 1235, 1237, 954, 954, 954,
	954, 1154, 670, 0, 1002, 0, 94, 0, 96, 98,
	99, 1176, 107, 108, 114, 123, 1318, 0, 957, 0,
	1033, 0, 1035, 0, 0, 0, 0, 0, 1067, 0,
	1204, 1222, 0, 1223, 0, 0, 0, 1145, 1147, 1151,
	1153, 672, 83, 84, 0, 95, 0, 0, 956, 958,
	0, 1037, 0, 1058, 0, 0, 0, 0, 0, 0,
	0, 1224, 1226, 1227, 0, 0, 1225, 0, 0, 97,
	1177, 1034, 1031, 0, 1069, 1059, 0, 1061, 0, 0,
	0, 0, 1228, 1230, 1229, 85, 86, 87, 0, 0,
	1039, 0, 1055, 1060, 1062, 1064, 0, 1068, 1066, 1178,
	1038, 0, 1051, 1036, 0, 1065, 1040, -2, 0, 1056,
	1041, -2, 0, 1049, 0, 0, 1042, 1050, 0, 1045,
	0, 0, 0, 1044, 0, -2, 1052, 0, 0, 1046,
	-2, 0, 1054, 1053,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 595, 594,
	123, 122, 124, 3, 598, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 596, 135, 597, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:748
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:755
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:761
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:769
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:775
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:779
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:794
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:798
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:804
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:809
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:813
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:845
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:852
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:872
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:878
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:885
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:893
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:899
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:908
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:918
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:926
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:934
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:942
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:952
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:960
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:970
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:977
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:986
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:996
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1000
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1006
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1010
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1016
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1025
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1035
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1039
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1045
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1054
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1058
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1064
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1085
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1098
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1105
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1109
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1115
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1119
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1125
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1132
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1140
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1144
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1158
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1162
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1166
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1171
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1175
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1179
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1185
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1194
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1205
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1209
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1215
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1219
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1225
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1229
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1235
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1259
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1278
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1282
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1286
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1291
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1295
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1302
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1310
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1317
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1322
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1329
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1334
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1338
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1362
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1366
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1372
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1378
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1396
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1413
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1436
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1440
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1444
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1449
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1453
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1459
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1472
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1483
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1496
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1500
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1510
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1523
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1536
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1542
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1548
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1555
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1563
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1572
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1576
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1580
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1584
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1588
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1592
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1599
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1603
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1609
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1616
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1625
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1629
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1635
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1639
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1643
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1647
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1651
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1655
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1659
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1663
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1667
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1671
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1675
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1679
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1683
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1687
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1691
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1695
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1699
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1703
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1707
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1711
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1715
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1719
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1723
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1727
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1731
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1735
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1739
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1743
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1747
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1751
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1755
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1759
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1763
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1767
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1779
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1783
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1787
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1791
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1795
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1799
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1803
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1807
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1811
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1815
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1819
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1823
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1827
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1831
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1844
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1851
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1858
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1868
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1872
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1878
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1885
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1893
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1897
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1901
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1905
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1911
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1915
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1921
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1928
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1935
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1944
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1974
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1978
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1982
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1988
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1994
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1998
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2005
		{
			yyVAL.str = yyDollar[3].str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2011
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2015
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2021
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2029
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2038
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2047
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2055
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2063
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2086
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2109
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2116
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2123
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2131
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2138
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2145
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2154
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2158
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2162
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2168
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2172
		{
			yyVAL.str = yyDollar[1].str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2178
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2182
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2188
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2192
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2203
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2209
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2214
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2218
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2222
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2226
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2230
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2234
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2238
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2242
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2246
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2252
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2256
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2260
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2264
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2269
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2274
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2280
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2287
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2293
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2300
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2307
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2317
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2324
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2335
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2346
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2350
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2356
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2366
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2372
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2376
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2382
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2388
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2392
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2396
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2400
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2406
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2418
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2424
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2428
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2434
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2438
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2444
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2450
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2461
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2467
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2471
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2475
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2479
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2483
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2487
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2495
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2503
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2513
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2554
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2558
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2564
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2570
		{
			yyVAL.str = yyDollar[1].str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2575
		{
			yyVAL.str = "true"
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2576
		{
			yyVAL.str = "false"
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2577
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2582
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2598
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2609
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2618
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2622
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2628
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2635
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2644
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2654
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2663
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2673
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2683
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2692
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2700
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2704
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2708
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2712
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2716
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2725
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2731
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2735
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2739
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2743
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2747
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2751
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2755
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2759
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2764
		{
			yyVAL.str = ""
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2795
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2799
		{
			yyVAL.str = string("COLUMN")
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2804
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2810
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2816
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2825
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2829
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2835
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2842
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2850
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2857
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2864
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2871
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2878
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2885
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2893
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2900
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2907
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2916
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2920
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2927
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2939
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2947
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2955
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2968
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2974
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2985
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2996
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3000
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3005
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3009
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3014
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3018
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3034
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3038
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3042
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3046
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3050
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3054
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3058
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3062
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3066
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3070
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3074
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3078
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3082
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3086
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3090
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3094
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3100
		{
			yyVAL.item = nil
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3105
		{
			yyVAL.item = nil
		}
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3145
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3151
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3159
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3163
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3167
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3176
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3180
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3186
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3191
		{
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3195
		{
		}
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3200
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3210
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3220
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3228
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3234
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3240
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3246
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3252
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3258
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3264
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3273
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3277
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3281
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3285
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3289
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3293
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3297
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3301
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3307
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3314
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3324
		{
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3326
		{
		}
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3335
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3345
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3354
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3358
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3362
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3368
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3374
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3380
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3386
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3395
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3405
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3417
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3421
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3427
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3439
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3453
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3459
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3466
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3471
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3475
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3479
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3484
		{
			yyVAL.str = ""
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3488
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3494
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3507
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3511
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3517
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3522
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3526
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3530
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3536
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3542
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3546
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3552
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3558
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3562
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3566
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3572
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3576
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3600
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3609
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3618
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3627
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3631
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3637
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3646
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3655
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3665
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3671
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3677
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3681
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3687
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3693
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3702
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3709
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3720
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3725
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3732
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3748
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3761
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3772
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3776
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3782
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3787
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3794
		{
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3796
		{
		}
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3799
		{
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3808
		{
		}
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3812
		{
		}
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3817
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3826
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3833
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3839
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3847
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3854
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3861
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3881
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3891
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3895
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3901
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3908
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3914
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3922
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3929
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3936
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3955
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3959
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3964
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3968
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3972
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3978
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3987
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3991
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3997
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4001
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4007
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4011
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4017
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4022
		{
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4026
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4033
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4037
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4044
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4049
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4053
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4059
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4063
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4069
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4073
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4078
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4082
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4095
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4102
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4109
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4127
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4146
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4152
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4159
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4163
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4176
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4180
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4185
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4189
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4196
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4201
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4208
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4214
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4218
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4222
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4226
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4230
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4234
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4240
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4247
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4256
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4260
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4266
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4274
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4278
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4283
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4287
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4293
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4297
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4301
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4306
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4310
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4316
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4322
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4326
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4332
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4337
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4341
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4345
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4350
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4354
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4358
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4363
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4367
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4375
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4379
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4383
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4397
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4401
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4411
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4421
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4431
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4443
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4451
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4459
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4468
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4476
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4484
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4492
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4500
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4508
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4516
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4524
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4532
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4542
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4553
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4567
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4571
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4575
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4580
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4584
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4588
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4597
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4601
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4606
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4610
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4615
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4619
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4625
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4629
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4635
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4639
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4644
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4648
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4653
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4661
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4667
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4675
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4683
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4693
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4699
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4708
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4717
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4726
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4736
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4740
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4750
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4754
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4758
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4762
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4768
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4778
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4782
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4788
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4794
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4798
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4804
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4810
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4814
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4818
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4824
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4828
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4834
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4838
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4844
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4848
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4854
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4858
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4868
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4881
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4887
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4893
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4906
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4917
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4924
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4928
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4934
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4944
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4948
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4952
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4957
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4961
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4965
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4969
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4974
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4978
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4982
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4986
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4990
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4995
		{
			yyVAL.str = ""
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4999
		{
			yyVAL.str = yyDollar[1].str
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5003
		{
			yyVAL.str = yyDollar[2].str
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5009
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5015
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5019
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5023
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5027
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5031
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5037
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 833:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5072
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5082
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5088
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 836:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5094
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5104
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5109
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5115
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5122
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5126
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5132
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5138
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5143
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5147
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5151
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5155
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5162
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5174
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5179
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5185
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5192
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5196
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5202
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5208
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5212
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5216
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5222
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5228
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5234
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5243
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5254
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5266
		{
			yyVAL.str = yyDollar[1].str
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5270
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5276
		{
			yyVAL.str = "OR REPLACE"
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5280
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5284
		{
			yyVAL.str = "DEFINER = "
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5288
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5293
		{
			yyVAL.str = ""
		}
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5297
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5311
		{
			yyVAL.str = ""
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5319
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5325
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5335
		{
			yyVAL.str = yyDollar[1].str
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5339
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5345
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5352
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5358
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5366
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5372
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5379
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5386
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5394
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5400
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5409
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5421
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5433
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5445
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5451
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5458
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5466
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5472
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5480
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5486
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5494
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5500
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5509
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5513
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5518
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5522
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5529
		{
			yyVAL.str = yyDollar[3].str
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5534
		{
			yyVAL.str = ""
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5538
		{
			yyVAL.str = yyDollar[2].str
		}
	case 913:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5544
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5558
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5568
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5572
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5578
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5584
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5590
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5599
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5608
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5617
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5622
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5628
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5636
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5742
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5746
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5752
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5762
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5766
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5772
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5782
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5786
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5790
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5795
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5799
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5805
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5812
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5818
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5827
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5834
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5843
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5847
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5853
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5867
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5871
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5875
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5880
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5884
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5888
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5892
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5898
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5917
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5921
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5943
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5947
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5951
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5955
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5959
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5965
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5969
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5975
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5980
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5985
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5989
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5993
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5997
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6001
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6007
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6018
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6022
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6032
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6036
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6041
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6045
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6051
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6055
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6061
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6065
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6069
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6074
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6078
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6084
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6095
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  *yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6106
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  *yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6117
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6121
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6127
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6139
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6148
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6161
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6168
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6178
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6186
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6197
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6201
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6206
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6210
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6217
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6228
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6241
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6255
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6259
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6263
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6270
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6277
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6284
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6291
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6295
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6299
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6303
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6307
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6314
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6321
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6325
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6332
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6339
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6343
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6350
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6357
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6364
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6371
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6375
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6380
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6384
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6388
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6397
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6407
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6411
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6418
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6425
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6429
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6438
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6442
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6448
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6452
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6458
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6467
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6477
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6481
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6487
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6491
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6497
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6504
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6513
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6517
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6522
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6526
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6531
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6535
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6540
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6544
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6554
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6558
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6569
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6577
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6585
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6593
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6604
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6613
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6623
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6633
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6637
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6642
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6646
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6651
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6655
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6661
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6665
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6671
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6676
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6680
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6686
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6690
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6694
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6700
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6704
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6708
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6712
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6716
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6720
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6724
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6729
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6733
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6737
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6741
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6745
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6749
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6753
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6757
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6761
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6765
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6769
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6773
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6777
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6781
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6785
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6789
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6793
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6797
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6801
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6805
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6809
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6813
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6817
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6821
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6825
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6829
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6833
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6837
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6843
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6847
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6853
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6859
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6863
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6869
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6873
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6877
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6881
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6885
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6889
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6903
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6907
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6916
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6921
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6927
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6934
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6938
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6944
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6948
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6952
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6958
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6962
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6968
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6977
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6986
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7009
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7034
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7048
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7054
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7063
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7072
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7081
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7090
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7100
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7108
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7114
		{
			yyVAL.str = ""
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7118
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7128
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7134
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7140
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7159
		{
			yyVAL.str = ""
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7163
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7169
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7175
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7179
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7183
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7189
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7193
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7197
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7201
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7207
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7211
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7215
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7220
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7224
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7230
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7234
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7240
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7244
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7248
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7252
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7256
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7260
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7265
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7269
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7273
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7277
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7281
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7285
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7289
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7293
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7297
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7301
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7314
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7318
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7322
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7326
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7330
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7334
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7340
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7344
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7349
		{
			yyVAL.str = ""
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7353
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7359
		{
			yyVAL.str = ""
		}
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7363
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1218:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7369
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7381
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7388
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7395
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7402
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7409
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7418
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7424
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7430
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7434
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7438
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7442
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7446
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7451
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7458
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7462
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7466
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7471
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7475
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7480
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7484
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7500
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7506
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7510
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7514
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7518
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7522
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7526
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7530
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7534
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7538
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7542
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7546
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7550
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7554
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7560
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7564
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7568
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7572
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7576
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7580
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7584
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7588
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7592
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7596
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7600
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7604
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7609
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7617
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7622
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7626
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7635
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7639
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7643
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7647
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7651
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7657
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7665
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7673
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7682
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7686
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7691
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7695
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7701
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7705
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7711
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7720
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7732
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7749
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7766
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7779
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7792
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7804
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7818
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7833
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7848
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7865
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7880
		{
		}
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7887
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7891
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7895
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7901
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7905
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7909
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7913
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7919
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7923
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7927
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7933
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7941
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7951
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7955
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7962
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7967
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7971
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7976
		{
			yyVAL.str = ","
		}
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7980
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1326:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7985
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7992
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8018
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8029
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8039
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8049
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8059
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8068
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8077
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8087
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8097
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8107
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8117
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8127
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8137
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8147
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8157
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8167
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8177
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8187
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8197
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8216
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8224
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8232
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8240
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8248
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8258
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8266
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8275
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8283
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8291
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8299
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8307
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8318
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8328
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8340
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8351
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8373
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8409
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8421
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8433
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8444
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8452
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8459
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8466
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8478
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8486
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8496
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8506
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8514
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8525
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8534
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8543
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8551
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8561
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8569
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8579
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8583
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8589
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8593
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8612
		{
		}
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8614
		{
		}
	case 1465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8655
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8666
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8670
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8674
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8680
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8685
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8689
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8695
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8699
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8706
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8710
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8714
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8722
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8726
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8730
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8734
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8740
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8744
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8748
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8752
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8756
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8760
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8764
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8768
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8772
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8776
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8784
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8788
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8792
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8796
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8800
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8804
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8808
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8812
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8816
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8820
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8826
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8830
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8836
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8840
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8847
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8851
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8855
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8861
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8865
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8869
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8873
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8877
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8881
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8885
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8891
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8895
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8899
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8903
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8909
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8922
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8927
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8933
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8937
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8950
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8955
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8959
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8963
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8967
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8971
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8978
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8982
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8996
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9000
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9007
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9018
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9023
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9029
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9041
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9053
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9065
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9078
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9091
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9104
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9117
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9130
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9143
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9156
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9169
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9182
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9195
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9210
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9237
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9279
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9315
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9351
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9368
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9380
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9400
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9420
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9440
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9456
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9469
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9482
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9495
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9508
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9520
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9532
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9544
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9556
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9568
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9580
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9592
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9604
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9616
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9629
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9642
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9655
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9668
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9683
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9691
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9700
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9710
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9733
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9738
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9744
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9751
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9755
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9760
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9764
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9770
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9776
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9783
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9790
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9799
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9806
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9813
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9822
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9826
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9830
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9836
		{
		}
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9838
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9848
		{
			yyVAL.str = ""
		}
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9852
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
