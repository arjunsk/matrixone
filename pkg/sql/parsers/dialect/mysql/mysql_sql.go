// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const VECF32 = 57530
const VECF64 = 57531
const GEOMETRY = 57532
const POINT = 57533
const LINESTRING = 57534
const POLYGON = 57535
const GEOMETRYCOLLECTION = 57536
const MULTIPOINT = 57537
const MULTILINESTRING = 57538
const MULTIPOLYGON = 57539
const INT1 = 57540
const INT2 = 57541
const INT3 = 57542
const INT4 = 57543
const INT8 = 57544
const S3OPTION = 57545
const SQL_SMALL_RESULT = 57546
const SQL_BIG_RESULT = 57547
const SQL_BUFFER_RESULT = 57548
const LOW_PRIORITY = 57549
const HIGH_PRIORITY = 57550
const DELAYED = 57551
const CREATE = 57552
const ALTER = 57553
const DROP = 57554
const RENAME = 57555
const ANALYZE = 57556
const ADD = 57557
const RETURNS = 57558
const SCHEMA = 57559
const TABLE = 57560
const SEQUENCE = 57561
const INDEX = 57562
const VIEW = 57563
const TO = 57564
const IGNORE = 57565
const IF = 57566
const PRIMARY = 57567
const COLUMN = 57568
const CONSTRAINT = 57569
const SPATIAL = 57570
const FULLTEXT = 57571
const FOREIGN = 57572
const KEY_BLOCK_SIZE = 57573
const SHOW = 57574
const DESCRIBE = 57575
const EXPLAIN = 57576
const DATE = 57577
const ESCAPE = 57578
const REPAIR = 57579
const OPTIMIZE = 57580
const TRUNCATE = 57581
const MAXVALUE = 57582
const PARTITION = 57583
const REORGANIZE = 57584
const LESS = 57585
const THAN = 57586
const PROCEDURE = 57587
const TRIGGER = 57588
const STATUS = 57589
const VARIABLES = 57590
const ROLE = 57591
const PROXY = 57592
const AVG_ROW_LENGTH = 57593
const STORAGE = 57594
const DISK = 57595
const MEMORY = 57596
const CHECKSUM = 57597
const COMPRESSION = 57598
const DATA = 57599
const DIRECTORY = 57600
const DELAY_KEY_WRITE = 57601
const ENCRYPTION = 57602
const ENGINE = 57603
const MAX_ROWS = 57604
const MIN_ROWS = 57605
const PACK_KEYS = 57606
const ROW_FORMAT = 57607
const STATS_AUTO_RECALC = 57608
const STATS_PERSISTENT = 57609
const STATS_SAMPLE_PAGES = 57610
const DYNAMIC = 57611
const COMPRESSED = 57612
const REDUNDANT = 57613
const COMPACT = 57614
const FIXED = 57615
const COLUMN_FORMAT = 57616
const AUTO_RANDOM = 57617
const ENGINE_ATTRIBUTE = 57618
const SECONDARY_ENGINE_ATTRIBUTE = 57619
const INSERT_METHOD = 57620
const RESTRICT = 57621
const CASCADE = 57622
const ACTION = 57623
const PARTIAL = 57624
const SIMPLE = 57625
const CHECK = 57626
const ENFORCED = 57627
const RANGE = 57628
const LIST = 57629
const ALGORITHM = 57630
const LINEAR = 57631
const PARTITIONS = 57632
const SUBPARTITION = 57633
const SUBPARTITIONS = 57634
const CLUSTER = 57635
const TYPE = 57636
const ANY = 57637
const SOME = 57638
const EXTERNAL = 57639
const LOCALFILE = 57640
const URL = 57641
const PREPARE = 57642
const DEALLOCATE = 57643
const RESET = 57644
const EXTENSION = 57645
const INCREMENT = 57646
const CYCLE = 57647
const MINVALUE = 57648
const PUBLICATION = 57649
const SUBSCRIPTIONS = 57650
const PUBLICATIONS = 57651
const PROPERTIES = 57652
const PARSER = 57653
const VISIBLE = 57654
const INVISIBLE = 57655
const BTREE = 57656
const HASH = 57657
const RTREE = 57658
const BSI = 57659
const IVFFLAT = 57660
const REINDEX = 57661
const ZONEMAP = 57662
const LEADING = 57663
const BOTH = 57664
const TRAILING = 57665
const UNKNOWN = 57666
const EXPIRE = 57667
const ACCOUNT = 57668
const ACCOUNTS = 57669
const UNLOCK = 57670
const DAY = 57671
const NEVER = 57672
const PUMP = 57673
const MYSQL_COMPATIBILITY_MODE = 57674
const MODIFY = 57675
const CHANGE = 57676
const SECOND = 57677
const ASCII = 57678
const COALESCE = 57679
const COLLATION = 57680
const HOUR = 57681
const MICROSECOND = 57682
const MINUTE = 57683
const MONTH = 57684
const QUARTER = 57685
const REPEAT = 57686
const REVERSE = 57687
const ROW_COUNT = 57688
const WEEK = 57689
const REVOKE = 57690
const FUNCTION = 57691
const PRIVILEGES = 57692
const TABLESPACE = 57693
const EXECUTE = 57694
const SUPER = 57695
const GRANT = 57696
const OPTION = 57697
const REFERENCES = 57698
const REPLICATION = 57699
const SLAVE = 57700
const CLIENT = 57701
const USAGE = 57702
const RELOAD = 57703
const FILE = 57704
const TEMPORARY = 57705
const ROUTINE = 57706
const EVENT = 57707
const SHUTDOWN = 57708
const NULLX = 57709
const AUTO_INCREMENT = 57710
const APPROXNUM = 57711
const SIGNED = 57712
const UNSIGNED = 57713
const ZEROFILL = 57714
const ENGINES = 57715
const LOW_CARDINALITY = 57716
const AUTOEXTEND_SIZE = 57717
const ADMIN_NAME = 57718
const RANDOM = 57719
const SUSPEND = 57720
const ATTRIBUTE = 57721
const HISTORY = 57722
const REUSE = 57723
const CURRENT = 57724
const OPTIONAL = 57725
const FAILED_LOGIN_ATTEMPTS = 57726
const PASSWORD_LOCK_TIME = 57727
const UNBOUNDED = 57728
const SECONDARY = 57729
const RESTRICTED = 57730
const USER = 57731
const IDENTIFIED = 57732
const CIPHER = 57733
const ISSUER = 57734
const X509 = 57735
const SUBJECT = 57736
const SAN = 57737
const REQUIRE = 57738
const SSL = 57739
const NONE = 57740
const PASSWORD = 57741
const SHARED = 57742
const EXCLUSIVE = 57743
const MAX_QUERIES_PER_HOUR = 57744
const MAX_UPDATES_PER_HOUR = 57745
const MAX_CONNECTIONS_PER_HOUR = 57746
const MAX_USER_CONNECTIONS = 57747
const FORMAT = 57748
const VERBOSE = 57749
const CONNECTION = 57750
const TRIGGERS = 57751
const PROFILES = 57752
const LOAD = 57753
const INLINE = 57754
const INFILE = 57755
const TERMINATED = 57756
const OPTIONALLY = 57757
const ENCLOSED = 57758
const ESCAPED = 57759
const STARTING = 57760
const LINES = 57761
const ROWS = 57762
const IMPORT = 57763
const DISCARD = 57764
const MODUMP = 57765
const OVER = 57766
const PRECEDING = 57767
const FOLLOWING = 57768
const GROUPS = 57769
const DATABASES = 57770
const TABLES = 57771
const SEQUENCES = 57772
const EXTENDED = 57773
const FULL = 57774
const PROCESSLIST = 57775
const FIELDS = 57776
const COLUMNS = 57777
const OPEN = 57778
const ERRORS = 57779
const WARNINGS = 57780
const INDEXES = 57781
const SCHEMAS = 57782
const NODE = 57783
const LOCKS = 57784
const ROLES = 57785
const TABLE_NUMBER = 57786
const COLUMN_NUMBER = 57787
const TABLE_VALUES = 57788
const TABLE_SIZE = 57789
const NAMES = 57790
const GLOBAL = 57791
const PERSIST = 57792
const SESSION = 57793
const ISOLATION = 57794
const LEVEL = 57795
const READ = 57796
const WRITE = 57797
const ONLY = 57798
const REPEATABLE = 57799
const COMMITTED = 57800
const UNCOMMITTED = 57801
const SERIALIZABLE = 57802
const LOCAL = 57803
const EVENTS = 57804
const PLUGINS = 57805
const CURRENT_TIMESTAMP = 57806
const DATABASE = 57807
const CURRENT_TIME = 57808
const LOCALTIME = 57809
const LOCALTIMESTAMP = 57810
const UTC_DATE = 57811
const UTC_TIME = 57812
const UTC_TIMESTAMP = 57813
const REPLACE = 57814
const CONVERT = 57815
const SEPARATOR = 57816
const TIMESTAMPDIFF = 57817
const CURRENT_DATE = 57818
const CURRENT_USER = 57819
const CURRENT_ROLE = 57820
const SECOND_MICROSECOND = 57821
const MINUTE_MICROSECOND = 57822
const MINUTE_SECOND = 57823
const HOUR_MICROSECOND = 57824
const HOUR_SECOND = 57825
const HOUR_MINUTE = 57826
const DAY_MICROSECOND = 57827
const DAY_SECOND = 57828
const DAY_MINUTE = 57829
const DAY_HOUR = 57830
const YEAR_MONTH = 57831
const SQL_TSI_HOUR = 57832
const SQL_TSI_DAY = 57833
const SQL_TSI_WEEK = 57834
const SQL_TSI_MONTH = 57835
const SQL_TSI_QUARTER = 57836
const SQL_TSI_YEAR = 57837
const SQL_TSI_SECOND = 57838
const SQL_TSI_MINUTE = 57839
const RECURSIVE = 57840
const CONFIG = 57841
const DRAINER = 57842
const SOURCE = 57843
const STREAM = 57844
const HEADERS = 57845
const CONNECTOR = 57846
const MATCH = 57847
const AGAINST = 57848
const BOOLEAN = 57849
const LANGUAGE = 57850
const WITH = 57851
const QUERY = 57852
const EXPANSION = 57853
const WITHOUT = 57854
const VALIDATION = 57855
const ADDDATE = 57856
const BIT_AND = 57857
const BIT_OR = 57858
const BIT_XOR = 57859
const CAST = 57860
const COUNT = 57861
const APPROX_COUNT = 57862
const APPROX_COUNT_DISTINCT = 57863
const APPROX_PERCENTILE = 57864
const CURDATE = 57865
const CURTIME = 57866
const DATE_ADD = 57867
const DATE_SUB = 57868
const EXTRACT = 57869
const GROUP_CONCAT = 57870
const MAX = 57871
const MID = 57872
const MIN = 57873
const NOW = 57874
const POSITION = 57875
const SESSION_USER = 57876
const STD = 57877
const STDDEV = 57878
const MEDIAN = 57879
const STDDEV_POP = 57880
const STDDEV_SAMP = 57881
const SUBDATE = 57882
const SUBSTR = 57883
const SUBSTRING = 57884
const SUM = 57885
const SYSDATE = 57886
const SYSTEM_USER = 57887
const TRANSLATE = 57888
const TRIM = 57889
const VARIANCE = 57890
const VAR_POP = 57891
const VAR_SAMP = 57892
const AVG = 57893
const RANK = 57894
const ROW_NUMBER = 57895
const DENSE_RANK = 57896
const BIT_CAST = 57897
const NEXTVAL = 57898
const SETVAL = 57899
const CURRVAL = 57900
const LASTVAL = 57901
const ARROW = 57902
const ROW = 57903
const OUTFILE = 57904
const HEADER = 57905
const MAX_FILE_SIZE = 57906
const FORCE_QUOTE = 57907
const PARALLEL = 57908
const UNUSED = 57909
const BINDINGS = 57910
const DO = 57911
const DECLARE = 57912
const LOOP = 57913
const WHILE = 57914
const LEAVE = 57915
const ITERATE = 57916
const UNTIL = 57917
const CALL = 57918
const SPBEGIN = 57919
const BACKEND = 57920
const SERVERS = 57921
const KILL = 57922
const BACKUP = 57923
const FILESYSTEM = 57924
const QUERY_RESULT = 57925

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"IVFFLAT",
	"REINDEX",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10418

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 115,
	21, 699,
	-2, 680,
	-1, 132,
	235, 1035,
	237, 956,
	-2, 998,
	-1, 155,
	42, 518,
	237, 518,
	264, 525,
	265, 525,
	456, 518,
	-2, 551,
	-1, 191,
	604, 1752,
	-2, 434,
	-1, 528,
	316, 133,
	429, 133,
	430, 133,
	-2, 1662,
	-1, 592,
	81, 1457,
	-2, 1806,
	-1, 593,
	81, 1475,
	-2, 1777,
	-1, 597,
	81, 1476,
	-2, 1805,
	-1, 623,
	81, 1387,
	-2, 1874,
	-1, 624,
	81, 1388,
	-2, 1873,
	-1, 625,
	81, 1389,
	-2, 1863,
	-1, 626,
	81, 1837,
	-2, 1858,
	-1, 627,
	81, 1838,
	-2, 1859,
	-1, 628,
	81, 1839,
	-2, 1865,
	-1, 629,
	81, 1840,
	-2, 1847,
	-1, 630,
	81, 1841,
	-2, 1856,
	-1, 631,
	81, 1842,
	-2, 1866,
	-1, 632,
	81, 1843,
	-2, 1867,
	-1, 633,
	81, 1844,
	-2, 1872,
	-1, 634,
	81, 1845,
	-2, 1877,
	-1, 635,
	81, 1846,
	-2, 1878,
	-1, 637,
	81, 1454,
	-2, 1650,
	-1, 641,
	81, 1459,
	-2, 1663,
	-1, 644,
	81, 1463,
	-2, 1681,
	-1, 648,
	81, 1467,
	-2, 1723,
	-1, 649,
	81, 1468,
	-2, 1801,
	-1, 657,
	81, 1478,
	-2, 1786,
	-1, 658,
	81, 1479,
	-2, 1830,
	-1, 659,
	81, 1480,
	-2, 1796,
	-1, 660,
	81, 1481,
	-2, 1820,
	-1, 671,
	81, 1365,
	-2, 1868,
	-1, 672,
	81, 1366,
	-2, 1869,
	-1, 673,
	81, 1367,
	-2, 1870,
	-1, 677,
	21, 700,
	-2, 663,
	-1, 758,
	451, 551,
	452, 551,
	-2, 519,
	-1, 802,
	122, 1650,
	133, 1650,
	153, 1650,
	-2, 1625,
	-1, 908,
	21, 700,
	-2, 663,
	-1, 1008,
	21, 699,
	-2, 1262,
	-1, 1127,
	518, 999,
	519, 999,
	-2, 874,
	-1, 1384,
	81, 1525,
	-2, 1803,
	-1, 1385,
	81, 1526,
	-2, 1804,
	-1, 1524,
	82, 846,
	-2, 852,
	-1, 1910,
	82, 1611,
	154, 1611,
	-2, 1788,
	-1, 1911,
	82, 1611,
	154, 1611,
	-2, 1787,
	-1, 1912,
	82, 1587,
	154, 1587,
	-2, 1774,
	-1, 1913,
	82, 1588,
	154, 1588,
	-2, 1779,
	-1, 1914,
	82, 1589,
	154, 1589,
	-2, 1711,
	-1, 1915,
	82, 1590,
	154, 1590,
	-2, 1705,
	-1, 1916,
	82, 1591,
	154, 1591,
	-2, 1641,
	-1, 1917,
	82, 1592,
	154, 1592,
	-2, 1776,
	-1, 1918,
	82, 1593,
	154, 1593,
	-2, 1709,
	-1, 1919,
	82, 1594,
	154, 1594,
	-2, 1704,
	-1, 1920,
	82, 1595,
	154, 1595,
	-2, 1695,
	-1, 1921,
	82, 1611,
	154, 1611,
	-2, 1696,
	-1, 1922,
	82, 1611,
	154, 1611,
	-2, 1697,
	-1, 1924,
	82, 1600,
	154, 1600,
	-2, 1820,
	-1, 1925,
	82, 1578,
	154, 1578,
	-2, 1806,
	-1, 1926,
	82, 1609,
	154, 1609,
	-2, 1777,
	-1, 1927,
	82, 1609,
	154, 1609,
	-2, 1805,
	-1, 1928,
	82, 1609,
	154, 1609,
	-2, 1664,
	-1, 1929,
	82, 1607,
	154, 1607,
	-2, 1796,
	-1, 1930,
	82, 1604,
	154, 1604,
	-2, 1686,
	-1, 1931,
	81, 1559,
	82, 1559,
	154, 1559,
	387, 1559,
	388, 1559,
	389, 1559,
	-2, 1640,
	-1, 1932,
	81, 1560,
	82, 1560,
	154, 1560,
	387, 1560,
	388, 1560,
	389, 1560,
	-2, 1642,
	-1, 1933,
	81, 1563,
	82, 1563,
	154, 1563,
	387, 1563,
	388, 1563,
	389, 1563,
	-2, 1778,
	-1, 1934,
	81, 1565,
	82, 1565,
	154, 1565,
	387, 1565,
	388, 1565,
	389, 1565,
	-2, 1761,
	-1, 1935,
	81, 1567,
	82, 1567,
	154, 1567,
	387, 1567,
	388, 1567,
	389, 1567,
	-2, 1710,
	-1, 1936,
	81, 1569,
	82, 1569,
	154, 1569,
	387, 1569,
	388, 1569,
	389, 1569,
	-2, 1691,
	-1, 1937,
	81, 1570,
	82, 1570,
	154, 1570,
	387, 1570,
	388, 1570,
	389, 1570,
	-2, 1692,
	-1, 1938,
	81, 1572,
	82, 1572,
	154, 1572,
	387, 1572,
	388, 1572,
	389, 1572,
	-2, 1639,
	-1, 1939,
	82, 1614,
	154, 1614,
	387, 1614,
	388, 1614,
	389, 1614,
	-2, 1669,
	-1, 1940,
	82, 1614,
	154, 1614,
	387, 1614,
	388, 1614,
	389, 1614,
	-2, 1682,
	-1, 1941,
	82, 1617,
	154, 1617,
	387, 1617,
	388, 1617,
	389, 1617,
	-2, 1665,
	-1, 1942,
	82, 1617,
	154, 1617,
	387, 1617,
	388, 1617,
	389, 1617,
	-2, 1726,
	-1, 1943,
	82, 1614,
	154, 1614,
	387, 1614,
	388, 1614,
	389, 1614,
	-2, 1746,
	-1, 1959,
	105, 992,
	149, 992,
	188, 992,
	191, 992,
	277, 992,
	-2, 985,
	-1, 2099,
	21, 699,
	-2, 793,
	-1, 2298,
	105, 992,
	149, 992,
	188, 992,
	191, 992,
	277, 992,
	-2, 986,
	-1, 2318,
	79, 609,
	154, 609,
	-2, 1148,
	-1, 2657,
	191, 992,
	301, 1230,
	-2, 1202,
	-1, 2799,
	105, 992,
	149, 992,
	188, 992,
	191, 992,
	-2, 1091,
	-1, 2801,
	105, 992,
	149, 992,
	188, 992,
	191, 992,
	-2, 1091,
	-1, 2811,
	79, 609,
	154, 609,
	-2, 1149,
	-1, 2819,
	191, 992,
	301, 1230,
	-2, 1203,
	-1, 2947,
	105, 992,
	149, 992,
	188, 992,
	191, 992,
	-2, 1092,
	-1, 3312,
	82, 1053,
	154, 1053,
	-2, 992,
	-1, 3316,
	82, 1053,
	154, 1053,
	-2, 992,
	-1, 3330,
	82, 1057,
	154, 1057,
	-2, 992,
	-1, 3335,
	82, 1058,
	154, 1058,
	-2, 992,
}

const yyPrivate = 57344

const yyLast = 39034

var yyAct = [...]int{
	559, 1606, 3316, 3315, 3324, 3295, 182, 1302, 1364, 537,
	3187, 539, 561, 3248, 532, 3213, 3266, 3195, 2675, 3196,
	547, 2894, 3107, 1885, 2987, 3121, 2833, 1041, 3098, 1360,
	2899, 1221, 2738, 3125, 2930, 2931, 2928, 3023, 589, 2739,
	444, 3059, 801, 678, 2897, 2307, 2795, 3013, 1292, 3108,
	451, 3110, 456, 456, 1559, 1162, 2935, 2779, 456, 472,
	481, 541, 2321, 481, 2946, 2820, 2625, 1367, 2889, 2765,
	1692, 2000, 2436, 167, 2949, 2609, 2435, 1695, 2768, 2418,
	2358, 2672, 2654, 2661, 2428, 1660, 2303, 2736, 1789, 492,
	1758, 2724, 2003, 2457, 2434, 2093, 2623, 2707, 2431, 2593,
	2288, 2590, 486, 2588, 2626, 2660, 1111, 1971, 902, 2077,
	1906, 2299, 530, 1707, 1898, 2494, 1889, 2337, 1214, 1281,
	531, 1288, 1888, 1504, 536, 1785, 36, 1759, 2532, 1767,
	2141, 1766, 1137, 1732, 1688, 734, 2477, 2082, 1663, 2094,
	1661, 2339, 807, 2277, 2272, 1784, 55, 1588, 2001, 1301,
	1597, 1170, 1135, 178, 8, 1534, 6, 1908, 1970, 444,
	177, 7, 2158, 1512, 1293, 854, 1296, 2204, 538, 1358,
	1786, 540, 1255, 2121, 1818, 1230, 1904, 114, 35, 1200,
	1950, 2628, 182, 1363, 182, 478, 845, 846, 450, 1796,
	2627, 1571, 529, 1414, 839, 840, 2234, 1996, 765, 844,
	1171, 531, 1151, 1570, 2235, 805, 548, 1398, 1349, 1762,
	26, 919, 1765, 15, 1262, 1722, 1080, 13, 1357, 794,
	2101, 1199, 465, 1197, 1533, 1421, 14, 1748, 733, 494,
	1420, 23, 16, 675, 32, 10, 468, 495, 168, 711,
	1163, 1254, 1793, 480, 161, 3049, 1561, 1106, 731, 842,
	1147, 164, 715, 2260, 2260, 841, 753, 843, 677, 1803,
	2260, 2782, 2731, 2193, 2147, 2145, 2144, 2142, 1517, 477,
	1269, 1265, 473, 837, 838, 838, 475, 166, 1042, 838,
	1097, 452, 1183, 1267, 795, 476, 2887, 2823, 977, 978,
	979, 976, 2490, 474, 977, 978, 979, 976, 2488, 1737,
	461, 3019, 3014, 2890, 2031, 2737, 484, 1508, 1036, 811,
	3112, 1761, 676, 2039, 686, 2306, 3178, 1098, 165, 3070,
	8, 165, 165, 836, 443, 2835, 165, 7, 2917, 940,
	165, 51, 157, 133, 2308, 165, 2766, 165, 2826, 1316,
	808, 810, 165, 51, 157, 133, 165, 2179, 2821, 165,
	51, 157, 133, 2843, 2844, 1309, 2187, 1541, 2912, 2822,
	1790, 3143, 1543, 3071, 490, 2556, 113, 1122, 1121, 1313,
	2509, 1528, 1099, 666, 2502, 665, 667, 668, 1801, 669,
	670, 491, 1127, 113, 1954, 1306, 1350, 162, 2915, 1354,
	1315, 162, 2119, 974, 1705, 162, 2827, 2120, 1179, 162,
	955, 1180, 2463, 956, 162, 1334, 1308, 2464, 2465, 1673,
	1674, 162, 1672, 1353, 2107, 162, 687, 2106, 162, 2274,
	2108, 1518, 1519, 948, 679, 1201, 950, 1203, 2159, 2275,
	1166, 958, 774, 1159, 1165, 1168, 1169, 1168, 1169, 2908,
	3199, 3200, 1584, 1366, 972, 804, 3231, 803, 967, 3115,
	3174, 3114, 3173, 3115, 951, 456, 3113, 3172, 3114, 3113,
	1876, 3217, 3218, 3021, 2495, 456, 912, 3229, 3024, 3025,
	3026, 3027, 2740, 3177, 3100, 3103, 3100, 2273, 2496, 3017,
	2497, 2740, 922, 481, 481, 1370, 456, 1182, 2174, 2842,
	913, 2004, 1805, 3118, 1355, 2374, 2749, 2769, 1679, 1345,
	1668, 1797, 2776, 2071, 1949, 907, 909, 2604, 953, 783,
	1268, 1266, 1689, 3044, 1745, 2922, 2831, 1352, 1275, 1274,
	722, 2263, 2845, 970, 971, 3117, 943, 2520, 969, 2184,
	2037, 944, 2888, 2422, 2489, 3047, 2074, 922, 2828, 2832,
	2830, 2829, 2919, 2073, 2078, 132, 2602, 163, 980, 2280,
	1010, 2522, 455, 455, 3180, 3181, 946, 1009, 463, 3224,
	1683, 2594, 2673, 2674, 2618, 1018, 906, 155, 949, 952,
	3233, 954, 3067, 2907, 2314, 2636, 2837, 2838, 2598, 935,
	2909, 3131, 483, 911, 482, 2427, 806, 1956, 1025, 1455,
	3198, 912, 2850, 3126, 945, 3309, 478, 478, 1369, 1368,
	848, 2599, 2600, 3325, 3257, 908, 2857, 3228, 3036, 3189,
	3264, 3037, 2900, 525, 2860, 1146, 527, 2601, 811, 3289,
	2845, 526, 3185, 3186, 2048, 3189, 3031, 1802, 1157, 2020,
	2967, 2047, 2824, 1351, 3043, 1999, 2022, 926, 2836, 1191,
	2978, 1703, 1704, 2123, 2286, 1181, 1210, 957, 1209, 808,
	810, 779, 1045, 1144, 778, 965, 966, 2068, 2069, 1096,
	1376, 1379, 1380, 933, 3039, 1807, 1809, 1810, 3326, 2677,
	947, 1377, 1143, 2973, 924, 923, 1161, 1160, 1142, 3296,
	477, 477, 3060, 473, 473, 903, 2573, 475, 475, 811,
	2596, 2803, 3332, 2021, 3048, 3038, 476, 476, 1104, 451,
	1107, 1791, 2752, 2526, 474, 474, 915, 916, 1046, 2259,
	456, 2402, 1012, 1013, 1014, 1015, 3269, 3320, 1077, 1791,
	808, 810, 1819, 2017, 1999, 932, 928, 929, 3068, 924,
	923, 2885, 1791, 734, 1112, 2988, 2989, 2990, 2992, 2993,
	784, 2991, 960, 2006, 838, 961, 838, 838, 838, 3069,
	490, 3179, 2669, 838, 917, 838, 1016, 3097, 479, 780,
	2308, 1198, 1792, 2180, 1441, 479, 2143, 2841, 2525, 940,
	2111, 2035, 1270, 963, 1804, 2292, 2293, 2294, 2295, 2296,
	456, 1794, 1193, 1118, 1167, 2474, 2475, 1125, 444, 444,
	1124, 2459, 2461, 1123, 1806, 3234, 485, 444, 444, 2980,
	2009, 1225, 1225, 2583, 456, 676, 2262, 2916, 1164, 1113,
	1114, 1115, 1116, 1117, 2605, 1119, 1168, 1169, 489, 52,
	3045, 1126, 782, 481, 1107, 451, 52, 2840, 1258, 1258,
	1223, 1223, 134, 1227, 2918, 134, 134, 1168, 1169, 182,
	134, 1690, 1257, 1257, 134, 3319, 2670, 1158, 444, 134,
	959, 134, 3270, 2279, 939, 724, 134, 725, 2523, 2676,
	134, 1232, 2188, 134, 3036, 2372, 2595, 3037, 3331, 1140,
	2375, 934, 2376, 2377, 1145, 2923, 2969, 1054, 1055, 2005,
	2968, 1155, 1680, 1346, 2007, 2597, 806, 1105, 964, 1173,
	1174, 1132, 1176, 1177, 1178, 2673, 2674, 1892, 781, 1300,
	1378, 1303, 1276, 2974, 2975, 1808, 1311, 1102, 1110, 2283,
	2284, 3032, 1520, 962, 1521, 3033, 1522, 1219, 1220, 1082,
	3039, 2534, 2533, 1437, 2282, 1891, 1332, 689, 2016, 1434,
	2010, 1084, 2014, 1436, 1433, 1435, 1439, 1440, 2008, 2060,
	1225, 1438, 1225, 912, 1682, 1148, 1152, 1152, 1152, 1153,
	1154, 3038, 677, 1109, 690, 904, 2460, 2403, 2405, 2406,
	2407, 2404, 2954, 1317, 3272, 910, 1100, 1101, 1148, 1148,
	728, 729, 730, 1192, 1562, 1279, 3338, 1282, 1283, 1894,
	1893, 1134, 3267, 3268, 2091, 726, 931, 1562, 1284, 1285,
	1371, 1372, 1373, 1374, 1375, 1952, 975, 1290, 1291, 2704,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1172, 1250, 940, 1175, 1409, 1410, 1184, 1185,
	775, 1327, 1328, 1419, 693, 2393, 2394, 1208, 1347, 1307,
	829, 834, 835, 1314, 1416, 1417, 1418, 1468, 1108, 1458,
	1459, 1460, 1452, 1851, 478, 2671, 1850, 680, 975, 811,
	1462, 2641, 1474, 811, 1341, 1475, 461, 1243, 1233, 1295,
	1365, 1477, 1299, 1298, 2034, 2161, 1248, 1362, 1484, 1485,
	1259, 1249, 1205, 1207, 3337, 692, 1901, 1260, 775, 695,
	694, 1217, 1218, 3328, 1444, 1445, 1446, 1447, 1448, 1449,
	1442, 1443, 2700, 3310, 1506, 2319, 2792, 3305, 1510, 1902,
	1903, 1513, 1343, 777, 938, 723, 776, 1381, 2092, 1951,
	3299, 2092, 456, 1331, 1532, 1225, 1536, 1537, 975, 1539,
	1540, 1330, 2616, 1359, 2704, 1318, 2320, 456, 477, 3298,
	1225, 473, 1271, 1502, 734, 475, 1149, 1560, 1340, 3276,
	680, 1337, 1225, 785, 476, 1336, 975, 2392, 1193, 2751,
	1319, 677, 474, 472, 1323, 3329, 1879, 1505, 2179, 1339,
	1338, 777, 937, 1335, 776, 1799, 1467, 3032, 1356, 3306,
	3250, 3109, 1583, 1407, 1408, 2679, 1450, 1451, 1361, 1454,
	1589, 1589, 1799, 1193, 3207, 1193, 1193, 1469, 3201, 456,
	975, 1532, 1532, 2092, 3153, 1225, 1657, 1658, 1670, 2268,
	1476, 1799, 1478, 3091, 2265, 2166, 1587, 1538, 1531, 1400,
	1120, 1799, 444, 2123, 1225, 1527, 977, 978, 979, 976,
	831, 832, 833, 3090, 3086, 3085, 1790, 1671, 1542, 1506,
	1544, 1545, 1546, 2320, 1506, 1506, 1994, 1884, 938, 456,
	1532, 1225, 3251, 1712, 1855, 456, 456, 1716, 1717, 1781,
	2617, 3084, 1150, 1720, 1721, 3083, 3208, 3051, 1727, 1453,
	3052, 2941, 2554, 1701, 1608, 182, 3052, 1133, 182, 182,
	1725, 182, 1412, 905, 2864, 3092, 1568, 1569, 1735, 2688,
	1189, 1738, 1479, 1078, 1741, 1652, 1653, 1743, 1591, 2619,
	1698, 1699, 1211, 1578, 1579, 1975, 3052, 3052, 1535, 1509,
	1684, 2454, 3293, 1572, 1231, 1574, 1575, 1563, 1564, 1468,
	1468, 1769, 1503, 1552, 1348, 3252, 1468, 1468, 1580, 2241,
	2233, 1776, 2194, 3052, 1676, 1565, 1678, 3052, 1590, 3052,
	2814, 1711, 2775, 2942, 1709, 1830, 1696, 1697, 1736, 1691,
	2177, 1739, 1740, 1148, 1742, 1560, 2123, 2642, 2479, 1225,
	1788, 2689, 2322, 1883, 2182, 1556, 2181, 1577, 1714, 1715,
	2170, 2620, 1557, 2173, 977, 978, 979, 976, 1152, 1991,
	1581, 562, 572, 2092, 1592, 1573, 2168, 1846, 1535, 1831,
	563, 2163, 571, 564, 568, 567, 565, 566, 1593, 1594,
	3002, 975, 975, 1567, 975, 1780, 2156, 2154, 1730, 1782,
	2152, 2150, 1576, 1526, 1770, 1974, 1320, 1880, 1723, 1812,
	1829, 1861, 1975, 1022, 925, 1816, 1817, 1582, 1659, 1656,
	1585, 1586, 905, 1860, 1359, 900, 1675, 1822, 1677, 898,
	1826, 1685, 2164, 1849, 2862, 569, 1700, 992, 1764, 977,
	978, 979, 976, 2646, 1840, 1764, 1839, 1838, 2169, 1706,
	1798, 478, 940, 2164, 3132, 811, 1457, 1456, 1324, 1710,
	2103, 2517, 811, 1213, 1457, 1456, 1149, 570, 2157, 2155,
	1837, 1215, 2151, 2151, 2637, 1731, 1733, 1975, 1844, 1879,
	2006, 2009, 1216, 975, 1734, 1882, 808, 810, 1856, 2955,
	1858, 3285, 3273, 808, 810, 975, 1857, 1865, 3133, 2032,
	2806, 1862, 1863, 1864, 3050, 975, 1867, 1868, 1869, 1870,
	1871, 1872, 1873, 1874, 2804, 1750, 975, 1138, 975, 975,
	3028, 1139, 1799, 2971, 530, 1771, 912, 1944, 456, 1773,
	1325, 2970, 905, 2956, 1774, 477, 1775, 1779, 473, 2781,
	2142, 2705, 475, 456, 2807, 456, 456, 456, 811, 2698,
	2638, 476, 977, 978, 979, 976, 1783, 1972, 2805, 474,
	2693, 1778, 1212, 2732, 2690, 2611, 1490, 1979, 1193, 2424,
	1406, 2290, 1814, 1815, 1483, 2261, 691, 1976, 1984, 808,
	810, 2192, 1150, 1820, 2167, 2113, 1403, 1405, 1402, 1811,
	1404, 1129, 1193, 1128, 2639, 914, 2729, 1188, 2201, 1190,
	2136, 1194, 1195, 1196, 1415, 2481, 2027, 1824, 1530, 1400,
	1813, 2010, 1529, 1415, 3171, 1825, 2005, 1999, 2004, 976,
	2002, 2007, 977, 978, 979, 976, 1263, 1547, 1734, 2983,
	1263, 1238, 1239, 1240, 1241, 1242, 2982, 1244, 1245, 1246,
	1247, 2498, 2211, 1909, 1252, 1253, 2364, 1480, 1481, 1482,
	1963, 2033, 1486, 1487, 1488, 1489, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 979, 976, 2096, 2096, 1670, 2096,
	897, 893, 894, 895, 896, 2008, 2216, 2363, 2215, 2214,
	2212, 3192, 1946, 977, 978, 979, 976, 444, 444, 1595,
	2345, 1506, 2343, 1506, 2146, 912, 2925, 2926, 696, 2962,
	3314, 1225, 456, 1472, 1875, 1877, 1878, 977, 978, 979,
	976, 1506, 1506, 1987, 456, 1024, 1895, 1473, 3302, 912,
	451, 3288, 3258, 3253, 1258, 1953, 1670, 3191, 1023, 2131,
	2117, 2133, 3162, 1988, 3134, 182, 1989, 3076, 1257, 1708,
	977, 978, 979, 976, 2213, 1708, 1708, 2109, 1993, 2110,
	3072, 3015, 2958, 2100, 2920, 2957, 1045, 977, 978, 979,
	976, 2226, 2098, 2808, 2102, 2772, 2730, 2114, 2115, 1886,
	1887, 1980, 993, 994, 995, 996, 997, 998, 999, 992,
	1998, 2175, 3287, 1992, 1788, 2603, 2513, 2493, 1152, 1997,
	1990, 1225, 3124, 1225, 2492, 1225, 2397, 2011, 2012, 2013,
	912, 2018, 995, 996, 997, 998, 999, 992, 2137, 2396,
	2921, 2130, 1046, 2773, 811, 1981, 1982, 2547, 977, 978,
	979, 976, 2185, 2395, 2387, 1985, 1986, 2125, 2381, 2289,
	2380, 1225, 2220, 2379, 2378, 1753, 1909, 2075, 1752, 1751,
	2202, 977, 978, 979, 976, 808, 810, 2227, 1747, 2221,
	2222, 2104, 1225, 977, 978, 979, 976, 2224, 2225, 1746,
	1223, 1321, 2219, 2229, 977, 978, 979, 976, 1095, 2774,
	2230, 2780, 2414, 2203, 2429, 2589, 2546, 2118, 3223, 2217,
	2218, 1223, 2895, 2228, 1000, 1001, 993, 994, 995, 996,
	997, 998, 999, 992, 1506, 2126, 2129, 2254, 2255, 1513,
	2231, 912, 977, 978, 979, 976, 1828, 3219, 2127, 983,
	984, 985, 986, 987, 988, 989, 981, 2189, 2038, 2412,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 2191, 2413, 2049,
	2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059,
	2186, 2061, 2062, 2063, 2064, 2065, 2199, 2066, 2172, 3175,
	2410, 3120, 1225, 2176, 2178, 2287, 2929, 2252, 3106, 3140,
	2183, 1532, 2304, 1827, 456, 525, 3136, 3095, 527, 2128,
	2318, 1205, 1207, 526, 1359, 2411, 2324, 2399, 2135, 3080,
	977, 978, 979, 976, 3075, 2205, 2205, 3029, 2198, 2195,
	2196, 3074, 2333, 1842, 3046, 2210, 2208, 912, 977, 978,
	979, 976, 3016, 2964, 2938, 2342, 2409, 2138, 977, 978,
	979, 976, 912, 912, 912, 912, 1589, 1264, 2266, 912,
	2924, 2354, 2355, 2356, 912, 2893, 2360, 2361, 1945, 2362,
	2891, 1283, 2871, 2398, 2300, 2868, 2866, 977, 978, 979,
	976, 1284, 1285, 1962, 2253, 1964, 1965, 1966, 2256, 1290,
	1291, 2419, 2096, 2771, 2770, 2301, 2767, 2236, 2237, 1841,
	1834, 2757, 1713, 2242, 2945, 2699, 2415, 2269, 2325, 1608,
	2695, 2686, 2685, 2612, 444, 2580, 2579, 2578, 1983, 1532,
	912, 1670, 1670, 1670, 1670, 977, 978, 979, 976, 1890,
	2527, 2524, 912, 1670, 2491, 2340, 2096, 2468, 2270, 2340,
	2408, 2336, 2400, 2390, 2388, 1295, 2384, 2285, 1299, 1298,
	2341, 2383, 1225, 2326, 2382, 622, 621, 2348, 1881, 1755,
	1749, 2330, 2331, 1516, 456, 456, 2315, 8, 2317, 2347,
	2323, 2349, 2350, 1515, 7, 1535, 2353, 1322, 1053, 182,
	1049, 2359, 2332, 1048, 182, 2335, 901, 688, 2344, 2338,
	2801, 2800, 977, 978, 979, 976, 2799, 2485, 2791, 2487,
	2902, 2756, 2744, 2352, 2735, 1468, 2901, 1468, 2450, 2734,
	2508, 2723, 2854, 2722, 2512, 2647, 2552, 1506, 2754, 2545,
	1225, 2537, 1506, 2519, 2536, 2328, 977, 978, 979, 976,
	2531, 2389, 977, 978, 979, 976, 2476, 2437, 977, 978,
	979, 976, 1231, 2267, 977, 978, 979, 976, 2264, 2437,
	2153, 2149, 2482, 2148, 1708, 2420, 1866, 2486, 2530, 2425,
	1859, 2438, 2439, 2440, 2441, 1854, 1852, 1848, 2449, 1847,
	2327, 2451, 574, 115, 2329, 2453, 1845, 1836, 115, 1833,
	1505, 2551, 677, 1832, 1754, 2507, 2452, 1501, 2469, 1500,
	1499, 1471, 2550, 2462, 2276, 1470, 2505, 2466, 1461, 1237,
	1235, 165, 2511, 2540, 3327, 2542, 3284, 3278, 3265, 912,
	2516, 2484, 2480, 2483, 2549, 2521, 3262, 2592, 977, 978,
	979, 976, 165, 3260, 157, 133, 2501, 2607, 462, 2499,
	2503, 115, 456, 3161, 2504, 1043, 3093, 2510, 2506, 2548,
	977, 978, 979, 976, 3082, 2515, 3077, 912, 1278, 2997,
	811, 912, 912, 912, 2981, 2977, 2528, 811, 2879, 2877,
	1670, 1972, 2529, 2645, 2852, 977, 978, 979, 976, 2649,
	162, 2538, 2539, 826, 2851, 2848, 2535, 2541, 2370, 2371,
	2659, 2847, 2662, 2615, 2662, 2662, 2543, 2544, 2783, 2631,
	912, 162, 2385, 2386, 2630, 1289, 1280, 1136, 2423, 2416,
	2346, 2666, 2250, 2312, 2681, 2311, 2310, 1294, 1297, 2574,
	1286, 1225, 1225, 2300, 2251, 2678, 2421, 2577, 2162, 2584,
	2581, 2112, 2067, 2680, 1973, 1961, 1909, 1401, 977, 978,
	979, 976, 162, 1718, 1525, 809, 1524, 2608, 2587, 115,
	1223, 1223, 2682, 2683, 1344, 2643, 1310, 2632, 2633, 2634,
	2614, 1287, 1079, 1076, 115, 1075, 115, 456, 811, 1074,
	1073, 1072, 2592, 2658, 2582, 2640, 1071, 1070, 2644, 2557,
	2558, 2667, 1069, 1532, 1532, 2559, 2560, 2561, 2562, 1068,
	2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 1067, 2663,
	2664, 1066, 2665, 1065, 2668, 3152, 3313, 2249, 1064, 1063,
	1062, 2653, 1061, 1060, 2309, 2652, 1059, 1058, 1057, 1056,
	2316, 2248, 1052, 1051, 821, 817, 812, 816, 819, 1050,
	2220, 811, 1047, 977, 978, 979, 976, 1040, 1039, 2733,
	1037, 1036, 1035, 1034, 1033, 2657, 1032, 977, 978, 979,
	976, 1031, 824, 1030, 1029, 1028, 815, 2247, 1027, 991,
	990, 1000, 1001, 993, 994, 995, 996, 997, 998, 999,
	992, 1026, 1021, 2692, 2691, 2696, 456, 2697, 1853, 1020,
	2687, 2701, 2702, 977, 978, 979, 976, 1019, 2712, 2246,
	942, 899, 2694, 3150, 681, 682, 683, 684, 3148, 680,
	2716, 3146, 2719, 2720, 2721, 2708, 2709, 822, 2245, 2849,
	2714, 1978, 2753, 2244, 825, 977, 978, 979, 976, 2755,
	2243, 1958, 2728, 2648, 930, 3239, 3237, 2650, 2651, 3197,
	2711, 2291, 2124, 813, 977, 978, 979, 976, 1757, 977,
	978, 979, 976, 2745, 941, 2713, 977, 978, 979, 976,
	2746, 2240, 2443, 2446, 2747, 2748, 823, 2239, 2447, 2621,
	2622, 2238, 2444, 2442, 2171, 2758, 2165, 2445, 1130, 2787,
	1236, 2304, 2232, 100, 2471, 2472, 2223, 977, 978, 979,
	976, 2796, 912, 977, 978, 979, 976, 977, 978, 979,
	976, 2096, 1670, 2811, 54, 2200, 814, 2763, 977, 978,
	979, 976, 977, 978, 979, 976, 2448, 912, 2088, 2089,
	1411, 2881, 2760, 1554, 1555, 53, 2659, 2610, 2882, 2258,
	912, 977, 978, 979, 976, 1549, 1550, 1551, 2036, 458,
	912, 2859, 2703, 2789, 2790, 1225, 977, 978, 979, 976,
	453, 2160, 2655, 2778, 2656, 2575, 2576, 2715, 1644, 2585,
	459, 1532, 115, 115, 809, 912, 1272, 2788, 2813, 1506,
	1886, 1887, 3116, 2764, 1223, 2190, 2863, 2880, 1081, 1304,
	1506, 460, 820, 2876, 1947, 2629, 2878, 2810, 2798, 2846,
	2366, 182, 2839, 811, 2884, 1719, 2809, 2367, 2368, 2369,
	2883, 2762, 936, 457, 912, 2586, 2334, 2873, 2271, 2853,
	1968, 2855, 2858, 1558, 1523, 3210, 2793, 1457, 1456, 818,
	2861, 1093, 1094, 1091, 1092, 2869, 3079, 2910, 2079, 2865,
	2684, 2867, 2076, 2870, 2817, 1008, 811, 2874, 1089, 1090,
	1087, 1088, 2072, 2875, 912, 1225, 1225, 2856, 1655, 1187,
	1186, 968, 2613, 912, 3279, 2872, 2718, 2359, 2122, 1777,
	1141, 2948, 1083, 2948, 2886, 2084, 2087, 2088, 2089, 2085,
	3183, 2086, 2090, 3168, 1223, 2936, 2934, 3166, 3127, 3105,
	2896, 3104, 2437, 3102, 3094, 3010, 3009, 2892, 1225, 2911,
	2759, 2742, 2741, 2963, 2913, 2726, 2023, 2939, 2084, 2087,
	2088, 2089, 2085, 1086, 2086, 2090, 456, 2725, 912, 912,
	2478, 1562, 912, 912, 3241, 3240, 3240, 2936, 2514, 2940,
	1960, 2437, 1835, 927, 3241, 2979, 2952, 3000, 2951, 2743,
	2470, 680, 1156, 2999, 2813, 2994, 169, 3, 1560, 62,
	3007, 2, 2985, 2986, 2965, 2961, 2995, 2996, 3011, 3012,
	2812, 2846, 1202, 2105, 2839, 1702, 2815, 1229, 1, 2816,
	1514, 2932, 681, 682, 683, 684, 685, 680, 2455, 2456,
	2717, 2458, 1085, 3042, 1795, 2426, 2070, 1708, 1948, 2606,
	2784, 2785, 2786, 1131, 727, 1463, 1329, 3035, 3003, 3004,
	828, 921, 3005, 1326, 920, 918, 1413, 576, 1760, 2417,
	2391, 3006, 3209, 2796, 3247, 3160, 3212, 1342, 3054, 3062,
	560, 3096, 3020, 2903, 3164, 3022, 3030, 2898, 3034, 3040,
	1800, 973, 2500, 749, 613, 2932, 2932, 587, 1038, 2932,
	2932, 1312, 1305, 2555, 830, 586, 2777, 2281, 2473, 3066,
	827, 3053, 750, 1744, 3018, 1273, 1277, 2953, 2802, 3055,
	2635, 3058, 3063, 2313, 3065, 3323, 3064, 3312, 912, 3294,
	3277, 3188, 1225, 3073, 3308, 3056, 3057, 990, 1000, 1001,
	993, 994, 995, 996, 997, 998, 999, 992, 3078, 3227,
	3263, 2906, 2904, 2905, 3256, 3184, 2750, 496, 1681, 442,
	792, 1223, 3087, 3088, 2998, 1756, 497, 1977, 3176, 1234,
	3081, 707, 1957, 708, 462, 710, 2298, 2297, 1382, 982,
	1399, 2571, 3111, 912, 1025, 2572, 2959, 2960, 1017, 535,
	3101, 3099, 1823, 3128, 2278, 2834, 2467, 61, 60, 59,
	58, 115, 1726, 977, 978, 979, 976, 3123, 190, 578,
	189, 2927, 3157, 912, 3214, 558, 3119, 557, 3122, 556,
	1225, 555, 3137, 3155, 3158, 554, 2083, 2081, 2080, 3130,
	1665, 2943, 2944, 1664, 1724, 2357, 3138, 2351, 2019, 3145,
	3147, 3149, 3151, 2024, 1596, 2932, 3159, 3144, 3194, 1223,
	3141, 3154, 3142, 2976, 3167, 2401, 3169, 3170, 3165, 3135,
	1225, 3163, 1548, 1441, 2015, 115, 1614, 2373, 1611, 115,
	3193, 1610, 2365, 2972, 2966, 1641, 2302, 2794, 3182, 2947,
	115, 2818, 1441, 2819, 2825, 1967, 853, 849, 851, 1223,
	115, 3190, 3216, 852, 850, 2209, 1995, 3001, 2624, 1900,
	2932, 3202, 1899, 3203, 3215, 3204, 1897, 3205, 1896, 1103,
	3206, 3041, 2761, 1907, 912, 1905, 2710, 2706, 1768, 1511,
	3220, 2257, 3111, 1666, 3221, 1662, 1959, 2914, 1553, 700,
	2932, 1955, 98, 147, 48, 89, 88, 97, 145, 3246,
	47, 3235, 174, 173, 3238, 3236, 3230, 3232, 176, 175,
	172, 2139, 3249, 2140, 171, 3254, 1261, 912, 3242, 3243,
	3244, 3245, 170, 2950, 674, 3255, 38, 37, 33, 3259,
	12, 3261, 11, 34, 21, 22, 20, 1333, 19, 25,
	31, 30, 3216, 3275, 108, 107, 29, 106, 3271, 105,
	104, 912, 103, 912, 3215, 102, 28, 3274, 18, 3281,
	42, 3283, 41, 40, 9, 3286, 96, 94, 27, 95,
	92, 93, 90, 73, 3249, 912, 3290, 72, 3292, 71,
	3297, 86, 1437, 3301, 3304, 3303, 85, 3307, 1434, 84,
	83, 3225, 1436, 1433, 1435, 1439, 1440, 3089, 82, 81,
	1438, 1437, 3311, 79, 3318, 80, 748, 1434, 3322, 70,
	3321, 1436, 1433, 1435, 1439, 1440, 3330, 69, 68, 1438,
	67, 66, 3318, 3335, 3334, 3333, 91, 3322, 77, 87,
	3336, 78, 76, 75, 1365, 74, 2984, 65, 991, 990,
	1000, 1001, 993, 994, 995, 996, 997, 998, 999, 992,
	3282, 64, 63, 1003, 131, 1007, 130, 128, 3129, 129,
	127, 126, 125, 124, 123, 122, 43, 44, 1365, 45,
	1365, 1004, 1006, 1002, 3139, 1005, 991, 990, 1000, 1001,
	993, 994, 995, 996, 997, 998, 999, 992, 46, 141,
	140, 142, 1365, 144, 146, 143, 138, 136, 139, 137,
	135, 56, 17, 991, 990, 1000, 1001, 993, 994, 995,
	996, 997, 998, 999, 992, 24, 4, 0, 0, 0,
	1669, 3280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1444, 1445, 1446, 1447, 1448, 1449, 1442,
	1443, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430,
	1431, 1432, 1444, 1445, 1446, 1447, 1448, 1449, 1442, 1443,
	0, 0, 3222, 0, 991, 990, 1000, 1001, 993, 994,
	995, 996, 997, 998, 999, 992, 2197, 115, 0, 0,
	115, 115, 0, 115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2553, 0, 0, 0, 0, 0, 0,
	991, 990, 1000, 1001, 993, 994, 995, 996, 997, 998,
	999, 992, 0, 0, 0, 0, 594, 0, 0, 0,
	0, 809, 0, 0, 0, 336, 0, 0, 809, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 549, 0,
	0, 0, 279, 0, 0, 306, 991, 990, 1000, 1001,
	993, 994, 995, 996, 997, 998, 999, 992, 437, 0,
	438, 0, 0, 585, 0, 0, 365, 320, 0, 0,
	0, 0, 645, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 542, 0, 0, 575, 622, 621,
	562, 572, 0, 0, 256, 188, 439, 1821, 440, 563,
	0, 571, 564, 568, 567, 565, 566, 0, 637, 0,
	0, 0, 0, 0, 1008, 533, 546, 0, 550, 0,
	0, 991, 990, 1000, 1001, 993, 994, 995, 996, 997,
	998, 999, 992, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 544, 0, 0, 0, 0, 595, 0,
	545, 0, 0, 590, 569, 573, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 570, 593, 597, 273,
	659, 591, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 660, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 991, 990, 1000, 1001, 993, 994,
	995, 996, 997, 998, 999, 992, 0, 588, 0, 0,
	0, 396, 0, 0, 643, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 592, 0, 356, 338, 656,
	534, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 1465, 1464, 1466, 408, 286, 239, 240, 448, 641,
	334, 0, 0, 0, 0, 655, 636, 638, 639, 642,
	646, 647, 648, 649, 650, 652, 654, 658, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	2099, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 596,
	0, 0, 324, 325, 326, 327, 644, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 1669, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 666, 640, 665, 667, 668, 664,
	669, 670, 651, 553, 0, 600, 662, 661, 663, 0,
	0, 0, 871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 0,
	348, 284, 0, 0, 629, 606, 607, 608, 551, 609,
	603, 604, 605, 630, 598, 626, 627, 577, 601, 610,
	625, 611, 628, 631, 632, 671, 672, 617, 673, 614,
	633, 624, 623, 612, 599, 634, 635, 584, 579, 615,
	616, 602, 618, 619, 620, 552, 580, 581, 582, 583,
	0, 0, 0, 404, 405, 406, 427, 390, 871, 445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 449, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 879, 883, 885, 887, 889, 890, 892, 0,
	897, 893, 894, 895, 896, 0, 874, 875, 876, 877,
	855, 856, 880, 0, 858, 0, 859, 860, 861, 862,
	863, 864, 865, 866, 867, 870, 872, 868, 869, 878,
	0, 0, 0, 0, 0, 0, 115, 882, 884, 886,
	888, 891, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 857, 0,
	0, 0, 847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 873, 0, 0, 0, 879, 883,
	885, 887, 889, 890, 892, 0, 897, 893, 894, 895,
	896, 0, 874, 875, 876, 877, 855, 856, 880, 0,
	858, 0, 859, 860, 861, 862, 863, 864, 865, 866,
	867, 870, 872, 868, 869, 878, 0, 0, 0, 0,
	0, 0, 0, 882, 884, 886, 888, 891, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1669, 1669, 1669, 1669, 0, 0, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 0, 0,
	873, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 115, 0, 0, 0, 0, 115, 0, 0, 2206,
	2207, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 115, 0, 0, 0,
	0, 0, 0, 115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 549, 0,
	0, 0, 279, 1507, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	438, 0, 0, 585, 0, 0, 365, 320, 0, 0,
	0, 0, 645, 653, 115, 0, 0, 0, 0, 0,
	0, 1693, 0, 0, 542, 0, 881, 575, 622, 621,
	562, 572, 0, 0, 256, 188, 439, 0, 440, 563,
	0, 571, 564, 568, 567, 565, 566, 0, 637, 0,
	0, 0, 0, 0, 0, 533, 546, 0, 550, 0,
	0, 0, 1669, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 543, 544, 0, 0, 0, 0, 595, 0,
	545, 0, 0, 1694, 569, 573, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 881, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 570, 593, 597, 273,
	659, 591, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 660, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 396, 0, 0, 643, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 592, 0, 356, 338, 656,
	534, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 641,
	334, 0, 0, 0, 0, 655, 636, 638, 639, 642,
	646, 647, 648, 649, 650, 652, 654, 658, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 115,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 596,
	0, 0, 324, 325, 326, 327, 644, 0, 261, 419,
	349, 0, 115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1669, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 666, 640, 665, 667, 668, 664,
	669, 670, 651, 553, 0, 600, 662, 661, 663, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 0,
	348, 284, 0, 115, 629, 606, 607, 608, 551, 609,
	603, 604, 605, 630, 598, 626, 627, 577, 601, 610,
	625, 611, 628, 631, 632, 671, 672, 617, 673, 614,
	633, 624, 623, 612, 599, 634, 635, 584, 579, 615,
	616, 602, 618, 619, 620, 552, 580, 581, 582, 583,
	165, 594, 0, 404, 405, 406, 427, 390, 0, 445,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 449, 441, 549, 0, 0, 0, 279, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 437, 0, 438, 0, 0, 1011, 0,
	0, 365, 320, 0, 0, 0, 0, 645, 653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 542,
	0, 0, 575, 622, 621, 562, 572, 0, 0, 256,
	188, 439, 0, 440, 563, 0, 571, 564, 568, 567,
	565, 566, 0, 637, 0, 0, 0, 0, 0, 0,
	533, 546, 0, 550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 544, 0,
	0, 0, 0, 595, 0, 545, 0, 0, 590, 569,
	573, 0, 0, 0, 0, 247, 370, 386, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 570, 593, 597, 273, 659, 591, 394, 251, 0,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 660, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 0, 0, 0, 396, 0, 0, 643,
	0, 0, 0, 369, 0, 0, 305, 0, 0, 0,
	592, 0, 356, 338, 656, 534, 0, 354, 308, 381,
	346, 387, 371, 395, 350, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 0,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 641, 334, 0, 0, 0, 0,
	655, 636, 638, 639, 642, 646, 647, 648, 649, 650,
	652, 654, 658, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 657, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 596, 0, 0, 324, 325, 326,
	327, 644, 0, 261, 419, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 666,
	640, 665, 667, 668, 664, 669, 670, 651, 553, 0,
	600, 662, 661, 663, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 134, 348, 284, 0, 0, 629,
	606, 607, 608, 551, 609, 603, 604, 605, 630, 598,
	626, 627, 577, 601, 610, 625, 611, 628, 631, 632,
	671, 672, 617, 673, 614, 633, 624, 623, 612, 599,
	634, 635, 584, 579, 615, 616, 602, 618, 619, 620,
	552, 580, 581, 582, 583, 0, 594, 0, 404, 405,
	406, 427, 390, 0, 445, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 441, 549, 0,
	0, 0, 279, 3291, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	438, 0, 0, 585, 0, 0, 365, 320, 0, 0,
	0, 0, 645, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 542, 0, 0, 575, 622, 621,
	562, 572, 0, 0, 256, 188, 439, 0, 440, 563,
	0, 571, 564, 568, 567, 565, 566, 0, 637, 0,
	0, 0, 0, 0, 0, 533, 546, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 544, 0, 0, 0, 0, 595, 0,
	545, 0, 0, 590, 569, 573, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 570, 593, 597, 273,
	659, 591, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 660, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 396, 0, 0, 643, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 592, 0, 356, 338, 656,
	534, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 641,
	334, 0, 0, 0, 0, 655, 636, 638, 639, 642,
	646, 647, 648, 649, 650, 652, 654, 658, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 596,
	0, 0, 324, 325, 326, 327, 644, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 666, 640, 665, 667, 668, 664,
	669, 670, 651, 553, 0, 600, 662, 661, 663, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 0,
	348, 284, 0, 0, 629, 606, 607, 608, 551, 609,
	603, 604, 605, 630, 598, 626, 627, 577, 601, 610,
	625, 611, 628, 631, 632, 671, 672, 617, 673, 614,
	633, 624, 623, 612, 599, 634, 635, 584, 579, 615,
	616, 602, 618, 619, 620, 552, 580, 581, 582, 583,
	0, 594, 0, 404, 405, 406, 427, 390, 0, 445,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 449, 441, 549, 0, 0, 0, 279, 1507, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 437, 0, 438, 0, 0, 585, 0,
	0, 365, 320, 0, 0, 0, 0, 645, 653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 542,
	0, 0, 575, 622, 621, 562, 572, 0, 0, 256,
	188, 439, 0, 440, 563, 0, 571, 564, 568, 567,
	565, 566, 0, 637, 0, 0, 0, 0, 0, 0,
	533, 546, 0, 550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 544, 0,
	0, 0, 0, 595, 0, 545, 0, 0, 590, 569,
	573, 0, 0, 0, 0, 247, 370, 386, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 570, 593, 597, 273, 659, 591, 394, 251, 0,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 660, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 0, 0, 0, 396, 0, 0, 643,
	0, 0, 0, 369, 0, 0, 305, 0, 0, 0,
	592, 0, 356, 338, 656, 534, 0, 354, 308, 381,
	346, 387, 371, 395, 350, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 0,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 641, 334, 0, 0, 0, 0,
	655, 636, 638, 639, 642, 646, 647, 648, 649, 650,
	652, 654, 658, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 657, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 596, 0, 0, 324, 325, 326,
	327, 644, 0, 261, 419, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 666,
	640, 665, 667, 668, 664, 669, 670, 651, 553, 0,
	600, 662, 661, 663, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 0, 348, 284, 0, 0, 629,
	606, 607, 608, 551, 609, 603, 604, 605, 630, 598,
	626, 627, 577, 601, 610, 625, 611, 628, 631, 632,
	671, 672, 617, 673, 614, 633, 624, 623, 612, 599,
	634, 635, 584, 579, 615, 616, 602, 618, 619, 620,
	552, 580, 581, 582, 583, 0, 594, 0, 404, 405,
	406, 427, 390, 0, 445, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 441, 549, 0,
	0, 0, 279, 0, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	438, 0, 0, 585, 0, 0, 365, 320, 0, 0,
	0, 0, 645, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 542, 0, 0, 575, 622, 621,
	562, 572, 0, 0, 256, 188, 439, 0, 440, 563,
	0, 571, 564, 568, 567, 565, 566, 0, 637, 0,
	0, 0, 0, 0, 0, 533, 546, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 544, 1256, 0, 0, 0, 595, 0,
	545, 0, 0, 590, 569, 573, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 570, 593, 597, 273,
	659, 591, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 660, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 396, 0, 0, 643, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 592, 0, 356, 338, 656,
	534, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 641,
	334, 0, 0, 0, 0, 655, 636, 638, 639, 642,
	646, 647, 648, 649, 650, 652, 654, 658, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 596,
	0, 0, 324, 325, 326, 327, 644, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 666, 640, 665, 667, 668, 664,
	669, 670, 651, 553, 0, 600, 662, 661, 663, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 0,
	348, 284, 0, 0, 629, 606, 607, 608, 551, 609,
	603, 604, 605, 630, 598, 626, 627, 577, 601, 610,
	625, 611, 628, 631, 632, 671, 672, 617, 673, 614,
	633, 624, 623, 612, 599, 634, 635, 584, 579, 615,
	616, 602, 618, 619, 620, 552, 580, 581, 582, 583,
	0, 0, 0, 404, 405, 406, 427, 390, 594, 445,
	0, 1843, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 449, 441, 0, 0, 0, 0, 0, 0, 0,
	549, 0, 0, 0, 279, 0, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 0, 438, 0, 0, 585, 0, 0, 365, 320,
	0, 0, 0, 0, 645, 653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 542, 0, 0, 575,
	622, 621, 562, 572, 0, 0, 256, 188, 439, 0,
	440, 563, 0, 571, 564, 568, 567, 565, 566, 0,
	637, 0, 0, 0, 0, 0, 0, 533, 546, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 543, 544, 0, 0, 0, 0,
	595, 0, 545, 0, 0, 590, 569, 573, 0, 0,
	0, 0, 247, 370, 386, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 0, 249, 384, 367, 317, 298,
	299, 248, 0, 353, 277, 290, 274, 333, 570, 593,
	597, 273, 659, 591, 394, 251, 0, 393, 332, 380,
	385, 318, 312, 250, 382, 316, 311, 302, 281, 660,
	303, 304, 294, 344, 310, 345, 295, 322, 321, 323,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 588,
	0, 0, 0, 396, 0, 0, 643, 0, 0, 0,
	369, 0, 0, 305, 0, 0, 0, 592, 0, 356,
	338, 656, 534, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 271,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 409, 410, 0,
	0, 415, 0, 0, 0, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 641, 334, 0, 0, 0, 0, 655, 636, 638,
	639, 642, 646, 647, 648, 649, 650, 652, 654, 658,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 657, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 596, 0, 0, 324, 325, 326, 327, 644, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 666, 640, 665, 667,
	668, 664, 669, 670, 651, 553, 0, 600, 662, 661,
	663, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 629, 606, 607, 608,
	551, 609, 603, 604, 605, 630, 598, 626, 627, 577,
	601, 610, 625, 611, 628, 631, 632, 671, 672, 617,
	673, 614, 633, 624, 623, 612, 599, 634, 635, 584,
	579, 615, 616, 602, 618, 619, 620, 552, 580, 581,
	582, 583, 0, 594, 0, 404, 405, 406, 427, 390,
	0, 445, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 441, 549, 0, 0, 0, 279,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 437, 0, 438, 0, 0,
	585, 0, 0, 365, 320, 0, 0, 0, 0, 645,
	653, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 542, 0, 0, 575, 622, 621, 562, 572, 0,
	0, 256, 188, 439, 0, 440, 563, 0, 571, 564,
	568, 567, 565, 566, 0, 637, 0, 0, 0, 0,
	0, 0, 533, 546, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	544, 0, 0, 0, 0, 595, 0, 545, 0, 0,
	590, 569, 573, 0, 0, 0, 0, 247, 370, 386,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 570, 593, 597, 273, 659, 591, 394,
	251, 0, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 660, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 588, 0, 0, 0, 396, 0,
	0, 643, 0, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 592, 0, 356, 338, 656, 534, 0, 354,
	308, 381, 346, 387, 371, 395, 350, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 641, 334, 0, 0,
	0, 0, 655, 636, 638, 639, 642, 646, 647, 648,
	649, 650, 652, 654, 658, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 657, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 596, 0, 0, 324,
	325, 326, 327, 644, 0, 261, 419, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 0,
	0, 666, 640, 665, 667, 668, 664, 669, 670, 651,
	553, 0, 600, 662, 661, 663, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 0, 348, 284, 0,
	0, 629, 606, 607, 608, 551, 609, 603, 604, 605,
	630, 598, 626, 627, 577, 601, 610, 625, 611, 628,
	631, 632, 671, 672, 617, 673, 614, 633, 624, 623,
	612, 599, 634, 635, 584, 579, 615, 616, 602, 618,
	619, 620, 552, 580, 581, 582, 583, 0, 594, 0,
	404, 405, 406, 427, 390, 0, 445, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 1383, 0, 449, 441,
	549, 0, 0, 0, 279, 0, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 0, 438, 0, 0, 585, 0, 0, 365, 320,
	0, 0, 0, 0, 645, 653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 542, 0, 0, 575,
	622, 621, 562, 572, 0, 0, 256, 188, 439, 0,
	440, 563, 0, 571, 564, 568, 567, 565, 566, 0,
	637, 0, 0, 0, 0, 0, 0, 0, 546, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 543, 544, 0, 0, 0, 0,
	595, 0, 545, 0, 0, 590, 569, 573, 0, 0,
	0, 0, 247, 370, 386, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 0, 249, 384, 367, 317, 298,
	299, 248, 0, 353, 277, 290, 274, 333, 570, 593,
	597, 273, 659, 591, 394, 251, 0, 393, 332, 380,
	385, 318, 312, 250, 382, 316, 311, 302, 281, 660,
	303, 304, 294, 344, 310, 345, 295, 322, 321, 323,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 588,
	0, 0, 0, 396, 0, 0, 643, 0, 0, 0,
	369, 0, 0, 305, 0, 0, 0, 592, 0, 356,
	338, 656, 0, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 271,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 1384, 1385, 0,
	0, 415, 0, 0, 0, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 641, 334, 0, 0, 0, 0, 655, 636, 638,
	639, 642, 646, 647, 648, 649, 650, 652, 654, 658,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 657, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 596, 0, 0, 324, 325, 326, 327, 644, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 666, 640, 665, 667,
	668, 664, 669, 670, 651, 553, 0, 600, 662, 661,
	663, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 629, 606, 607, 608,
	551, 609, 603, 604, 605, 630, 598, 626, 627, 577,
	601, 610, 625, 611, 628, 631, 632, 671, 672, 617,
	673, 614, 633, 624, 623, 612, 599, 634, 635, 584,
	579, 615, 616, 602, 618, 619, 620, 552, 580, 581,
	582, 583, 0, 594, 0, 404, 405, 406, 427, 390,
	0, 445, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 441, 549, 0, 0, 0, 279,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 437, 0, 438, 0, 0,
	585, 0, 0, 365, 320, 0, 0, 0, 0, 645,
	653, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 622, 621, 562, 572, 0,
	0, 256, 188, 439, 0, 440, 563, 0, 571, 564,
	568, 567, 565, 566, 0, 637, 0, 0, 0, 0,
	0, 0, 533, 546, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	544, 0, 0, 0, 0, 595, 0, 545, 0, 0,
	590, 569, 573, 0, 0, 0, 0, 247, 370, 386,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 570, 593, 597, 273, 659, 591, 394,
	251, 0, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 660, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 588, 0, 0, 0, 396, 0,
	0, 643, 0, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 592, 0, 356, 338, 656, 534, 0, 354,
	308, 381, 346, 387, 371, 395, 350, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 641, 334, 0, 0,
	0, 0, 655, 636, 638, 639, 642, 646, 647, 648,
	649, 650, 652, 654, 658, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 657, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 596, 0, 0, 324,
	325, 326, 327, 644, 0, 261, 419, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 0,
	0, 666, 640, 665, 667, 668, 664, 669, 670, 651,
	553, 0, 600, 662, 661, 663, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 0, 348, 284, 0,
	0, 629, 606, 607, 608, 551, 609, 603, 604, 605,
	630, 598, 626, 627, 577, 601, 610, 625, 611, 628,
	631, 632, 671, 672, 617, 673, 614, 633, 624, 623,
	612, 599, 634, 635, 584, 579, 615, 616, 602, 618,
	619, 620, 552, 580, 581, 582, 583, 0, 594, 0,
	404, 405, 406, 427, 390, 0, 445, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 441,
	549, 0, 0, 0, 279, 0, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 0, 438, 0, 0, 585, 0, 0, 365, 320,
	0, 0, 0, 0, 645, 653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 542, 0, 0, 575,
	622, 621, 562, 572, 0, 0, 256, 188, 439, 0,
	440, 563, 0, 571, 564, 568, 567, 565, 566, 0,
	637, 0, 0, 0, 0, 0, 0, 0, 546, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 543, 544, 0, 0, 0, 0,
	595, 0, 545, 0, 0, 590, 569, 573, 0, 0,
	0, 0, 247, 370, 386, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 0, 249, 384, 367, 317, 298,
	299, 248, 0, 353, 277, 290, 274, 333, 570, 593,
	597, 273, 659, 591, 394, 251, 0, 393, 332, 380,
	385, 318, 312, 250, 382, 316, 311, 302, 281, 660,
	303, 304, 294, 344, 310, 345, 295, 322, 321, 323,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 588,
	0, 0, 0, 396, 0, 0, 643, 0, 0, 0,
	369, 0, 0, 305, 0, 0, 0, 592, 0, 356,
	338, 656, 0, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 271,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 409, 410, 0,
	0, 415, 0, 0, 0, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 641, 334, 0, 0, 0, 0, 655, 636, 638,
	639, 642, 646, 647, 648, 649, 650, 652, 654, 658,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 657, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 596, 0, 0, 324, 325, 326, 327, 644, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 666, 640, 665, 667,
	668, 664, 669, 670, 651, 553, 0, 600, 662, 661,
	663, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 629, 606, 607, 608,
	551, 609, 603, 604, 605, 630, 598, 626, 627, 577,
	601, 610, 625, 611, 628, 631, 632, 671, 672, 617,
	673, 614, 633, 624, 623, 612, 599, 634, 635, 584,
	579, 615, 616, 602, 618, 619, 620, 552, 580, 581,
	582, 583, 0, 0, 0, 404, 405, 406, 427, 390,
	0, 445, 165, 51, 157, 133, 0, 0, 0, 0,
	0, 0, 336, 449, 441, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 150, 0, 279,
	0, 159, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 437, 0, 438, 0, 0,
	113, 0, 0, 365, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 101, 0, 0, 0, 0,
	0, 162, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 439, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 370, 386,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 0, 383, 411, 273, 402, 0, 394,
	251, 0, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 426, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 132, 156, 163,
	0, 99, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 180, 0, 0, 0, 369, 0, 0, 305, 155,
	149, 148, 412, 0, 356, 338, 57, 0, 0, 354,
	308, 381, 346, 387, 371, 395, 350, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 151, 152, 153,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 391, 272, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	407, 183, 0, 0, 436, 191, 0, 0, 0, 154,
	0, 192, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 416, 0, 0, 324,
	325, 326, 327, 289, 0, 261, 419, 349, 111, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 134, 348, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	0, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	404, 405, 406, 427, 390, 336, 193, 39, 181, 184,
	186, 185, 0, 49, 5, 0, 0, 116, 194, 441,
	0, 0, 279, 0, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	438, 0, 0, 0, 0, 0, 365, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1044, 0, 0, 187, 0, 0,
	562, 572, 0, 0, 256, 188, 439, 0, 440, 563,
	0, 571, 564, 568, 567, 565, 566, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 569, 0, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 570, 383, 411, 273,
	402, 0, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 426, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 412, 0, 356, 338, 0,
	0, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 272,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 407, 0, 0, 0, 436, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 416,
	0, 0, 324, 325, 326, 327, 289, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 0,
	348, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 404, 405, 406, 427, 390, 0, 445,
	0, 0, 0, 165, 51, 157, 133, 0, 0, 0,
	0, 449, 441, 336, 466, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 438, 0,
	0, 0, 0, 0, 365, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 439, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 370,
	386, 257, 361, 399, 262, 368, 252, 335, 358, 0,
	0, 249, 384, 367, 317, 298, 299, 248, 0, 353,
	277, 290, 274, 333, 0, 383, 411, 273, 402, 0,
	394, 251, 0, 393, 332, 380, 385, 318, 312, 250,
	382, 316, 311, 302, 281, 426, 303, 304, 294, 344,
	310, 345, 295, 322, 321, 323, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 305,
	0, 0, 0, 412, 0, 356, 338, 0, 0, 0,
	354, 308, 381, 346, 387, 371, 395, 350, 347, 242,
	372, 276, 319, 253, 255, 271, 278, 280, 282, 283,
	328, 329, 341, 360, 373, 374, 375, 275, 263, 355,
	264, 292, 265, 243, 268, 267, 269, 362, 270, 245,
	342, 379, 0, 288, 351, 315, 246, 314, 343, 378,
	377, 254, 403, 409, 410, 0, 0, 415, 0, 0,
	0, 423, 428, 429, 430, 432, 433, 434, 435, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 286, 239, 240, 448, 272, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 407, 0, 0, 0, 436, 447, 0, 0, 0,
	0, 0, 446, 340, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 389,
	401, 418, 421, 0, 0, 0, 0, 244, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 416, 0, 0,
	324, 325, 326, 327, 467, 469, 261, 419, 349, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 285,
	291, 431, 293, 260, 339, 287, 398, 300, 0, 424,
	0, 425, 0, 0, 0, 0, 331, 296, 297, 363,
	301, 309, 352, 397, 337, 357, 258, 388, 364, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 237, 266, 0, 241, 0, 307, 134, 348, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 336, 0, 238, 233, 234, 235, 236, 0, 871,
	0, 404, 405, 406, 427, 390, 0, 445, 279, 0,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 449,
	441, 0, 0, 0, 437, 0, 438, 0, 0, 0,
	0, 0, 365, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 439, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 857,
	0, 0, 0, 0, 0, 0, 247, 370, 386, 257,
	361, 399, 262, 368, 252, 335, 358, 0, 0, 1931,
	1933, 1934, 1935, 1936, 1937, 1938, 0, 1943, 1939, 1940,
	1941, 1942, 0, 1926, 1927, 1928, 1929, 855, 1910, 1932,
	0, 1911, 332, 1912, 1913, 1914, 1915, 1916, 1917, 1918,
	1919, 1920, 1923, 1924, 1921, 1922, 1930, 344, 310, 345,
	295, 322, 321, 323, 882, 884, 886, 888, 891, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 305, 0, 0,
	0, 1925, 0, 356, 338, 0, 0, 0, 354, 308,
	381, 346, 387, 371, 395, 350, 347, 242, 372, 276,
	319, 253, 255, 271, 278, 280, 282, 283, 328, 329,
	341, 360, 373, 374, 375, 275, 263, 355, 264, 292,
	265, 243, 268, 267, 269, 362, 270, 245, 342, 379,
	0, 288, 351, 315, 246, 314, 343, 378, 377, 254,
	403, 409, 410, 0, 0, 415, 0, 0, 0, 423,
	428, 429, 430, 432, 433, 434, 435, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 286, 239, 240, 448, 272, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 407,
	0, 0, 0, 436, 447, 0, 0, 0, 0, 0,
	446, 340, 0, 359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 389, 401, 418,
	421, 0, 0, 0, 0, 244, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 416, 0, 0, 324, 325,
	326, 327, 289, 0, 261, 419, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 285, 291, 431,
	293, 260, 339, 287, 398, 300, 0, 424, 0, 425,
	0, 0, 0, 0, 331, 296, 297, 363, 301, 309,
	352, 397, 337, 357, 258, 388, 364, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 237,
	266, 0, 241, 881, 307, 0, 348, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 336,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 404,
	405, 406, 427, 390, 0, 445, 279, 0, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 449, 441, 0,
	0, 0, 437, 0, 438, 0, 0, 0, 0, 0,
	365, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 256, 188,
	439, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 2006, 2009, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 370, 386, 257, 361, 399,
	262, 368, 252, 335, 358, 0, 0, 249, 384, 367,
	317, 298, 299, 248, 0, 353, 277, 290, 274, 333,
	0, 383, 411, 273, 402, 0, 394, 251, 0, 393,
	332, 380, 385, 318, 312, 250, 382, 316, 311, 302,
	281, 426, 303, 304, 294, 344, 310, 345, 295, 322,
	321, 323, 0, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2010, 396, 0, 0, 0, 2005,
	0, 2004, 369, 2002, 2007, 305, 0, 0, 0, 412,
	0, 356, 338, 0, 0, 0, 354, 308, 381, 346,
	387, 371, 395, 350, 347, 242, 372, 276, 319, 253,
	255, 271, 278, 280, 282, 283, 328, 329, 341, 360,
	373, 374, 375, 275, 263, 355, 264, 292, 265, 243,
	268, 267, 269, 362, 270, 245, 342, 379, 2008, 288,
	351, 315, 246, 314, 343, 378, 377, 254, 403, 409,
	410, 0, 0, 415, 0, 0, 0, 423, 428, 429,
	430, 432, 433, 434, 435, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 286,
	239, 240, 448, 272, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 407, 0, 0,
	0, 436, 447, 0, 0, 0, 0, 0, 446, 340,
	0, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 389, 401, 418, 421, 0,
	0, 0, 0, 244, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 416, 0, 0, 324, 325, 326, 327,
	289, 0, 261, 419, 349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 285, 291, 431, 293, 260,
	339, 287, 398, 300, 0, 424, 0, 425, 0, 0,
	0, 0, 331, 296, 297, 363, 301, 309, 352, 397,
	337, 357, 258, 388, 364, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 237, 266, 0,
	241, 0, 307, 0, 348, 284, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 0, 0, 238,
	233, 234, 235, 236, 336, 0, 0, 404, 405, 406,
	427, 390, 0, 445, 0, 0, 1728, 0, 0, 0,
	0, 279, 0, 0, 306, 449, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 437, 0, 438,
	0, 0, 0, 0, 0, 365, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 1729,
	0, 0, 0, 256, 188, 439, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	977, 978, 979, 976, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	370, 386, 257, 361, 399, 262, 368, 252, 335, 358,
	0, 0, 249, 384, 367, 317, 298, 299, 248, 0,
	353, 277, 290, 274, 333, 0, 383, 411, 273, 402,
	0, 394, 251, 0, 393, 332, 380, 385, 318, 312,
	250, 382, 316, 311, 302, 281, 426, 303, 304, 294,
	344, 310, 345, 295, 322, 321, 323, 0, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	305, 0, 0, 0, 412, 0, 356, 338, 0, 0,
	0, 354, 308, 381, 346, 387, 371, 395, 350, 347,
	242, 372, 276, 319, 253, 255, 271, 278, 280, 282,
	283, 328, 329, 341, 360, 373, 374, 375, 275, 263,
	355, 264, 292, 265, 243, 268, 267, 269, 362, 270,
	245, 342, 379, 0, 288, 351, 315, 246, 314, 343,
	378, 377, 254, 403, 409, 410, 0, 0, 415, 0,
	0, 0, 423, 428, 429, 430, 432, 433, 434, 435,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 286, 239, 240, 448, 272, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 407, 0, 0, 0, 436, 447, 0, 0,
	0, 0, 0, 446, 340, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	389, 401, 418, 421, 0, 0, 0, 0, 244, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 416, 0,
	0, 324, 325, 326, 327, 289, 0, 261, 419, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	285, 291, 431, 293, 260, 339, 287, 398, 300, 0,
	424, 0, 425, 0, 0, 0, 0, 331, 296, 297,
	363, 301, 309, 352, 397, 337, 357, 258, 388, 364,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 237, 266, 0, 241, 0, 307, 0, 348,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 336, 0, 238, 233, 234, 235, 236, 0,
	0, 0, 404, 405, 406, 427, 390, 0, 445, 279,
	791, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	449, 441, 0, 0, 0, 437, 0, 438, 0, 0,
	0, 0, 0, 365, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 798, 799, 0, 0, 0,
	0, 256, 188, 439, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 370, 786,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 0, 383, 411, 273, 402, 777, 394,
	251, 776, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 426, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 412, 0, 356, 338, 0, 0, 0, 354,
	308, 381, 346, 387, 371, 395, 789, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 272, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	407, 0, 0, 0, 436, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 790, 0, 392, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 793, 0, 0, 324,
	325, 326, 327, 289, 0, 261, 419, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 800, 787, 796, 788, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 0, 348, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	336, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	404, 405, 406, 427, 390, 0, 445, 279, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 449, 441,
	0, 0, 0, 437, 0, 438, 0, 0, 0, 0,
	0, 365, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 439, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 2026, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 370, 386, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 0, 383, 411, 273, 402, 0, 394, 251, 0,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 426, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2025, 396, 0, 0, 0,
	2030, 2028, 0, 369, 0, 2029, 305, 0, 0, 0,
	412, 0, 356, 338, 0, 0, 0, 354, 308, 381,
	346, 387, 371, 395, 350, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 0,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 272, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 407, 0,
	0, 0, 436, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 416, 0, 0, 324, 325, 326,
	327, 289, 0, 261, 419, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 0, 348, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 0, 0,
	238, 233, 234, 235, 236, 165, 0, 0, 404, 405,
	406, 427, 390, 0, 445, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 441, 0, 0,
	0, 0, 279, 0, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	438, 0, 0, 113, 0, 0, 365, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 1772, 0, 187, 0, 0,
	0, 0, 0, 0, 256, 188, 439, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 0, 383, 411, 273,
	402, 0, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 426, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 412, 0, 356, 338, 0,
	0, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 272,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 407, 0, 0, 0, 436, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 416,
	0, 0, 324, 325, 326, 327, 289, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 134,
	348, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	165, 0, 0, 404, 405, 406, 427, 390, 0, 445,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 449, 441, 0, 0, 0, 0, 279, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 437, 0, 438, 0, 0, 113, 0,
	0, 365, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	1763, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 439, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 370, 386, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 0, 383, 411, 273, 402, 0, 394, 251, 0,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 426, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 305, 0, 0, 0,
	412, 0, 356, 338, 0, 0, 0, 354, 308, 381,
	346, 387, 371, 395, 350, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 0,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 272, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 407, 0,
	0, 0, 436, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 416, 0, 0, 324, 325, 326,
	327, 289, 0, 261, 419, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 134, 348, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 0, 0,
	238, 233, 234, 235, 236, 165, 0, 0, 404, 405,
	406, 427, 390, 0, 445, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 441, 0, 0,
	0, 0, 279, 0, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	438, 0, 0, 113, 0, 0, 365, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1667, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 256, 188, 439, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 0, 383, 411, 273,
	402, 0, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 426, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 412, 0, 356, 338, 0,
	0, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 272,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 407, 0, 0, 0, 436, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 416,
	0, 0, 324, 325, 326, 327, 289, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 134,
	348, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 336, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 404, 405, 406, 427, 390, 0, 445,
	279, 0, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 449, 441, 0, 0, 0, 437, 0, 438, 0,
	0, 0, 0, 0, 365, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 798, 799, 0, 0,
	0, 0, 256, 188, 439, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 802, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 370,
	386, 257, 361, 399, 262, 368, 252, 335, 358, 0,
	0, 249, 384, 367, 317, 298, 299, 248, 0, 353,
	277, 290, 274, 333, 0, 383, 411, 273, 402, 777,
	394, 251, 776, 393, 332, 380, 385, 318, 312, 250,
	382, 316, 311, 302, 281, 426, 303, 304, 294, 344,
	310, 345, 295, 322, 321, 323, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 305,
	0, 0, 0, 412, 0, 356, 338, 0, 0, 0,
	354, 308, 381, 346, 387, 371, 395, 350, 347, 242,
	372, 276, 319, 253, 255, 271, 278, 280, 282, 283,
	328, 329, 341, 360, 373, 374, 375, 275, 263, 355,
	264, 292, 265, 243, 268, 267, 269, 362, 270, 245,
	342, 379, 0, 288, 351, 315, 246, 314, 343, 378,
	377, 254, 403, 409, 410, 0, 0, 415, 0, 0,
	0, 423, 428, 429, 430, 432, 433, 434, 435, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 286, 239, 240, 448, 272, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 407, 0, 0, 0, 436, 447, 0, 0, 0,
	0, 0, 446, 340, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 389,
	401, 418, 421, 0, 0, 0, 0, 244, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 416, 0, 0,
	324, 325, 326, 327, 289, 0, 261, 419, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 285,
	291, 431, 293, 260, 339, 287, 398, 300, 0, 424,
	0, 425, 0, 0, 0, 0, 800, 1686, 796, 1687,
	301, 309, 352, 397, 337, 357, 258, 388, 364, 797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 237, 266, 0, 241, 0, 307, 0, 348, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 336, 0, 238, 233, 234, 235, 236, 0, 0,
	2430, 404, 405, 406, 427, 390, 0, 445, 279, 0,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 449,
	441, 0, 0, 0, 437, 0, 438, 0, 0, 0,
	0, 0, 365, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 439, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 370, 386, 257,
	361, 399, 262, 368, 252, 335, 358, 0, 0, 249,
	384, 367, 317, 298, 299, 248, 0, 353, 277, 290,
	274, 333, 0, 383, 411, 273, 402, 0, 394, 251,
	0, 393, 332, 380, 385, 318, 312, 250, 382, 316,
	311, 302, 281, 426, 303, 304, 294, 344, 310, 345,
	295, 322, 321, 323, 0, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 2433, 0,
	0, 2432, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 305, 0, 0,
	0, 412, 0, 356, 338, 0, 0, 0, 354, 308,
	381, 346, 387, 371, 395, 350, 347, 242, 372, 276,
	319, 253, 255, 271, 278, 280, 282, 283, 328, 329,
	341, 360, 373, 374, 375, 275, 263, 355, 264, 292,
	265, 243, 268, 267, 269, 362, 270, 245, 342, 379,
	0, 288, 351, 315, 246, 314, 343, 378, 377, 254,
	403, 409, 410, 0, 0, 415, 0, 0, 0, 423,
	428, 429, 430, 432, 433, 434, 435, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 286, 239, 240, 448, 272, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 407,
	0, 0, 0, 436, 447, 0, 0, 0, 0, 0,
	446, 340, 0, 359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 389, 401, 418,
	421, 0, 0, 0, 0, 244, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 416, 0, 0, 324, 325,
	326, 327, 289, 0, 261, 419, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 285, 291, 431,
	293, 260, 339, 287, 398, 300, 0, 424, 0, 425,
	0, 0, 0, 0, 331, 296, 297, 363, 301, 309,
	352, 397, 337, 357, 258, 388, 364, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 237,
	266, 0, 241, 0, 307, 0, 348, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 336,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 404,
	405, 406, 427, 390, 0, 445, 279, 1228, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 449, 441, 0,
	0, 0, 437, 0, 438, 0, 0, 0, 0, 0,
	365, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 1226, 0, 0, 0, 256, 188,
	439, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1224, 0, 0,
	0, 0, 0, 0, 247, 370, 386, 257, 361, 399,
	262, 368, 252, 335, 358, 0, 0, 249, 384, 367,
	317, 298, 299, 248, 0, 353, 277, 290, 274, 333,
	0, 383, 411, 273, 402, 0, 394, 251, 0, 393,
	332, 380, 385, 318, 312, 250, 382, 316, 311, 302,
	281, 426, 303, 304, 294, 344, 310, 345, 295, 322,
	321, 323, 0, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 305, 0, 0, 0, 412,
	0, 356, 338, 0, 0, 0, 354, 308, 381, 346,
	387, 371, 395, 350, 347, 242, 372, 276, 319, 253,
	255, 271, 278, 280, 282, 283, 328, 329, 341, 360,
	373, 374, 375, 275, 263, 355, 264, 292, 265, 243,
	268, 267, 269, 362, 270, 245, 342, 379, 0, 288,
	351, 315, 246, 314, 343, 378, 377, 254, 403, 409,
	410, 0, 0, 415, 0, 0, 0, 423, 428, 429,
	430, 432, 433, 434, 435, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 286,
	239, 240, 448, 272, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 407, 0, 0,
	0, 436, 447, 0, 0, 0, 0, 0, 446, 340,
	0, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 389, 401, 418, 421, 0,
	0, 0, 0, 244, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 416, 0, 0, 324, 325, 326, 327,
	289, 0, 261, 419, 349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 285, 291, 431, 293, 260,
	339, 287, 398, 300, 0, 424, 0, 425, 0, 0,
	0, 0, 331, 296, 297, 363, 301, 309, 352, 397,
	337, 357, 258, 388, 364, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 237, 266, 0,
	241, 0, 307, 0, 348, 284, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 336, 0, 238,
	233, 234, 235, 236, 0, 0, 0, 404, 405, 406,
	427, 390, 0, 445, 279, 1222, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 449, 441, 0, 0, 0,
	437, 0, 438, 0, 0, 0, 0, 0, 365, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 1226, 0, 0, 0, 256, 188, 439, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1224, 0, 0, 0, 0,
	0, 0, 247, 370, 386, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 0, 249, 384, 367, 317, 298,
	299, 248, 0, 353, 277, 290, 274, 333, 0, 383,
	411, 273, 402, 0, 394, 251, 0, 393, 332, 380,
	385, 318, 312, 250, 382, 316, 311, 302, 281, 426,
	303, 304, 294, 344, 310, 345, 295, 322, 321, 323,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 305, 0, 0, 0, 412, 0, 356,
	338, 0, 0, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 271,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 409, 410, 0,
	0, 415, 0, 0, 0, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 272, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 407, 0, 0, 0, 436,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 416, 0, 0, 324, 325, 326, 327, 289, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 336, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 404, 405, 406, 427, 390,
	0, 445, 279, 0, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 449, 441, 0, 0, 0, 437, 0,
	438, 0, 0, 0, 0, 0, 365, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3211, 0, 187, 622, 0,
	0, 0, 0, 0, 256, 188, 439, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 0, 383, 411, 273,
	402, 0, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 426, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 412, 0, 356, 338, 0,
	0, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 272,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 407, 0, 0, 0, 436, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 416,
	0, 0, 324, 325, 326, 327, 289, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 0,
	348, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 336, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 404, 405, 406, 427, 390, 0, 445,
	279, 0, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 449, 441, 0, 0, 0, 437, 0, 438, 0,
	0, 0, 0, 0, 365, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 1226, 0,
	0, 0, 256, 188, 439, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1224, 0, 0, 0, 0, 0, 0, 247, 370,
	386, 257, 361, 399, 262, 368, 252, 335, 358, 0,
	0, 249, 384, 367, 317, 298, 299, 248, 0, 353,
	277, 290, 274, 333, 0, 383, 411, 273, 402, 0,
	394, 251, 0, 393, 332, 380, 385, 318, 312, 250,
	382, 316, 311, 302, 281, 426, 303, 304, 294, 344,
	310, 345, 295, 322, 321, 323, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 305,
	0, 0, 0, 412, 0, 356, 338, 0, 0, 0,
	354, 308, 381, 346, 387, 371, 395, 350, 347, 242,
	372, 276, 319, 253, 255, 271, 278, 280, 282, 283,
	328, 329, 341, 360, 373, 374, 375, 275, 263, 355,
	264, 292, 265, 243, 268, 267, 269, 362, 270, 245,
	342, 379, 0, 288, 351, 315, 246, 314, 343, 378,
	377, 254, 403, 409, 410, 0, 0, 415, 0, 0,
	0, 423, 428, 429, 430, 432, 433, 434, 435, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 286, 239, 240, 448, 272, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 407, 0, 0, 0, 436, 447, 0, 0, 0,
	0, 0, 446, 340, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 389,
	401, 418, 421, 0, 0, 0, 0, 244, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 416, 0, 0,
	324, 325, 326, 327, 289, 0, 261, 419, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 285,
	291, 431, 293, 260, 339, 287, 398, 300, 0, 424,
	0, 425, 0, 0, 0, 0, 331, 296, 297, 363,
	301, 309, 352, 397, 337, 357, 258, 388, 364, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 237, 266, 0, 241, 0, 307, 0, 348, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 336, 0, 238, 233, 234, 235, 236, 0, 0,
	0, 404, 405, 406, 427, 390, 0, 445, 279, 0,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 449,
	441, 0, 0, 0, 437, 0, 438, 0, 0, 0,
	0, 0, 365, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 1226, 0, 0, 0,
	256, 188, 439, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2937,
	0, 0, 0, 0, 0, 0, 247, 370, 386, 257,
	361, 399, 262, 368, 252, 335, 358, 0, 0, 249,
	384, 367, 317, 298, 299, 248, 0, 353, 277, 290,
	274, 333, 0, 383, 411, 273, 402, 0, 394, 251,
	0, 393, 332, 380, 385, 318, 312, 250, 382, 316,
	311, 302, 281, 426, 303, 304, 294, 344, 310, 345,
	295, 322, 321, 323, 0, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 305, 0, 0,
	0, 412, 0, 356, 338, 0, 0, 0, 354, 308,
	381, 346, 387, 371, 395, 350, 347, 242, 372, 276,
	319, 253, 255, 271, 278, 280, 282, 283, 328, 329,
	341, 360, 373, 374, 375, 275, 263, 355, 264, 292,
	265, 243, 268, 267, 269, 362, 270, 245, 342, 379,
	0, 288, 351, 315, 246, 314, 343, 378, 377, 254,
	403, 409, 410, 0, 0, 415, 0, 0, 0, 423,
	428, 429, 430, 432, 433, 434, 435, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 286, 239, 240, 448, 272, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 407,
	0, 0, 0, 436, 447, 0, 0, 0, 0, 0,
	446, 340, 0, 359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 389, 401, 418,
	421, 0, 0, 0, 0, 244, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 416, 0, 0, 324, 325,
	326, 327, 289, 0, 261, 419, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 285, 291, 431,
	293, 260, 339, 287, 398, 300, 0, 424, 0, 425,
	0, 0, 0, 0, 331, 296, 297, 363, 301, 309,
	352, 397, 337, 357, 258, 388, 364, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 237,
	266, 0, 241, 0, 307, 0, 348, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 0,
	0, 238, 233, 234, 235, 236, 336, 0, 0, 404,
	405, 406, 427, 390, 0, 445, 0, 0, 2095, 0,
	0, 0, 0, 279, 0, 0, 306, 449, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 437,
	0, 438, 0, 0, 0, 0, 0, 365, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 2097, 0, 0, 0, 256, 188, 439, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 370, 386, 257, 361, 399, 262, 368, 252,
	335, 358, 0, 0, 249, 384, 367, 317, 298, 299,
	248, 0, 353, 277, 290, 274, 333, 0, 383, 411,
	273, 402, 0, 394, 251, 0, 393, 332, 380, 385,
	318, 312, 250, 382, 316, 311, 302, 281, 426, 303,
	304, 294, 344, 310, 345, 295, 322, 321, 323, 0,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 305, 0, 0, 0, 412, 0, 356, 338,
	0, 0, 0, 354, 308, 381, 346, 387, 371, 395,
	350, 347, 242, 372, 276, 319, 253, 255, 271, 278,
	280, 282, 283, 328, 329, 341, 360, 373, 374, 375,
	275, 263, 355, 264, 292, 265, 243, 268, 267, 269,
	362, 270, 245, 342, 379, 0, 288, 351, 315, 246,
	314, 343, 378, 377, 254, 403, 409, 410, 0, 0,
	415, 0, 0, 0, 423, 428, 429, 430, 432, 433,
	434, 435, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 286, 239, 240, 448,
	272, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 407, 0, 0, 0, 436, 447,
	0, 0, 0, 0, 0, 446, 340, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 389, 401, 418, 421, 0, 0, 0, 0,
	244, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	416, 0, 0, 324, 325, 326, 327, 289, 0, 261,
	419, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 285, 291, 431, 293, 260, 339, 287, 398,
	300, 0, 424, 0, 425, 0, 0, 0, 0, 331,
	296, 297, 363, 301, 309, 352, 397, 337, 357, 258,
	388, 364, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 237, 266, 0, 241, 0, 307,
	0, 348, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 336, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 404, 405, 406, 427, 390, 0,
	445, 279, 2116, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 449, 441, 0, 0, 0, 437, 0, 438,
	0, 0, 0, 0, 0, 365, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 1226,
	0, 0, 0, 256, 188, 439, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	370, 386, 257, 361, 399, 262, 368, 252, 335, 358,
	0, 0, 249, 384, 367, 317, 298, 299, 248, 0,
	353, 277, 290, 274, 333, 0, 383, 411, 273, 402,
	0, 394, 251, 0, 393, 332, 380, 385, 318, 312,
	250, 382, 316, 311, 302, 281, 426, 303, 304, 294,
	344, 310, 345, 295, 322, 321, 323, 0, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	305, 0, 0, 0, 412, 0, 356, 338, 0, 0,
	0, 354, 308, 381, 346, 387, 371, 395, 350, 347,
	242, 372, 276, 319, 253, 255, 271, 278, 280, 282,
	283, 328, 329, 341, 360, 373, 374, 375, 275, 263,
	355, 264, 292, 265, 243, 268, 267, 269, 362, 270,
	245, 342, 379, 0, 288, 351, 315, 246, 314, 343,
	378, 377, 254, 403, 409, 410, 0, 0, 415, 0,
	0, 0, 423, 428, 429, 430, 432, 433, 434, 435,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 286, 239, 240, 448, 272, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 407, 0, 0, 0, 436, 447, 0, 0,
	0, 0, 0, 446, 340, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	389, 401, 418, 421, 0, 0, 0, 0, 244, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 416, 0,
	0, 324, 325, 326, 327, 289, 0, 261, 419, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	285, 291, 431, 293, 260, 339, 287, 398, 300, 0,
	424, 0, 425, 0, 0, 0, 0, 331, 296, 297,
	363, 301, 309, 352, 397, 337, 357, 258, 388, 364,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 237, 266, 0, 241, 0, 307, 0, 348,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 336, 0, 238, 233, 234, 235, 236, 0,
	0, 0, 404, 405, 406, 427, 390, 0, 445, 279,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	449, 441, 0, 0, 0, 437, 0, 438, 0, 0,
	0, 0, 0, 365, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3300, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 439, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 370, 386,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 0, 383, 411, 273, 402, 0, 394,
	251, 0, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 426, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 412, 0, 356, 338, 0, 0, 0, 354,
	308, 381, 346, 387, 371, 395, 350, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 272, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	407, 0, 0, 0, 436, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 416, 0, 0, 324,
	325, 326, 327, 289, 0, 261, 419, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 0, 348, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	336, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	404, 405, 406, 427, 390, 0, 445, 279, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 449, 441,
	0, 0, 0, 437, 0, 438, 0, 0, 0, 0,
	0, 365, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 622, 0, 0, 0, 0, 0, 256,
	188, 439, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 370, 386, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 0, 383, 411, 273, 402, 0, 394, 251, 0,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 426, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 305, 0, 0, 0,
	412, 0, 356, 338, 0, 0, 0, 354, 308, 381,
	346, 387, 371, 395, 350, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 0,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 272, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 407, 0,
	0, 0, 436, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 416, 0, 0, 324, 325, 326,
	327, 289, 0, 261, 419, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 0, 348, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 336, 0,
	238, 233, 234, 235, 236, 0, 0, 0, 404, 405,
	406, 427, 390, 0, 445, 279, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 449, 441, 0, 0,
	0, 437, 0, 438, 0, 0, 0, 0, 0, 365,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3226, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 256, 188, 439,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 370, 386, 257, 361, 399, 262,
	368, 252, 335, 358, 0, 0, 249, 384, 367, 317,
	298, 299, 248, 0, 353, 277, 290, 274, 333, 0,
	383, 411, 273, 402, 0, 394, 251, 0, 393, 332,
	380, 385, 318, 312, 250, 382, 316, 311, 302, 281,
	426, 303, 304, 294, 344, 310, 345, 295, 322, 321,
	323, 0, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 305, 0, 0, 0, 412, 0,
	356, 338, 0, 0, 0, 354, 308, 381, 346, 387,
	371, 395, 350, 347, 242, 372, 276, 319, 253, 255,
	271, 278, 280, 282, 283, 328, 329, 341, 360, 373,
	374, 375, 275, 263, 355, 264, 292, 265, 243, 268,
	267, 269, 362, 270, 245, 342, 379, 0, 288, 351,
	315, 246, 314, 343, 378, 377, 254, 403, 409, 410,
	0, 0, 415, 0, 0, 0, 423, 428, 429, 430,
	432, 433, 434, 435, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 286, 239,
	240, 448, 272, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 407, 0, 0, 0,
	436, 447, 0, 0, 0, 0, 0, 446, 340, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 389, 401, 418, 421, 0, 0,
	0, 0, 244, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 416, 0, 0, 324, 325, 326, 327, 289,
	0, 261, 419, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 285, 291, 431, 293, 260, 339,
	287, 398, 300, 0, 424, 0, 425, 0, 0, 0,
	0, 331, 296, 297, 363, 301, 309, 352, 397, 337,
	357, 258, 388, 364, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 237, 266, 0, 241,
	0, 307, 0, 348, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 336, 0, 238, 233,
	234, 235, 236, 0, 0, 0, 404, 405, 406, 427,
	390, 0, 445, 279, 0, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 449, 441, 0, 0, 0, 437,
	0, 438, 0, 0, 0, 0, 0, 365, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 439, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 370, 386, 257, 361, 399, 262, 368, 252,
	335, 358, 0, 0, 249, 384, 367, 317, 298, 299,
	248, 0, 353, 277, 290, 274, 333, 0, 383, 411,
	273, 402, 0, 394, 251, 0, 393, 332, 380, 385,
	318, 312, 250, 382, 316, 311, 302, 281, 426, 303,
	304, 294, 344, 310, 345, 295, 322, 321, 323, 0,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 3156, 0, 0, 369,
	0, 0, 305, 0, 0, 0, 412, 0, 356, 338,
	0, 0, 0, 354, 308, 381, 346, 387, 371, 395,
	350, 347, 242, 372, 276, 319, 253, 255, 271, 278,
	280, 282, 283, 328, 329, 341, 360, 373, 374, 375,
	275, 263, 355, 264, 292, 265, 243, 268, 267, 269,
	362, 270, 245, 342, 379, 0, 288, 351, 315, 246,
	314, 343, 378, 377, 254, 403, 409, 410, 0, 0,
	415, 0, 0, 0, 423, 428, 429, 430, 432, 433,
	434, 435, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 286, 239, 240, 448,
	272, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 407, 0, 0, 0, 436, 447,
	0, 0, 0, 0, 0, 446, 340, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 389, 401, 418, 421, 0, 0, 0, 0,
	244, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	416, 0, 0, 324, 325, 326, 327, 289, 0, 261,
	419, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 285, 291, 431, 293, 260, 339, 287, 398,
	300, 0, 424, 0, 425, 0, 0, 0, 0, 331,
	296, 297, 363, 301, 309, 352, 397, 337, 357, 258,
	388, 364, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 237, 266, 0, 241, 0, 307,
	0, 348, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 336, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 404, 405, 406, 427, 390, 0,
	445, 279, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 449, 441, 0, 0, 0, 437, 0, 438,
	0, 0, 0, 0, 0, 365, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2933, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 256, 188, 439, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	370, 386, 257, 361, 399, 262, 368, 252, 335, 358,
	0, 0, 249, 384, 367, 317, 298, 299, 248, 0,
	353, 277, 290, 274, 333, 0, 383, 411, 273, 402,
	0, 394, 251, 0, 393, 332, 380, 385, 318, 312,
	250, 382, 316, 311, 302, 281, 426, 303, 304, 294,
	344, 310, 345, 295, 322, 321, 323, 0, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	305, 0, 0, 0, 412, 0, 356, 338, 0, 0,
	0, 354, 308, 381, 346, 387, 371, 395, 350, 347,
	242, 372, 276, 319, 253, 255, 271, 278, 280, 282,
	283, 328, 329, 341, 360, 373, 374, 375, 275, 263,
	355, 264, 292, 265, 243, 268, 267, 269, 362, 270,
	245, 342, 379, 0, 288, 351, 315, 246, 314, 343,
	378, 377, 254, 403, 409, 410, 0, 0, 415, 0,
	0, 0, 423, 428, 429, 430, 432, 433, 434, 435,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 286, 239, 240, 448, 272, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 407, 0, 0, 0, 436, 447, 0, 0,
	0, 0, 0, 446, 340, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	389, 401, 418, 421, 0, 0, 0, 0, 244, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 416, 0,
	0, 324, 325, 326, 327, 289, 0, 261, 419, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	285, 291, 431, 293, 260, 339, 287, 398, 300, 0,
	424, 0, 425, 0, 0, 0, 0, 331, 296, 297,
	363, 301, 309, 352, 397, 337, 357, 258, 388, 364,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 237, 266, 0, 241, 0, 307, 0, 348,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 336, 0, 238, 233, 234, 235, 236, 0,
	0, 0, 404, 405, 406, 427, 390, 0, 445, 279,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	449, 441, 0, 0, 0, 437, 0, 438, 0, 0,
	0, 0, 0, 365, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 2797, 0, 0,
	0, 256, 188, 439, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 370, 386,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 0, 383, 411, 273, 402, 0, 394,
	251, 0, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 426, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 412, 0, 356, 338, 0, 0, 0, 354,
	308, 381, 346, 387, 371, 395, 350, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 272, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	407, 0, 0, 0, 436, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 416, 0, 0, 324,
	325, 326, 327, 289, 0, 261, 419, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 0, 348, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	336, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	404, 405, 406, 427, 390, 0, 445, 279, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 449, 441,
	0, 0, 0, 437, 0, 438, 0, 0, 0, 0,
	0, 365, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 439, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 370, 386, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 0, 383, 411, 273, 402, 0, 394, 251, 0,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 426, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	3008, 0, 0, 369, 0, 0, 305, 0, 0, 0,
	412, 0, 356, 338, 0, 0, 0, 354, 308, 381,
	346, 387, 371, 395, 350, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 0,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 272, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 407, 0,
	0, 0, 436, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 416, 0, 0, 324, 325, 326,
	327, 289, 0, 261, 419, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 0, 348, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 336, 0,
	238, 233, 234, 235, 236, 0, 0, 0, 404, 405,
	406, 427, 390, 0, 445, 279, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 449, 441, 0, 0,
	0, 437, 0, 438, 0, 0, 0, 0, 0, 365,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 256, 188, 439,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 370, 386, 257, 361, 399, 262,
	368, 252, 335, 358, 0, 0, 249, 384, 367, 317,
	298, 299, 248, 0, 353, 277, 290, 274, 333, 0,
	383, 411, 273, 402, 0, 394, 251, 0, 393, 332,
	380, 385, 318, 312, 250, 382, 316, 311, 302, 281,
	426, 303, 304, 294, 344, 310, 345, 295, 322, 321,
	323, 0, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 305, 0, 0, 0, 412, 0,
	356, 338, 0, 0, 0, 354, 308, 381, 346, 387,
	371, 395, 350, 347, 242, 372, 276, 319, 253, 255,
	271, 278, 280, 282, 283, 328, 329, 341, 360, 373,
	374, 375, 275, 263, 355, 264, 292, 265, 243, 268,
	267, 269, 362, 270, 245, 342, 379, 0, 288, 351,
	315, 246, 314, 343, 378, 377, 254, 403, 409, 410,
	0, 0, 415, 0, 0, 0, 423, 428, 429, 430,
	432, 433, 434, 435, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 286, 239,
	240, 448, 272, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 407, 0, 0, 0,
	436, 447, 0, 0, 0, 0, 0, 446, 340, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 389, 401, 418, 421, 0, 0,
	0, 0, 244, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 416, 0, 0, 324, 325, 326, 327, 289,
	0, 261, 419, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 285, 291, 431, 293, 260, 339,
	287, 398, 300, 0, 424, 0, 425, 0, 0, 0,
	0, 331, 296, 297, 363, 301, 309, 352, 397, 337,
	357, 258, 388, 364, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 237, 266, 0, 241,
	0, 307, 0, 348, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 336, 0, 238, 233,
	234, 235, 236, 0, 0, 0, 404, 405, 406, 427,
	390, 0, 445, 279, 0, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 449, 441, 0, 0, 0, 437,
	0, 438, 0, 0, 0, 0, 0, 365, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1667, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 439, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 370, 386, 257, 361, 399, 262, 368, 252,
	335, 358, 0, 0, 249, 384, 367, 317, 298, 299,
	248, 0, 353, 277, 290, 274, 333, 0, 383, 411,
	273, 402, 0, 394, 251, 0, 393, 332, 380, 385,
	318, 312, 250, 382, 316, 311, 302, 281, 426, 303,
	304, 294, 344, 310, 345, 295, 322, 321, 323, 0,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 305, 0, 0, 0, 412, 0, 356, 338,
	0, 0, 0, 354, 308, 381, 346, 387, 371, 395,
	350, 347, 242, 372, 276, 319, 253, 255, 271, 278,
	280, 282, 283, 328, 329, 341, 360, 373, 374, 375,
	275, 263, 355, 264, 292, 265, 243, 268, 267, 269,
	362, 270, 245, 342, 379, 0, 288, 351, 315, 246,
	314, 343, 378, 377, 254, 403, 409, 410, 0, 0,
	415, 0, 0, 0, 423, 428, 429, 430, 432, 433,
	434, 435, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 286, 239, 240, 448,
	272, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 407, 0, 0, 0, 436, 447,
	0, 0, 0, 0, 0, 446, 340, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 389, 401, 418, 421, 0, 0, 0, 0,
	244, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	416, 0, 0, 324, 325, 326, 327, 289, 0, 261,
	419, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 285, 291, 431, 293, 260, 339, 287, 398,
	300, 0, 424, 0, 425, 0, 0, 0, 0, 331,
	296, 297, 363, 301, 309, 352, 397, 337, 357, 258,
	388, 364, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 237, 266, 0, 241, 0, 307,
	0, 348, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 336, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 404, 405, 406, 427, 390, 0,
	445, 279, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 449, 441, 0, 0, 0, 437, 0, 438,
	0, 0, 0, 0, 0, 365, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 2305,
	0, 0, 0, 256, 188, 439, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	370, 386, 257, 361, 399, 262, 368, 252, 335, 358,
	0, 0, 249, 384, 367, 317, 298, 299, 248, 0,
	353, 277, 290, 274, 333, 0, 383, 411, 273, 402,
	0, 394, 251, 0, 393, 332, 380, 385, 318, 312,
	250, 382, 316, 311, 302, 281, 426, 303, 304, 294,
	344, 310, 345, 295, 322, 321, 323, 0, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	305, 0, 0, 0, 412, 0, 356, 338, 0, 0,
	0, 354, 308, 381, 346, 387, 371, 395, 350, 347,
	242, 372, 276, 319, 253, 255, 271, 278, 280, 282,
	283, 328, 329, 341, 360, 373, 374, 375, 275, 263,
	355, 264, 292, 265, 243, 268, 267, 269, 362, 270,
	245, 342, 379, 0, 288, 351, 315, 246, 314, 343,
	378, 377, 254, 403, 409, 410, 0, 0, 415, 0,
	0, 0, 423, 428, 429, 430, 432, 433, 434, 435,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 286, 239, 240, 448, 272, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 407, 0, 0, 0, 436, 447, 0, 0,
	0, 0, 0, 446, 340, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	389, 401, 418, 421, 0, 0, 0, 0, 244, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 416, 0,
	0, 324, 325, 326, 327, 289, 0, 261, 419, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	285, 291, 431, 293, 260, 339, 287, 398, 300, 0,
	424, 0, 425, 0, 0, 0, 0, 331, 296, 297,
	363, 301, 309, 352, 397, 337, 357, 258, 388, 364,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 237, 266, 0, 241, 0, 307, 0, 348,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 336, 0, 238, 233, 234, 235, 236, 0,
	0, 0, 404, 405, 406, 427, 390, 0, 445, 279,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	449, 441, 0, 0, 0, 437, 0, 438, 0, 0,
	0, 0, 0, 365, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 439, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 370, 386,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 0, 383, 411, 273, 402, 0, 394,
	251, 0, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 426, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 412, 0, 356, 338, 0, 0, 0, 354,
	308, 381, 346, 387, 371, 395, 350, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 272, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	407, 0, 0, 0, 436, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 416, 0, 0, 324,
	325, 326, 327, 289, 0, 261, 419, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 0, 348, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	336, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	404, 405, 406, 427, 390, 0, 445, 279, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 449, 441,
	0, 0, 0, 437, 0, 438, 0, 0, 0, 0,
	0, 365, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 2591, 0, 0, 0, 256,
	188, 439, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 370, 386, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 0, 383, 411, 273, 402, 0, 394, 251, 0,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 426, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 305, 0, 0, 0,
	412, 0, 356, 338, 0, 0, 0, 354, 308, 381,
	346, 387, 371, 395, 350, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 0,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 272, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 407, 0,
	0, 0, 436, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 416, 0, 0, 324, 325, 326,
	327, 289, 0, 261, 419, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 0, 348, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 336, 0,
	238, 233, 234, 235, 236, 0, 0, 0, 404, 405,
	406, 427, 390, 0, 445, 279, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 449, 441, 0, 0,
	0, 437, 0, 438, 0, 0, 0, 0, 0, 365,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 256, 188, 439,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 370, 386, 257, 361, 399, 262,
	368, 252, 335, 358, 0, 0, 249, 384, 367, 317,
	298, 299, 248, 0, 353, 277, 290, 274, 333, 0,
	383, 411, 273, 402, 0, 394, 251, 0, 393, 332,
	380, 385, 318, 312, 250, 382, 316, 311, 302, 281,
	426, 303, 304, 294, 344, 310, 345, 295, 322, 321,
	323, 0, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 305, 0, 0, 0, 412, 0,
	356, 338, 0, 0, 0, 354, 308, 381, 346, 387,
	371, 395, 350, 347, 242, 372, 276, 319, 253, 255,
	271, 278, 280, 282, 283, 328, 329, 341, 360, 373,
	374, 375, 275, 263, 355, 264, 292, 265, 243, 268,
	267, 269, 362, 270, 245, 342, 379, 0, 288, 351,
	315, 246, 314, 343, 378, 377, 254, 403, 409, 410,
	0, 0, 415, 0, 0, 0, 423, 428, 429, 430,
	432, 433, 434, 435, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 286, 239,
	240, 448, 272, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 407, 0, 0, 0,
	436, 447, 0, 0, 0, 0, 0, 446, 340, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 389, 401, 418, 421, 0, 0,
	0, 0, 244, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 416, 0, 0, 324, 325, 326, 327, 289,
	0, 261, 419, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 285, 291, 431, 293, 260, 339,
	287, 398, 300, 0, 424, 0, 425, 0, 0, 0,
	0, 331, 296, 297, 363, 301, 309, 352, 397, 337,
	357, 258, 388, 364, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 237, 266, 0, 241,
	0, 307, 0, 348, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 336, 0, 238, 233,
	234, 235, 236, 0, 0, 0, 404, 405, 406, 427,
	390, 0, 445, 279, 0, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 449, 441, 0, 0, 0, 437,
	0, 438, 0, 0, 0, 0, 0, 365, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 1226, 0, 0, 0, 256, 188, 439, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 370, 386, 257, 361, 399, 262, 368, 252,
	335, 358, 0, 0, 249, 384, 367, 317, 298, 299,
	248, 0, 353, 277, 290, 274, 333, 0, 383, 411,
	273, 402, 0, 394, 251, 0, 393, 332, 380, 385,
	318, 312, 250, 382, 316, 311, 302, 281, 426, 303,
	304, 294, 344, 310, 345, 295, 322, 321, 323, 0,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 305, 0, 0, 0, 412, 0, 356, 338,
	0, 0, 0, 354, 308, 381, 346, 387, 371, 395,
	350, 347, 242, 372, 276, 319, 253, 255, 271, 278,
	280, 282, 283, 328, 329, 341, 360, 373, 374, 375,
	275, 263, 355, 264, 292, 265, 243, 268, 267, 269,
	362, 270, 245, 342, 379, 0, 288, 351, 315, 246,
	314, 343, 378, 377, 254, 403, 409, 410, 0, 0,
	415, 0, 0, 0, 423, 428, 429, 430, 432, 433,
	434, 435, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 286, 239, 240, 448,
	272, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 407, 0, 0, 0, 436, 447,
	0, 0, 0, 0, 0, 446, 340, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 389, 401, 418, 421, 0, 0, 0, 0,
	244, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	416, 0, 0, 324, 325, 326, 327, 289, 0, 261,
	419, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 285, 291, 431, 293, 260, 339, 287, 398,
	300, 0, 424, 0, 425, 0, 0, 0, 0, 331,
	296, 297, 363, 301, 309, 352, 397, 337, 357, 258,
	388, 364, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 237, 266, 0, 241, 0, 307,
	0, 348, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 336, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 404, 405, 406, 427, 390, 0,
	445, 279, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 449, 441, 0, 0, 0, 437, 0, 438,
	0, 0, 0, 0, 0, 365, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 2097,
	0, 0, 0, 256, 188, 439, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	370, 386, 257, 361, 399, 262, 368, 252, 335, 358,
	0, 0, 249, 384, 367, 317, 298, 299, 248, 0,
	353, 277, 290, 274, 333, 0, 383, 411, 273, 402,
	0, 394, 251, 0, 393, 332, 380, 385, 318, 312,
	250, 382, 316, 311, 302, 281, 426, 303, 304, 294,
	344, 310, 345, 295, 322, 321, 323, 0, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	305, 0, 0, 0, 412, 0, 356, 338, 0, 0,
	0, 354, 308, 381, 346, 387, 371, 395, 350, 347,
	242, 372, 276, 319, 253, 255, 271, 278, 280, 282,
	283, 328, 329, 341, 360, 373, 374, 375, 275, 263,
	355, 264, 292, 265, 243, 268, 267, 269, 362, 270,
	245, 342, 379, 0, 288, 351, 315, 246, 314, 343,
	378, 377, 254, 403, 409, 410, 0, 0, 415, 0,
	0, 0, 423, 428, 429, 430, 432, 433, 434, 435,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 286, 239, 240, 448, 272, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 407, 0, 0, 0, 436, 447, 0, 0,
	0, 0, 0, 446, 340, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	389, 401, 418, 421, 0, 0, 0, 0, 244, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 416, 0,
	0, 324, 325, 326, 327, 289, 0, 261, 419, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	285, 291, 431, 293, 260, 339, 287, 398, 300, 0,
	424, 0, 425, 0, 0, 0, 0, 331, 296, 297,
	363, 301, 309, 352, 397, 337, 357, 258, 388, 364,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 237, 266, 0, 241, 0, 307, 0, 348,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 336, 0, 238, 233, 234, 235, 236, 0,
	0, 0, 404, 405, 406, 427, 390, 0, 445, 279,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	449, 441, 0, 0, 0, 437, 0, 438, 0, 0,
	0, 0, 0, 365, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 439, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1787, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 370, 386,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 0, 383, 411, 273, 402, 0, 394,
	251, 0, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 426, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 412, 0, 356, 338, 0, 0, 0, 354,
	308, 381, 346, 387, 371, 395, 350, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 272, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	407, 0, 0, 0, 436, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 416, 0, 0, 324,
	325, 326, 327, 289, 0, 261, 419, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 0, 348, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	336, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	404, 405, 406, 427, 390, 0, 445, 279, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 449, 441,
	0, 0, 0, 437, 0, 438, 0, 0, 0, 0,
	0, 365, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 439, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 370, 386, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 0, 383, 411, 273, 402, 0, 394, 251, 0,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 426, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 305, 0, 0, 0,
	412, 0, 356, 338, 0, 0, 0, 354, 308, 381,
	346, 387, 371, 395, 350, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 0,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 272, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 407, 0,
	0, 0, 436, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 416, 0, 0, 324, 325, 326,
	327, 289, 0, 261, 419, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 0, 348, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 336, 0,
	238, 233, 234, 235, 236, 0, 0, 0, 404, 405,
	406, 427, 390, 0, 445, 279, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 449, 441, 0, 0,
	0, 437, 0, 438, 0, 0, 0, 0, 0, 365,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 2132, 0, 0, 0, 256, 188, 439,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 370, 386, 257, 361, 399, 262,
	368, 252, 335, 358, 0, 0, 249, 384, 367, 317,
	298, 299, 248, 0, 353, 277, 290, 274, 333, 0,
	383, 411, 273, 402, 0, 394, 251, 0, 393, 332,
	380, 385, 318, 312, 250, 382, 316, 311, 302, 281,
	426, 303, 304, 294, 344, 310, 345, 295, 322, 321,
	323, 0, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 305, 0, 0, 0, 412, 0,
	356, 338, 0, 0, 0, 354, 308, 381, 346, 387,
	371, 395, 350, 347, 242, 372, 276, 319, 253, 255,
	271, 278, 280, 282, 283, 328, 329, 341, 360, 373,
	374, 375, 275, 263, 355, 264, 292, 265, 243, 268,
	267, 269, 362, 270, 245, 342, 379, 0, 288, 351,
	315, 246, 314, 343, 378, 377, 254, 403, 409, 410,
	0, 0, 415, 0, 0, 0, 423, 428, 429, 430,
	432, 433, 434, 435, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 286, 239,
	240, 448, 272, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 407, 0, 0, 0,
	436, 447, 0, 0, 0, 0, 0, 446, 340, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 389, 401, 418, 421, 0, 0,
	0, 0, 244, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 416, 0, 0, 324, 325, 326, 327, 289,
	0, 261, 419, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 285, 291, 431, 293, 260, 339,
	287, 398, 300, 0, 424, 0, 425, 0, 0, 0,
	0, 331, 296, 297, 363, 301, 309, 352, 397, 337,
	357, 258, 388, 364, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 237, 266, 0, 241,
	0, 307, 0, 348, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 0, 1969, 238, 233,
	234, 235, 236, 336, 0, 0, 404, 405, 406, 427,
	390, 0, 445, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 0, 306, 449, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 438, 0,
	0, 0, 0, 0, 365, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 439, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 370,
	386, 257, 361, 399, 262, 368, 252, 335, 358, 0,
	0, 249, 384, 367, 317, 298, 299, 248, 0, 353,
	277, 290, 274, 333, 0, 383, 411, 273, 402, 0,
	394, 251, 0, 393, 332, 380, 385, 318, 312, 250,
	382, 316, 311, 302, 281, 426, 303, 304, 294, 344,
	310, 345, 295, 322, 321, 323, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 305,
	0, 0, 0, 412, 0, 356, 338, 0, 0, 0,
	354, 308, 381, 346, 387, 371, 395, 350, 347, 242,
	372, 276, 319, 253, 255, 271, 278, 280, 282, 283,
	328, 329, 341, 360, 373, 374, 375, 275, 263, 355,
	264, 292, 265, 243, 268, 267, 269, 362, 270, 245,
	342, 379, 0, 288, 351, 315, 246, 314, 343, 378,
	377, 254, 403, 409, 410, 0, 0, 415, 0, 0,
	0, 423, 428, 429, 430, 432, 433, 434, 435, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 286, 239, 240, 448, 272, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 407, 0, 0, 0, 436, 447, 0, 0, 0,
	0, 0, 446, 340, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 389,
	401, 418, 421, 0, 0, 0, 0, 244, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 416, 0, 0,
	324, 325, 326, 327, 289, 0, 261, 419, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 285,
	291, 431, 293, 260, 339, 287, 398, 300, 0, 424,
	0, 425, 0, 0, 0, 0, 331, 296, 297, 363,
	301, 309, 352, 397, 337, 357, 258, 388, 364, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 237, 266, 0, 241, 0, 307, 0, 348, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 336, 0, 238, 233, 234, 235, 236, 0, 1654,
	0, 404, 405, 406, 427, 390, 0, 445, 279, 0,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 449,
	441, 0, 0, 0, 437, 0, 438, 0, 0, 0,
	0, 0, 365, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 439, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 370, 386, 257,
	361, 399, 262, 368, 252, 335, 358, 0, 0, 249,
	384, 367, 317, 298, 299, 248, 0, 353, 277, 290,
	274, 333, 0, 383, 411, 273, 402, 0, 394, 251,
	0, 393, 332, 380, 385, 318, 312, 250, 382, 316,
	311, 302, 281, 426, 303, 304, 294, 344, 310, 345,
	295, 322, 321, 323, 0, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 305, 0, 0,
	0, 412, 0, 356, 338, 0, 0, 0, 354, 308,
	381, 346, 387, 371, 395, 350, 347, 242, 372, 276,
	319, 253, 255, 271, 278, 280, 282, 283, 328, 329,
	341, 360, 373, 374, 375, 275, 263, 355, 264, 292,
	265, 243, 268, 267, 269, 362, 270, 245, 342, 379,
	0, 288, 351, 315, 246, 314, 343, 378, 377, 254,
	403, 409, 410, 0, 0, 415, 0, 0, 0, 423,
	428, 429, 430, 432, 433, 434, 435, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 286, 239, 240, 448, 272, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 407,
	0, 0, 0, 436, 447, 0, 0, 0, 0, 0,
	446, 340, 0, 359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 389, 401, 418,
	421, 0, 0, 0, 0, 244, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 416, 0, 0, 324, 325,
	326, 327, 289, 0, 261, 419, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 285, 291, 431,
	293, 260, 339, 287, 398, 300, 0, 424, 0, 425,
	0, 0, 0, 0, 331, 296, 297, 363, 301, 309,
	352, 397, 337, 357, 258, 388, 364, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 237,
	266, 0, 241, 0, 307, 0, 348, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 336,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 404,
	405, 406, 427, 390, 0, 445, 279, 0, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 449, 441, 0,
	0, 0, 437, 0, 438, 0, 0, 0, 0, 0,
	365, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 1226, 0, 0, 0, 256, 188,
	439, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 370, 386, 257, 361, 399,
	262, 368, 252, 335, 358, 0, 0, 249, 384, 367,
	317, 298, 299, 248, 0, 353, 277, 290, 274, 333,
	0, 383, 411, 273, 402, 0, 394, 251, 0, 393,
	332, 380, 385, 318, 312, 250, 382, 316, 311, 302,
	281, 426, 303, 304, 294, 344, 310, 345, 295, 322,
	321, 323, 0, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 305, 0, 0, 0, 412,
	0, 356, 338, 0, 0, 0, 354, 308, 381, 346,
	387, 371, 395, 1566, 347, 242, 372, 276, 319, 253,
	255, 271, 278, 280, 282, 283, 328, 329, 341, 360,
	373, 374, 375, 275, 263, 355, 264, 292, 265, 243,
	268, 267, 269, 362, 270, 245, 342, 379, 0, 288,
	351, 315, 246, 314, 343, 378, 377, 254, 403, 409,
	410, 0, 0, 415, 0, 0, 0, 423, 428, 429,
	430, 432, 433, 434, 435, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 286,
	239, 240, 448, 272, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 407, 0, 0,
	0, 436, 447, 0, 0, 0, 0, 0, 446, 340,
	0, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 389, 401, 418, 421, 0,
	0, 0, 0, 244, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 416, 0, 0, 324, 325, 326, 327,
	289, 0, 261, 419, 349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 285, 291, 431, 293, 260,
	339, 287, 398, 300, 0, 424, 0, 425, 0, 0,
	0, 0, 331, 296, 297, 363, 301, 309, 352, 397,
	337, 357, 258, 388, 364, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 237, 266, 0,
	241, 0, 307, 0, 348, 284, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 336, 0, 238,
	233, 234, 235, 236, 0, 0, 0, 404, 405, 406,
	427, 390, 0, 445, 279, 0, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 449, 441, 0, 0, 0,
	437, 0, 438, 0, 0, 0, 0, 0, 365, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 439, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 370, 386, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 0, 249, 384, 367, 317, 298,
	299, 248, 0, 353, 277, 290, 274, 333, 0, 383,
	411, 273, 402, 0, 394, 251, 0, 393, 332, 380,
	385, 318, 312, 250, 382, 316, 311, 302, 281, 426,
	303, 304, 294, 344, 310, 345, 295, 322, 321, 323,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 1251, 0, 0, 0,
	369, 0, 0, 305, 0, 0, 0, 412, 0, 356,
	338, 0, 0, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 271,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 409, 410, 0,
	0, 415, 0, 0, 0, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 272, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 407, 0, 0, 0, 436,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 416, 0, 0, 324, 325, 326, 327, 289, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 336, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 404, 405, 406, 427, 390,
	0, 445, 279, 0, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 449, 441, 0, 0, 0, 437, 0,
	438, 0, 0, 0, 0, 0, 365, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 256, 188, 439, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 0, 383, 411, 273,
	402, 0, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 426, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 412, 0, 356, 338, 0,
	0, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 272,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 407, 0, 0, 0, 436, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 416,
	0, 0, 324, 325, 326, 327, 289, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 732, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 0,
	348, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 336, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 404, 405, 406, 427, 390, 0, 445,
	279, 0, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 449, 441, 0, 0, 0, 437, 0, 438, 0,
	0, 0, 0, 0, 365, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 439, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 370,
	386, 257, 361, 399, 262, 368, 252, 335, 358, 0,
	0, 249, 384, 367, 317, 298, 299, 248, 0, 353,
	277, 290, 274, 333, 0, 383, 411, 273, 402, 0,
	394, 251, 0, 393, 332, 380, 385, 318, 312, 250,
	382, 316, 311, 302, 281, 426, 303, 304, 294, 344,
	310, 345, 295, 322, 321, 323, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 305,
	0, 0, 0, 412, 0, 356, 338, 0, 0, 0,
	354, 308, 381, 346, 387, 371, 395, 487, 347, 242,
	372, 276, 319, 253, 255, 271, 278, 280, 282, 283,
	328, 329, 341, 360, 373, 374, 375, 275, 263, 355,
	264, 292, 265, 243, 268, 267, 269, 362, 270, 245,
	342, 379, 0, 288, 351, 315, 246, 314, 343, 378,
	377, 254, 403, 409, 410, 0, 0, 415, 0, 0,
	0, 423, 428, 429, 430, 432, 433, 434, 435, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 286, 239, 240, 448, 272, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 407, 0, 0, 0, 436, 447, 0, 0, 0,
	0, 0, 446, 340, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 389,
	401, 418, 421, 0, 0, 0, 0, 244, 420, 0,
	0, 0, 0, 0, 0, 488, 0, 392, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 416, 0, 0,
	324, 325, 326, 327, 289, 0, 261, 419, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 285,
	291, 431, 293, 260, 339, 287, 398, 300, 0, 424,
	0, 425, 0, 0, 0, 0, 331, 296, 297, 363,
	301, 309, 352, 397, 337, 357, 258, 388, 364, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 237, 266, 0, 241, 0, 307, 0, 348, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 336, 0, 238, 233, 234, 235, 236, 0, 0,
	0, 404, 405, 406, 427, 390, 0, 445, 279, 0,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 449,
	441, 0, 0, 0, 437, 0, 438, 0, 0, 0,
	0, 0, 365, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 439, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 370, 386, 257,
	361, 399, 262, 368, 252, 335, 358, 0, 0, 249,
	384, 367, 317, 298, 299, 248, 0, 353, 277, 290,
	274, 333, 0, 383, 411, 273, 402, 0, 394, 251,
	0, 393, 332, 380, 385, 318, 312, 250, 382, 316,
	311, 302, 281, 426, 303, 304, 294, 344, 310, 345,
	295, 322, 321, 323, 0, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 464, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 305, 0, 0,
	0, 412, 0, 356, 338, 0, 0, 0, 354, 308,
	381, 346, 387, 371, 395, 350, 347, 242, 372, 276,
	319, 253, 255, 271, 278, 280, 282, 283, 328, 329,
	341, 360, 373, 374, 375, 275, 263, 355, 264, 292,
	265, 243, 268, 267, 269, 362, 270, 245, 342, 379,
	0, 288, 351, 315, 246, 314, 343, 378, 377, 254,
	403, 409, 410, 0, 0, 415, 0, 0, 0, 423,
	428, 429, 430, 432, 433, 434, 435, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 286, 239, 240, 448, 272, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 407,
	0, 0, 0, 436, 447, 0, 0, 0, 0, 0,
	446, 340, 0, 359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 389, 401, 418,
	421, 0, 0, 0, 0, 244, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 416, 0, 0, 324, 325,
	326, 327, 289, 0, 261, 419, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 285, 291, 431,
	293, 260, 339, 287, 398, 300, 0, 424, 0, 425,
	0, 0, 0, 0, 331, 296, 297, 363, 301, 309,
	352, 397, 337, 357, 258, 388, 364, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 237,
	266, 0, 241, 0, 307, 0, 348, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 0,
	336, 238, 233, 234, 235, 236, 0, 0, 0, 404,
	405, 406, 427, 390, 0, 445, 454, 279, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 449, 441, 0,
	0, 0, 0, 437, 0, 438, 0, 0, 0, 0,
	0, 365, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 439, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 370, 386, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 0, 383, 411, 273, 402, 0, 394, 251, 0,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 426, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 305, 0, 0, 0,
	412, 0, 356, 338, 0, 0, 0, 354, 308, 381,
	346, 387, 371, 395, 350, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 0,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 272, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 407, 0,
	0, 0, 436, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 416, 0, 0, 324, 325, 326,
	327, 289, 0, 261, 419, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 0, 348, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 336, 0,
	238, 233, 234, 235, 236, 0, 0, 0, 404, 405,
	406, 427, 390, 0, 445, 279, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 449, 441, 0, 0,
	0, 437, 0, 438, 0, 0, 0, 0, 0, 365,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 256, 188, 439,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 370, 386, 257, 361, 399, 262,
	368, 252, 335, 358, 0, 0, 249, 384, 367, 317,
	298, 299, 248, 0, 353, 277, 290, 274, 333, 0,
	383, 411, 273, 402, 0, 394, 251, 0, 393, 332,
	380, 385, 318, 312, 250, 382, 316, 311, 302, 281,
	426, 303, 304, 294, 344, 310, 345, 295, 322, 321,
	323, 0, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 305, 0, 0, 0, 412, 0,
	356, 338, 0, 0, 0, 354, 308, 381, 346, 387,
	371, 395, 350, 347, 242, 372, 276, 319, 253, 255,
	271, 278, 280, 282, 283, 328, 329, 341, 360, 373,
	374, 375, 275, 263, 355, 264, 292, 265, 243, 268,
	267, 269, 362, 270, 245, 342, 379, 0, 288, 351,
	315, 246, 314, 343, 378, 377, 254, 403, 409, 410,
	0, 0, 415, 0, 0, 0, 423, 428, 429, 430,
	432, 433, 434, 435, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 286, 239,
	240, 448, 272, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 407, 0, 0, 0,
	436, 447, 0, 0, 0, 0, 0, 446, 340, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 389, 401, 418, 421, 0, 0,
	0, 0, 244, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 416, 0, 0, 324, 325, 326, 327, 289,
	0, 261, 419, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 285, 291, 431, 293, 260, 339,
	287, 398, 300, 0, 424, 0, 425, 0, 0, 0,
	0, 331, 296, 297, 363, 301, 309, 352, 397, 337,
	357, 258, 388, 364, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 237, 266, 0, 241,
	0, 307, 0, 348, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 336, 0, 238, 233,
	234, 235, 236, 0, 0, 0, 404, 405, 406, 427,
	390, 0, 445, 279, 0, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 449, 441, 0, 0, 0, 437,
	0, 438, 0, 0, 0, 0, 0, 365, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 439, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 370, 1206, 257, 361, 399, 262, 368, 252,
	335, 358, 0, 0, 249, 384, 367, 317, 298, 299,
	248, 0, 353, 277, 290, 274, 333, 0, 383, 411,
	273, 402, 0, 394, 251, 0, 393, 332, 380, 385,
	318, 312, 250, 382, 316, 311, 302, 281, 426, 303,
	304, 294, 344, 310, 345, 295, 322, 321, 323, 0,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 305, 0, 0, 0, 412, 0, 356, 338,
	0, 0, 0, 354, 308, 381, 346, 387, 371, 395,
	350, 347, 242, 372, 276, 319, 253, 255, 271, 278,
	280, 282, 283, 328, 329, 341, 360, 373, 374, 375,
	275, 263, 355, 264, 292, 265, 243, 268, 267, 269,
	362, 270, 245, 342, 379, 0, 288, 351, 315, 246,
	314, 343, 378, 377, 254, 403, 409, 410, 0, 0,
	415, 0, 0, 0, 423, 428, 429, 430, 432, 433,
	434, 435, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 286, 239, 240, 448,
	272, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 407, 0, 0, 0, 436, 447,
	0, 0, 0, 0, 0, 446, 340, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 389, 401, 418, 421, 0, 0, 0, 0,
	244, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	416, 0, 0, 324, 325, 326, 327, 289, 0, 261,
	419, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 285, 291, 431, 293, 260, 339, 287, 398,
	300, 0, 424, 0, 425, 0, 0, 0, 0, 331,
	296, 297, 363, 301, 309, 352, 397, 337, 357, 258,
	388, 364, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 237, 266, 0, 241, 0, 307,
	0, 348, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 336, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 404, 405, 406, 427, 390, 0,
	445, 279, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 449, 441, 0, 0, 0, 437, 0, 438,
	0, 0, 0, 0, 0, 365, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 256, 188, 439, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	370, 1204, 257, 361, 399, 262, 368, 252, 335, 358,
	0, 0, 249, 384, 367, 317, 298, 299, 248, 0,
	353, 277, 290, 274, 333, 0, 383, 411, 273, 402,
	0, 394, 251, 0, 393, 332, 380, 385, 318, 312,
	250, 382, 316, 311, 302, 281, 426, 303, 304, 294,
	344, 310, 345, 295, 322, 321, 323, 0, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	305, 0, 0, 0, 412, 0, 356, 338, 0, 0,
	0, 354, 308, 381, 346, 387, 371, 395, 350, 347,
	242, 372, 276, 319, 253, 255, 271, 278, 280, 282,
	283, 328, 329, 341, 360, 373, 374, 375, 275, 263,
	355, 264, 292, 265, 243, 268, 267, 269, 362, 270,
	245, 342, 379, 0, 288, 351, 315, 246, 314, 343,
	378, 377, 254, 403, 409, 410, 0, 0, 415, 0,
	0, 0, 423, 428, 429, 430, 432, 433, 434, 435,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 286, 239, 240, 448, 272, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 407, 0, 0, 0, 436, 447, 0, 0,
	0, 0, 0, 446, 340, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	389, 401, 418, 421, 0, 0, 0, 0, 244, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 416, 0,
	0, 324, 325, 326, 327, 289, 0, 261, 419, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	285, 291, 431, 293, 260, 339, 287, 398, 300, 0,
	424, 0, 425, 0, 0, 0, 0, 331, 296, 297,
	363, 301, 309, 352, 397, 337, 357, 258, 388, 364,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 237, 266, 0, 241, 0, 307, 0, 348,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 336, 0, 238, 233, 234, 235, 236, 0,
	0, 0, 404, 405, 406, 427, 390, 0, 445, 279,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	449, 441, 0, 0, 0, 437, 0, 438, 0, 0,
	0, 0, 0, 365, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 439, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 370, 386,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 0, 383, 411, 273, 402, 0, 394,
	251, 0, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 426, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 412, 0, 356, 338, 0, 0, 0, 354,
	308, 381, 346, 387, 371, 395, 350, 347, 242, 372,
	276, 319, 253, 255, 528, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 272, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	407, 0, 0, 0, 436, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 416, 0, 0, 324,
	325, 326, 327, 289, 0, 261, 419, 349, 0, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 165, 51, 157, 133, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 158,
	0, 0, 0, 0, 0, 0, 150, 0, 0, 0,
	159, 0, 232, 0, 0, 0, 0, 0, 736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 775, 113,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 101, 307, 0, 348, 284, 0,
	162, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	0, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	404, 405, 406, 427, 390, 0, 445, 165, 51, 157,
	133, 777, 0, 0, 776, 0, 0, 0, 449, 441,
	0, 0, 0, 0, 0, 158, 118, 119, 0, 120,
	121, 0, 150, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	762, 0, 0, 0, 0, 113, 0, 0, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	101, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 156, 163, 0,
	99, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 149,
	148, 0, 0, 0, 0, 57, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 761, 760,
	0, 0, 118, 119, 0, 120, 121, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 759, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 735, 0,
	0, 0, 0, 0, 0, 0, 151, 152, 153, 739,
	770, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 724,
	0, 725, 0, 766, 160, 0, 0, 0, 0, 0,
	0, 0, 132, 156, 163, 0, 99, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 154, 0,
	110, 0, 0, 0, 155, 149, 148, 705, 0, 767,
	771, 57, 0, 0, 0, 0, 0, 0, 0, 0,
	718, 0, 721, 0, 0, 0, 0, 0, 756, 0,
	754, 758, 774, 0, 0, 0, 755, 752, 751, 0,
	757, 742, 743, 741, 744, 745, 746, 747, 0, 772,
	0, 773, 0, 0, 0, 0, 0, 111, 0, 0,
	0, 0, 768, 769, 0, 0, 0, 0, 0, 50,
	0, 0, 151, 152, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1642, 0,
	0, 0, 0, 1604, 0, 0, 0, 0, 0, 764,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 0,
	109, 0, 1644, 1613, 154, 0, 110, 0, 0, 0,
	0, 0, 1645, 1646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 720, 0,
	714, 0, 701, 0, 0, 134, 0, 0, 1612, 717,
	716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1619, 0, 0, 698, 0, 763, 0,
	706, 0, 0, 111, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 50, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 39, 0, 0, 723,
	0, 0, 49, 5, 713, 0, 116, 117, 712, 0,
	0, 0, 0, 0, 697, 0, 0, 0, 704, 0,
	1635, 0, 0, 0, 52, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	699, 134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1603, 1605, 1602, 0, 1598, 0, 0, 0, 0, 1623,
	703, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 39, 0, 0, 0, 0, 0, 49, 0,
	1617, 1651, 116, 117, 1618, 1620, 1622, 0, 1624, 1625,
	1626, 1630, 1631, 1632, 1634, 1637, 1638, 1639, 0, 0,
	0, 0, 0, 0, 0, 1627, 1636, 1628, 0, 0,
	0, 0, 871, 1642, 0, 0, 0, 1607, 0, 0,
	0, 0, 0, 0, 0, 0, 719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	0, 0, 0, 0, 0, 0, 0, 1644, 1599, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1600, 1601, 0, 709, 0, 0, 0, 0,
	0, 0, 0, 0, 1642, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 0, 0, 0, 0, 3317, 0,
	0, 0, 0, 0, 0, 0, 0, 1616, 1619, 0,
	0, 0, 0, 0, 1615, 0, 0, 0, 1644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1633, 0,
	0, 0, 857, 0, 0, 0, 0, 1621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1648, 1647, 879, 883, 885, 887, 889, 890, 892, 1619,
	897, 893, 894, 895, 896, 1635, 874, 875, 876, 877,
	855, 856, 880, 0, 858, 0, 859, 860, 861, 862,
	863, 864, 865, 866, 867, 870, 872, 868, 869, 878,
	0, 507, 506, 513, 503, 0, 0, 882, 884, 886,
	888, 891, 1609, 510, 511, 0, 512, 516, 0, 0,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	521, 0, 3061, 0, 1642, 0, 1635, 0, 0, 0,
	0, 0, 0, 0, 873, 0, 0, 0, 1650, 0,
	0, 1649, 0, 0, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1629, 0, 0, 1644, 0,
	0, 0, 0, 525, 0, 0, 527, 0, 0, 0,
	0, 526, 0, 0, 0, 1617, 1651, 0, 0, 1618,
	1620, 1622, 0, 1624, 1625, 1626, 1630, 1631, 1632, 1634,
	1637, 1638, 1639, 0, 0, 0, 0, 0, 0, 0,
	1627, 1636, 1628, 0, 0, 1623, 0, 0, 0, 1619,
	0, 0, 0, 0, 0, 0, 1629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1643, 0, 1617, 1651, 0, 0,
	1618, 1620, 1622, 0, 1624, 1625, 1626, 1630, 1631, 1632,
	1634, 1637, 1638, 1639, 507, 506, 513, 503, 0, 0,
	0, 1627, 1636, 1628, 0, 0, 510, 511, 0, 512,
	516, 0, 0, 498, 0, 1640, 1635, 0, 0, 0,
	0, 0, 0, 521, 0, 0, 0, 0, 0, 0,
	0, 0, 1616, 0, 0, 1643, 0, 0, 0, 1615,
	0, 0, 507, 506, 513, 503, 499, 501, 500, 0,
	0, 0, 0, 0, 510, 511, 505, 512, 516, 0,
	0, 498, 0, 1633, 0, 0, 525, 0, 509, 527,
	0, 521, 1621, 0, 526, 524, 1640, 0, 0, 0,
	0, 0, 502, 0, 0, 0, 493, 0, 0, 0,
	0, 0, 0, 1616, 0, 1623, 0, 0, 0, 0,
	1615, 0, 0, 0, 0, 0, 1629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1633, 0, 1617, 1651, 0, 0,
	1618, 1620, 1622, 1621, 1624, 1625, 1626, 1630, 1631, 1632,
	1634, 1637, 1638, 1639, 0, 0, 881, 0, 0, 0,
	0, 1627, 1636, 1628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 0, 0, 504, 508,
	514, 0, 515, 517, 0, 0, 518, 519, 520, 0,
	0, 522, 523, 0, 0, 0, 0, 0, 0, 499,
	501, 500, 0, 0, 0, 0, 0, 0, 0, 505,
	0, 0, 0, 0, 0, 0, 1640, 0, 0, 0,
	0, 509, 0, 0, 0, 0, 0, 0, 524, 0,
	0, 0, 0, 1616, 0, 502, 0, 0, 0, 0,
	1615, 0, 0, 0, 0, 0, 0, 499, 501, 500,
	0, 0, 0, 0, 0, 0, 0, 505, 0, 0,
	0, 0, 0, 0, 1633, 0, 0, 0, 0, 509,
	0, 0, 0, 1621, 0, 0, 524, 0, 0, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 508, 514, 0, 515, 517, 0, 0, 518,
	519, 520, 0, 0, 522, 523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 504,
	508, 514, 0, 515, 517, 0, 0, 518, 519, 520,
	0, 0, 522, 523,
}

var yyPact = [...]int{
	37519, -1000, -1000, -1000, -324, 10100, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35426,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35426,
	-319, 34878, 34878, -1000, -1000, 2270, -1000, 34329, 11241, 35426,
	267, 265, 35426, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 561,
	-1000, 33781, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 509,
	38439, 37070, 7830, -266, -1000, 2896, -111, 2060, 765, 795,
	913, 913, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 37804, 746, 33233, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 37473, 416, 746, 13440, 1,
	-1, 2896, 323, 2240, -1000, 999, 37645, 154, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7830,
	7830, 10100, -355, 10100, 7830, 35426, 35426, -1000, -1000, -1000,
	-1000, 509, 38439, 7830, 2060, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 4078, -1000, 1276, -1000, -1000, -1000, -1000, -1000,
	2460, 1272, 2059, 427, 35426, -1000, 1269, 427, -1000, -1000,
	-1000, 2896, 2896, -1000, 35426, 35426, 65, 1473, -1000, 337,
	330, 306, 1261, -1000, -1000, -1000, -1000, -1000, -1000, 363,
	2847, -1000, 35426, 35426, 2495, 35426, -1000, 1881, 397, 38602,
	2707, 1084, 615, 2516, -1000, -1000, 2459, -1000, 159, 188,
	165, 507, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 210,
	-1000, 2765, -1000, -1000, 156, -1000, -1000, 148, -1000, -1000,
	-1000, -2, -1000, -1000, -1000, -1000, -1000, -1000, -85, -1000,
	-1000, 842, 1632, 7830, -1000, 1787, -1000, 3251, -1000, -1000,
	-1000, -1000, 4998, 9525, 9525, 9525, 9525, -1000, -1000, 2311,
	7830, 2456, 2448, 2441, -1000, -1000, -1000, -1000, -1000, 1260,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1628,
	-1000, -1000, -1000, 8960, -1000, 2440, 2427, 2424, 2423, 2422,
	2420, 2415, 2413, 2412, 2411, 2410, 2409, 2407, 2406, 2214,
	10663, 2401, 2056, 2053, 2398, 2392, 2391, 2051, 2214, 2214,
	2388, 2387, 2386, 2385, 2382, 2381, 2379, 2378, 2377, 2372,
	2370, 2367, 2358, 2351, 2346, 2345, 2340, 2339, 2338, 2334,
	2332, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1129, -1000, 2331, 2680, 2781, 2249,
	2823, 2749, 2747, 2732, 2730, 1772, -1000, -1000, 60, -1000,
	-154, -1000, -1000, 801, -1000, 740, -1000, 35426, 35426, 35426,
	800, 493, 493, 493, 493, 493, 493, 546, 493, 35426,
	-151, 558, 555, 552, 493, -1000, -1000, -1000, -1000, -1000,
	-1000, -107, -1000, 1471, 1469, 2560, 722, -1000, -1000, -1000,
	-1000, 1113, 35426, -1000, 2276, 1387, 1387, 2777, 414, 408,
	389, 1387, 311, -1000, 1450, 1450, 1450, 1450, 1387, 391,
	412, 2781, 2781, -16, 1450, -17, 1387, 1387, -17, 1387,
	1387, 1387, 163, -314, -1000, -1000, -1000, 1450, 1450, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2760, 2759, 509, 35426,
	123, 35426, 509, 509, 509, 521, -44, 36522, 35974, 1881,
	382, 380, 1138, 1440, -1000, 1349, 35426, 35426, 1349, 1349,
	17875, 17327, -1000, 35426, -1000, 2781, 2249, -1000, 2178, 2538,
	2177, 2249, 509, 509, 509, 509, 509, 140, 509, 509,
	509, 509, 35426, 35426, 32685, 509, 509, 6693, 6693, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 10100, 1514,
	1900, 152, -78, -322, 186, -1000, -1000, 35426, 2666, 131,
	-1000, -1000, -1000, 2227, -1000, 2275, 2275, 2275, 2275, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2275, 2275,
	2289, 2330, -1000, -1000, 2274, 2274, 2274, 2227, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2286, 2286, 2287, 2287, 2286, 35426, 7830,
	35426, 2681, 325, 2325, -1000, 35426, 309, 2781, 2680, 2781,
	-1000, -1000, 1253, 1765, 2050, -1000, -1000, 337, 1376, -1000,
	919, -1000, -1000, -1000, -1000, 35426, -85, 318, -1000, -1000,
	2030, 2323, -1000, 468, 950, 1298, -1000, 151, 38650, 28294,
	1881, 28294, 35426, -1000, -1000, -1000, -1000, -1000, -1000, -3,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 169, -1000, 7830, 7830, 7830, 7830, 7830,
	-1000, 559, 8395, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	9525, 9525, 9525, 9525, 9525, 9525, 9525, 9525, 9525, 9525,
	9525, 9525, 2306, 1456, 9525, 9525, 9525, 9525, 2538, 2578,
	1118, 227, -1000, -1000, -1000, -1000, -1000, 1488, 1632, 7830,
	7830, 7830, 35426, -1000, -1000, 2965, 7830, 7830, 2946, 7830,
	2726, 7830, 7830, 7830, 2176, 3523, 35426, 7830, -1000, 2173,
	2169, -1000, -1000, 1621, 7830, -1000, -1000, 7830, -1000, -1000,
	7830, 9525, 7830, -1000, -1000, -1000, 577, 2726, 2726, 1433,
	7830, 7830, 2726, 2726, 2726, 1425, 2726, 2726, 2726, 2726,
	2726, 2726, 2726, 2726, 2168, 2167, 2165, 2781, -266, 6128,
	-1000, -272, 2680, 7830, -1000, -1000, 7830, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2046, 2036, -334, -51, 749,
	748, 751, -1000, 2720, -1000, 2315, 2313, 1250, 493, -1000,
	-118, 35426, 1496, 35426, 28294, 35426, 35426, 1881, 35426, 35426,
	-169, 493, -157, 493, 493, 493, 35426, -1000, 2623, 28294,
	2608, 521, -1000, 35426, 1113, 2719, 35426, 2834, 9525, 9525,
	-1000, 32137, 1450, 1387, 1387, -1000, -1000, 35426, -1000, -1000,
	-1000, 1450, 35426, 1450, 1450, 2834, 1450, -1000, -1000, -1000,
	1387, 1387, -1000, -1000, -1000, -1000, 1450, 1450, -1000, -1000,
	2834, 35426, -4, 2834, 2834, -14, -1000, -1000, -1000, 35426,
	35426, 493, 35426, -1000, 35426, 35426, -1000, -1000, 35426, 37972,
	35426, 31589, 2758, -1000, 28294, 35426, 35426, 25554, -1000, 1073,
	-1000, -58, -1000, -63, -44, 1349, -44, 1349, -1000, 467,
	529, 16231, 425, 28294, 4433, -1000, -1000, 1349, 1349, 4433,
	4433, 1287, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1109,
	-1000, 170, 2680, -1000, -1000, -1000, -1000, -1000, 35426, 35426,
	28294, 1881, 35426, 509, 35426, 35426, 35426, 35426, -1000, 2312,
	-1000, 2700, 35426, 35426, 1254, -1000, -1000, 12892, 1245, 1254,
	-1000, 1510, -1000, 7830, 10100, -289, 7830, 10100, 10100, 7830,
	10100, -1000, 7830, 125, -1000, -1000, -1000, -1000, 1763, -1000,
	1752, -1000, -1000, -1000, -1000, -1000, 2033, 2033, -1000, 1743,
	-1000, -1000, -1000, -1000, 1742, -1000, -1000, 1739, -1000, -1000,
	-1000, 2162, 842, -1000, 2032, 2510, -267, -1000, 15118, 35426,
	35426, -1000, -1000, -267, -1000, 14553, 35426, 2680, -1000, 2680,
	35426, -1000, 2776, -1000, 337, 251, -1000, -1000, -1000, -1000,
	-1000, -1000, 1242, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1095, -1000, 35426, -1000, -1000, 151, 28294, 29390,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 206, -1000, -1000,
	157, -1000, 542, 94, 1368, -1000, -1000, 138, 172, 69,
	574, 1632, -1000, 1554, 1554, 1508, -1000, 564, -1000, -1000,
	-1000, -1000, 2311, -1000, -1000, -1000, 1747, 2871, -1000, 1661,
	1661, 1291, 1291, 1291, 1291, 1291, 1633, 1633, -1000, -1000,
	-1000, 4998, 2306, 9525, 9525, 9525, 9525, 469, 469, 3609,
	3506, -1000, 7830, 1497, -1000, 7830, 1929, 1872, 1256, 1226,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2161, 2157, 2044, 2846, 2155, 7830, -1000, -1000, 1365, 1364,
	1362, -1000, 1977, 7265, -1000, -1000, -1000, 2154, 1224, 2147,
	-1000, -1000, -1000, 2145, 1351, 964, 2144, 2374, 2143, 1090,
	7830, 7830, 7830, 2138, 1341, 1329, 7830, 7830, 7830, 7830,
	2134, 7830, 7830, 7830, 7830, 7830, 7830, 7830, 7830, 19,
	19, 19, -1000, -1000, 1325, -1000, 1632, -1000, 2031, -1000,
	1331, 1083, -1000, 1733, -1000, -1000, -1000, 2002, -1000, -1000,
	761, 730, 813, 35426, 944, 11789, 35426, 35426, -1000, 2276,
	2689, 111, -1000, 955, -1000, 94, -98, 271, 860, 2492,
	2844, 2304, 35426, 493, 35426, 35426, 35426, 2716, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 31041, -1000, 2303, 1323,
	-1000, -1000, 7830, -1000, -1000, 2482, 35426, 35426, 2834, 2834,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 35426, 2834, 2834,
	1387, 1450, -1000, -1000, 1450, -1000, -1000, 1450, -1000, 1216,
	-1000, 35426, -1000, -1000, -1000, 2276, 1082, -1000, 1374, 481,
	481, 481, 689, 392, 2816, 13988, -1000, 1377, 915, 532,
	2636, 162, -1000, 1377, -217, 1377, 1377, 1377, 1377, 1377,
	1377, 1377, 356, 349, 1377, 1377, 1377, 1377, 1377, 1377,
	1377, 1377, 1377, 1377, 1377, 780, 1377, 1377, 1377, 1377,
	1377, -1000, 1377, 2301, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 387, 110, 2752, 194, 187, 955, 2742, 201, 2738,
	954, -1000, -1000, -1000, -1000, 20074, 20074, 15683, 20074, -1000,
	1379, -44, -57, -1000, -1000, 1073, 4433, 1073, 4433, -1000,
	-1000, 531, -1000, -1000, 860, -1000, 35426, 35426, -1000, -1000,
	2300, 1463, -1000, -1000, 10663, -1000, 4433, 4433, -1000, -1000,
	20622, 35426, -1000, -86, -1000, -75, 2775, 1059, -1000, -1000,
	1072, 860, 2504, 35426, 1059, 1059, -1000, -1000, 11789, 35426,
	-1000, -1000, 2834, 6693, -1000, 25554, -1000, -1000, 30486, -1000,
	29938, 2834, 1481, -1000, 10100, 1890, 147, -1000, 180, -326,
	146, 1575, 145, 1632, -1000, -1000, 2131, 2129, 1319, -1000,
	1318, 2128, 1315, 1314, -1000, -23, -1000, 2652, 911, -1000,
	2297, -1000, 1299, 2556, -1000, 1051, -1000, 1462, 1294, -1000,
	911, 1278, 2554, 1051, 2775, -1000, 1210, 63, -1000, -1000,
	35426, 2030, 1258, 29390, 1004, -1000, 524, 1203, 1201, -1000,
	28294, 158, 28294, -1000, 28294, -1000, -1000, 336, -1000, 35426,
	2677, -1000, -1000, -1000, 2002, 1459, -339, -1000, -1000, -1000,
	-1000, -1000, 1240, -1000, 469, 469, 3609, 3385, -1000, 9525,
	-1000, 9525, 2563, 1479, -1000, 7830, 1756, 3992, 3992, 1492,
	18971, 35426, -1000, -1000, 7830, 7830, -1000, 2544, -1000, -1000,
	-1000, -1000, 7830, 7830, 1745, -1000, 35426, -1000, -1000, -1000,
	-1000, 18971, -1000, 9525, -1000, 7830, 1036, 2540, 1238, 19,
	19, 19, 2529, 2525, 2519, 1237, 19, 2488, 2481, 2476,
	2457, 2425, 2389, 2375, 2280, -1000, 2293, -1000, -1000, 6128,
	-1000, -23, 7830, 7830, 7830, 2626, -1000, -1000, 106, -1000,
	1453, -1000, -1000, -1000, 639, 142, 2126, 1050, -1000, -1000,
	35426, -1000, -1000, -1000, 2121, 1045, -1000, -1000, -1000, 38242,
	2275, 2275, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2275, 2275, 2289, -1000, -1000, 2274, 2274, 2274, 2227,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2286,
	2286, 2287, 2287, 2286, -1000, 2276, 2714, -1000, 24, 1377,
	508, 28294, 378, -1000, 35426, 1735, 1449, 2503, 444, 2658,
	35426, 26102, 234, 35426, 2285, 2284, 2282, 253, 38242, 35426,
	1079, -1000, 1199, 37645, -1000, 35426, 1632, -1000, 1881, -1000,
	1387, -1000, -1000, 2834, 1120, -1000, -1000, 2834, 1387, 1387,
	1450, 35426, -1000, 2712, 37972, -1000, 35426, -1000, -1000, -1000,
	637, -1000, 693, 493, 35426, 1585, 693, 1583, 2279, -1000,
	-1000, 35426, 35426, 35426, 35426, 35426, -1000, -1000, 35426, -1000,
	35426, 35426, 35426, 35426, -1000, 35426, 35426, -1000, 35426, 1570,
	1539, 2690, -1000, 1377, 1377, 674, -1000, -1000, 455, -1000,
	1738, 1737, 1734, 1732, 2027, 2024, 2019, 1377, 1377, 1728,
	2017, 28842, 2016, 981, 1727, 1713, 1700, 1937, 2015, 671,
	-1000, 2013, 1910, 1879, 1832, 35426, 2278, 1964, -1000, -1000,
	24, 1377, 184, 35426, 1447, 508, 269, 1783, 16779, 35426,
	25554, 25554, 25554, 25554, -1000, 2546, 2535, -1000, 2545, 2536,
	2589, 35426, 25554, 2276, -1000, 28842, -1000, -1000, -1000, 2538,
	1219, 2771, 716, 7830, -1000, -1000, -69, -68, -1000, -1000,
	-1000, 28294, 2010, 425, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2856, 35426, 35426, 489, 2114, -1000, 2832, -1000,
	1039, -1000, -1000, 1195, -1000, 2832, 1490, -327, 10100, 1366,
	1420, -1000, 7830, 10100, 7830, -290, 173, -297, -1000, -1000,
	-1000, 2007, -1000, -1000, -1000, 1698, -1000, 1691, 28, 47,
	1534, -267, 6128, 314, 35426, -267, 35426, 6128, -1000, 35426,
	310, -267, -1000, 35426, 1690, -1000, -1000, -1000, 2842, 28294,
	1881, 1320, 27746, -1000, 155, -1000, 193, 464, 2004, -1000,
	533, 100, 2003, 2002, -1000, -1000, -1000, 9525, -1000, -1000,
	-1000, -1000, 1632, 7830, 2108, -1000, 747, 747, 2102, 2099,
	-1000, 2275, 2275, -1000, 2227, 2274, 2227, 747, 747, 2097,
	-1000, 1794, 2217, -1000, 2192, 2170, 7830, -1000, 2094, 3431,
	1108, -126, 19, 19, -1000, -1000, -1000, -1000, 19, 19,
	19, 19, -1000, 19, 19, 19, 19, 19, 19, 19,
	19, 428, -1000, 28, 1632, 1632, -1000, -1000, 2651, -1000,
	2002, 1990, -1000, 1989, 1988, 944, 38242, 570, 11789, 2659,
	2711, 334, 1784, -1000, -1000, -1000, 27198, 470, -1000, -1000,
	-1000, 538, 204, 1689, 411, -1000, 35426, 201, 2616, 1443,
	1986, 35426, -1000, -1000, -1000, -1000, -1000, -1000, 2658, -1000,
	973, 240, 1207, -1000, 1377, 1377, 12337, 2691, 2273, 2268,
	12337, 12337, 12337, 252, 1454, -1000, 427, 972, 1194, 25554,
	35426, -1000, 25006, 2093, -1000, 860, 2834, -1000, 35426, -1000,
	2834, 2834, 1387, -1000, 334, -1000, 2648, 38242, -1000, 35426,
	-1000, 35426, -1000, 35426, 35426, 493, 7830, -1000, 2648, 35426,
	513, -1000, -1000, 816, 233, 557, 557, 1021, -1000, 2674,
	-1000, -1000, -1000, 35426, -1000, -1000, -1000, -1000, -1000, -1000,
	18971, 18971, 2740, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1985, 1984, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 35426, 1197, -1000, 1442,
	1784, 27198, 1438, 1349, 1983, 470, 1735, 1427, -1000, 1978,
	-1000, 938, 35426, 35426, -1000, 970, -1000, 1419, 2477, 2502,
	2477, -1000, -1000, -1000, -1000, 2528, -1000, 2493, -1000, -1000,
	970, -1000, -1000, -1000, -1000, -1000, 716, -1000, 2773, 693,
	693, 693, 2091, -1000, -1000, -1000, 1004, 2089, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2828, 2815, 26650,
	2828, -1000, -327, 1477, -1000, 1649, 143, 1444, 35426, -1000,
	-1000, -1000, 2087, 2082, -275, 50, 2812, 2811, 2855, -1000,
	2080, 1002, -267, -1000, -1000, 911, -1000, -1000, -1000, -267,
	-1000, 911, -1000, -1000, 1881, -1000, 175, -1000, -1000, -1000,
	-1000, -1000, -1000, 80, -1000, 35426, -1000, 995, 99, -1000,
	1632, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 7830, -1000, -1000,
	-1000, 2096, -1000, -1000, 7830, 2079, 1974, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2860, -1000, 2810, -275, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 38242, -1000, 1284, 334, -190, -1000, 1969,
	90, -1000, -1000, -1000, 1967, 1966, 1669, -1000, -1000, 1773,
	1180, 103, -1000, -1000, -1000, -1000, -1000, -1000, 1783, 1780,
	1417, -341, -1000, 2267, -1000, 1377, 1377, 1377, 35426, -1000,
	26102, 1284, 1284, 2076, 942, -1000, -1000, -1000, -1000, 334,
	23910, 12337, 2074, 2069, 2068, 434, 1418, 1404, -1000, 1667,
	20074, 25554, 25006, 957, -1000, 1177, -1000, -1000, -1000, 2834,
	-1000, -1000, 2834, -1000, -1000, -1000, 35426, 247, 2260, -1000,
	2254, 2480, 281, 2253, 2243, 35426, 2090, -1000, 2648, 35426,
	566, 2641, -1000, -1000, -1000, -1000, -1000, 312, -1000, 35426,
	-1000, -1000, 1285, -1000, 18971, -1000, -1000, 1192, -1000, 1964,
	1949, -1000, 90, 1948, 4433, -1000, -1000, 2616, 1945, -1000,
	35426, 938, 938, 2860, 35426, 6128, -1000, -1000, 7830, 2238,
	-1000, 7830, -1000, -1000, -1000, -1000, -1000, 2237, 2650, -1000,
	-1000, -1000, -1000, -1000, -1000, 7830, 7830, -1000, -1000, 490,
	10100, -303, 171, -1000, -1000, -1000, -278, 1943, -1000, -1000,
	2807, 1938, 1795, 35426, -1000, 911, 911, 860, -1000, -1000,
	-14, 338, -1000, 2084, -1000, 2078, 19, -1000, 136, 7830,
	-278, -167, -1000, -1000, -190, -1000, 329, -1000, -1000, 308,
	-1000, -1000, 196, -1000, -1000, 1714, 475, -1000, -1000, -1000,
	1933, 1594, 1869, 23362, 18971, 19519, 1917, -1000, -1000, -1000,
	-1000, -192, 12337, -1000, 1179, -1000, 1377, 1377, 1982, 38478,
	169, 38478, 804, 1393, -1000, 1659, -1000, 1656, -1000, 2834,
	957, 1177, -1000, -1000, 1302, -1000, -1000, -1000, -1000, 247,
	-1000, -1000, 1598, 9525, -1000, -1000, 1916, 19519, 590, 1409,
	1401, 633, 2234, -1000, 339, 2851, -1000, -1000, -1000, 608,
	2233, -1000, 1529, 1522, -1000, 35426, -1000, 23362, 23362, 404,
	404, 23362, 23362, 2228, 557, -1000, -1000, 9525, -1000, -1000,
	-1000, -1000, 1377, 1241, -1000, -1000, -1000, -1000, -1000, -1000,
	1780, -1000, -1000, 2781, -1000, -1000, 1632, 35426, 1632, 24458,
	-1000, 2806, 2805, 1632, 842, -1000, -327, 35426, 35426, -280,
	1655, -1000, 1915, 46, -1000, -1000, 845, -282, 27, 37,
	1398, -1000, -1000, -1000, 1905, -1000, 512, -1000, -1000, -1000,
	842, -280, 35426, -1000, 333, -1000, -1000, 426, 1907, -1000,
	-1000, 189, -1000, -1000, -1000, -1000, -1000, 91, -1000, 1382,
	1175, -1000, 2227, 7830, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 23910, 1284, 1284, -192, 424, 38328, -1000, 915,
	-1000, -14, 424, 406, 223, -1000, 1654, -1000, -1000, 2860,
	-1000, -1000, -1000, 3609, -1000, -1000, -1000, -1000, -1000, -1000,
	1904, 1897, -1000, -1000, -1000, -1000, -1000, 1641, 2225, -108,
	2736, 1892, -1000, -1000, 2223, 1173, 1169, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1143, 1142, 23362, -1000, -1000,
	3609, 18971, 1377, -1000, -1000, 1141, 1121, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2215, -1000, -1000, 2804, -1000, 1880,
	517, 41, 37, -1000, 2803, 42, 2801, 2799, 1871, -1000,
	-1000, 768, -268, 17, 16, 11, -1000, -1000, -1000, 7830,
	-1000, 2678, -1000, 153, -1000, 77, -1000, -1000, -1000, 1869,
	1864, -1000, 23362, 2674, 1710, -1000, -1000, -1000, -1000, 283,
	2798, 38478, -1000, 1377, -1000, 283, -1000, 259, -1000, 1358,
	-1000, 1638, -1000, 2781, -1000, -1000, 1884, 7830, 2214, 1377,
	1877, -161, 23362, 2472, 2469, 2464, 2376, 1112, -1000, 18971,
	-1000, -1000, 22814, 35426, 1795, -1000, 2212, 1636, 50, 39,
	2797, -1000, 1795, 2793, 1795, 1795, -1000, 1503, -1000, 14,
	9, 7, -1000, -1000, -1000, -1000, 1862, -1000, -1000, -1000,
	-1000, 225, -1000, -1000, 2674, -1000, 2790, 319, -1000, 18971,
	-1000, -1000, -1000, 1631, -1000, -1000, -1000, 1599, -1000, 35426,
	-1000, 2501, -1000, 141, 1106, 225, 404, 225, 404, 225,
	404, 225, 404, 149, -1000, -1000, -1000, 1102, -1000, -1000,
	2725, 18423, 25, -1000, -1000, -1000, 1820, -1000, 1795, -1000,
	-1000, 768, -1000, -1000, -1000, -1000, -1000, 1377, 1791, 231,
	-1000, -1000, -1000, 22266, 300, 386, 365, -1000, 463, -1000,
	-1000, -1000, 557, -1000, -1000, 2498, 2497, 2840, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35426, -1000,
	35426, -1000, 1088, -1000, -1000, -1000, 1162, -1000, -1000, -1000,
	-1000, -1000, 1627, -1000, 35426, -1000, 35426, 296, 1626, 9525,
	2202, 9525, 2195, 305, 2187, -1000, -1000, 2850, -1000, 2841,
	686, 686, 225, 225, 225, 225, -1000, 810, -1000, 1370,
	-1000, 21718, 35426, -1000, -1000, 1057, 2186, 2774, -1000, 3349,
	35426, 3278, 35426, 2185, 1369, 9525, -1000, -1000, -1000, 1681,
	321, -1000, 35426, 5563, -1000, 1149, -1000, -1000, 421, 303,
	-1000, 1047, -1000, 1028, 21170, 1622, 3213, -1000, -1000, -1000,
	-1000, -1000, 1632, 35426, 1015, -1000, 35426, 286, -1000, -1000,
	-1000, 1011, -1000, -1000, -1000, -1000, 421, 2396, -1000, 1604,
	-1000, -1000, 38267, 585, -1000, -1000, 38267, 295, -1000, 407,
	2183, -1000, -1000, 1001, -1000, 35426, 611, 7830, -1000, 295,
	38478, -1000, 7830, 992, -1000, 38478, 894, -1000, -1000,
}

var yyPgo = [...]int{
	0, 156, 2876, 238, 160, 3426, 73, 235, 217, 213,
	232, 3425, 3412, 2665, 2644, 3411, 3410, 3409, 3408, 3407,
	3406, 3406, 3405, 3404, 3403, 3401, 3400, 3399, 3398, 3379,
	3377, 3376, 3375, 3374, 3373, 3372, 3371, 3370, 3369, 3367,
	3366, 3364, 231, 3362, 3361, 3347, 3345, 3343, 3342, 3341,
	3339, 3338, 3336, 3331, 3330, 3328, 3327, 3319, 3316, 3315,
	3313, 3309, 3308, 3300, 3299, 3296, 3291, 3289, 3287, 3283,
	3282, 3281, 3280, 3279, 210, 3278, 2623, 3277, 3276, 3274,
	3273, 3272, 3270, 3268, 236, 3266, 3265, 3262, 3260, 3259,
	3257, 3256, 3255, 3254, 3251, 3250, 234, 3249, 3248, 3247,
	3246, 3245, 3244, 226, 3243, 153, 178, 3242, 3240, 3238,
	3237, 3236, 3234, 233, 216, 67, 3233, 44, 3232, 214,
	3226, 133, 3224, 130, 3223, 3221, 3220, 3219, 3218, 3213,
	3212, 3210, 3208, 3207, 3206, 3205, 3204, 3203, 3202, 3201,
	84, 3199, 252, 3198, 69, 3197, 3196, 109, 126, 177,
	244, 2232, 251, 241, 172, 158, 85, 3195, 2690, 3193,
	140, 220, 138, 23, 3191, 163, 3189, 142, 43, 55,
	240, 129, 54, 152, 108, 3188, 209, 98, 97, 3187,
	3186, 173, 247, 176, 3185, 110, 3183, 3182, 3181, 3179,
	192, 188, 3178, 3176, 114, 3172, 3169, 96, 3168, 66,
	190, 148, 181, 3166, 500, 107, 113, 104, 167, 3165,
	157, 3164, 3163, 3158, 3157, 165, 3156, 3155, 128, 65,
	3154, 3153, 3151, 64, 3149, 45, 3147, 3146, 31, 3145,
	56, 3144, 3143, 3142, 3141, 3138, 3137, 3136, 3134, 3132,
	3125, 3123, 68, 3122, 3120, 16, 17, 19, 3118, 26,
	3114, 150, 3113, 3108, 3107, 82, 80, 3105, 81, 1,
	46, 86, 3104, 215, 246, 91, 136, 3103, 424, 3100,
	3098, 3097, 137, 3096, 589, 3095, 3091, 3089, 3087, 3085,
	117, 3084, 227, 47, 3082, 116, 122, 3081, 36, 42,
	191, 203, 3080, 3079, 3078, 304, 197, 95, 29, 0,
	3072, 139, 3070, 3069, 3068, 243, 3067, 222, 202, 147,
	132, 256, 151, 3066, 3065, 71, 3064, 143, 61, 51,
	124, 9, 20, 168, 3062, 14, 174, 3059, 207, 3058,
	149, 7, 127, 3055, 3051, 27, 278, 3050, 3049, 3048,
	111, 3047, 3046, 106, 74, 3045, 3043, 3042, 3041, 34,
	3040, 35, 25, 3038, 89, 3037, 237, 3036, 183, 125,
	169, 155, 145, 218, 224, 72, 76, 3035, 1576, 134,
	88, 18, 3034, 219, 3030, 284, 118, 3029, 70, 3028,
	229, 381, 208, 3027, 170, 8, 41, 33, 3025, 10,
	3024, 196, 204, 3023, 3022, 22, 49, 3021, 30, 3020,
	3019, 3004, 3001, 5, 3000, 2999, 2997, 2, 4, 2995,
	3, 206, 2993, 2990, 2988, 2987, 48, 119, 2986, 121,
	164, 166, 2985, 87, 2984, 2983, 2982, 818, 2980, 239,
	2979, 2978, 2977, 2976, 2975, 2974, 2973, 2972, 2971, 90,
	38, 2968, 2967, 2964, 2963, 77, 123, 2962, 2961, 2960,
	2957, 37, 162, 2955, 21, 2954, 32, 28, 39, 2952,
	115, 2951, 12, 171, 2950, 2947, 15, 2946, 2945, 11,
	13, 2944, 2942, 105, 2941, 83, 24, 141, 92, 2940,
	2939, 79, 212, 131, 2938, 2937, 230, 225, 193, 2936,
	146, 228, 248, 2935, 211, 2934, 2933, 2931, 2930, 2926,
	2925, 985, 2924, 2923, 223, 62, 94, 101, 2919, 2918,
	2916, 78, 144, 103, 99, 57, 75, 2915, 100, 189,
	2914, 180, 2911, 2910, 93, 2909, 2908, 2906, 2900, 2898,
	175, 2897, 2895, 179, 221, 2893, 2892, 2881, 2879, 250,
	200, 2872,
}

//line mysql_sql.y:10418
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 529, 537, 537, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 111, 111, 110, 527, 527, 527, 528,
	528, 107, 128, 127, 130, 130, 129, 129, 126, 126,
	122, 125, 125, 124, 124, 123, 118, 120, 120, 119,
	121, 121, 108, 96, 109, 472, 472, 471, 471, 470,
	470, 424, 424, 469, 469, 469, 468, 468, 468, 467,
	467, 466, 466, 465, 465, 463, 463, 464, 462, 461,
	461, 461, 459, 459, 459, 455, 455, 457, 456, 456,
	458, 450, 450, 453, 453, 451, 451, 451, 451, 454,
	449, 449, 449, 448, 448, 95, 95, 95, 370, 370,
	94, 94, 384, 384, 384, 384, 384, 382, 382, 382,
	382, 382, 382, 381, 381, 380, 380, 385, 385, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 85,
	85, 85, 85, 85, 90, 90, 90, 534, 534, 533,
	533, 535, 535, 535, 535, 536, 536, 88, 88, 88,
	89, 379, 379, 379, 86, 87, 87, 369, 369, 374,
	374, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 378, 378, 378, 376, 376, 375,
	375, 377, 377, 79, 79, 79, 82, 81, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 80, 80, 80,
	80, 80, 80, 75, 75, 75, 75, 75, 74, 74,
	76, 76, 366, 366, 365, 91, 91, 92, 531, 531,
	530, 532, 532, 532, 532, 93, 99, 99, 99, 99,
	99, 99, 99, 98, 98, 101, 101, 100, 102, 84,
	84, 84, 84, 84, 84, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 497, 497, 497, 499, 499, 303,
	304, 538, 306, 302, 302, 302, 493, 493, 494, 495,
	496, 496, 496, 97, 11, 11, 11, 11, 11, 11,
	11, 73, 78, 250, 250, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 238, 238,
	238, 233, 233, 233, 233, 234, 234, 235, 235, 236,
	236, 236, 236, 237, 237, 296, 296, 255, 255, 255,
	257, 257, 256, 254, 252, 252, 252, 252, 252, 252,
	253, 253, 253, 258, 258, 71, 77, 77, 77, 510,
	510, 72, 521, 521, 427, 427, 317, 317, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 316, 432, 433, 313, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 49, 52, 48, 48,
	48, 355, 355, 47, 539, 539, 291, 291, 60, 59,
	51, 61, 62, 63, 64, 65, 66, 46, 58, 58,
	58, 58, 58, 58, 58, 58, 69, 69, 444, 444,
	541, 541, 541, 67, 68, 426, 426, 426, 57, 56,
	55, 54, 53, 53, 45, 45, 44, 44, 50, 134,
	135, 310, 310, 310, 312, 312, 308, 540, 540, 398,
	398, 311, 311, 43, 43, 43, 43, 70, 309, 309,
	290, 307, 307, 307, 12, 12, 10, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	24, 25, 27, 363, 363, 360, 26, 18, 17, 17,
	21, 20, 16, 16, 19, 22, 23, 23, 9, 9,
	9, 9, 13, 13, 14, 155, 155, 205, 205, 505,
	505, 501, 501, 502, 502, 502, 503, 503, 504, 504,
	103, 438, 438, 438, 438, 438, 438, 8, 177, 177,
	437, 437, 437, 437, 437, 437, 367, 367, 482, 482,
	482, 483, 176, 176, 171, 171, 439, 439, 332, 484,
	484, 447, 447, 446, 446, 445, 445, 174, 174, 175,
	175, 158, 158, 114, 114, 452, 452, 452, 452, 460,
	460, 423, 423, 242, 242, 283, 283, 284, 284, 148,
	148, 149, 149, 149, 149, 149, 149, 490, 490, 492,
	492, 491, 173, 173, 169, 169, 170, 170, 170, 168,
	168, 167, 166, 166, 165, 163, 163, 163, 164, 164,
	164, 181, 181, 151, 151, 151, 150, 150, 150, 150,
	150, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 152, 152, 498, 498, 498, 428, 428,
	428, 435, 435, 265, 265, 266, 266, 264, 264, 153,
	153, 154, 154, 154, 154, 263, 263, 262, 156, 156,
	162, 161, 161, 157, 157, 157, 157, 273, 273, 272,
	272, 272, 272, 106, 112, 112, 113, 180, 180, 271,
	270, 270, 270, 179, 179, 178, 178, 172, 172, 160,
	160, 160, 160, 269, 159, 267, 526, 526, 525, 525,
	524, 522, 522, 522, 523, 523, 523, 523, 474, 474,
	474, 474, 474, 297, 297, 297, 301, 301, 300, 300,
	300, 300, 300, 305, 7, 7, 7, 7, 7, 7,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	37, 189, 190, 38, 191, 191, 192, 192, 193, 193,
	194, 195, 196, 196, 196, 196, 36, 182, 182, 183,
	183, 184, 184, 185, 186, 186, 186, 188, 187, 35,
	35, 28, 141, 141, 142, 142, 142, 142, 144, 144,
	239, 239, 239, 143, 143, 145, 145, 145, 506, 509,
	507, 507, 511, 511, 511, 512, 512, 512, 512, 513,
	513, 29, 131, 136, 516, 516, 516, 515, 515, 517,
	517, 518, 518, 287, 287, 288, 288, 139, 140, 140,
	138, 133, 147, 147, 147, 147, 147, 132, 137, 508,
	514, 514, 514, 364, 364, 361, 362, 362, 359, 358,
	358, 358, 520, 520, 519, 519, 519, 298, 298, 30,
	354, 354, 356, 357, 357, 357, 348, 348, 348, 348,
	34, 352, 352, 353, 353, 353, 353, 353, 349, 349,
	351, 351, 347, 347, 347, 347, 347, 347, 33, 146,
	146, 346, 346, 343, 343, 341, 341, 342, 342, 340,
	340, 340, 344, 344, 41, 40, 40, 40, 345, 345,
	32, 32, 32, 116, 115, 115, 115, 115, 286, 286,
	285, 285, 117, 39, 217, 217, 412, 412, 412, 412,
	412, 430, 430, 430, 413, 413, 413, 414, 414, 414,
	415, 415, 415, 415, 415, 429, 429, 431, 431, 431,
	386, 386, 387, 387, 387, 390, 390, 404, 404, 405,
	405, 403, 403, 410, 410, 409, 409, 408, 408, 407,
	407, 406, 406, 406, 406, 401, 401, 400, 400, 388,
	388, 388, 388, 388, 389, 389, 389, 399, 399, 402,
	402, 227, 227, 261, 261, 225, 225, 226, 226, 260,
	260, 223, 223, 224, 224, 224, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 480, 480, 481, 229, 229, 240, 240, 240, 240,
	240, 240, 228, 228, 230, 230, 206, 206, 204, 204,
	197, 197, 198, 198, 199, 199, 199, 203, 203, 202,
	202, 202, 202, 200, 200, 201, 201, 201, 201, 201,
	201, 372, 372, 477, 477, 478, 478, 473, 473, 473,
	476, 476, 476, 476, 476, 476, 479, 479, 479, 475,
	475, 207, 281, 281, 281, 299, 299, 299, 299, 280,
	280, 280, 222, 222, 221, 221, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 371, 371,
	314, 314, 315, 315, 249, 248, 248, 248, 248, 248,
	246, 247, 245, 245, 245, 245, 245, 244, 244, 243,
	243, 243, 350, 350, 241, 241, 232, 232, 232, 231,
	231, 231, 411, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 279, 279,
	279, 324, 324, 329, 329, 489, 489, 488, 208, 208,
	208, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	218, 218, 218, 395, 395, 395, 395, 396, 396, 396,
	396, 397, 397, 397, 393, 393, 394, 394, 333, 334,
	334, 436, 436, 391, 391, 392, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 443, 443, 443, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 500, 500, 500, 485, 485, 485,
	486, 486, 486, 486, 486, 486, 486, 486, 486, 486,
	486, 486, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 277,
	277, 277, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 335, 335, 336,
	336, 440, 440, 440, 440, 440, 440, 441, 441, 442,
	442, 442, 442, 434, 434, 434, 434, 434, 434, 434,
	434, 434, 434, 434, 434, 434, 434, 434, 434, 434,
	434, 434, 434, 434, 434, 434, 434, 434, 434, 434,
	434, 434, 322, 274, 274, 274, 337, 330, 330, 331,
	331, 325, 325, 325, 325, 325, 325, 325, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	326, 326, 328, 328, 339, 339, 339, 338, 338, 338,
	338, 338, 338, 338, 220, 220, 220, 220, 319, 319,
	319, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 210, 210, 210, 210, 214, 214, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 215, 215, 215, 215, 215, 213, 213,
	213, 213, 213, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 104, 105, 105, 212, 282, 282, 416, 416, 419,
	419, 417, 417, 418, 420, 420, 420, 421, 421, 421,
	422, 422, 422, 425, 425, 289, 289, 289, 295, 295,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 7, 4, 1, 3, 2, 3, 4, 5, 5,
	6, 5, 5, 3, 2, 2, 1, 3, 4, 3,
	7, 5, 8, 2, 2, 1, 3, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 1, 2,
	1, 3, 2, 1, 2, 2, 1, 2, 3, 2,
	3, 3, 3, 1, 1, 7, 7, 8, 8, 0,
	4, 7, 0, 3, 0, 2, 0, 1, 1, 1,
	1, 4, 2, 2, 3, 3, 4, 5, 3, 4,
	4, 2, 2, 2, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 2, 5,
	5, 0, 2, 7, 0, 1, 0, 1, 5, 5,
	3, 3, 2, 4, 4, 4, 4, 4, 1, 1,
	1, 3, 3, 1, 1, 1, 6, 8, 0, 1,
	1, 1, 1, 5, 5, 0, 1, 1, 3, 3,
	3, 4, 6, 7, 4, 4, 7, 8, 3, 3,
	3, 0, 2, 2, 0, 2, 2, 1, 1, 1,
	1, 0, 1, 4, 4, 5, 4, 3, 1, 3,
	1, 1, 3, 5, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 4, 1, 3, 1, 4, 6, 6, 4,
	4, 4, 4, 4, 3, 6, 3, 5, 1, 1,
	2, 2, 11, 8, 9, 1, 3, 2, 4, 0,
	2, 0, 1, 1, 1, 1, 0, 1, 0, 1,
	4, 2, 1, 5, 4, 4, 2, 5, 1, 3,
	2, 1, 5, 4, 4, 2, 0, 5, 0, 1,
	3, 3, 1, 3, 1, 3, 1, 3, 4, 0,
	1, 0, 1, 1, 3, 1, 1, 0, 4, 1,
	3, 2, 1, 0, 8, 0, 4, 7, 4, 0,
	2, 0, 2, 0, 2, 0, 4, 1, 3, 1,
	1, 5, 3, 4, 6, 4, 5, 2, 3, 1,
	3, 6, 0, 3, 0, 1, 2, 4, 4, 0,
	1, 3, 1, 3, 3, 0, 1, 1, 0, 2,
	2, 0, 2, 3, 3, 3, 1, 3, 3, 3,
	3, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 7, 7, 1, 1, 1, 0, 1,
	1, 1, 1, 0, 2, 0, 3, 0, 2, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 4, 4, 3, 2, 2, 2,
	3, 2, 3, 4, 1, 3, 4, 0, 2, 1,
	1, 2, 2, 0, 1, 2, 4, 1, 3, 1,
	3, 2, 3, 1, 4, 3, 0, 1, 1, 2,
	5, 2, 2, 2, 0, 2, 3, 3, 0, 1,
	3, 1, 3, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	7, 1, 1, 7, 1, 3, 0, 1, 1, 3,
	1, 3, 0, 1, 1, 1, 12, 1, 3, 0,
	1, 1, 3, 1, 1, 2, 4, 1, 1, 9,
	8, 7, 1, 2, 2, 3, 3, 3, 0, 4,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 4,
	1, 1, 3, 4, 3, 0, 1, 1, 1, 0,
	2, 7, 8, 8, 0, 3, 3, 0, 2, 0,
	3, 0, 5, 1, 3, 0, 3, 3, 0, 2,
	9, 6, 0, 2, 2, 3, 3, 4, 4, 1,
	0, 2, 2, 1, 3, 2, 1, 3, 2, 1,
	3, 2, 0, 1, 3, 4, 3, 1, 1, 4,
	1, 3, 1, 1, 1, 1, 0, 1, 1, 1,
	11, 0, 2, 3, 2, 3, 1, 1, 1, 3,
	3, 4, 0, 2, 2, 2, 2, 2, 6, 0,
	4, 1, 1, 0, 3, 0, 1, 1, 2, 4,
	4, 4, 0, 1, 7, 9, 10, 8, 0, 2,
	11, 9, 11, 2, 2, 8, 4, 5, 1, 3,
	0, 3, 5, 10, 0, 2, 0, 3, 2, 4,
	3, 0, 2, 1, 0, 2, 3, 0, 2, 3,
	0, 3, 2, 4, 3, 0, 1, 0, 1, 1,
	0, 6, 0, 3, 5, 0, 4, 0, 3, 1,
	3, 4, 5, 0, 3, 1, 3, 2, 3, 1,
	2, 0, 4, 6, 5, 0, 2, 0, 2, 4,
	5, 4, 5, 1, 5, 6, 5, 0, 3, 0,
	1, 1, 3, 3, 3, 0, 4, 1, 3, 3,
	3, 0, 1, 1, 3, 2, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 5,
	4, 1, 3, 3, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 1, 1, 1, 1, 7,
	9, 7, 9, 2, 1, 7, 9, 7, 9, 8,
	5, 0, 1, 0, 1, 1, 1, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 3, 1, 3, 5, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 2, 1, 2, 2, 1,
	1, 2, 2, 2, 3, 3, 2, 2, 1, 5,
	6, 4, 1, 1, 1, 5, 4, 1, 1, 2,
	0, 1, 1, 2, 5, 0, 1, 1, 2, 2,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 2,
	2, 2, 0, 3, 0, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 3,
	5, 2, 2, 2, 2, 1, 1, 2, 5, 6,
	6, 6, 6, 1, 1, 1, 1, 1, 4, 4,
	4, 0, 2, 0, 1, 1, 2, 4, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 1, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 5, 0, 1, 3, 0,
	1, 0, 2, 0, 1, 6, 8, 6, 6, 5,
	5, 5, 6, 6, 6, 6, 5, 6, 6, 6,
	6, 6, 6, 6, 6, 1, 1, 1, 4, 4,
	6, 8, 6, 4, 5, 4, 4, 4, 3, 4,
	6, 6, 7, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 8, 4, 2, 3, 2, 4, 2, 2, 4,
	6, 2, 2, 4, 6, 4, 2, 0, 1, 2,
	3, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 1, 3, 0, 1, 1,
	3, 3, 3, 3, 3, 2, 1, 1, 3, 4,
	3, 4, 3, 4, 3, 4, 3, 4, 1, 3,
	4, 4, 5, 4, 5, 3, 4, 5, 6, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	1, 1, 2, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 4, 4,
	1, 2, 3, 5, 1, 1, 3, 0, 1, 0,
	3, 0, 3, 3, 0, 3, 5, 0, 3, 5,
	0, 1, 1, 0, 1, 1, 2, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var yyChk = [...]int{
	-1000, -529, -537, -2, -5, 594, -1, -4, -105, -79,
	-7, -107, -108, -8, -103, -9, -10, -12, -83, -98,
	-100, -102, -101, -42, -11, -97, -74, -75, -85, -91,
	-94, -95, -96, -109, -104, -106, -148, -110, -111, 587,
	-80, -81, -82, -31, -30, -29, -28, -131, -136, 593,
	440, 13, 489, -13, -14, -490, -15, 256, -302, -303,
	-304, -306, -538, -43, -44, -45, -53, -54, -55, -56,
	-57, -67, -68, -69, -46, -47, -48, -51, -49, -60,
	-59, -61, -62, -63, -64, -65, -66, -50, -134, -135,
	-70, -52, -72, -71, -77, -73, -78, -133, -138, 231,
	-76, 75, -86, -87, -88, -89, -90, -92, -93, 365,
	371, 428, 586, 60, -149, -151, 597, 598, 157, 158,
	160, 161, -32, -33, -34, -35, -36, -37, -39, -38,
	-40, -41, 227, 15, 526, -16, -19, -17, -20, -18,
	-26, -27, -25, -22, -24, -132, -23, -137, 251, 250,
	37, 317, 318, 319, 369, 249, 228, 14, 30, 41,
	345, -150, 81, 229, -152, 12, 601, -6, -3, -2,
	-118, -122, -126, -129, -130, -127, -128, -4, -105, 115,
	241, 588, -299, 361, 589, 591, 590, 84, 92, -292,
	-294, 365, 371, 586, 598, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 492, 573, 574, 575, 576, 520, 572, 343,
	344, 523, 268, 292, 396, 298, 305, 157, 176, 170,
	198, 190, 165, 272, 310, 273, 91, 160, 475, 105,
	452, 425, 163, 287, 289, 291, 521, 294, 293, 295,
	297, 274, 346, 186, 181, 286, 270, 179, 275, 39,
	276, 203, 277, 278, 528, 448, 342, 454, 302, 423,
	180, 449, 290, 451, 207, 211, 466, 467, 174, 175,
	456, 469, 202, 205, 206, 248, 42, 525, 260, 470,
	209, 201, 197, 478, 306, 304, 200, 173, 196, 271,
	64, 213, 212, 214, 419, 420, 421, 422, 279, 280,
	359, 465, 193, 182, 347, 166, 22, 473, 255, 453,
	372, 281, 299, 307, 208, 210, 262, 267, 527, 427,
	266, 303, 471, 178, 259, 288, 254, 474, 167, 374,
	282, 161, 296, 468, 477, 63, 387, 172, 164, 245,
	158, 264, 269, 283, 284, 285, 518, 309, 308, 300,
	194, 261, 199, 184, 171, 195, 159, 263, 476, 388,
	584, 345, 406, 192, 189, 265, 238, 472, 455, 162,
	410, 389, 187, 311, 580, 581, 582, 360, 341, 312,
	313, 185, 252, 446, 447, 316, 416, 332, 390, 426,
	397, 391, 220, 320, 458, 460, 204, 583, 321, 322,
	323, 450, 324, 325, 326, 327, 364, 55, 57, 93,
	95, 599, -377, -375, -299, 586, 371, 365, 345, 598,
	-191, -299, 600, -158, 38, -204, -299, -158, -76, -14,
	-13, -150, -151, -204, 235, -307, 23, 423, -84, 424,
	231, 81, -299, -9, -96, -8, -103, -74, -148, 428,
	-305, -299, 317, 317, -305, 235, -299, 266, 404, -427,
	241, -381, -354, 267, -380, -356, -383, -357, 31, 227,
	229, 228, 263, 15, 369, 237, 13, 12, 370, 249,
	24, 25, 27, 14, 371, 373, 28, 374, 377, 378,
	379, 41, 382, 383, 256, 84, 92, 87, 274, -190,
	-299, -331, -325, 112, 257, -327, -320, -321, -323, -469,
	-463, -318, 81, 139, 140, 147, 113, -322, -411, 35,
	115, 535, 572, 490, -275, -276, -277, -278, -279, -299,
	-464, -462, 87, 96, 99, 102, 103, 101, 100, 151,
	183, 98, 88, 152, -151, 84, -485, 544, -293, 565,
	573, 574, 575, 576, 564, 60, -434, -442, 234, -440,
	150, 188, 252, 184, 13, 145, 416, 185, 541, 561,
	492, 545, 568, 537, 538, 539, 532, 533, 534, 536,
	546, 548, 560, -443, 556, 566, 567, 554, 569, 570,
	571, 86, 85, 559, 558, 547, 542, 543, 549, 531,
	540, 550, 551, 557, 562, 563, 353, 105, 354, 355,
	482, 346, 356, 241, 423, 69, 357, 358, 359, 360,
	361, 489, 362, 70, 363, 352, 256, 406, 364, 187,
	204, 494, 493, 495, 486, 483, 481, 484, 485, 487,
	488, 552, 553, 555, -112, -113, 578, -167, -168, -268,
	11, 6, 7, 8, 9, -527, 425, 527, 87, 162,
	159, -368, 162, 111, 167, 166, -368, 320, 262, 366,
	-141, 238, 343, 406, 324, 93, 266, -348, -346, 521,
	-345, -429, 314, 310, 236, -142, 246, 245, 106, 482,
	234, 108, 380, 305, 55, 57, -501, -502, 224, 225,
	226, -492, 515, -491, -299, 355, 95, 26, 235, 366,
	262, 460, 458, 459, 461, 462, 463, 464, -58, -444,
	-426, 455, 454, -311, 447, 453, 445, 457, 448, 344,
	326, 325, 227, 595, 516, -289, 390, 426, 479, 480,
	367, 427, 466, 468, 449, 105, 191, 188, 238, 235,
	343, 482, 406, 93, 324, -501, 159, 466, 468, 266,
	404, 40, -374, 416, -373, -375, 467, 478, 85, 86,
	465, -289, 105, 446, 446, -168, -268, -167, -149, -151,
	-106, -490, 236, 343, 406, 266, 237, 235, 519, 238,
	482, 234, 317, 366, 262, 324, 93, -428, -498, 31,
	-435, 221, 222, 223, 32, 33, -1, 119, 601, -325,
	-325, -6, 604, -6, -325, -299, -299, 154, -210, -214,
	-211, -213, -212, -216, -215, 188, 189, 150, 192, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 205, 206,
	203, 30, 204, 252, 184, 185, 186, 187, 207, 170,
	190, 524, 215, 171, 216, 172, 217, 173, 218, 174,
	175, 219, 176, 179, 180, 181, 182, 178, 153, 81,
	153, 87, -174, 258, -204, 153, -174, -168, -167, -168,
	-204, -280, -299, 425, 122, -84, -84, 424, -493, -494,
	-495, -497, 231, 424, 423, 153, 274, 16, -305, -305,
	79, -204, -356, 266, -381, -354, 35, 78, 154, 239,
	154, 78, 81, 367, 343, 406, 368, 482, 235, 380,
	238, 266, 381, 343, 406, 235, 238, 482, 266, 343,
	235, 238, 406, 266, 381, 445, 446, 238, 26, 372,
	375, 376, 446, -448, 478, 154, 111, 108, 109, 110,
	-325, 129, -338, 122, 123, 124, 125, 126, 127, 128,
	136, 135, 146, 139, 140, 141, 142, 143, 144, 145,
	137, 138, 132, 112, 130, 134, 131, 114, -151, -325,
	-331, 60, -323, -323, -323, -323, -411, -329, -325, 81,
	81, 81, 153, 100, 87, -325, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, -441, 81,
	81, -335, -336, 81, 81, -318, -280, 81, 87, 87,
	81, 81, 81, 87, -336, -336, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, -168, 154, 81,
	-114, 38, -170, 21, -152, -151, 20, 31, 32, 31,
	32, 31, 32, 31, 32, 96, 599, 220, 471, 526,
	165, 166, 167, -189, -299, -191, -182, -299, 238, -142,
	108, -343, 241, -343, -343, -343, -343, -343, 237, -343,
	-204, 519, 518, 235, 235, 235, -343, 489, 122, 122,
	58, -503, 169, 154, -492, -173, 81, -310, 130, 134,
	-310, 23, 264, 264, 264, -310, 304, -539, -540, 16,
	132, -308, -540, -308, -308, -310, -541, 237, 456, 42,
	265, 264, -169, -170, -169, 450, 446, -398, 451, 452,
	-312, -540, -311, -310, -310, -311, -310, -310, -310, 235,
	238, 482, 324, 596, -539, -539, 30, 30, -427, -204,
	-427, 516, -290, -299, -427, -427, -427, -504, 240, -534,
	-533, 469, -536, 471, 159, -375, 159, -375, -356, 266,
	266, 154, 122, 23, -376, 122, 133, -375, -375, -376,
	-376, -228, 40, -298, 150, -299, 87, -228, 40, -531,
	-530, -204, -169, -152, -151, 82, 82, 82, -427, -427,
	-427, -427, -427, -429, -427, -427, -427, -427, -305, -182,
	-191, 241, -427, -427, -153, -154, 141, -325, -299, -153,
	-3, -120, -119, 116, 117, 119, 589, 361, 588, 592,
	586, -375, 40, -422, 388, 387, -416, -418, 81, -417,
	81, -417, -417, -417, -417, -417, 81, 81, -419, 81,
	-419, -419, -416, -420, 81, -420, -421, 81, -421, -420,
	-299, -330, -331, -299, 38, -437, 60, -148, 81, 30,
	81, -299, -438, 60, -148, 81, 30, -169, -114, -170,
	153, 96, 87, -84, 82, 154, -496, 102, 103, -499,
	202, 194, -299, -99, 87, -7, -8, -9, -10, -42,
	-74, -148, -465, -463, 81, 31, 415, 78, 16, -382,
	235, 482, 366, 262, 238, 343, -380, -363, -360, -358,
	-298, -356, -359, -358, -385, -280, 446, -115, 430, 429,
	316, -325, -325, -325, -325, -325, 101, 112, 341, 102,
	103, -320, -339, 31, 312, 313, -321, -321, -321, -321,
	-321, -321, -321, -321, -321, -321, -321, -321, -328, -337,
	-411, 81, 132, 130, 134, 131, 114, -323, -323, -321,
	-321, 82, 154, -489, -488, 116, -325, -325, -325, -299,
	-486, -487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 357, 352, 358, 356, 346, 364, 359,
	360, 187, 513, 514, 507, 508, 509, 510, 511, 512,
	-330, -330, -325, -486, -330, -274, 32, 31, -331, -331,
	-331, 82, -325, -500, 339, 338, 340, -171, -299, -330,
	82, 82, 82, 96, -331, -331, -330, -321, -330, -487,
	-274, -274, -274, 141, -331, -331, -274, -274, -274, -274,
	141, -274, -274, -274, -274, -274, -274, -274, -274, 82,
	82, 82, -169, -113, -446, -445, -325, 40, 579, -114,
	-325, -166, -165, -325, -528, 87, 87, 602, 472, 473,
	163, 166, 165, 34, 81, 81, 153, -343, 489, -204,
	112, -506, -299, -364, -361, -358, -299, -299, -354, -299,
	-299, 526, -343, 519, -343, -343, -343, -204, -239, 52,
	53, 54, -358, -143, 55, 56, -504, -491, 34, -172,
	-299, -264, 17, -323, -323, -358, 266, -539, -310, -310,
	-291, -290, -312, -307, -312, -312, -264, -540, -310, -310,
	-312, -308, -264, -299, 446, -264, -264, -398, -309, -299,
	-309, -343, -290, -291, -291, -204, -250, -251, 232, 336,
	350, 351, 230, 228, 11, 229, -259, 305, -344, 490,
	-234, -235, 76, 41, -237, 392, 385, 268, 272, 91,
	273, 425, 274, 237, 276, 277, 278, 293, 295, 248,
	279, 280, 281, 416, 282, 158, 294, 283, 284, 285,
	368, -229, 6, 327, 40, 50, 51, 439, 438, 529,
	526, 269, -506, -506, 30, 30, -364, -299, -299, -161,
	-156, -160, -157, -162, -267, -269, -159, 81, -204, -151,
	-299, 154, 470, 472, 473, -534, -376, -534, -376, 31,
	415, -379, 415, 31, -354, -373, 466, 468, -369, 87,
	416, -359, -378, 78, 150, -445, -376, -376, -378, -378,
	149, 154, -532, 471, 472, 224, -114, -206, -204, -506,
	-363, -354, -299, -427, -206, -206, -299, -299, 81, 35,
	-299, -299, -263, 154, -262, 16, -300, -299, 34, 87,
	153, -263, -121, -119, 118, -325, -6, 588, -325, -6,
	-6, -325, -6, -325, -425, 389, 96, 96, -282, 87,
	-282, 96, 96, 96, 82, 87, -367, 78, -439, -332,
	-484, 578, -176, 82, -171, -482, -483, -171, -175, -299,
	-439, -176, 82, -482, -114, -114, -299, 23, -84, -494,
	153, 154, -172, -382, -362, -359, -384, 141, -299, -370,
	154, 526, 605, 85, 239, -520, -519, 407, 82, 154,
	-449, 240, 489, 87, 602, 423, 220, 101, 341, 102,
	103, -411, -331, -328, -323, -323, -321, -321, -326, 253,
	-326, 111, -325, -324, -488, 118, -325, 34, 34, 154,
	79, 153, 82, 82, 16, 16, 82, -325, 82, 82,
	82, 82, 16, 16, -325, 82, 153, 82, 82, 82,
	82, 79, 82, 154, 82, 154, -331, -325, -331, 82,
	82, 82, -325, -325, -325, -331, 82, -325, -325, -325,
	-325, -325, -325, -325, -325, -392, 441, -392, -392, 154,
	82, 87, 154, 22, 154, -163, 36, 37, -286, -285,
	87, 164, 167, 167, 166, -190, -192, -193, -194, -195,
	-196, 132, 155, 156, -183, -184, -185, -186, -210, -280,
	189, 192, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 205, 206, 203, 204, 252, 184, 185, 186, 187,
	207, 170, 190, 171, 172, 173, 174, 175, 176, 179,
	180, 181, 182, 178, -299, -204, -173, 35, -509, 393,
	-521, 154, 40, -519, 482, -139, 316, -347, 79, -146,
	16, 81, -204, -343, -204, -204, -204, -217, 34, 16,
	-155, -205, -299, 81, 82, 154, -325, -355, 79, -299,
	-291, -264, -264, -204, -299, -264, -264, -310, -312, -312,
	-308, 153, -290, -173, 154, -203, -296, -200, -202, 243,
	-315, -201, 246, -478, 244, 242, 106, 247, 301, 107,
	237, -296, -296, -296, 243, -238, 239, 34, -296, -253,
	237, 301, 244, 20, -252, 237, 107, -299, 243, 247,
	242, -295, 122, -289, 149, 239, 42, 368, -295, 530,
	-295, -295, -295, -295, -295, -295, -295, 275, 275, -295,
	-295, -295, -295, -295, -295, -295, -295, -295, -295, -295,
	159, -295, -295, -295, -295, -295, -295, 81, 270, 271,
	-510, 393, 30, 349, 349, -521, 30, -147, 343, 30,
	-270, -271, -272, -273, 67, 71, 73, 68, 69, 70,
	74, 30, 154, -297, -301, 34, -299, 87, -297, -151,
	-156, -161, -297, 81, -533, -535, 474, 471, 477, -378,
	-378, 239, 81, 122, -378, -378, 40, -298, -530, 478,
	472, -181, 23, 154, 78, -206, -183, -191, -264, -154,
	-156, -299, 87, -299, 141, -264, 119, -6, 117, -125,
	-124, -123, 120, 586, 592, 119, 119, 119, 82, 82,
	82, 154, 82, 82, 82, 154, 82, 154, -452, 451,
	39, 154, 81, 82, 154, 60, 154, 122, 82, 154,
	82, 60, -181, 153, 425, -299, -463, 82, -384, 154,
	239, 153, 153, -360, 371, -298, -362, 20, 526, -280,
	38, -286, 122, 602, 82, -326, -326, 111, -323, -320,
	82, 119, -325, 117, -208, -210, 387, 388, -208, -209,
	-215, 150, 188, 252, 187, 186, 184, 387, 388, -228,
	-299, -325, -325, 82, -325, -325, 16, -299, -228, -321,
	-325, -168, 82, 82, -391, -392, -391, -391, 82, 82,
	82, 82, -391, 82, 82, 82, 82, 82, 82, 82,
	82, 81, -445, -452, -325, -325, -165, -164, 43, 603,
	154, 122, 167, 379, 82, 154, -280, 82, 154, -210,
	-173, 34, -512, 453, 395, 405, -295, -317, -316, 345,
	41, -432, 416, 401, 402, -361, 266, -299, -518, 94,
	122, 78, 331, 332, 333, 334, 335, -341, -342, -340,
	-344, -506, -227, -261, -299, 87, 81, -225, 526, -204,
	81, 81, 81, -412, 321, -210, -204, -155, -299, 16,
	154, -505, 153, -1, -299, -354, -310, -264, -540, -264,
	-310, -310, -312, -299, 34, -251, -207, -280, -201, -477,
	-478, -343, -299, 107, -477, 107, 81, -280, -207, -280,
	-280, -254, -309, -280, -299, -299, -299, -257, -256, -280,
	-299, -299, -299, 107, 107, -233, 40, 47, 48, 49,
	-295, -295, 191, -236, 40, 415, 417, 418, 96, 96,
	96, 96, 87, 87, 87, -295, -295, 96, 87, -301,
	87, -479, 166, 44, 45, 96, 96, 96, 96, 40,
	87, -240, 40, 286, 290, 287, 288, 289, 87, 96,
	40, 96, 40, 96, 40, -299, 81, -480, -481, 87,
	-512, -295, 349, -375, 122, -317, -517, 316, -140, 91,
	31, -177, 232, 229, -506, -366, -365, -280, -160, -160,
	-160, -160, 67, 67, 67, 72, 67, 72, 67, -272,
	-366, -162, -173, -301, 82, -526, -525, -524, -522, 75,
	240, 76, -330, 471, 475, 476, -362, -313, 87, -369,
	14, -204, -204, -431, 296, 297, 82, -266, 18, 153,
	-266, 115, -6, -121, -123, -325, -6, -325, 588, 361,
	589, 87, 96, 96, -460, 436, 431, 433, 107, -332,
	-447, -446, 60, -148, -171, -439, -483, -445, -299, 60,
	-148, -439, -299, 96, 16, -359, -354, 141, 141, -299,
	372, -370, 87, 394, 87, 235, 603, 87, -286, -320,
	-325, 82, -218, 175, 174, -218, 82, 82, -417, -417,
	-416, -419, -416, -218, -218, 82, 82, 23, 82, 82,
	82, -325, 82, 82, 154, -436, 491, -391, -391, -391,
	-391, -391, -391, -391, -391, -391, -391, -391, -391, -391,
	-391, -334, -333, 258, -460, 44, 45, -285, 87, 87,
	87, -194, -210, 233, -185, 40, 34, -148, -513, 91,
	-507, 87, -299, -514, 91, 396, 152, 347, 40, 397,
	398, 413, 342, 96, 96, 403, -508, -299, -147, -516,
	51, 122, 87, -204, -340, -289, 149, 277, 324, 82,
	154, -295, -295, -197, -198, -199, -207, -200, -202, 34,
	81, 81, -197, -197, -197, -413, 323, 20, 96, 140,
	-174, 79, 153, -156, -205, -299, 141, 82, -264, -299,
	-264, -264, -310, -148, -255, 44, 46, -210, -475, -299,
	-473, -475, -299, -473, -473, -343, -325, -255, -207, 239,
	30, 229, -258, 329, 330, -371, 302, 112, -371, 154,
	-163, -299, -228, -228, 30, 87, 87, -206, 82, 154,
	122, -513, -507, 122, -376, 87, -514, -518, 122, 87,
	154, -177, -177, -264, 154, 122, -179, -178, 78, 79,
	-180, 78, -178, 67, 67, -264, -524, -523, 23, -478,
	-478, -478, 82, 82, -265, 19, 20, 141, -265, 119,
	117, 119, 119, -299, 82, 82, -423, 580, -456, -458,
	431, 20, 20, 14, 82, -439, -439, -354, -370, 416,
	-204, 154, 603, -325, 82, -325, 82, 87, -168, 20,
	-423, -187, -210, -318, -148, -144, 526, 87, -511, 407,
	87, 87, 96, 40, 96, 152, 399, -433, -140, -515,
	91, 122, 602, 81, -295, -295, -295, -299, -261, -318,
	-318, 82, 154, -148, -226, -260, -299, 87, -197, 82,
	82, 82, -414, 257, 96, 140, 96, 140, 96, -297,
	-156, -299, -264, -505, 153, -264, -264, -280, -222, -221,
	-219, 101, 112, 40, 385, -220, 91, 149, 291, 294,
	293, 269, 292, -249, -314, 78, 391, 329, 330, -344,
	580, 520, 242, 106, 107, 373, -315, 81, 81, 79,
	311, 81, 81, -475, 82, -255, -280, 40, -258, 40,
	302, -256, 149, -228, 82, -481, 87, -511, 87, -378,
	-516, 87, -506, -168, -365, -445, -325, 81, -325, 81,
	67, 11, 18, -325, -331, 241, -6, 589, 361, -242,
	581, 87, 20, 87, -454, 87, -366, -117, -450, -398,
	274, 82, 82, -391, -394, -393, -397, 437, 303, 444,
	-331, -242, 525, -144, -145, 59, 478, 20, 526, 346,
	40, 96, 40, 400, 87, 102, 103, -287, -288, 87,
	-349, -351, -280, 81, -228, -230, -298, 150, 87, -225,
	-199, 82, 154, -295, -295, 82, -223, -224, -259, -344,
	-116, -115, -223, -415, 158, 96, 140, 96, 96, -264,
	-264, -219, 101, -321, 87, -230, -231, 40, 290, 286,
	122, 122, -232, 40, 270, 271, -241, 81, 301, 14,
	191, 81, 107, 107, -204, -349, -349, -476, 331, 332,
	333, 337, 334, 335, -476, -349, -349, 81, -372, -371,
	-321, -295, 149, -515, -169, -172, -474, -299, 242, 20,
	20, -299, -299, -283, 582, 96, 87, 433, -424, 583,
	-459, 436, -453, -451, 431, 432, 433, 434, 122, 82,
	-396, 114, 399, 403, -319, -322, 96, 99, 183, 152,
	-283, -188, -299, 301, 87, 394, 87, 346, 603, 154,
	122, 82, 154, -416, -325, -260, -318, -318, -225, -386,
	258, 154, -259, -289, -117, -386, -430, 166, 322, 526,
	96, 140, 96, -168, 87, 87, 96, 81, -440, 30,
	87, -350, 81, 82, 82, 82, 82, -349, -228, -295,
	82, 82, 154, 81, 20, 87, -461, 240, -457, -458,
	435, -451, 20, 433, 20, 20, 87, -395, -396, 403,
	-319, -322, 578, 442, 442, 442, 34, 372, 416, -288,
	87, -352, -351, -163, 82, -387, 310, 20, -259, -295,
	-387, 322, 96, 140, 96, -169, 82, -325, -335, -295,
	82, -244, -243, 522, -349, -352, 79, -352, 79, -352,
	79, -352, 79, 82, -228, -299, 242, -284, -299, -454,
	-468, 81, 96, -456, -455, -457, 20, -454, 20, -454,
	-454, 111, 443, 443, 443, 87, -353, 248, 91, 526,
	329, 330, -163, 20, -388, 303, 304, -389, -402, 306,
	-228, 96, 82, -299, -248, -246, -247, 78, 449, 299,
	300, 82, -476, -476, -476, -476, -249, 82, 154, -472,
	30, 82, -467, -466, -281, -462, -299, 436, 437, 87,
	-454, -395, -295, 87, 328, -280, 81, -400, 307, 81,
	-398, 81, -398, 107, 332, -371, -247, 78, -246, 78,
	15, 14, -352, -352, -352, -352, -299, -471, -470, -469,
	82, 154, 153, 96, -299, -385, -390, 308, 96, -321,
	81, -321, 81, -399, 305, 81, -245, 296, 297, 30,
	166, -245, 154, 122, -466, -299, 82, -404, 81, 20,
	82, -385, 82, -385, 81, 122, -321, 101, 40, 298,
	-470, 40, -325, 153, -405, -403, 258, -389, 82, 82,
	82, -385, 96, 82, -299, 82, 154, -299, -401, 309,
	82, -403, -406, 60, 96, -410, -407, 81, -259, 260,
	132, -410, -259, -409, -408, 308, 261, 81, 82, 154,
	-299, 257, 81, -331, -408, -407, -331, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 824, 825, 826, 827, 828, 829, 0,
	0, 0, 0, 598, 599, 0, 566, 0, 0, 0,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 354, 355, 356, 357, 358, 359, 360, 0,
	288, 284, 209, 210, 211, 212, 213, 295, 296, 434,
	0, 0, 0, 0, 679, -2, 56, 0, 277, 0,
	268, 268, 830, 831, 832, 833, 834, 835, 836, 837,
	838, 839, -2, 611, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 343, 344,
	345, 339, 340, 342, 341, -2, 0, 611, 0, 0,
	0, 699, 0, 0, 716, 738, 23, 0, 7, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 0,
	0, 19, 0, 19, 0, 0, 0, 1195, 1196, 1197,
	1198, -2, 1690, 1668, 1835, 1847, 1848, 1849, 1850, 1851,
	1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861,
	1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871,
	1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881,
	1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702,
	1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722,
	1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732,
	1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1836, 0, 261, 259, 1668, 1690, 1752, 1785, 1835,
	0, 844, 0, 657, 0, 662, 1148, 657, 289, 600,
	601, 699, 699, 564, 0, 325, 0, 1681, 329, 0,
	0, 0, 561, 319, 320, 321, 322, 323, 324, 0,
	0, 823, 0, 0, 315, 0, 283, 1743, 0, 0,
	0, 0, 0, 0, 153, 950, 155, 952, 159, 166,
	0, 0, 171, 172, 175, 176, 177, 178, 179, 0,
	183, 0, 185, 188, 0, 190, 191, 0, 194, 195,
	196, 0, 206, 207, 208, 953, 954, 955, -2, 84,
	842, 1601, 1489, 0, 1496, 1497, 1508, 1519, 1275, 1276,
	1277, 1278, 0, 0, 0, 0, 0, 1285, 1286, 0,
	1303, 1851, 1890, 0, 1293, 1294, 1295, 1296, 1297, 93,
	105, 106, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 0,
	1549, 1550, 1551, 1462, 1262, 1195, 0, 1860, 0, 1880,
	1885, 1886, 1887, 1888, 1879, 0, 0, 1447, 0, 1437,
	0, 0, -2, -2, 0, 0, 1810, -2, 1857, 1876,
	1884, 1861, 1883, 1853, 1854, 1855, 1848, 1849, 1850, 1852,
	1862, 1864, 1875, 0, 1871, 1881, 1882, 0, 0, 0,
	0, 107, 108, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1453, -2, 1455, 1456,
	1458, -2, 1460, 1461, -2, 1464, 1465, 1466, -2, -2,
	1469, 1470, 1471, 1472, 1473, 1474, 1477, -2, -2, -2,
	-2, 1449, 1450, 1451, 1452, 1441, 1442, 1443, 1444, 1445,
	1446, -2, -2, -2, 699, 774, 0, -2, 0, 0,
	0, 721, 724, 727, 730, 0, 57, 58, 0, 278,
	279, 267, 269, 0, 273, 0, 266, 0, 0, 0,
	0, 983, 983, 983, 983, 983, 983, 0, 983, 0,
	0, 0, 0, 0, 983, 872, 957, 958, 959, 981,
	982, 0, 1036, 0, 0, 0, 616, 612, 613, 614,
	615, 687, 0, 689, 692, 541, 541, 488, 0, 0,
	0, 541, 0, 502, 494, 0, 0, 0, 541, 0,
	0, 694, 694, 0, 544, 551, 541, 541, -2, 541,
	541, 541, 0, 0, 508, 509, 510, 494, 494, 513,
	514, 515, 526, 527, 552, 1625, 0, 0, 434, 0,
	434, 0, 434, 434, 434, 618, 1780, 1688, 1757, 1743,
	0, 0, 234, 1810, 239, 0, 1689, 1706, 0, 0,
	1724, 0, -2, 0, 305, 694, 0, 700, 0, 699,
	0, 0, 434, 434, 434, 434, 434, 1035, 434, 434,
	434, 434, 0, 0, 0, 434, 434, 0, 0, 739,
	740, 735, 736, 737, 741, 742, 5, 6, 19, 0,
	0, 0, 0, 0, 0, 63, 62, 0, 1602, 1620,
	1554, 1555, 1556, 1607, 1558, 1611, 1611, 1611, 1611, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1611, 1611,
	0, 0, 1600, 1578, 1609, 1609, 1609, 1607, 1604, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1614, 1614, 1617, 1617, 1614, 0, 1487,
	0, 0, 0, 0, 661, 0, 0, 694, -2, 0,
	565, 326, 1199, 0, 0, 330, 331, 0, 0, 346,
	0, 349, 334, 335, 336, 0, 133, 0, 317, 318,
	0, 0, 285, 0, 0, 0, 435, 0, 0, 0,
	0, 0, 0, 163, 160, 167, 170, 180, 187, 0,
	199, 201, 204, 161, 168, 173, 174, 181, 202, 162,
	164, 165, 169, 203, 205, 182, 186, 200, 184, 189,
	192, 193, 198, 0, 134, 0, 0, 0, 0, 0,
	1495, 0, 0, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 1489,
	0, 0, 1281, 1282, 1283, 1284, 1287, 0, 1304, 0,
	0, 0, 0, 1548, 1552, 0, 1487, 1487, 0, 1487,
	1483, 0, 0, 0, 0, 0, 0, 1487, 1423, 0,
	0, 1425, 1438, 0, 0, 1427, 1428, 0, 1431, 1432,
	1487, 0, 1487, 1436, 1419, 1420, 0, 1483, 1483, 1483,
	0, 0, 1483, 1483, 1483, 1483, 1483, 1483, 1483, 1483,
	1483, 1483, 1483, 1483, 0, 0, 0, 694, 0, 0,
	682, 0, 663, 0, 718, 720, 0, 722, 723, 725,
	726, 728, 729, 731, 732, 59, 0, 0, 0, 0,
	271, 0, 276, 0, 841, 0, 0, 857, 983, 873,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 983, 0, 983, 983, 983, 0, -2, 0, 0,
	0, 618, 617, 0, 688, 0, 0, 747, 0, 0,
	487, 0, 494, 541, 541, 500, 501, 496, 495, 547,
	548, 544, 0, 544, 544, 747, 0, 520, 521, 522,
	541, 541, 528, 695, 529, 530, 544, 0, 549, 550,
	747, 0, 0, 747, 747, 0, 538, 539, 540, 0,
	0, 983, 0, 557, 496, 496, 1626, 1627, 0, 992,
	0, 0, 0, 560, 0, 0, 0, 0, 619, 214,
	217, 0, 220, 0, 1780, 0, 1780, 0, 227, 0,
	0, 0, 0, 0, 0, 257, 258, 0, 0, 0,
	0, 248, 251, 1142, 1143, 947, 948, 252, 253, 297,
	298, 0, 663, 717, 719, 713, 714, 715, 0, 0,
	0, 0, 0, 434, 0, 0, 0, 0, 594, 0,
	596, 0, 0, 0, 755, 749, 751, 818, 93, 755,
	8, 80, 77, 0, 19, 0, 0, 19, 19, 0,
	19, 262, 0, 1623, 1621, 1622, 1557, 1608, 0, 1583,
	0, 1584, 1585, 1586, 1596, 1597, 0, 0, 1579, 0,
	1580, 1581, 1582, 1573, 0, 1574, 1575, 0, 1576, 1577,
	260, 0, 1488, 845, 0, 636, 649, 631, 0, 638,
	0, 1149, 620, 649, 622, 0, 638, 663, 685, 663,
	0, 327, 0, 332, 0, 0, 348, 350, 351, 352,
	337, 338, 562, 313, 314, 306, 307, 308, 309, 310,
	311, 312, 316, 103, 0, 286, 287, 0, 0, 0,
	147, 148, 149, 150, 151, 152, 154, 138, 583, 585,
	939, 951, 0, 942, 0, 157, 197, 130, 0, 0,
	0, 1490, 1491, 1492, 1493, 1494, 1498, 0, 1500, 1502,
	1504, 1506, 0, 1524, -2, -2, 1263, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1509, 1522,
	1523, 0, 0, 0, 0, 0, 0, 1520, 1520, 1515,
	0, 1279, 0, 1301, 1305, 0, 0, 0, 0, 94,
	1482, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	0, 0, 1489, 0, 0, 0, 1484, 1485, 0, 0,
	0, 1378, 0, 0, 1384, 1385, 1386, 0, 644, 0,
	1448, 1424, 1439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 773, 775, 0, 653, 655, 656, 0, 683,
	696, 701, 702, 705, 55, 60, 53, 1010, 280, 281,
	0, 0, 275, 0, -2, 859, 0, 0, 874, 692,
	0, 0, 888, 432, 933, 0, 0, 0, 949, 972,
	979, 0, 0, 983, 0, 0, 0, 1014, 875, 880,
	881, 882, 876, 877, 883, 884, 0, 690, 0, 0,
	787, 486, 0, 542, 543, 491, 1743, 496, 747, 747,
	503, 497, 504, 546, 505, 506, 507, 0, 747, 747,
	541, 544, 531, 545, 544, 534, 535, 0, 553, 558,
	554, 0, 556, 511, 512, 692, 362, 363, 405, 405,
	405, 405, 388, 405, 0, 0, 376, 1628, 0, 0,
	0, 0, 385, 1628, 0, 1628, 1628, 1628, 1628, 1628,
	1628, 1628, 0, 0, 1628, 1628, 1628, 1628, 1628, 1628,
	1628, 1628, 1628, 1628, 1628, 0, 1628, 1628, 1628, 1628,
	1628, 1128, 1628, 0, 993, 395, 396, 397, 398, 403,
	404, 0, 429, 0, 0, 0, 432, 0, 922, 760,
	0, 761, 762, 758, 789, 813, 813, 0, 813, 793,
	1148, 0, 0, 225, 226, 215, 0, 216, 0, 228,
	229, 0, 231, 232, 233, 240, 1688, 1757, 235, 237,
	0, 0, 241, 254, 255, 256, 0, 0, 246, 247,
	0, 0, 300, 301, 303, 0, 711, 580, 1146, 581,
	582, 586, 0, 0, 589, 591, 592, 593, 859, 0,
	927, 928, 747, 0, 756, 0, 752, 819, 0, 821,
	0, 747, 0, 78, 19, 0, 71, 68, 0, 0,
	0, 0, 0, 1603, 1553, 1624, 0, 0, 0, 1605,
	0, 0, 0, 0, 61, 665, 627, 0, 630, 646,
	0, 650, 0, 0, 642, 635, 639, 0, 0, 659,
	621, 0, 0, 626, 711, 686, 1200, 0, 333, 347,
	0, 0, 0, 0, 141, 936, 0, 142, 146, 136,
	0, 0, 0, 941, 0, 938, 943, 0, 156, 0,
	0, 131, 132, 1004, 1010, 0, 0, 1499, 1501, 1503,
	1505, 1507, 0, 1510, 1520, 1520, 1516, 0, 1511, 0,
	1513, 0, 1490, 0, 1306, 0, 0, 0, 0, 0,
	0, 0, 1368, 1369, 0, 0, 1373, 0, 1375, 1376,
	1377, 1379, 0, 0, 0, 1383, 0, 1422, 1440, 1426,
	1429, 0, 1433, 0, 1435, 0, 699, 0, 0, 1343,
	1343, 1343, 0, 0, 0, 0, 1343, 0, 0, 0,
	0, 0, 0, 0, 0, 1298, 0, 1299, 1300, 0,
	776, 665, 0, 0, 0, 708, 706, 707, 0, 1008,
	0, 282, 270, 272, 0, 0, 0, 847, 848, 850,
	0, 853, 854, 855, 0, 860, 861, 863, 864, 0,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1673, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 858, 692, 0, 984, 895, 1628,
	436, 0, 0, 935, 0, 911, 0, 0, 0, -2,
	0, 0, 1085, 0, 0, 0, 0, 1016, 0, 0,
	0, 605, 609, 23, 693, 0, 748, 489, 0, 490,
	541, 498, 499, 747, 1148, 523, 524, 747, 541, 541,
	544, 0, 555, 0, 992, 365, 0, 1157, 1158, 406,
	0, 1164, 1173, 983, 1232, 0, 1173, 0, 0, 1175,
	1176, 0, 0, 0, 0, 0, 389, 390, 0, 375,
	0, 0, 0, 0, 374, 0, 0, 416, 0, 0,
	0, 0, 1629, 1628, 1628, 0, 383, 384, 0, 387,
	0, 0, 0, 0, 0, 0, 0, 1628, 1628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1119, 0, 0, 0, 0, 0, 0, 0, 1134, 1135,
	895, 1628, 0, 0, 0, 436, 909, 918, 0, 0,
	0, 0, 0, 0, 780, 0, 0, 779, 0, 0,
	0, 0, 0, 692, 814, 0, 816, 817, 791, -2,
	0, 760, 796, 1487, 218, 219, 0, 0, 224, 242,
	244, 0, 0, 0, 243, 245, 249, 250, 299, 302,
	304, 681, 0, 0, 0, 1037, 0, 597, 745, 750,
	757, 820, 822, 94, 753, 745, 0, 81, 19, 80,
	72, 73, 0, 19, 0, 0, 0, 0, 1613, 1612,
	1598, 0, 1599, 1610, 1615, 0, 1618, 0, 669, 0,
	0, 649, 651, 0, 0, 649, 0, 0, 658, 0,
	0, 649, 684, 0, 0, 563, 104, 353, 0, 0,
	0, 0, 0, 584, 0, 940, 138, 0, 0, 158,
	0, 0, 0, 1010, 1486, 1512, 1514, 0, 1521, 1517,
	1280, 1288, 1302, 0, 0, 1308, 1320, 1320, 0, 0,
	1311, 1611, 1611, 1314, 1607, 1609, 1607, 1320, 1320, 0,
	95, 0, 0, 1374, 0, 0, 0, 645, 0, 0,
	0, 1341, 1343, 1343, 1349, 1344, 1350, 1351, 1343, 1343,
	1343, 1343, 1356, 1343, 1343, 1343, 1343, 1343, 1343, 1343,
	1343, 1339, 654, 669, 697, 698, 703, 704, 0, 54,
	1010, 0, 274, 0, 0, 852, 0, 0, 0, 865,
	0, 0, 899, 896, 897, 898, 0, 930, 437, 438,
	439, 440, 0, 0, 0, 934, 0, 922, 904, 0,
	0, 0, 973, 974, 975, 976, 977, 978, -2, 987,
	0, 0, 0, 1081, 1628, 1628, 1150, 0, 0, 0,
	1150, 1150, 1150, 1024, 0, 1015, 657, 0, -2, 0,
	0, 607, 0, 0, 788, 492, 747, 516, 0, 532,
	747, 747, 541, 559, 0, 364, 407, 0, 1163, 1189,
	1174, 1189, 1233, 1189, 1189, 983, 0, 366, 407, 0,
	0, 377, 413, 0, 0, 0, 0, 373, 410, 705,
	414, 415, 417, 0, 419, 379, 391, 392, 393, 394,
	0, 0, 0, 386, 399, 400, 401, 402, 1096, 1097,
	1098, 1101, 1102, 1103, 1104, 0, 0, 1107, 1108, 1109,
	1110, 1111, 1186, 1187, 1188, 1112, 1113, 1114, 1115, 1116,
	1117, 1118, 1136, 1137, 1138, 1139, 1140, 1141, 1120, 1121,
	1122, 1123, 1124, 1125, 1126, 1127, 0, 0, 1131, 0,
	899, 0, 0, 0, 0, 930, 911, 0, 921, 0,
	923, 924, 0, 0, 628, 747, 292, 0, 783, 777,
	0, 766, 781, 782, 769, 0, 771, 0, 767, 768,
	747, 759, 790, 815, 792, 795, 797, 798, 804, 0,
	0, 0, 0, 221, 222, 223, 230, 0, 456, 236,
	712, 1147, 587, 588, 1038, 1039, 595, 743, 0, 0,
	743, 76, 79, 0, 74, 0, 0, 0, 0, 66,
	64, 1606, 0, 0, 671, 118, 0, 0, 0, 647,
	0, 652, 649, 634, 643, 633, 640, 641, 660, 649,
	625, 624, 1201, 328, 0, 937, 138, 143, 144, 145,
	139, 137, 944, 0, 946, 0, 1006, 0, 0, 1518,
	1307, 1289, 1309, 1321, 1322, 1310, 1290, 1291, 1312, 1313,
	1315, 1316, 1317, 1318, 1319, 1292, 1370, 0, 1372, 1380,
	1381, 0, 1430, 1434, 0, 0, 0, 1347, 1348, 1352,
	1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 699, 1340, 0, 671, 709, 710, 1009, 1011, 840,
	843, 849, 851, 0, 862, 0, 0, 878, 871, 0,
	0, 890, 891, 901, 0, 0, 0, 442, 443, 0,
	0, 0, 455, 451, 452, 453, 433, 929, 918, 907,
	0, 0, 917, 0, 988, 1628, 1628, 1628, 0, 994,
	0, 0, 0, 0, 1151, 1152, 1154, 1155, 1156, 0,
	0, 1150, 0, 0, 0, 1027, 0, 0, 1018, 0,
	813, 0, 0, 747, 606, 609, 610, 691, 493, 747,
	536, 533, 747, 361, 378, 408, 0, -2, 0, 1190,
	0, 1177, 1190, 0, 0, 1189, 0, 367, 407, 0,
	0, 0, 420, 423, 424, 421, 1228, 0, 422, 0,
	412, 418, 1099, 1100, 0, 1105, 1106, 0, 1130, 0,
	0, 425, 0, 0, 0, 426, 431, 904, 0, 919,
	0, 925, 926, 699, 0, 0, 763, 784, 0, 0,
	764, 0, 765, 770, 772, 291, 799, 0, 0, 801,
	802, 803, 794, 238, 733, 0, 0, 754, 734, 0,
	19, 0, 0, 69, 1616, 1619, 673, 0, 670, 119,
	0, 0, 0, 0, 648, 632, 623, 140, 135, 945,
	121, 0, 1007, 0, 1382, 0, 1343, 1342, 1336, 0,
	673, 0, 868, 866, 878, 870, 885, 900, 889, 0,
	931, 932, 0, 444, 445, 0, 448, 454, 902, 903,
	0, 0, 915, 0, 0, 0, 0, 980, 1082, 1083,
	1084, 1085, 0, 997, 0, 1087, 1628, 1628, 0, -2,
	0, -2, 1030, 0, 1025, 0, 1017, 0, 1020, 747,
	747, -2, 603, 608, 0, 517, 537, 409, 1191, -2,
	1204, 1206, 0, 993, 1209, 1210, 0, 0, 0, 0,
	0, 0, 1254, 1218, 0, 0, 1222, 1223, 1224, 0,
	0, 1227, 0, 1536, 1537, 0, 1231, 0, 0, 0,
	0, 0, 0, 0, 1171, 368, 369, 0, 371, 372,
	1229, 411, 1628, 381, 1129, 1132, 1133, 430, 427, 428,
	907, 910, 629, 694, 293, 294, 785, 0, 778, 808,
	805, 0, 0, 744, 746, 70, 75, 0, 0, 675,
	0, 672, 0, 666, 668, 129, 637, 91, 112, 0,
	0, 1371, 1421, 1346, 0, 1337, 0, 1331, 1332, 1333,
	1338, 675, 0, 869, 0, 886, 887, 0, 0, 441,
	446, 0, 449, 450, 908, 905, 906, 0, 913, 0,
	0, 968, 1607, 0, 989, 990, 1144, 1145, 991, 995,
	1153, 1086, 0, 0, 0, 1085, 1040, -2, 1093, 0,
	1001, 121, 1040, 1021, 0, 1028, 0, 1026, 1019, 699,
	604, 1205, 1207, 1208, 1211, 1212, 1213, 1259, 1260, 1261,
	0, 0, 1216, 1256, 1257, 1258, 1217, 0, 0, 0,
	0, 0, 1534, 1535, 1252, 0, 0, 1178, 1180, 1181,
	1182, 1183, 1184, 1185, 1179, 0, 0, 0, 1170, 1172,
	370, 0, 1628, 920, 290, 0, 0, 809, 811, 806,
	807, 65, 67, 82, 0, 674, 120, 0, 83, 0,
	109, 0, 122, 123, 0, 0, 0, 0, 0, 1345,
	1334, 0, 0, 0, 0, 0, 1538, 1539, 1540, 0,
	664, 0, 867, 0, 892, 0, 894, 447, 912, 915,
	0, 961, 0, 705, 0, 1088, 1089, 1090, 996, 1042,
	0, 992, 1095, 1628, 1003, 1042, 1013, 0, 1023, 0,
	1032, 0, 1029, 694, 1214, 1215, 0, 0, 1437, 1628,
	0, 1247, 0, 961, 961, 961, 961, 0, 380, 0,
	786, 800, 0, 0, 0, 92, 96, 0, 118, 115,
	0, 124, 0, 0, 0, 0, 1005, 0, 1323, 0,
	0, 0, 1327, 1328, 1329, 1330, 0, 879, 893, 914,
	916, 960, 969, 970, 705, 1000, 0, 1079, 1094, 0,
	1002, 1022, 1031, 0, 1034, 602, 1255, 0, 1221, 0,
	1226, 1235, 1248, 0, 0, 1159, 0, 1161, 0, 1165,
	0, 1167, 0, 0, 382, 810, 812, 0, 677, 667,
	85, 0, 0, 113, 114, 116, 0, 125, 0, 127,
	128, 0, 1324, 1325, 1326, 856, 962, 1628, 0, 0,
	966, 967, 971, 0, 1067, 0, 0, 1073, 0, 1080,
	1099, 1033, 1219, 1225, 1234, 1236, 1237, 0, 1249, 1250,
	1251, 1253, 961, 961, 961, 961, 1169, 676, 0, 1012,
	0, 97, 0, 99, 101, 102, 1192, 110, 111, 117,
	126, 1335, 0, 964, 0, 1043, 0, 1045, 0, 0,
	0, 0, 0, 1077, 0, 1220, 1238, 0, 1239, 0,
	0, 0, 1160, 1162, 1166, 1168, 678, 86, 87, 0,
	98, 0, 0, 963, 965, 0, 1047, 0, 1068, 0,
	0, 0, 0, 0, 0, 0, 1240, 1242, 1243, 0,
	0, 1241, 0, 0, 100, 1193, 1044, 1041, 0, 1079,
	1069, 0, 1071, 0, 0, 0, 0, 1244, 1246, 1245,
	88, 89, 90, 0, 0, 1049, 0, 1065, 1070, 1072,
	1074, 0, 1078, 1076, 1194, 1048, 0, 1061, 1046, 0,
	1075, 1050, -2, 0, 1066, 1051, -2, 0, 1059, 0,
	0, 1052, 1060, 0, 1055, 0, 0, 0, 1054, 0,
	-2, 1062, 0, 0, 1056, -2, 0, 1064, 1063,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 604, 601,
	123, 122, 124, 3, 605, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 602, 135, 603, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:751
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:758
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:764
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:772
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:778
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:782
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:797
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:801
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:807
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:812
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:816
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:848
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:856
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:864
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:874
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:894
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:900
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:907
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:915
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:921
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:930
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:940
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:948
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:956
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:964
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:974
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:982
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:992
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:999
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1008
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1018
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1022
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1028
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1032
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1038
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1047
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1057
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1061
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1067
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1076
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1080
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1086
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1107
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1120
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1127
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1131
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1137
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1141
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1147
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1154
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1162
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1166
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1180
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1184
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1188
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1193
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1201
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1207
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1216
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1227
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1231
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1237
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1241
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1247
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1251
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1257
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1281
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1300
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1304
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1308
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1313
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1317
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1324
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1332
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1339
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1344
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1351
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1356
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1360
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1384
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1388
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1394
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1400
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1418
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1435
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1458
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1462
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1466
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1471
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1475
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1481
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1494
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1505
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1518
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1522
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1532
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1545
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1558
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1564
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1570
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1577
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1585
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1594
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1598
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1602
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1606
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1610
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1614
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1621
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1625
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1631
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1638
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1647
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1651
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1657
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1661
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1665
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1669
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1673
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1677
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1681
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1685
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1693
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1697
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1705
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1709
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1721
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1725
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1729
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1741
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1745
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1749
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1753
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1757
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1769
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1773
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1785
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1789
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1793
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1797
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1801
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1805
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1813
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1817
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1821
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1825
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1841
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1845
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1849
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1853
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1866
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1873
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1880
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1890
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1894
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1900
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1907
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1915
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1919
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1923
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1927
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1933
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1937
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1943
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1950
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1957
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1966
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1996
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2000
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2004
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2010
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2016
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2020
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2027
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2033
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2037
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2043
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2051
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2060
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2069
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2077
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2085
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2108
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2131
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2138
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2145
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2153
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2160
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2167
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2176
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2180
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2184
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2190
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2194
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2200
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2204
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2210
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2214
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2225
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2231
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2236
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2240
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2244
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2248
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2252
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2256
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2260
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2264
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2268
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2274
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2278
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2282
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2286
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2291
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2296
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2302
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2309
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2315
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2329
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2339
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2346
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2357
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2368
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2372
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2378
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2388
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2394
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2398
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2404
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2410
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2414
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2418
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2422
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2428
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2440
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2446
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2450
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2456
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2460
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2466
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2472
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2483
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2489
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2493
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2497
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2501
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2505
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2509
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2517
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2525
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2535
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2576
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2580
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2586
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2592
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2597
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2598
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2599
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2604
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2620
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2631
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2640
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2644
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2650
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2657
		{
			opt := &tree.AlterOptionReindex{
				ColumnName: yyDollar[3].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2664
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2673
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2683
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2692
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2702
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2712
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2721
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2729
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2733
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2737
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2741
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2745
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2754
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2760
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2764
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2768
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2772
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2776
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2780
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2784
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2788
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2793
		{
			yyVAL.str = ""
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2824
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2828
		{
			yyVAL.str = string("COLUMN")
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2833
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2839
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2845
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2854
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2858
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2864
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2871
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2879
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2886
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2893
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2900
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2907
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2914
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2922
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2929
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2936
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2945
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2949
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2956
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2968
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2976
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2984
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2997
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3003
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3014
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3025
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3029
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3034
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3038
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3043
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3047
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3063
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3067
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3071
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3075
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3079
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3083
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3087
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3091
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3095
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3099
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3103
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3107
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3111
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3115
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3119
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3123
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3129
		{
			yyVAL.item = nil
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3134
		{
			yyVAL.item = nil
		}
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3174
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3180
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3188
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3192
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3196
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3205
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3209
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3215
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3220
		{
		}
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3224
		{
		}
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3229
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3239
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3249
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3257
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3263
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3269
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3275
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3281
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3287
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3293
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3302
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3306
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3310
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3314
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3318
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3322
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3326
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3330
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3336
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3343
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3353
		{
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3355
		{
		}
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3364
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3374
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3383
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3387
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3391
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3397
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3403
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3409
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3415
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3424
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3434
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3446
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3450
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3456
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3468
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3482
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3488
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3495
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3500
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3504
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3508
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3513
		{
			yyVAL.str = ""
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3517
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3523
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3536
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3540
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3546
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3551
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3555
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3559
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3565
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3571
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3575
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3581
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3587
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3591
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3595
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3601
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3605
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3629
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3638
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3647
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3656
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3660
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3666
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3675
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3684
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3694
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3698
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3704
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3710
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3716
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3720
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3726
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3732
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3741
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3748
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3759
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3764
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3771
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3787
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3800
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3811
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3815
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3821
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3826
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3833
		{
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3835
		{
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3838
		{
		}
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3847
		{
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3851
		{
		}
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3856
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3865
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3872
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3878
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3886
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3893
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3900
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3920
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3930
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3934
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3940
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3947
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3953
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3961
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3968
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3975
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3994
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3998
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4003
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4007
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4011
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4017
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4026
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4030
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4036
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4040
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4046
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4050
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4056
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4061
		{
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4065
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4072
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4076
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4083
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4088
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4092
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4098
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4102
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4108
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4112
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4117
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4121
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4134
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4141
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4148
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4166
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4185
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4191
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4198
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4202
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4215
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4219
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4224
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4228
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4235
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4240
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4247
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4253
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4257
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4261
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4265
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4269
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4273
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4279
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4286
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4295
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4299
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4305
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4313
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4317
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4322
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4326
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4332
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4336
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4340
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4345
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4349
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4355
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4361
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4365
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4371
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4376
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4380
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4384
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4389
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4393
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4397
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4402
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4406
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4414
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4418
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4422
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4436
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4440
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4450
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4460
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4470
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4482
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4490
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4498
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4507
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4515
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4523
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4531
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4539
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4547
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4555
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4563
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4571
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4581
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4592
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4606
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4610
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4614
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4619
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4623
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4627
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4636
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4640
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4645
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4649
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4654
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4658
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4664
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4668
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4674
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4678
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4683
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4687
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4692
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4700
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4706
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4714
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4722
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4732
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4738
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4747
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4756
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4765
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4775
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4779
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4789
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4793
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4797
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4801
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4807
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4817
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4821
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4827
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4833
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4837
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4843
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4849
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4853
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4857
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4863
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4867
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4873
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4877
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4883
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4887
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4893
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4897
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4907
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4920
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4926
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4932
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4945
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4956
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4963
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4967
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4973
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4983
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4987
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4991
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4996
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5000
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5004
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5008
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5017
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5021
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5025
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5029
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5034
		{
			yyVAL.str = ""
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5038
		{
			yyVAL.str = yyDollar[1].str
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5042
		{
			yyVAL.str = yyDollar[2].str
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5048
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5054
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5058
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5062
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5066
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5070
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5076
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 840:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5112
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5122
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5128
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 843:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5134
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5144
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5149
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5155
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5162
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5166
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5172
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5178
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5183
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5187
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5191
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5195
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5202
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5214
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5219
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5225
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5232
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5236
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5242
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5248
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5252
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5256
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5262
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5268
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5274
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5283
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5294
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5306
		{
			yyVAL.str = yyDollar[1].str
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5310
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5316
		{
			yyVAL.str = "OR REPLACE"
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5320
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5324
		{
			yyVAL.str = "DEFINER = "
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5328
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5333
		{
			yyVAL.str = ""
		}
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5337
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5351
		{
			yyVAL.str = ""
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5359
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5365
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5375
		{
			yyVAL.str = yyDollar[1].str
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5379
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5385
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5392
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5398
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5406
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5412
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5419
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5426
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5434
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5440
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5449
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5461
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5473
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5485
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5491
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5498
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5506
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5512
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5520
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5526
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5534
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5540
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5549
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5553
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5558
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5562
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5569
		{
			yyVAL.str = yyDollar[3].str
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5574
		{
			yyVAL.str = ""
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5578
		{
			yyVAL.str = yyDollar[2].str
		}
	case 920:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5584
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5598
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5608
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5612
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5618
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5624
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5630
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5639
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5648
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5657
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5662
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5668
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5676
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5782
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5786
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5792
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5802
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5806
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5812
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5822
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5826
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5830
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5835
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5839
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5845
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5852
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5858
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5867
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5874
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5883
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5887
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5893
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5907
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5911
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5915
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5920
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5924
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5928
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5932
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5938
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5957
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5961
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5983
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5987
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5991
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5995
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5999
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6005
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6009
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6015
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6020
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6025
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6029
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6033
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6037
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6041
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6045
		{
			yyLOCAL = tree.INDEX_TYPE_IVFFLAT
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6051
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6066
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6076
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6080
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6085
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6089
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6095
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6099
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6105
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6109
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6113
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6118
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6122
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6128
		{
			yyLOCAL = &tree.CreateConnector{
				ConnectorName: yyDollar[3].tableNameUnion(),
				Options:       yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6137
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6148
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6159
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6170
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6174
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6180
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6192
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6201
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6214
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6221
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6231
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6241
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6249
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6260
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6264
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6269
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6273
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6280
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6291
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6304
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6318
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6322
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6326
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6333
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6340
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6347
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6354
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6358
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6362
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6366
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6370
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6377
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6384
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6388
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6395
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6402
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6406
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6413
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6420
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6427
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6434
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6438
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6443
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6447
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6451
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6456
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6460
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6470
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6474
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6481
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6488
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6492
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6501
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6505
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6511
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6515
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6521
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6530
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6540
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6544
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6550
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6554
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6560
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6567
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6576
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6580
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6585
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6589
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6594
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6598
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6603
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6607
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6617
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6621
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6632
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6640
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6648
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6656
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6667
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6676
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6686
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6696
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6700
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6705
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6709
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6715
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6719
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6725
		{
			yyLOCAL = &tree.CreateConnectorWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6729
		{
			yyLOCAL = &tree.CreateConnectorWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6734
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6738
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6744
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6748
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6754
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6758
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6763
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6767
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6773
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6777
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6781
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6787
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6791
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6795
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6799
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6803
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6807
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6811
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6816
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6820
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6824
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6828
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6832
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6836
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6840
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6844
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6848
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6852
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6856
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6860
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6864
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6868
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6872
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6876
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6880
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6884
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6888
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6892
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6896
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6900
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6904
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6908
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6912
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6916
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6920
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6924
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6930
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6934
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6940
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6946
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6950
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6956
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6960
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6964
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6968
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6972
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6976
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6990
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6994
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7003
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7008
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7014
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7021
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7025
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7031
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7035
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7039
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7045
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7049
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7055
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7064
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7073
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				case "ivfflat":
					keyTyp = tree.INDEX_TYPE_IVFFLAT
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7104
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7129
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7143
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7149
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7158
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7167
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7176
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7185
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7195
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7203
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7209
		{
			yyVAL.str = ""
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7213
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7223
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7229
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7235
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7255
		{
			yyVAL.str = ""
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7259
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7265
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7271
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7275
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7279
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7285
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7289
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7293
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7297
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7303
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7307
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7311
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7316
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7320
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7326
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7330
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7336
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7340
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7344
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7348
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7352
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7356
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7361
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7365
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7369
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7373
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7377
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7381
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7385
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7389
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7393
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7397
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7410
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7414
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7418
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7422
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7426
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7430
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7436
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7440
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7445
		{
			yyVAL.str = ""
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7449
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7455
		{
			yyVAL.str = ""
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7459
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1234:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7465
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7477
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7484
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7491
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7498
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7505
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7514
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7520
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7526
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7530
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7534
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7538
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7542
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7547
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7554
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7558
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7562
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7567
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7571
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7576
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7580
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7596
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7602
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7606
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7610
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7614
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7618
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7622
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7626
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7630
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7634
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7638
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7642
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7646
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7650
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7656
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7660
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7664
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7668
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7672
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7676
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7680
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7684
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7688
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7692
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7696
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7700
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7705
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7713
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7717
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7721
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7725
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7734
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7738
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7742
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7746
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7750
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7756
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7764
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7772
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7781
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7785
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7794
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7800
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7804
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7810
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7819
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7831
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7848
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7865
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7878
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7891
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7903
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7917
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7932
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7947
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7964
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7979
		{
		}
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7986
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7990
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7994
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8000
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8004
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8008
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8012
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8018
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8022
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8026
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8032
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8040
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8050
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8054
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8061
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8066
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8070
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8075
		{
			yyVAL.str = ","
		}
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8079
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8084
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8091
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8117
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8128
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8138
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8148
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8158
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8167
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8176
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8186
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8196
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8206
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8216
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8226
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8236
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8246
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8256
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8266
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8276
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8286
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8296
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8315
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8323
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8331
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8339
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8347
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8357
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8365
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8374
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8382
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8390
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8398
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8406
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8417
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8427
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8439
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8450
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8472
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8508
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8520
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8532
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8543
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8551
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8558
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8565
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8577
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8585
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8595
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8605
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8613
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8624
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8633
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8642
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8650
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8660
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8668
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8678
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8682
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8688
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8692
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8711
		{
		}
	case 1448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8713
		{
		}
	case 1482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8754
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8765
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8769
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8773
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8779
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8784
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8788
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8794
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8798
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8805
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8809
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8813
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8821
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8825
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8829
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8833
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8839
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8843
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8847
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8851
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8855
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8859
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8863
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8867
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8871
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8875
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8883
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8887
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8891
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8895
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8899
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8903
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8907
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8911
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8915
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8919
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8925
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8929
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8935
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8939
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8946
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8950
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8954
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8960
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8964
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8968
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8972
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8976
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8980
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8984
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8990
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8994
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8998
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9002
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9008
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9021
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9026
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9032
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9036
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9049
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9054
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9058
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9062
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9066
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9070
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9077
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9081
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9095
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9099
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9106
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9117
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9122
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9128
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9140
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9152
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9164
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9177
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9190
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9203
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9216
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9229
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9242
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9255
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9268
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9281
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9294
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9309
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9336
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9378
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9414
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9450
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9467
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9479
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9499
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9519
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9539
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9555
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9568
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9581
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9594
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9607
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9619
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9631
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9643
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9655
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9667
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9679
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9691
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9703
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9715
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9728
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9741
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9754
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9767
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9782
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9790
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9799
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9809
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9832
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9837
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9843
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9850
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9854
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9859
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9863
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9869
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9875
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9882
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9889
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9898
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9905
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9912
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9921
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9925
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9929
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9935
		{
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9937
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9947
		{
			yyVAL.str = ""
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9951
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
