// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const VECF32 = 57530
const VECF64 = 57531
const GEOMETRY = 57532
const POINT = 57533
const LINESTRING = 57534
const POLYGON = 57535
const GEOMETRYCOLLECTION = 57536
const MULTIPOINT = 57537
const MULTILINESTRING = 57538
const MULTIPOLYGON = 57539
const INT1 = 57540
const INT2 = 57541
const INT3 = 57542
const INT4 = 57543
const INT8 = 57544
const S3OPTION = 57545
const SQL_SMALL_RESULT = 57546
const SQL_BIG_RESULT = 57547
const SQL_BUFFER_RESULT = 57548
const LOW_PRIORITY = 57549
const HIGH_PRIORITY = 57550
const DELAYED = 57551
const CREATE = 57552
const ALTER = 57553
const DROP = 57554
const RENAME = 57555
const ANALYZE = 57556
const ADD = 57557
const RETURNS = 57558
const SCHEMA = 57559
const TABLE = 57560
const SEQUENCE = 57561
const INDEX = 57562
const VIEW = 57563
const TO = 57564
const IGNORE = 57565
const IF = 57566
const PRIMARY = 57567
const COLUMN = 57568
const CONSTRAINT = 57569
const SPATIAL = 57570
const FULLTEXT = 57571
const FOREIGN = 57572
const KEY_BLOCK_SIZE = 57573
const SHOW = 57574
const DESCRIBE = 57575
const EXPLAIN = 57576
const DATE = 57577
const ESCAPE = 57578
const REPAIR = 57579
const OPTIMIZE = 57580
const TRUNCATE = 57581
const MAXVALUE = 57582
const PARTITION = 57583
const REORGANIZE = 57584
const LESS = 57585
const THAN = 57586
const PROCEDURE = 57587
const TRIGGER = 57588
const STATUS = 57589
const VARIABLES = 57590
const ROLE = 57591
const PROXY = 57592
const AVG_ROW_LENGTH = 57593
const STORAGE = 57594
const DISK = 57595
const MEMORY = 57596
const CHECKSUM = 57597
const COMPRESSION = 57598
const DATA = 57599
const DIRECTORY = 57600
const DELAY_KEY_WRITE = 57601
const ENCRYPTION = 57602
const ENGINE = 57603
const MAX_ROWS = 57604
const MIN_ROWS = 57605
const PACK_KEYS = 57606
const ROW_FORMAT = 57607
const STATS_AUTO_RECALC = 57608
const STATS_PERSISTENT = 57609
const STATS_SAMPLE_PAGES = 57610
const DYNAMIC = 57611
const COMPRESSED = 57612
const REDUNDANT = 57613
const COMPACT = 57614
const FIXED = 57615
const COLUMN_FORMAT = 57616
const AUTO_RANDOM = 57617
const ENGINE_ATTRIBUTE = 57618
const SECONDARY_ENGINE_ATTRIBUTE = 57619
const INSERT_METHOD = 57620
const RESTRICT = 57621
const CASCADE = 57622
const ACTION = 57623
const PARTIAL = 57624
const SIMPLE = 57625
const CHECK = 57626
const ENFORCED = 57627
const RANGE = 57628
const LIST = 57629
const ALGORITHM = 57630
const LINEAR = 57631
const PARTITIONS = 57632
const SUBPARTITION = 57633
const SUBPARTITIONS = 57634
const CLUSTER = 57635
const TYPE = 57636
const ANY = 57637
const SOME = 57638
const EXTERNAL = 57639
const LOCALFILE = 57640
const URL = 57641
const PREPARE = 57642
const DEALLOCATE = 57643
const RESET = 57644
const EXTENSION = 57645
const INCREMENT = 57646
const CYCLE = 57647
const MINVALUE = 57648
const PUBLICATION = 57649
const SUBSCRIPTIONS = 57650
const PUBLICATIONS = 57651
const PROPERTIES = 57652
const PARSER = 57653
const VISIBLE = 57654
const INVISIBLE = 57655
const BTREE = 57656
const HASH = 57657
const RTREE = 57658
const BSI = 57659
const ZONEMAP = 57660
const LEADING = 57661
const BOTH = 57662
const TRAILING = 57663
const UNKNOWN = 57664
const EXPIRE = 57665
const ACCOUNT = 57666
const ACCOUNTS = 57667
const UNLOCK = 57668
const DAY = 57669
const NEVER = 57670
const PUMP = 57671
const MYSQL_COMPATIBILITY_MODE = 57672
const MODIFY = 57673
const CHANGE = 57674
const SECOND = 57675
const ASCII = 57676
const COALESCE = 57677
const COLLATION = 57678
const HOUR = 57679
const MICROSECOND = 57680
const MINUTE = 57681
const MONTH = 57682
const QUARTER = 57683
const REPEAT = 57684
const REVERSE = 57685
const ROW_COUNT = 57686
const WEEK = 57687
const REVOKE = 57688
const FUNCTION = 57689
const PRIVILEGES = 57690
const TABLESPACE = 57691
const EXECUTE = 57692
const SUPER = 57693
const GRANT = 57694
const OPTION = 57695
const REFERENCES = 57696
const REPLICATION = 57697
const SLAVE = 57698
const CLIENT = 57699
const USAGE = 57700
const RELOAD = 57701
const FILE = 57702
const TEMPORARY = 57703
const ROUTINE = 57704
const EVENT = 57705
const SHUTDOWN = 57706
const NULLX = 57707
const AUTO_INCREMENT = 57708
const APPROXNUM = 57709
const SIGNED = 57710
const UNSIGNED = 57711
const ZEROFILL = 57712
const ENGINES = 57713
const LOW_CARDINALITY = 57714
const AUTOEXTEND_SIZE = 57715
const ADMIN_NAME = 57716
const RANDOM = 57717
const SUSPEND = 57718
const ATTRIBUTE = 57719
const HISTORY = 57720
const REUSE = 57721
const CURRENT = 57722
const OPTIONAL = 57723
const FAILED_LOGIN_ATTEMPTS = 57724
const PASSWORD_LOCK_TIME = 57725
const UNBOUNDED = 57726
const SECONDARY = 57727
const RESTRICTED = 57728
const USER = 57729
const IDENTIFIED = 57730
const CIPHER = 57731
const ISSUER = 57732
const X509 = 57733
const SUBJECT = 57734
const SAN = 57735
const REQUIRE = 57736
const SSL = 57737
const NONE = 57738
const PASSWORD = 57739
const SHARED = 57740
const EXCLUSIVE = 57741
const MAX_QUERIES_PER_HOUR = 57742
const MAX_UPDATES_PER_HOUR = 57743
const MAX_CONNECTIONS_PER_HOUR = 57744
const MAX_USER_CONNECTIONS = 57745
const FORMAT = 57746
const VERBOSE = 57747
const CONNECTION = 57748
const TRIGGERS = 57749
const PROFILES = 57750
const LOAD = 57751
const INFILE = 57752
const TERMINATED = 57753
const OPTIONALLY = 57754
const ENCLOSED = 57755
const ESCAPED = 57756
const STARTING = 57757
const LINES = 57758
const ROWS = 57759
const IMPORT = 57760
const DISCARD = 57761
const MODUMP = 57762
const OVER = 57763
const PRECEDING = 57764
const FOLLOWING = 57765
const GROUPS = 57766
const DATABASES = 57767
const TABLES = 57768
const SEQUENCES = 57769
const EXTENDED = 57770
const FULL = 57771
const PROCESSLIST = 57772
const FIELDS = 57773
const COLUMNS = 57774
const OPEN = 57775
const ERRORS = 57776
const WARNINGS = 57777
const INDEXES = 57778
const SCHEMAS = 57779
const NODE = 57780
const LOCKS = 57781
const ROLES = 57782
const TABLE_NUMBER = 57783
const COLUMN_NUMBER = 57784
const TABLE_VALUES = 57785
const TABLE_SIZE = 57786
const NAMES = 57787
const GLOBAL = 57788
const PERSIST = 57789
const SESSION = 57790
const ISOLATION = 57791
const LEVEL = 57792
const READ = 57793
const WRITE = 57794
const ONLY = 57795
const REPEATABLE = 57796
const COMMITTED = 57797
const UNCOMMITTED = 57798
const SERIALIZABLE = 57799
const LOCAL = 57800
const EVENTS = 57801
const PLUGINS = 57802
const CURRENT_TIMESTAMP = 57803
const DATABASE = 57804
const CURRENT_TIME = 57805
const LOCALTIME = 57806
const LOCALTIMESTAMP = 57807
const UTC_DATE = 57808
const UTC_TIME = 57809
const UTC_TIMESTAMP = 57810
const REPLACE = 57811
const CONVERT = 57812
const SEPARATOR = 57813
const TIMESTAMPDIFF = 57814
const CURRENT_DATE = 57815
const CURRENT_USER = 57816
const CURRENT_ROLE = 57817
const SECOND_MICROSECOND = 57818
const MINUTE_MICROSECOND = 57819
const MINUTE_SECOND = 57820
const HOUR_MICROSECOND = 57821
const HOUR_SECOND = 57822
const HOUR_MINUTE = 57823
const DAY_MICROSECOND = 57824
const DAY_SECOND = 57825
const DAY_MINUTE = 57826
const DAY_HOUR = 57827
const YEAR_MONTH = 57828
const SQL_TSI_HOUR = 57829
const SQL_TSI_DAY = 57830
const SQL_TSI_WEEK = 57831
const SQL_TSI_MONTH = 57832
const SQL_TSI_QUARTER = 57833
const SQL_TSI_YEAR = 57834
const SQL_TSI_SECOND = 57835
const SQL_TSI_MINUTE = 57836
const RECURSIVE = 57837
const CONFIG = 57838
const DRAINER = 57839
const SOURCE = 57840
const STREAM = 57841
const HEADERS = 57842
const MATCH = 57843
const AGAINST = 57844
const BOOLEAN = 57845
const LANGUAGE = 57846
const WITH = 57847
const QUERY = 57848
const EXPANSION = 57849
const WITHOUT = 57850
const VALIDATION = 57851
const ADDDATE = 57852
const BIT_AND = 57853
const BIT_OR = 57854
const BIT_XOR = 57855
const CAST = 57856
const COUNT = 57857
const APPROX_COUNT = 57858
const APPROX_COUNT_DISTINCT = 57859
const APPROX_PERCENTILE = 57860
const CURDATE = 57861
const CURTIME = 57862
const DATE_ADD = 57863
const DATE_SUB = 57864
const EXTRACT = 57865
const GROUP_CONCAT = 57866
const MAX = 57867
const MID = 57868
const MIN = 57869
const NOW = 57870
const POSITION = 57871
const SESSION_USER = 57872
const STD = 57873
const STDDEV = 57874
const MEDIAN = 57875
const STDDEV_POP = 57876
const STDDEV_SAMP = 57877
const SUBDATE = 57878
const SUBSTR = 57879
const SUBSTRING = 57880
const SUM = 57881
const SYSDATE = 57882
const SYSTEM_USER = 57883
const TRANSLATE = 57884
const TRIM = 57885
const VARIANCE = 57886
const VAR_POP = 57887
const VAR_SAMP = 57888
const AVG = 57889
const RANK = 57890
const ROW_NUMBER = 57891
const DENSE_RANK = 57892
const NEXTVAL = 57893
const SETVAL = 57894
const CURRVAL = 57895
const LASTVAL = 57896
const ARROW = 57897
const ROW = 57898
const OUTFILE = 57899
const HEADER = 57900
const MAX_FILE_SIZE = 57901
const FORCE_QUOTE = 57902
const PARALLEL = 57903
const UNUSED = 57904
const BINDINGS = 57905
const DO = 57906
const DECLARE = 57907
const LOOP = 57908
const WHILE = 57909
const LEAVE = 57910
const ITERATE = 57911
const UNTIL = 57912
const CALL = 57913
const SPBEGIN = 57914
const BACKEND = 57915
const SERVERS = 57916
const KILL = 57917
const BACKUP = 57918
const FILESYSTEM = 57919
const QUERY_RESULT = 57920

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10347

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 115,
	21, 697,
	-2, 678,
	-1, 131,
	235, 1029,
	237, 953,
	-2, 993,
	-1, 154,
	42, 517,
	237, 517,
	264, 524,
	265, 524,
	453, 517,
	-2, 550,
	-1, 190,
	599, 1739,
	-2, 433,
	-1, 525,
	316, 133,
	427, 133,
	-2, 1649,
	-1, 588,
	81, 1445,
	-2, 1793,
	-1, 589,
	81, 1463,
	-2, 1764,
	-1, 593,
	81, 1464,
	-2, 1792,
	-1, 619,
	81, 1375,
	-2, 1861,
	-1, 620,
	81, 1376,
	-2, 1860,
	-1, 621,
	81, 1377,
	-2, 1850,
	-1, 622,
	81, 1824,
	-2, 1845,
	-1, 623,
	81, 1825,
	-2, 1846,
	-1, 624,
	81, 1826,
	-2, 1852,
	-1, 625,
	81, 1827,
	-2, 1834,
	-1, 626,
	81, 1828,
	-2, 1843,
	-1, 627,
	81, 1829,
	-2, 1853,
	-1, 628,
	81, 1830,
	-2, 1854,
	-1, 629,
	81, 1831,
	-2, 1859,
	-1, 630,
	81, 1832,
	-2, 1864,
	-1, 631,
	81, 1833,
	-2, 1865,
	-1, 633,
	81, 1442,
	-2, 1638,
	-1, 637,
	81, 1447,
	-2, 1650,
	-1, 640,
	81, 1451,
	-2, 1668,
	-1, 644,
	81, 1455,
	-2, 1710,
	-1, 645,
	81, 1456,
	-2, 1788,
	-1, 653,
	81, 1466,
	-2, 1773,
	-1, 654,
	81, 1467,
	-2, 1817,
	-1, 655,
	81, 1468,
	-2, 1783,
	-1, 656,
	81, 1469,
	-2, 1807,
	-1, 667,
	81, 1353,
	-2, 1855,
	-1, 668,
	81, 1354,
	-2, 1856,
	-1, 669,
	81, 1355,
	-2, 1857,
	-1, 673,
	21, 698,
	-2, 661,
	-1, 753,
	448, 550,
	449, 550,
	-2, 518,
	-1, 797,
	122, 1638,
	133, 1638,
	153, 1638,
	-2, 1613,
	-1, 903,
	21, 698,
	-2, 661,
	-1, 1003,
	21, 697,
	-2, 1251,
	-1, 1120,
	515, 994,
	516, 994,
	-2, 871,
	-1, 1376,
	81, 1513,
	-2, 1790,
	-1, 1377,
	81, 1514,
	-2, 1791,
	-1, 1515,
	82, 843,
	-2, 849,
	-1, 1897,
	82, 1599,
	154, 1599,
	-2, 1775,
	-1, 1898,
	82, 1599,
	154, 1599,
	-2, 1774,
	-1, 1899,
	82, 1575,
	154, 1575,
	-2, 1761,
	-1, 1900,
	82, 1576,
	154, 1576,
	-2, 1766,
	-1, 1901,
	82, 1577,
	154, 1577,
	-2, 1698,
	-1, 1902,
	82, 1578,
	154, 1578,
	-2, 1692,
	-1, 1903,
	82, 1579,
	154, 1579,
	-2, 1629,
	-1, 1904,
	82, 1580,
	154, 1580,
	-2, 1763,
	-1, 1905,
	82, 1581,
	154, 1581,
	-2, 1696,
	-1, 1906,
	82, 1582,
	154, 1582,
	-2, 1691,
	-1, 1907,
	82, 1583,
	154, 1583,
	-2, 1682,
	-1, 1908,
	82, 1599,
	154, 1599,
	-2, 1683,
	-1, 1909,
	82, 1599,
	154, 1599,
	-2, 1684,
	-1, 1911,
	82, 1588,
	154, 1588,
	-2, 1807,
	-1, 1912,
	82, 1566,
	154, 1566,
	-2, 1793,
	-1, 1913,
	82, 1597,
	154, 1597,
	-2, 1764,
	-1, 1914,
	82, 1597,
	154, 1597,
	-2, 1792,
	-1, 1915,
	82, 1597,
	154, 1597,
	-2, 1651,
	-1, 1916,
	82, 1595,
	154, 1595,
	-2, 1783,
	-1, 1917,
	82, 1592,
	154, 1592,
	-2, 1673,
	-1, 1918,
	81, 1547,
	82, 1547,
	154, 1547,
	385, 1547,
	386, 1547,
	387, 1547,
	-2, 1628,
	-1, 1919,
	81, 1548,
	82, 1548,
	154, 1548,
	385, 1548,
	386, 1548,
	387, 1548,
	-2, 1630,
	-1, 1920,
	81, 1551,
	82, 1551,
	154, 1551,
	385, 1551,
	386, 1551,
	387, 1551,
	-2, 1765,
	-1, 1921,
	81, 1553,
	82, 1553,
	154, 1553,
	385, 1553,
	386, 1553,
	387, 1553,
	-2, 1748,
	-1, 1922,
	81, 1555,
	82, 1555,
	154, 1555,
	385, 1555,
	386, 1555,
	387, 1555,
	-2, 1697,
	-1, 1923,
	81, 1557,
	82, 1557,
	154, 1557,
	385, 1557,
	386, 1557,
	387, 1557,
	-2, 1678,
	-1, 1924,
	81, 1558,
	82, 1558,
	154, 1558,
	385, 1558,
	386, 1558,
	387, 1558,
	-2, 1679,
	-1, 1925,
	81, 1560,
	82, 1560,
	154, 1560,
	385, 1560,
	386, 1560,
	387, 1560,
	-2, 1627,
	-1, 1926,
	82, 1602,
	154, 1602,
	385, 1602,
	386, 1602,
	387, 1602,
	-2, 1656,
	-1, 1927,
	82, 1602,
	154, 1602,
	385, 1602,
	386, 1602,
	387, 1602,
	-2, 1669,
	-1, 1928,
	82, 1605,
	154, 1605,
	385, 1605,
	386, 1605,
	387, 1605,
	-2, 1652,
	-1, 1929,
	82, 1605,
	154, 1605,
	385, 1605,
	386, 1605,
	387, 1605,
	-2, 1713,
	-1, 1930,
	82, 1602,
	154, 1602,
	385, 1602,
	386, 1602,
	387, 1602,
	-2, 1733,
	-1, 1946,
	105, 988,
	149, 988,
	188, 988,
	191, 988,
	277, 988,
	-2, 981,
	-1, 2084,
	21, 697,
	-2, 791,
	-1, 2280,
	105, 988,
	149, 988,
	188, 988,
	191, 988,
	277, 988,
	-2, 982,
	-1, 2296,
	79, 607,
	154, 607,
	-2, 1138,
	-1, 2628,
	191, 988,
	301, 1219,
	-2, 1191,
	-1, 2766,
	105, 988,
	149, 988,
	188, 988,
	191, 988,
	-2, 1081,
	-1, 2768,
	105, 988,
	149, 988,
	188, 988,
	191, 988,
	-2, 1081,
	-1, 2778,
	79, 607,
	154, 607,
	-2, 1139,
	-1, 2786,
	191, 988,
	301, 1219,
	-2, 1192,
	-1, 2913,
	105, 988,
	149, 988,
	188, 988,
	191, 988,
	-2, 1082,
	-1, 3275,
	82, 1047,
	154, 1047,
	-2, 988,
	-1, 3279,
	82, 1047,
	154, 1047,
	-2, 988,
	-1, 3293,
	82, 1051,
	154, 1051,
	-2, 988,
	-1, 3298,
	82, 1052,
	154, 1052,
	-2, 988,
}

const yyPrivate = 57344

const yyLast = 37787

var yyAct = [...]int{
	555, 1595, 3279, 3278, 3287, 3258, 181, 1295, 1357, 534,
	3150, 536, 557, 3211, 529, 3176, 3229, 3158, 2646, 3159,
	544, 2861, 3070, 1872, 2953, 3084, 2800, 1035, 3062, 1353,
	2866, 2709, 3088, 1214, 2896, 2897, 2894, 2988, 585, 2710,
	441, 3023, 796, 674, 2864, 538, 1155, 2285, 2762, 2978,
	448, 3071, 453, 453, 1549, 3073, 2749, 2901, 453, 469,
	478, 1986, 2299, 478, 2787, 1285, 2912, 2596, 1360, 2735,
	2856, 2412, 2915, 2413, 1684, 2411, 1681, 2584, 2395, 2335,
	2738, 2643, 2625, 2632, 2405, 2707, 1649, 2695, 166, 1778,
	1895, 2078, 2434, 2678, 1657, 2408, 489, 1989, 2271, 2565,
	2597, 2594, 483, 2563, 2568, 897, 1696, 2281, 1957, 2062,
	1893, 1876, 527, 2471, 1885, 533, 1207, 1774, 1875, 1551,
	528, 1747, 2315, 2631, 1756, 1755, 1748, 2508, 1495, 1677,
	1294, 1652, 2126, 2079, 729, 802, 2260, 2067, 1987, 1721,
	2255, 2317, 1773, 177, 8, 2454, 452, 452, 6, 790,
	1956, 1587, 460, 176, 7, 1578, 1525, 1503, 441, 2143,
	1286, 1806, 849, 1351, 1289, 1775, 2106, 1248, 1891, 1281,
	1223, 1937, 1356, 537, 1193, 114, 35, 2599, 1982, 1785,
	1144, 181, 1561, 181, 526, 840, 841, 447, 2598, 440,
	1128, 1406, 1560, 834, 835, 1390, 545, 760, 839, 1342,
	528, 2218, 26, 1105, 800, 914, 1163, 1751, 15, 2217,
	1737, 13, 1754, 465, 1711, 1255, 14, 23, 1274, 1130,
	32, 1350, 789, 1192, 671, 1524, 1650, 1164, 728, 2086,
	36, 1412, 491, 462, 1190, 492, 16, 10, 1100, 167,
	1411, 1247, 1156, 477, 160, 1140, 706, 710, 1782, 726,
	163, 673, 837, 2752, 1792, 3013, 2243, 2243, 2243, 748,
	2702, 474, 2177, 1074, 2132, 2130, 1508, 470, 2129, 836,
	472, 838, 535, 2127, 1262, 473, 1258, 833, 832, 471,
	1036, 833, 2790, 833, 165, 1091, 449, 1176, 1260, 475,
	2854, 2467, 972, 973, 974, 971, 972, 973, 974, 971,
	458, 2465, 1726, 2984, 2979, 2857, 481, 2708, 1499, 8,
	1030, 3075, 1750, 672, 831, 2024, 682, 164, 164, 7,
	2802, 164, 51, 156, 132, 164, 164, 51, 156, 132,
	164, 3141, 3034, 2793, 164, 1309, 1302, 803, 805, 164,
	164, 2284, 1092, 2788, 2883, 935, 2172, 2286, 2810, 2811,
	821, 2164, 2736, 1779, 2789, 2878, 3106, 1533, 164, 51,
	156, 132, 1115, 1114, 2531, 1306, 1299, 487, 662, 1790,
	661, 663, 664, 2486, 665, 666, 3035, 488, 113, 1941,
	1519, 1120, 2479, 2104, 2881, 969, 1308, 1301, 113, 1172,
	161, 2794, 1173, 2105, 161, 161, 1093, 2441, 2442, 161,
	2440, 1327, 1694, 161, 950, 1662, 1663, 951, 161, 161,
	1343, 1152, 2092, 1347, 55, 2091, 683, 2144, 2093, 1509,
	1510, 1194, 943, 1196, 1661, 945, 769, 161, 675, 1574,
	2257, 1161, 1162, 3162, 3163, 953, 3194, 1346, 1159, 3192,
	2258, 1359, 1158, 1161, 1162, 962, 967, 799, 798, 3078,
	3137, 3078, 453, 946, 3077, 778, 3077, 3136, 3076, 3135,
	3076, 2874, 453, 907, 1863, 3180, 3181, 2989, 2990, 2991,
	2992, 2711, 3067, 2986, 2472, 3064, 3064, 2473, 1175, 2474,
	478, 478, 2982, 453, 2809, 2711, 1990, 2256, 3140, 2159,
	1362, 816, 812, 807, 811, 814, 908, 2351, 3081, 917,
	2720, 2739, 902, 904, 1668, 1786, 1678, 2263, 1338, 2888,
	948, 2798, 1261, 1259, 2746, 2056, 1348, 717, 2569, 819,
	1734, 1936, 2812, 810, 955, 1268, 1267, 956, 939, 2246,
	843, 3080, 2497, 2795, 2799, 2797, 2796, 2579, 2577, 1345,
	3008, 131, 964, 162, 938, 975, 899, 1005, 2499, 917,
	965, 966, 2169, 941, 1004, 958, 905, 1446, 2022, 2855,
	901, 1672, 1013, 154, 2466, 944, 947, 2399, 2059, 3143,
	3144, 2804, 2805, 949, 817, 2058, 806, 926, 3011, 2573,
	3161, 820, 2885, 930, 1019, 906, 2063, 907, 2824, 801,
	3187, 940, 2873, 2574, 2575, 903, 2593, 774, 808, 2875,
	773, 1361, 2275, 2276, 2277, 2278, 1150, 2644, 2645, 2576,
	2607, 3031, 3094, 2812, 522, 1791, 2292, 524, 1368, 1371,
	1372, 818, 523, 2817, 480, 2791, 3196, 2016, 479, 1369,
	954, 2803, 1039, 1174, 2827, 2404, 486, 1943, 3272, 1184,
	3089, 1795, 1797, 1798, 803, 805, 1692, 1693, 952, 960,
	961, 3288, 3220, 3152, 1344, 3148, 3149, 3191, 3152, 1090,
	1139, 809, 3227, 3252, 2648, 2005, 942, 3007, 959, 474,
	474, 1985, 2007, 2944, 2033, 470, 470, 2032, 472, 472,
	910, 911, 921, 473, 473, 1137, 779, 471, 471, 919,
	918, 2571, 2269, 957, 1098, 448, 1101, 475, 475, 3012,
	2722, 2503, 2242, 775, 2954, 2955, 2956, 2958, 2957, 1040,
	1203, 2933, 1202, 1780, 1071, 803, 805, 2108, 928, 1780,
	927, 1780, 1136, 923, 924, 2053, 2054, 3232, 729, 2006,
	3283, 912, 1154, 1153, 2939, 476, 815, 833, 1135, 919,
	918, 833, 833, 1011, 3289, 3259, 3024, 898, 2548, 833,
	2770, 3295, 1807, 833, 1985, 833, 2852, 2002, 3033, 2808,
	2436, 2438, 3142, 1781, 1793, 2128, 777, 3032, 1106, 1263,
	487, 3061, 476, 813, 1191, 453, 2379, 1186, 2502, 1160,
	2640, 2165, 2286, 441, 441, 2096, 935, 1794, 1992, 2020,
	1783, 1112, 441, 441, 1157, 52, 1218, 1218, 1995, 453,
	2882, 1118, 672, 1161, 1162, 1117, 1161, 1162, 1116, 2262,
	482, 2558, 2946, 1007, 1008, 1009, 1010, 2807, 478, 1101,
	448, 2570, 1151, 1251, 1251, 1216, 1216, 133, 133, 2641,
	1220, 133, 52, 1679, 181, 133, 133, 1250, 1250, 2349,
	133, 776, 2580, 441, 133, 3009, 2884, 1225, 2173, 133,
	133, 3197, 1125, 2500, 2647, 2245, 1370, 1879, 3282, 2451,
	2452, 2510, 2509, 3233, 929, 2266, 2267, 2889, 133, 1182,
	2352, 934, 2353, 2354, 1096, 1048, 1049, 2644, 2645, 1796,
	2265, 1512, 1099, 806, 2572, 1513, 1669, 801, 1881, 1880,
	1339, 1878, 3000, 1224, 1293, 3001, 1296, 3000, 1094, 1095,
	3001, 1304, 1107, 1108, 1109, 1110, 1111, 719, 1113, 720,
	1212, 1213, 1511, 1119, 1269, 2995, 685, 1076, 2045, 686,
	2920, 1325, 1146, 1147, 1991, 2437, 1078, 3294, 1996, 1993,
	721, 1552, 1198, 1200, 676, 1218, 2297, 1218, 907, 3235,
	673, 1210, 1211, 1671, 1103, 723, 724, 725, 3003, 1310,
	3256, 1133, 1838, 3003, 806, 1837, 1138, 2935, 1888, 1185,
	1104, 2934, 2001, 1148, 2940, 2941, 1999, 1141, 1145, 1145,
	1145, 1166, 1167, 3301, 1169, 1170, 1171, 1127, 1714, 3002,
	1552, 1889, 1890, 1994, 3002, 1363, 1364, 1365, 1366, 1367,
	1141, 1141, 1264, 3230, 3231, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1243, 1177, 1178,
	1165, 1401, 1402, 1168, 770, 2370, 2371, 1410, 970, 3300,
	1201, 2675, 2380, 2382, 2383, 2384, 2381, 970, 2642, 1408,
	1409, 1459, 3291, 1449, 1450, 1451, 1443, 2612, 935, 2146,
	1283, 1284, 2671, 2759, 1453, 970, 1465, 3273, 1866, 1466,
	1288, 458, 1226, 1292, 1355, 1468, 1291, 1242, 2591, 1236,
	1358, 1241, 1475, 1476, 3268, 1252, 3262, 676, 2077, 1272,
	3261, 1275, 1276, 1253, 2298, 1992, 1995, 970, 770, 1341,
	1320, 1321, 1277, 1278, 2164, 2076, 3239, 780, 1497, 2650,
	1102, 970, 1501, 1373, 689, 1504, 3213, 772, 3170, 1336,
	771, 824, 829, 830, 3292, 1939, 453, 1352, 1523, 1218,
	1527, 1528, 2298, 1530, 1531, 474, 1712, 2675, 1493, 1788,
	453, 470, 2019, 1218, 472, 1333, 1316, 729, 1300, 473,
	1550, 1330, 1307, 471, 1329, 1218, 3269, 2369, 1788, 673,
	1332, 1186, 1788, 475, 1340, 688, 469, 1312, 1496, 691,
	690, 1441, 1442, 1334, 1445, 1458, 1870, 718, 1788, 1331,
	1328, 772, 1460, 3164, 771, 1573, 1349, 1311, 3214, 2077,
	3171, 1354, 1324, 1579, 1579, 1467, 1186, 1469, 1186, 1186,
	1323, 3116, 453, 1522, 1523, 1523, 2592, 2251, 1218, 1646,
	1647, 1659, 2248, 2996, 1392, 3055, 2151, 3072, 2996, 1577,
	1520, 2108, 2997, 3054, 1779, 441, 1996, 1218, 1529, 2077,
	1072, 1991, 1985, 1990, 1537, 1988, 1993, 935, 932, 1938,
	933, 1660, 1497, 972, 973, 974, 971, 1497, 1497, 3050,
	1980, 1871, 453, 1523, 1218, 3016, 1701, 1842, 453, 453,
	1705, 1706, 972, 973, 974, 971, 1709, 1710, 1770, 1142,
	1690, 1716, 1126, 3016, 1404, 1597, 1204, 3215, 181, 1641,
	1642, 181, 181, 1444, 181, 2781, 2745, 3056, 1566, 2529,
	1994, 1724, 1399, 1400, 1727, 1961, 1585, 1730, 2613, 2456,
	1732, 1526, 1470, 1572, 2300, 2167, 1575, 1576, 1869, 1687,
	1688, 826, 827, 828, 933, 1542, 3049, 1494, 2166, 2158,
	1673, 3016, 1459, 1459, 1758, 1817, 1518, 1555, 1698, 1459,
	1459, 3048, 806, 3047, 1765, 1665, 806, 1667, 1532, 3015,
	1534, 1535, 1536, 2907, 1680, 2831, 1697, 1685, 1686, 1580,
	2659, 1700, 1697, 1697, 972, 973, 974, 971, 1550, 2431,
	1500, 1571, 1218, 1777, 1703, 1704, 1725, 1977, 1833, 1728,
	1729, 1562, 1731, 1564, 1565, 1547, 1558, 1559, 1582, 1546,
	1526, 1818, 2224, 1141, 2216, 1143, 1570, 2178, 3016, 2162,
	1583, 1584, 1769, 1568, 1569, 1719, 1517, 1567, 1581, 1563,
	1816, 1557, 2155, 3016, 2153, 3016, 900, 2148, 1145, 1313,
	2141, 3016, 1771, 2139, 2137, 2908, 2135, 2108, 1016, 1960,
	1867, 1800, 2660, 1848, 1553, 1554, 1352, 1804, 1805, 920,
	1181, 2077, 1183, 1645, 1187, 1188, 1189, 900, 1847, 1810,
	1648, 1664, 1814, 1666, 1836, 895, 1753, 1674, 1759, 893,
	2967, 2617, 2829, 1753, 970, 1827, 970, 1826, 1825, 970,
	1787, 1961, 1317, 1689, 1231, 1232, 1233, 1234, 1235, 2088,
	1237, 1238, 1239, 1240, 2149, 1699, 2154, 1245, 1246, 2149,
	2494, 1824, 2142, 1448, 1447, 2140, 2136, 1720, 2136, 1831,
	1722, 1961, 1866, 987, 3248, 970, 1131, 803, 805, 1843,
	1132, 1845, 1448, 1447, 803, 805, 3095, 1844, 1852, 1695,
	970, 1739, 1849, 1850, 1851, 2921, 970, 1854, 1855, 1856,
	1857, 1858, 1859, 1860, 1861, 3236, 2017, 970, 2608, 970,
	970, 3014, 1788, 1206, 1318, 527, 1760, 907, 1931, 453,
	474, 900, 1762, 2937, 1768, 2936, 470, 2751, 2676, 472,
	3096, 1767, 687, 453, 473, 453, 453, 453, 471, 2922,
	1772, 990, 991, 992, 993, 994, 987, 1958, 475, 988,
	989, 990, 991, 992, 993, 994, 987, 1965, 1186, 1142,
	2773, 2771, 1808, 1398, 1208, 2669, 2664, 1962, 1970, 803,
	805, 1799, 2661, 1481, 1763, 1209, 1764, 2586, 2401, 1395,
	1397, 1394, 1186, 1396, 2609, 2273, 2127, 558, 568, 2244,
	1801, 1392, 1474, 2152, 2098, 2012, 559, 1812, 567, 560,
	564, 563, 561, 562, 2774, 2772, 1122, 1121, 909, 1471,
	1472, 1473, 1205, 1932, 1477, 1478, 1479, 1480, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 2700, 1948, 2610, 1950,
	1951, 1952, 2185, 2121, 1407, 1256, 1813, 1723, 1723, 1896,
	2018, 995, 996, 988, 989, 990, 991, 992, 993, 994,
	987, 565, 1407, 2458, 692, 2081, 2081, 1659, 2081, 974,
	971, 3134, 1969, 972, 973, 974, 971, 971, 1802, 1803,
	972, 973, 974, 971, 2703, 1143, 441, 441, 1967, 1968,
	1497, 2131, 1497, 566, 907, 1521, 2949, 2948, 1971, 1972,
	1218, 453, 1862, 1864, 1865, 972, 973, 974, 971, 1882,
	1497, 1497, 2475, 453, 2701, 2341, 1940, 2340, 907, 448,
	2323, 1933, 2321, 1251, 3251, 1659, 806, 2928, 2116, 2102,
	2118, 2891, 2892, 806, 181, 1018, 3277, 1250, 3265, 1039,
	972, 973, 974, 971, 3186, 3221, 3216, 1949, 1017, 2187,
	2886, 1463, 2094, 2085, 2095, 3154, 2743, 2083, 2391, 2087,
	1966, 972, 973, 974, 971, 1464, 3125, 3097, 1976, 3040,
	2123, 1829, 2099, 2100, 1978, 3036, 1984, 2389, 1997, 1998,
	2160, 2003, 2980, 1777, 2924, 3250, 1979, 1983, 1974, 2522,
	1218, 1975, 1218, 2923, 1218, 1224, 2387, 2376, 2775, 907,
	1973, 972, 973, 974, 971, 2742, 2887, 1697, 2209, 2578,
	1257, 2115, 2744, 2490, 2390, 1145, 1040, 2470, 806, 2110,
	2469, 2170, 2122, 972, 973, 974, 971, 2060, 1218, 2203,
	2374, 1256, 2373, 2388, 2372, 1198, 1200, 1828, 2186, 2364,
	1896, 2113, 803, 805, 2210, 2089, 2204, 2205, 2521, 1218,
	2120, 2862, 2386, 2375, 2207, 2208, 2358, 1216, 2357, 2356,
	2212, 2202, 2272, 972, 973, 974, 971, 2213, 2355, 1742,
	1741, 2103, 1873, 1874, 972, 973, 974, 971, 1216, 1740,
	1736, 2750, 2211, 1702, 3103, 1735, 2111, 1314, 2406, 1089,
	2114, 1497, 2564, 3182, 2237, 2238, 1504, 2214, 907, 3138,
	972, 973, 974, 971, 3083, 2895, 2112, 978, 979, 980,
	981, 982, 983, 984, 976, 3059, 2189, 972, 973, 974,
	971, 2174, 2176, 986, 985, 995, 996, 988, 989, 990,
	991, 992, 993, 994, 987, 2183, 2171, 3044, 3039, 3038,
	2157, 3155, 1840, 3010, 972, 973, 974, 971, 2163, 1218,
	2981, 2235, 2270, 2168, 2161, 2930, 522, 2904, 1523, 524,
	453, 2890, 1352, 2860, 523, 2858, 2296, 972, 973, 974,
	971, 2838, 2302, 2835, 2179, 2180, 986, 985, 995, 996,
	988, 989, 990, 991, 992, 993, 994, 987, 2311, 2193,
	2833, 2396, 2741, 907, 2740, 2737, 2727, 2252, 2670, 3087,
	2666, 2320, 2657, 2656, 3099, 2587, 2555, 2554, 907, 907,
	907, 1579, 2553, 1877, 907, 2868, 2331, 2332, 2333, 907,
	2249, 2337, 2338, 2867, 2339, 972, 973, 974, 971, 2282,
	2821, 2501, 2468, 2283, 2445, 3290, 2385, 2377, 2236, 2239,
	2367, 972, 973, 974, 971, 2365, 2361, 2081, 2360, 972,
	973, 974, 971, 2359, 2287, 2293, 972, 973, 974, 971,
	2294, 2392, 1868, 1597, 618, 617, 2993, 2219, 2220, 441,
	1744, 2303, 1738, 2225, 1523, 907, 1659, 1659, 1659, 1659,
	1507, 806, 1506, 2724, 1315, 1047, 1043, 907, 1659, 1042,
	2182, 2081, 896, 2314, 1283, 1284, 2318, 684, 1288, 2305,
	2318, 1292, 2911, 2307, 1291, 2268, 2768, 1218, 2325, 972,
	973, 974, 971, 8, 2767, 2766, 2295, 2758, 2301, 453,
	453, 1526, 2525, 7, 2726, 2715, 2706, 1276, 3266, 2705,
	2694, 2326, 2327, 2253, 181, 2316, 2330, 1277, 1278, 181,
	2693, 2336, 2313, 2618, 2322, 2527, 2520, 2512, 972, 973,
	974, 971, 2462, 2507, 2464, 2453, 2250, 2247, 2427, 2138,
	1459, 2134, 1459, 2133, 1853, 2485, 2329, 1846, 1841, 2489,
	1839, 1835, 1497, 2524, 1834, 1218, 1832, 1497, 2496, 1823,
	2366, 986, 985, 995, 996, 988, 989, 990, 991, 992,
	993, 994, 987, 2310, 1820, 1819, 2304, 2414, 1743, 972,
	973, 974, 971, 2319, 2308, 2309, 2397, 2402, 2306, 2414,
	1492, 1491, 2506, 2448, 2449, 1490, 1462, 1461, 2400, 2428,
	1452, 164, 2459, 2426, 2430, 1230, 1228, 2463, 3247, 2439,
	673, 3241, 1496, 3228, 2526, 3225, 3223, 2484, 2446, 3124,
	2023, 1037, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2443,
	3057, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042,
	2043, 2044, 907, 2046, 2047, 2048, 2049, 2050, 2461, 2051,
	2567, 2498, 2493, 2515, 2460, 2517, 2457, 3046, 3041, 2429,
	2582, 1271, 2482, 2476, 2481, 453, 2478, 2483, 2488, 2962,
	161, 2947, 2492, 2523, 2943, 907, 3202, 2233, 2846, 907,
	907, 907, 2415, 2416, 2417, 2418, 2504, 2505, 1659, 1958,
	2844, 2616, 2819, 1821, 2232, 2818, 2815, 2620, 2231, 972,
	973, 974, 971, 972, 973, 974, 971, 2230, 2630, 2511,
	2633, 2814, 2633, 2633, 2753, 2590, 2602, 907, 2518, 2519,
	972, 973, 974, 971, 972, 973, 974, 971, 2229, 2637,
	2557, 2652, 2601, 972, 973, 974, 971, 1282, 1218, 1218,
	2549, 1273, 2649, 2282, 164, 2552, 156, 132, 1129, 2393,
	2651, 2324, 2559, 2556, 972, 973, 974, 971, 2516, 2588,
	2290, 2289, 2288, 1287, 1896, 1290, 1279, 1216, 1216, 2480,
	2583, 2653, 2654, 2234, 2614, 2147, 2487, 2097, 2589, 2228,
	2603, 2604, 2605, 2227, 453, 972, 973, 974, 971, 2567,
	2611, 2629, 2052, 570, 115, 1959, 2628, 2615, 2638, 115,
	1523, 1523, 1393, 2513, 2514, 972, 973, 974, 971, 972,
	973, 974, 971, 161, 2619, 2532, 2533, 2639, 2621, 2622,
	161, 2534, 2535, 2536, 2537, 1707, 2538, 2539, 2540, 2541,
	2542, 2543, 2544, 2545, 1516, 2634, 2635, 1515, 1337, 998,
	1303, 1002, 1280, 677, 678, 679, 680, 2203, 676, 459,
	1073, 1070, 115, 2226, 1815, 1069, 2704, 999, 1001, 997,
	1068, 1000, 986, 985, 995, 996, 988, 989, 990, 991,
	992, 993, 994, 987, 1067, 2562, 2223, 1066, 1697, 972,
	973, 974, 971, 1065, 1064, 1063, 1062, 1061, 2663, 1060,
	2658, 2662, 2668, 453, 1059, 2672, 2673, 2667, 1058, 1057,
	1056, 2683, 972, 973, 974, 971, 1055, 2665, 3245, 1054,
	1053, 1052, 2194, 1051, 1050, 1046, 2687, 2636, 3115, 1229,
	2623, 1045, 2674, 1044, 2690, 2691, 2692, 2723, 972, 973,
	974, 971, 1041, 2624, 2725, 2699, 1034, 2686, 1033, 1031,
	892, 888, 889, 890, 891, 1030, 2199, 1029, 2198, 2197,
	2195, 1028, 1027, 806, 2259, 804, 1026, 1025, 1024, 115,
	806, 986, 985, 995, 996, 988, 989, 990, 991, 992,
	993, 994, 987, 2719, 115, 1023, 115, 1022, 2718, 2222,
	2728, 1021, 3113, 2221, 2757, 1020, 1015, 2721, 1014, 937,
	894, 2716, 2763, 907, 2215, 3111, 2733, 3109, 2717, 2679,
	2680, 2816, 2081, 1659, 2778, 972, 973, 974, 971, 972,
	973, 974, 971, 3200, 2196, 1964, 2206, 1945, 907, 925,
	972, 973, 974, 971, 3160, 2730, 2184, 2630, 2682, 2274,
	2109, 907, 1746, 936, 2685, 2423, 2347, 2348, 2684, 2732,
	2424, 907, 972, 973, 974, 971, 1218, 2420, 2419, 1123,
	2362, 2363, 972, 973, 974, 971, 3276, 2156, 2748, 806,
	2421, 2425, 1523, 2073, 2074, 2422, 907, 2150, 450, 2780,
	1497, 1403, 1544, 1545, 2398, 1216, 1539, 1540, 1541, 2830,
	2813, 1497, 100, 2585, 2843, 2241, 54, 2845, 2626, 2777,
	2627, 2806, 181, 2776, 2765, 2851, 2848, 972, 973, 974,
	971, 2850, 2021, 2849, 2826, 907, 53, 2343, 2840, 1633,
	2820, 2560, 2822, 2825, 2344, 2345, 2346, 806, 2550, 2551,
	2828, 454, 1265, 2145, 2779, 1873, 1874, 2876, 2064, 2832,
	2782, 2175, 2836, 2783, 2834, 1075, 2837, 2839, 455, 2841,
	2784, 2842, 456, 1297, 907, 1218, 1218, 2200, 2201, 1934,
	907, 1708, 2847, 2823, 931, 3079, 2600, 2561, 2914, 2312,
	2914, 2254, 457, 2336, 1954, 2069, 2072, 2073, 2074, 2070,
	1548, 2071, 2075, 1514, 1216, 2902, 2863, 3173, 2900, 3043,
	2853, 2655, 2734, 1448, 1447, 1218, 1087, 1088, 2414, 2061,
	2929, 2877, 1085, 1086, 2879, 2057, 2905, 1083, 1084, 1081,
	1082, 1644, 1180, 453, 1179, 907, 907, 963, 2689, 907,
	907, 2107, 1766, 1134, 2902, 1077, 3242, 2906, 3146, 3131,
	3129, 2760, 3090, 3069, 2965, 2918, 2917, 2414, 3068, 3066,
	2964, 2780, 2959, 3058, 2975, 1550, 2974, 2972, 2813, 2951,
	2952, 2927, 2931, 2960, 2961, 2976, 2977, 2859, 2729, 2806,
	2069, 2072, 2073, 2074, 2070, 2713, 2071, 2075, 2712, 2696,
	115, 115, 804, 2697, 2008, 1080, 2898, 2455, 1552, 3006,
	2491, 3204, 3203, 676, 1947, 1822, 922, 2969, 3203, 3204,
	2945, 2714, 2447, 2999, 2968, 1149, 2925, 2926, 62, 2970,
	677, 678, 679, 680, 2, 676, 1195, 2950, 2090, 2763,
	168, 3, 1691, 1222, 3018, 3026, 1, 1505, 681, 2432,
	2433, 2688, 2435, 1784, 2994, 2403, 2055, 3004, 2998, 1935,
	2581, 1124, 722, 1454, 1322, 823, 2869, 2898, 2898, 916,
	1319, 2898, 2898, 1003, 915, 913, 1405, 572, 3243, 1749,
	2394, 2368, 2971, 3172, 3210, 3020, 3021, 3019, 3027, 3022,
	3029, 3123, 3028, 907, 3017, 3175, 1335, 1218, 556, 3037,
	3060, 2985, 3127, 2987, 2865, 1789, 806, 968, 2477, 744,
	609, 583, 1032, 1305, 3042, 985, 995, 996, 988, 989,
	990, 991, 992, 993, 994, 987, 1216, 3051, 1298, 2530,
	3052, 986, 985, 995, 996, 988, 989, 990, 991, 992,
	993, 994, 987, 825, 582, 806, 3074, 907, 1019, 2747,
	2264, 2450, 3030, 822, 745, 3065, 3063, 3091, 1733, 2983,
	1266, 1270, 2919, 2769, 2606, 732, 2291, 3286, 3275, 3257,
	3240, 3086, 3151, 3271, 3190, 3226, 2872, 907, 2870, 2871,
	3082, 3219, 3085, 3147, 1218, 493, 3100, 3118, 3121, 1670,
	439, 787, 3093, 2963, 1745, 494, 1963, 3139, 3045, 703,
	3101, 1944, 704, 3108, 3110, 3112, 3114, 705, 2280, 1079,
	3122, 3107, 2279, 1216, 3098, 2898, 1374, 3117, 3130, 977,
	3132, 3133, 3128, 1218, 3126, 1391, 2546, 2547, 1012, 532,
	1811, 2261, 2801, 3156, 731, 2444, 61, 60, 59, 58,
	1715, 3145, 189, 574, 770, 188, 2893, 3120, 3177, 554,
	553, 552, 1216, 551, 550, 3179, 3153, 2068, 2066, 2065,
	1654, 1653, 1713, 2334, 3165, 2328, 3166, 3178, 3167, 2898,
	3168, 2004, 2009, 3169, 1586, 3157, 3104, 907, 3105, 2942,
	2378, 1538, 2000, 3183, 1603, 3074, 2350, 3184, 1600, 1599,
	2342, 2938, 2932, 1630, 2761, 2913, 2785, 2786, 2792, 2898,
	1432, 1953, 3209, 848, 3198, 844, 846, 3201, 3199, 3193,
	3195, 847, 845, 2192, 2188, 3212, 1981, 2595, 3217, 1887,
	907, 3205, 3206, 3207, 3208, 1886, 1884, 772, 3218, 1883,
	771, 1097, 3222, 3005, 3224, 1227, 2731, 1894, 1892, 2681,
	459, 2677, 1757, 1502, 2240, 3179, 3238, 1655, 2754, 2755,
	2756, 3234, 1651, 1946, 907, 2880, 907, 3178, 1543, 696,
	3237, 1432, 3244, 1942, 3246, 98, 757, 115, 3249, 146,
	48, 89, 88, 97, 733, 144, 47, 3212, 907, 3253,
	173, 3255, 172, 3260, 175, 174, 3264, 3267, 171, 2124,
	3270, 2125, 164, 51, 156, 132, 170, 1254, 169, 3188,
	2916, 735, 670, 38, 37, 3274, 33, 3281, 12, 11,
	157, 3285, 34, 3284, 21, 22, 20, 149, 1326, 3293,
	19, 158, 25, 31, 30, 3281, 3298, 3297, 3296, 108,
	3285, 115, 107, 3299, 29, 115, 106, 105, 104, 103,
	113, 102, 1358, 28, 18, 42, 115, 41, 40, 9,
	96, 94, 2528, 27, 95, 101, 115, 1428, 92, 93,
	90, 161, 73, 1425, 756, 755, 72, 1427, 1424, 1426,
	1430, 1431, 71, 86, 85, 1429, 1358, 84, 1358, 83,
	82, 754, 81, 79, 80, 743, 70, 69, 68, 67,
	66, 91, 730, 77, 87, 78, 76, 75, 74, 65,
	1358, 64, 63, 734, 765, 986, 985, 995, 996, 988,
	989, 990, 991, 992, 993, 994, 987, 130, 1428, 2181,
	128, 2909, 2910, 129, 1425, 127, 126, 761, 1427, 1424,
	1426, 1430, 1431, 125, 124, 123, 1429, 118, 119, 122,
	120, 121, 1809, 986, 985, 995, 996, 988, 989, 990,
	991, 992, 993, 994, 987, 43, 44, 45, 46, 140,
	139, 141, 143, 762, 766, 145, 986, 985, 995, 996,
	988, 989, 990, 991, 992, 993, 994, 987, 142, 137,
	135, 751, 138, 749, 753, 769, 136, 2966, 134, 750,
	747, 746, 56, 752, 737, 738, 736, 739, 740, 741,
	742, 17, 767, 24, 768, 4, 0, 131, 155, 162,
	0, 99, 0, 0, 0, 763, 764, 1435, 1436, 1437,
	1438, 1439, 1440, 1433, 1434, 0, 0, 0, 0, 154,
	148, 147, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1435, 1436,
	1437, 1438, 1439, 1440, 1433, 1434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 151, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 1658, 3053, 0, 0, 0, 758,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 153, 0, 110,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3092, 0, 0, 0, 0,
	0, 115, 0, 0, 115, 115, 0, 115, 0, 0,
	0, 3102, 0, 0, 0, 0, 111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 50, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 590, 0, 0, 804, 0, 0, 0, 0,
	0, 333, 804, 0, 0, 0, 0, 0, 0, 0,
	0, 115, 0, 0, 546, 0, 0, 0, 276, 0,
	0, 303, 0, 0, 0, 0, 52, 0, 0, 0,
	0, 0, 0, 0, 434, 0, 435, 0, 0, 581,
	0, 0, 362, 317, 0, 0, 0, 0, 641, 649,
	0, 0, 0, 0, 0, 0, 0, 0, 3185, 0,
	539, 0, 133, 571, 618, 617, 558, 568, 0, 0,
	254, 187, 436, 0, 437, 559, 0, 567, 560, 564,
	563, 561, 562, 0, 633, 0, 0, 1003, 0, 0,
	0, 530, 543, 0, 547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 540, 541,
	0, 112, 39, 0, 591, 0, 542, 0, 49, 586,
	565, 569, 116, 117, 0, 0, 245, 367, 383, 255,
	358, 396, 260, 365, 250, 332, 355, 0, 0, 247,
	381, 364, 314, 295, 296, 246, 0, 350, 274, 287,
	271, 330, 566, 589, 593, 270, 655, 587, 391, 249,
	0, 390, 329, 377, 382, 315, 309, 248, 379, 313,
	308, 299, 278, 656, 300, 301, 291, 341, 307, 342,
	292, 319, 318, 320, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 584, 0, 0, 0, 393, 0, 0,
	639, 0, 0, 0, 366, 0, 0, 302, 0, 0,
	0, 588, 0, 353, 335, 652, 531, 0, 351, 305,
	378, 343, 384, 368, 392, 347, 344, 240, 369, 273,
	316, 251, 253, 268, 275, 277, 279, 280, 325, 326,
	338, 357, 370, 371, 372, 272, 261, 352, 262, 289,
	263, 241, 265, 264, 266, 359, 267, 243, 339, 376,
	0, 285, 348, 312, 244, 311, 340, 375, 374, 252,
	400, 406, 407, 0, 0, 412, 0, 0, 0, 420,
	425, 426, 427, 429, 430, 431, 432, 0, 0, 0,
	0, 414, 0, 0, 0, 1456, 1455, 1457, 405, 283,
	237, 238, 445, 637, 331, 0, 0, 0, 0, 651,
	632, 634, 635, 638, 642, 643, 644, 645, 646, 648,
	650, 654, 444, 0, 0, 0, 0, 0, 443, 337,
	2084, 356, 0, 0, 972, 973, 974, 971, 0, 0,
	0, 0, 0, 0, 363, 386, 398, 415, 418, 0,
	0, 0, 0, 242, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 653, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 592, 0, 0, 321, 322, 323, 324,
	640, 0, 259, 416, 346, 0, 0, 0, 1658, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 410, 411, 282, 288, 428, 290, 258, 336,
	284, 395, 297, 1432, 421, 0, 422, 0, 0, 0,
	0, 328, 293, 294, 360, 298, 306, 349, 394, 334,
	354, 256, 385, 361, 310, 0, 0, 662, 636, 661,
	663, 664, 660, 665, 666, 647, 549, 0, 596, 658,
	657, 659, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 236, 0, 239, 0,
	304, 0, 345, 281, 0, 0, 625, 602, 603, 604,
	548, 605, 599, 600, 601, 626, 594, 622, 623, 573,
	597, 606, 621, 607, 624, 627, 628, 667, 668, 613,
	669, 610, 629, 620, 619, 608, 595, 630, 631, 580,
	575, 611, 612, 598, 614, 615, 616, 576, 577, 578,
	579, 0, 0, 0, 401, 402, 403, 424, 387, 0,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 446, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1428, 0, 0, 0, 0, 0, 1425, 0, 0, 0,
	1427, 1424, 1426, 1430, 1431, 0, 0, 0, 1429, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	51, 156, 132, 0, 1631, 0, 0, 0, 0, 1593,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 149, 0, 0, 0, 158, 0,
	0, 0, 0, 115, 0, 0, 0, 0, 1633, 1602,
	0, 0, 0, 0, 0, 0, 0, 113, 1634, 1635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 101, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 1601, 0, 0, 0, 0, 0,
	0, 0, 504, 503, 510, 500, 0, 0, 0, 1608,
	0, 0, 0, 0, 507, 508, 0, 509, 513, 0,
	0, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 0, 0, 0, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1435, 1436, 1437, 1438, 1439, 1440, 1433, 1434, 0, 1658,
	1658, 1658, 1658, 0, 118, 119, 0, 120, 121, 0,
	0, 1658, 0, 0, 522, 0, 1624, 524, 0, 0,
	0, 0, 523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 155, 162, 0, 99, 0,
	0, 0, 115, 0, 0, 0, 1592, 1594, 1591, 115,
	1588, 0, 0, 0, 0, 1612, 154, 148, 147, 0,
	0, 0, 0, 57, 0, 0, 1618, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1606, 1640, 0, 0,
	1607, 1609, 1611, 0, 1613, 1614, 1615, 1619, 1620, 1621,
	1623, 1626, 1627, 1628, 0, 0, 0, 0, 0, 0,
	0, 1616, 1625, 1617, 0, 0, 0, 496, 498, 497,
	0, 0, 0, 1596, 150, 151, 152, 502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 0, 1632, 521, 0, 115, 0,
	159, 0, 0, 499, 0, 0, 0, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 1589, 1590, 0, 0,
	109, 0, 0, 0, 153, 0, 110, 0, 0, 0,
	0, 0, 0, 0, 1629, 0, 0, 0, 0, 0,
	0, 1658, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1605, 0, 0, 0, 0, 115, 0, 1604, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1622, 111, 0, 0, 0, 0, 0, 0,
	0, 1610, 0, 0, 50, 0, 0, 0, 0, 0,
	0, 0, 0, 1637, 1636, 0, 0, 501, 505, 511,
	0, 512, 514, 0, 0, 515, 516, 517, 0, 0,
	519, 520, 0, 0, 0, 0, 0, 590, 0, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 52, 0, 0, 0, 0, 0, 546,
	0, 0, 0, 276, 1498, 1598, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 435, 0, 0, 581, 0, 0, 362, 317, 133,
	0, 0, 0, 641, 649, 0, 0, 0, 0, 0,
	1639, 0, 1682, 1638, 0, 539, 0, 0, 571, 618,
	617, 558, 568, 0, 0, 254, 187, 436, 0, 437,
	559, 0, 567, 560, 564, 563, 561, 562, 0, 633,
	0, 0, 0, 0, 0, 0, 530, 543, 0, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 39,
	0, 0, 0, 0, 0, 49, 5, 0, 0, 116,
	117, 0, 0, 540, 541, 0, 0, 0, 0, 591,
	0, 542, 0, 0, 1683, 565, 569, 0, 0, 0,
	0, 245, 367, 383, 255, 358, 396, 260, 365, 250,
	332, 355, 0, 0, 247, 381, 364, 314, 295, 296,
	246, 0, 350, 274, 287, 271, 330, 566, 589, 593,
	270, 655, 587, 391, 249, 115, 390, 329, 377, 382,
	315, 309, 248, 379, 313, 308, 299, 278, 656, 300,
	301, 291, 341, 307, 342, 292, 319, 318, 320, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 0, 0, 0, 584, 0,
	0, 0, 393, 0, 0, 639, 1658, 0, 0, 366,
	0, 0, 302, 0, 0, 0, 588, 0, 353, 335,
	652, 531, 0, 351, 305, 378, 343, 384, 368, 392,
	347, 344, 240, 369, 273, 316, 251, 253, 268, 275,
	277, 279, 280, 325, 326, 338, 357, 370, 371, 372,
	272, 261, 352, 262, 289, 263, 241, 265, 264, 266,
	359, 267, 243, 339, 376, 0, 285, 348, 312, 244,
	311, 340, 375, 374, 252, 400, 406, 407, 0, 0,
	412, 0, 0, 0, 420, 425, 426, 427, 429, 430,
	431, 432, 0, 0, 0, 115, 414, 0, 0, 0,
	0, 0, 0, 405, 283, 237, 238, 445, 637, 331,
	0, 0, 0, 0, 651, 632, 634, 635, 638, 642,
	643, 644, 645, 646, 648, 650, 654, 444, 0, 0,
	0, 0, 0, 443, 337, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	386, 398, 415, 418, 0, 0, 0, 0, 242, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 653, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 592, 0,
	0, 321, 322, 323, 324, 640, 0, 259, 416, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 282,
	288, 428, 290, 258, 336, 284, 395, 297, 0, 421,
	0, 422, 0, 0, 0, 0, 328, 293, 294, 360,
	298, 306, 349, 394, 334, 354, 256, 385, 361, 310,
	0, 0, 662, 636, 661, 663, 664, 660, 665, 666,
	647, 549, 0, 596, 658, 657, 659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 236, 0, 239, 0, 304, 0, 345, 281, 0,
	0, 625, 602, 603, 604, 548, 605, 599, 600, 601,
	626, 594, 622, 623, 573, 597, 606, 621, 607, 624,
	627, 628, 667, 668, 613, 669, 610, 629, 620, 619,
	608, 595, 630, 631, 580, 575, 611, 612, 598, 614,
	615, 616, 576, 577, 578, 579, 164, 590, 0, 401,
	402, 403, 424, 387, 0, 442, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 546,
	0, 0, 0, 276, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 435, 0, 0, 1006, 0, 0, 362, 317, 0,
	0, 0, 0, 641, 649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 539, 0, 0, 571, 618,
	617, 558, 568, 0, 0, 254, 187, 436, 0, 437,
	559, 0, 567, 560, 564, 563, 561, 562, 0, 633,
	0, 0, 0, 0, 0, 0, 530, 543, 0, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 540, 541, 0, 0, 0, 0, 591,
	0, 542, 0, 0, 586, 565, 569, 0, 0, 0,
	0, 245, 367, 383, 255, 358, 396, 260, 365, 250,
	332, 355, 0, 0, 247, 381, 364, 314, 295, 296,
	246, 0, 350, 274, 287, 271, 330, 566, 589, 593,
	270, 655, 587, 391, 249, 0, 390, 329, 377, 382,
	315, 309, 248, 379, 313, 308, 299, 278, 656, 300,
	301, 291, 341, 307, 342, 292, 319, 318, 320, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 584, 0,
	0, 0, 393, 0, 0, 639, 0, 0, 0, 366,
	0, 0, 302, 0, 0, 0, 588, 0, 353, 335,
	652, 531, 0, 351, 305, 378, 343, 384, 368, 392,
	347, 344, 240, 369, 273, 316, 251, 253, 268, 275,
	277, 279, 280, 325, 326, 338, 357, 370, 371, 372,
	272, 261, 352, 262, 289, 263, 241, 265, 264, 266,
	359, 267, 243, 339, 376, 0, 285, 348, 312, 244,
	311, 340, 375, 374, 252, 400, 406, 407, 0, 0,
	412, 0, 0, 0, 420, 425, 426, 427, 429, 430,
	431, 432, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 405, 283, 237, 238, 445, 637, 331,
	0, 0, 0, 0, 651, 632, 634, 635, 638, 642,
	643, 644, 645, 646, 648, 650, 654, 444, 0, 0,
	0, 0, 0, 443, 337, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	386, 398, 415, 418, 0, 0, 0, 0, 242, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 653, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 592, 0,
	0, 321, 322, 323, 324, 640, 0, 259, 416, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 282,
	288, 428, 290, 258, 336, 284, 395, 297, 0, 421,
	0, 422, 0, 0, 0, 0, 328, 293, 294, 360,
	298, 306, 349, 394, 334, 354, 256, 385, 361, 310,
	0, 0, 662, 636, 661, 663, 664, 660, 665, 666,
	647, 549, 0, 596, 658, 657, 659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 236, 0, 239, 0, 304, 133, 345, 281, 0,
	0, 625, 602, 603, 604, 548, 605, 599, 600, 601,
	626, 594, 622, 623, 573, 597, 606, 621, 607, 624,
	627, 628, 667, 668, 613, 669, 610, 629, 620, 619,
	608, 595, 630, 631, 580, 575, 611, 612, 598, 614,
	615, 616, 576, 577, 578, 579, 0, 590, 0, 401,
	402, 403, 424, 387, 0, 442, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 546,
	0, 0, 0, 276, 3254, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 435, 0, 0, 581, 0, 0, 362, 317, 0,
	0, 0, 0, 641, 649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 539, 0, 0, 571, 618,
	617, 558, 568, 0, 0, 254, 187, 436, 0, 437,
	559, 0, 567, 560, 564, 563, 561, 562, 0, 633,
	0, 0, 0, 0, 0, 0, 530, 543, 0, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 540, 541, 0, 0, 0, 0, 591,
	0, 542, 0, 0, 586, 565, 569, 0, 0, 0,
	0, 245, 367, 383, 255, 358, 396, 260, 365, 250,
	332, 355, 0, 0, 247, 381, 364, 314, 295, 296,
	246, 0, 350, 274, 287, 271, 330, 566, 589, 593,
	270, 655, 587, 391, 249, 0, 390, 329, 377, 382,
	315, 309, 248, 379, 313, 308, 299, 278, 656, 300,
	301, 291, 341, 307, 342, 292, 319, 318, 320, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 584, 0,
	0, 0, 393, 0, 0, 639, 0, 0, 0, 366,
	0, 0, 302, 0, 0, 0, 588, 0, 353, 335,
	652, 531, 0, 351, 305, 378, 343, 384, 368, 392,
	347, 344, 240, 369, 273, 316, 251, 253, 268, 275,
	277, 279, 280, 325, 326, 338, 357, 370, 371, 372,
	272, 261, 352, 262, 289, 263, 241, 265, 264, 266,
	359, 267, 243, 339, 376, 0, 285, 348, 312, 244,
	311, 340, 375, 374, 252, 400, 406, 407, 0, 0,
	412, 0, 0, 0, 420, 425, 426, 427, 429, 430,
	431, 432, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 405, 283, 237, 238, 445, 637, 331,
	0, 0, 0, 0, 651, 632, 634, 635, 638, 642,
	643, 644, 645, 646, 648, 650, 654, 444, 0, 0,
	0, 0, 0, 443, 337, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	386, 398, 415, 418, 0, 0, 0, 0, 242, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 653, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 592, 0,
	0, 321, 322, 323, 324, 640, 0, 259, 416, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 282,
	288, 428, 290, 258, 336, 284, 395, 297, 0, 421,
	0, 422, 0, 0, 0, 0, 328, 293, 294, 360,
	298, 306, 349, 394, 334, 354, 256, 385, 361, 310,
	0, 0, 662, 636, 661, 663, 664, 660, 665, 666,
	647, 549, 0, 596, 658, 657, 659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 236, 0, 239, 0, 304, 0, 345, 281, 0,
	0, 625, 602, 603, 604, 548, 605, 599, 600, 601,
	626, 594, 622, 623, 573, 597, 606, 621, 607, 624,
	627, 628, 667, 668, 613, 669, 610, 629, 620, 619,
	608, 595, 630, 631, 580, 575, 611, 612, 598, 614,
	615, 616, 576, 577, 578, 579, 0, 590, 0, 401,
	402, 403, 424, 387, 0, 442, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 546,
	0, 0, 0, 276, 1498, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 435, 0, 0, 581, 0, 0, 362, 317, 0,
	0, 0, 0, 641, 649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 539, 0, 0, 571, 618,
	617, 558, 568, 0, 0, 254, 187, 436, 0, 437,
	559, 0, 567, 560, 564, 563, 561, 562, 0, 633,
	0, 0, 0, 0, 0, 0, 530, 543, 0, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 540, 541, 0, 0, 0, 0, 591,
	0, 542, 0, 0, 586, 565, 569, 0, 0, 0,
	0, 245, 367, 383, 255, 358, 396, 260, 365, 250,
	332, 355, 0, 0, 247, 381, 364, 314, 295, 296,
	246, 0, 350, 274, 287, 271, 330, 566, 589, 593,
	270, 655, 587, 391, 249, 0, 390, 329, 377, 382,
	315, 309, 248, 379, 313, 308, 299, 278, 656, 300,
	301, 291, 341, 307, 342, 292, 319, 318, 320, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 584, 0,
	0, 0, 393, 0, 0, 639, 0, 0, 0, 366,
	0, 0, 302, 0, 0, 0, 588, 0, 353, 335,
	652, 531, 0, 351, 305, 378, 343, 384, 368, 392,
	347, 344, 240, 369, 273, 316, 251, 253, 268, 275,
	277, 279, 280, 325, 326, 338, 357, 370, 371, 372,
	272, 261, 352, 262, 289, 263, 241, 265, 264, 266,
	359, 267, 243, 339, 376, 0, 285, 348, 312, 244,
	311, 340, 375, 374, 252, 400, 406, 407, 0, 0,
	412, 0, 0, 0, 420, 425, 426, 427, 429, 430,
	431, 432, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 405, 283, 237, 238, 445, 637, 331,
	0, 0, 0, 0, 651, 632, 634, 635, 638, 642,
	643, 644, 645, 646, 648, 650, 654, 444, 0, 0,
	0, 0, 0, 443, 337, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	386, 398, 415, 418, 0, 0, 0, 0, 242, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 653, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 592, 0,
	0, 321, 322, 323, 324, 640, 0, 259, 416, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 282,
	288, 428, 290, 258, 336, 284, 395, 297, 0, 421,
	0, 422, 0, 0, 0, 0, 328, 293, 294, 360,
	298, 306, 349, 394, 334, 354, 256, 385, 361, 310,
	0, 0, 662, 636, 661, 663, 664, 660, 665, 666,
	647, 549, 0, 596, 658, 657, 659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 236, 0, 239, 0, 304, 0, 345, 281, 0,
	0, 625, 602, 603, 604, 548, 605, 599, 600, 601,
	626, 594, 622, 623, 573, 597, 606, 621, 607, 624,
	627, 628, 667, 668, 613, 669, 610, 629, 620, 619,
	608, 595, 630, 631, 580, 575, 611, 612, 598, 614,
	615, 616, 576, 577, 578, 579, 0, 590, 0, 401,
	402, 403, 424, 387, 0, 442, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 546,
	0, 0, 0, 276, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 435, 0, 0, 581, 0, 0, 362, 317, 0,
	0, 0, 0, 641, 649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 539, 0, 0, 571, 618,
	617, 558, 568, 0, 0, 254, 187, 436, 0, 437,
	559, 0, 567, 560, 564, 563, 561, 562, 0, 633,
	0, 0, 0, 0, 0, 0, 530, 543, 0, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 540, 541, 1249, 0, 0, 0, 591,
	0, 542, 0, 0, 586, 565, 569, 0, 0, 0,
	0, 245, 367, 383, 255, 358, 396, 260, 365, 250,
	332, 355, 0, 0, 247, 381, 364, 314, 295, 296,
	246, 0, 350, 274, 287, 271, 330, 566, 589, 593,
	270, 655, 587, 391, 249, 0, 390, 329, 377, 382,
	315, 309, 248, 379, 313, 308, 299, 278, 656, 300,
	301, 291, 341, 307, 342, 292, 319, 318, 320, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 584, 0,
	0, 0, 393, 0, 0, 639, 0, 0, 0, 366,
	0, 0, 302, 0, 0, 0, 588, 0, 353, 335,
	652, 531, 0, 351, 305, 378, 343, 384, 368, 392,
	347, 344, 240, 369, 273, 316, 251, 253, 268, 275,
	277, 279, 280, 325, 326, 338, 357, 370, 371, 372,
	272, 261, 352, 262, 289, 263, 241, 265, 264, 266,
	359, 267, 243, 339, 376, 0, 285, 348, 312, 244,
	311, 340, 375, 374, 252, 400, 406, 407, 0, 0,
	412, 0, 0, 0, 420, 425, 426, 427, 429, 430,
	431, 432, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 405, 283, 237, 238, 445, 637, 331,
	0, 0, 0, 0, 651, 632, 634, 635, 638, 642,
	643, 644, 645, 646, 648, 650, 654, 444, 0, 0,
	0, 0, 0, 443, 337, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	386, 398, 415, 418, 0, 0, 0, 0, 242, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 653, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 592, 0,
	0, 321, 322, 323, 324, 640, 0, 259, 416, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 282,
	288, 428, 290, 258, 336, 284, 395, 297, 0, 421,
	0, 422, 0, 0, 0, 0, 328, 293, 294, 360,
	298, 306, 349, 394, 334, 354, 256, 385, 361, 310,
	0, 0, 662, 636, 661, 663, 664, 660, 665, 666,
	647, 549, 0, 596, 658, 657, 659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 236, 0, 239, 0, 304, 0, 345, 281, 0,
	0, 625, 602, 603, 604, 548, 605, 599, 600, 601,
	626, 594, 622, 623, 573, 597, 606, 621, 607, 624,
	627, 628, 667, 668, 613, 669, 610, 629, 620, 619,
	608, 595, 630, 631, 580, 575, 611, 612, 598, 614,
	615, 616, 576, 577, 578, 579, 0, 0, 0, 401,
	402, 403, 424, 387, 590, 442, 0, 1830, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 446, 438, 0,
	0, 0, 0, 0, 0, 0, 546, 0, 0, 0,
	276, 0, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 434, 0, 435, 0,
	0, 581, 0, 0, 362, 317, 0, 0, 0, 0,
	641, 649, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 539, 0, 0, 571, 618, 617, 558, 568,
	0, 0, 254, 187, 436, 0, 437, 559, 0, 567,
	560, 564, 563, 561, 562, 0, 633, 0, 0, 0,
	0, 0, 0, 530, 543, 0, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 541, 0, 0, 0, 0, 591, 0, 542, 0,
	0, 586, 565, 569, 0, 0, 0, 0, 245, 367,
	383, 255, 358, 396, 260, 365, 250, 332, 355, 0,
	0, 247, 381, 364, 314, 295, 296, 246, 0, 350,
	274, 287, 271, 330, 566, 589, 593, 270, 655, 587,
	391, 249, 0, 390, 329, 377, 382, 315, 309, 248,
	379, 313, 308, 299, 278, 656, 300, 301, 291, 341,
	307, 342, 292, 319, 318, 320, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 584, 0, 0, 0, 393,
	0, 0, 639, 0, 0, 0, 366, 0, 0, 302,
	0, 0, 0, 588, 0, 353, 335, 652, 531, 0,
	351, 305, 378, 343, 384, 368, 392, 347, 344, 240,
	369, 273, 316, 251, 253, 268, 275, 277, 279, 280,
	325, 326, 338, 357, 370, 371, 372, 272, 261, 352,
	262, 289, 263, 241, 265, 264, 266, 359, 267, 243,
	339, 376, 0, 285, 348, 312, 244, 311, 340, 375,
	374, 252, 400, 406, 407, 0, 0, 412, 0, 0,
	0, 420, 425, 426, 427, 429, 430, 431, 432, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	405, 283, 237, 238, 445, 637, 331, 0, 0, 0,
	0, 651, 632, 634, 635, 638, 642, 643, 644, 645,
	646, 648, 650, 654, 444, 0, 0, 0, 0, 0,
	443, 337, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 386, 398, 415,
	418, 0, 0, 0, 0, 242, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 653, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 592, 0, 0, 321, 322,
	323, 324, 640, 0, 259, 416, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 411, 282, 288, 428, 290,
	258, 336, 284, 395, 297, 0, 421, 0, 422, 0,
	0, 0, 0, 328, 293, 294, 360, 298, 306, 349,
	394, 334, 354, 256, 385, 361, 310, 0, 0, 662,
	636, 661, 663, 664, 660, 665, 666, 647, 549, 0,
	596, 658, 657, 659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 236, 0,
	239, 0, 304, 0, 345, 281, 0, 0, 625, 602,
	603, 604, 548, 605, 599, 600, 601, 626, 594, 622,
	623, 573, 597, 606, 621, 607, 624, 627, 628, 667,
	668, 613, 669, 610, 629, 620, 619, 608, 595, 630,
	631, 580, 575, 611, 612, 598, 614, 615, 616, 576,
	577, 578, 579, 0, 590, 0, 401, 402, 403, 424,
	387, 0, 442, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 446, 438, 546, 0, 0, 0,
	276, 0, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 434, 0, 435, 0,
	0, 581, 0, 0, 362, 317, 0, 0, 0, 0,
	641, 649, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 539, 0, 0, 571, 618, 617, 558, 568,
	0, 0, 254, 187, 436, 0, 437, 559, 0, 567,
	560, 564, 563, 561, 562, 0, 633, 0, 0, 0,
	0, 0, 0, 530, 543, 0, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 541, 0, 0, 0, 0, 591, 0, 542, 0,
	0, 586, 565, 569, 0, 0, 0, 0, 245, 367,
	383, 255, 358, 396, 260, 365, 250, 332, 355, 0,
	0, 247, 381, 364, 314, 295, 296, 246, 0, 350,
	274, 287, 271, 330, 566, 589, 593, 270, 655, 587,
	391, 249, 0, 390, 329, 377, 382, 315, 309, 248,
	379, 313, 308, 299, 278, 656, 300, 301, 291, 341,
	307, 342, 292, 319, 318, 320, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 584, 0, 0, 0, 393,
	0, 0, 639, 0, 0, 0, 366, 0, 0, 302,
	0, 0, 0, 588, 0, 353, 335, 652, 531, 0,
	351, 305, 378, 343, 384, 368, 392, 347, 344, 240,
	369, 273, 316, 251, 253, 268, 275, 277, 279, 280,
	325, 326, 338, 357, 370, 371, 372, 272, 261, 352,
	262, 289, 263, 241, 265, 264, 266, 359, 267, 243,
	339, 376, 0, 285, 348, 312, 244, 311, 340, 375,
	374, 252, 400, 406, 407, 0, 0, 412, 0, 0,
	0, 420, 425, 426, 427, 429, 430, 431, 432, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	405, 283, 237, 238, 445, 637, 331, 0, 0, 0,
	0, 651, 632, 634, 635, 638, 642, 643, 644, 645,
	646, 648, 650, 654, 444, 0, 0, 0, 0, 0,
	443, 337, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 386, 398, 415,
	418, 0, 0, 0, 0, 242, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 653, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 592, 0, 0, 321, 322,
	323, 324, 640, 0, 259, 416, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 411, 282, 288, 428, 290,
	258, 336, 284, 395, 297, 0, 421, 0, 422, 0,
	0, 0, 0, 328, 293, 294, 360, 298, 306, 349,
	394, 334, 354, 256, 385, 361, 310, 0, 0, 662,
	636, 661, 663, 664, 660, 665, 666, 647, 549, 0,
	596, 658, 657, 659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 236, 0,
	239, 0, 304, 0, 345, 281, 0, 0, 625, 602,
	603, 604, 548, 605, 599, 600, 601, 626, 594, 622,
	623, 573, 597, 606, 621, 607, 624, 627, 628, 667,
	668, 613, 669, 610, 629, 620, 619, 608, 595, 630,
	631, 580, 575, 611, 612, 598, 614, 615, 616, 576,
	577, 578, 579, 0, 590, 0, 401, 402, 403, 424,
	387, 0, 442, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 1375, 0, 446, 438, 546, 0, 0, 0,
	276, 0, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 434, 0, 435, 0,
	0, 581, 0, 0, 362, 317, 0, 0, 0, 0,
	641, 649, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 539, 0, 0, 571, 618, 617, 558, 568,
	0, 0, 254, 187, 436, 0, 437, 559, 0, 567,
	560, 564, 563, 561, 562, 0, 633, 0, 0, 0,
	0, 0, 0, 0, 543, 0, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 541, 0, 0, 0, 0, 591, 0, 542, 0,
	0, 586, 565, 569, 0, 0, 0, 0, 245, 367,
	383, 255, 358, 396, 260, 365, 250, 332, 355, 0,
	0, 247, 381, 364, 314, 295, 296, 246, 0, 350,
	274, 287, 271, 330, 566, 589, 593, 270, 655, 587,
	391, 249, 0, 390, 329, 377, 382, 315, 309, 248,
	379, 313, 308, 299, 278, 656, 300, 301, 291, 341,
	307, 342, 292, 319, 318, 320, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 584, 0, 0, 0, 393,
	0, 0, 639, 0, 0, 0, 366, 0, 0, 302,
	0, 0, 0, 588, 0, 353, 335, 652, 0, 0,
	351, 305, 378, 343, 384, 368, 392, 347, 344, 240,
	369, 273, 316, 251, 253, 268, 275, 277, 279, 280,
	325, 326, 338, 357, 370, 371, 372, 272, 261, 352,
	262, 289, 263, 241, 265, 264, 266, 359, 267, 243,
	339, 376, 0, 285, 348, 312, 244, 311, 340, 375,
	374, 252, 400, 1376, 1377, 0, 0, 412, 0, 0,
	0, 420, 425, 426, 427, 429, 430, 431, 432, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	405, 283, 237, 238, 445, 637, 331, 0, 0, 0,
	0, 651, 632, 634, 635, 638, 642, 643, 644, 645,
	646, 648, 650, 654, 444, 0, 0, 0, 0, 0,
	443, 337, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 386, 398, 415,
	418, 0, 0, 0, 0, 242, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 653, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 592, 0, 0, 321, 322,
	323, 324, 640, 0, 259, 416, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 411, 282, 288, 428, 290,
	258, 336, 284, 395, 297, 0, 421, 0, 422, 0,
	0, 0, 0, 328, 293, 294, 360, 298, 306, 349,
	394, 334, 354, 256, 385, 361, 310, 0, 0, 662,
	636, 661, 663, 664, 660, 665, 666, 647, 549, 0,
	596, 658, 657, 659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 236, 0,
	239, 0, 304, 0, 345, 281, 0, 0, 625, 602,
	603, 604, 548, 605, 599, 600, 601, 626, 594, 622,
	623, 573, 597, 606, 621, 607, 624, 627, 628, 667,
	668, 613, 669, 610, 629, 620, 619, 608, 595, 630,
	631, 580, 575, 611, 612, 598, 614, 615, 616, 576,
	577, 578, 579, 0, 590, 0, 401, 402, 403, 424,
	387, 0, 442, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 446, 438, 546, 0, 0, 0,
	276, 0, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 434, 0, 435, 0,
	0, 581, 0, 0, 362, 317, 0, 0, 0, 0,
	641, 649, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 571, 618, 617, 558, 568,
	0, 0, 254, 187, 436, 0, 437, 559, 0, 567,
	560, 564, 563, 561, 562, 0, 633, 0, 0, 0,
	0, 0, 0, 530, 543, 0, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 541, 0, 0, 0, 0, 591, 0, 542, 0,
	0, 586, 565, 569, 0, 0, 0, 0, 245, 367,
	383, 255, 358, 396, 260, 365, 250, 332, 355, 0,
	0, 247, 381, 364, 314, 295, 296, 246, 0, 350,
	274, 287, 271, 330, 566, 589, 593, 270, 655, 587,
	391, 249, 0, 390, 329, 377, 382, 315, 309, 248,
	379, 313, 308, 299, 278, 656, 300, 301, 291, 341,
	307, 342, 292, 319, 318, 320, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 584, 0, 0, 0, 393,
	0, 0, 639, 0, 0, 0, 366, 0, 0, 302,
	0, 0, 0, 588, 0, 353, 335, 652, 531, 0,
	351, 305, 378, 343, 384, 368, 392, 347, 344, 240,
	369, 273, 316, 251, 253, 268, 275, 277, 279, 280,
	325, 326, 338, 357, 370, 371, 372, 272, 261, 352,
	262, 289, 263, 241, 265, 264, 266, 359, 267, 243,
	339, 376, 0, 285, 348, 312, 244, 311, 340, 375,
	374, 252, 400, 406, 407, 0, 0, 412, 0, 0,
	0, 420, 425, 426, 427, 429, 430, 431, 432, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	405, 283, 237, 238, 445, 637, 331, 0, 0, 0,
	0, 651, 632, 634, 635, 638, 642, 643, 644, 645,
	646, 648, 650, 654, 444, 0, 0, 0, 0, 0,
	443, 337, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 386, 398, 415,
	418, 0, 0, 0, 0, 242, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 653, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 592, 0, 0, 321, 322,
	323, 324, 640, 0, 259, 416, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 411, 282, 288, 428, 290,
	258, 336, 284, 395, 297, 0, 421, 0, 422, 0,
	0, 0, 0, 328, 293, 294, 360, 298, 306, 349,
	394, 334, 354, 256, 385, 361, 310, 0, 0, 662,
	636, 661, 663, 664, 660, 665, 666, 647, 549, 0,
	596, 658, 657, 659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 236, 0,
	239, 0, 304, 0, 345, 281, 0, 0, 625, 602,
	603, 604, 548, 605, 599, 600, 601, 626, 594, 622,
	623, 573, 597, 606, 621, 607, 624, 627, 628, 667,
	668, 613, 669, 610, 629, 620, 619, 608, 595, 630,
	631, 580, 575, 611, 612, 598, 614, 615, 616, 576,
	577, 578, 579, 0, 590, 0, 401, 402, 403, 424,
	387, 0, 442, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 446, 438, 546, 0, 0, 0,
	276, 0, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 434, 0, 435, 0,
	0, 581, 0, 0, 362, 317, 0, 0, 0, 0,
	641, 649, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 539, 0, 0, 571, 618, 617, 558, 568,
	0, 0, 254, 187, 436, 0, 437, 559, 0, 567,
	560, 564, 563, 561, 562, 0, 633, 0, 0, 0,
	0, 0, 0, 0, 543, 0, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 541, 0, 0, 0, 0, 591, 0, 542, 0,
	0, 586, 565, 569, 0, 0, 0, 0, 245, 367,
	383, 255, 358, 396, 260, 365, 250, 332, 355, 0,
	0, 247, 381, 364, 314, 295, 296, 246, 0, 350,
	274, 287, 271, 330, 566, 589, 593, 270, 655, 587,
	391, 249, 0, 390, 329, 377, 382, 315, 309, 248,
	379, 313, 308, 299, 278, 656, 300, 301, 291, 341,
	307, 342, 292, 319, 318, 320, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 584, 0, 0, 0, 393,
	0, 0, 639, 0, 0, 0, 366, 0, 0, 302,
	0, 0, 0, 588, 0, 353, 335, 652, 0, 0,
	351, 305, 378, 343, 384, 368, 392, 347, 344, 240,
	369, 273, 316, 251, 253, 268, 275, 277, 279, 280,
	325, 326, 338, 357, 370, 371, 372, 272, 261, 352,
	262, 289, 263, 241, 265, 264, 266, 359, 267, 243,
	339, 376, 0, 285, 348, 312, 244, 311, 340, 375,
	374, 252, 400, 406, 407, 0, 0, 412, 0, 0,
	0, 420, 425, 426, 427, 429, 430, 431, 432, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	405, 283, 237, 238, 445, 637, 331, 0, 0, 0,
	0, 651, 632, 634, 635, 638, 642, 643, 644, 645,
	646, 648, 650, 654, 444, 0, 0, 0, 0, 0,
	443, 337, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 386, 398, 415,
	418, 0, 0, 0, 0, 242, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 653, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 592, 0, 0, 321, 322,
	323, 324, 640, 0, 259, 416, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 411, 282, 288, 428, 290,
	258, 336, 284, 395, 297, 0, 421, 0, 422, 0,
	0, 0, 0, 328, 293, 294, 360, 298, 306, 349,
	394, 334, 354, 256, 385, 361, 310, 0, 0, 662,
	636, 661, 663, 664, 660, 665, 666, 647, 549, 0,
	596, 658, 657, 659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 236, 0,
	239, 0, 304, 0, 345, 281, 0, 0, 625, 602,
	603, 604, 548, 605, 599, 600, 601, 626, 594, 622,
	623, 573, 597, 606, 621, 607, 624, 627, 628, 667,
	668, 613, 669, 610, 629, 620, 619, 608, 595, 630,
	631, 580, 575, 611, 612, 598, 614, 615, 616, 576,
	577, 578, 579, 0, 0, 0, 401, 402, 403, 424,
	387, 0, 442, 164, 51, 156, 132, 0, 0, 0,
	0, 0, 0, 333, 446, 438, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 149, 0,
	276, 0, 158, 303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 434, 0, 435, 0,
	0, 113, 0, 0, 362, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 101, 0, 0, 0,
	0, 0, 161, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 254, 187, 436, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 367,
	383, 255, 358, 396, 260, 365, 250, 332, 355, 0,
	0, 247, 381, 364, 314, 295, 296, 246, 0, 350,
	274, 287, 271, 330, 0, 380, 408, 270, 399, 0,
	391, 249, 0, 390, 329, 377, 382, 315, 309, 248,
	379, 313, 308, 299, 278, 423, 300, 301, 291, 341,
	307, 342, 292, 319, 318, 320, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 131, 155,
	162, 0, 99, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 179, 0, 0, 0, 366, 0, 0, 302,
	154, 148, 147, 409, 0, 353, 335, 57, 0, 0,
	351, 305, 378, 343, 384, 368, 392, 347, 344, 240,
	369, 273, 316, 251, 253, 268, 275, 277, 279, 280,
	325, 326, 338, 357, 370, 371, 372, 272, 261, 352,
	262, 289, 263, 241, 265, 264, 266, 359, 267, 243,
	339, 376, 0, 285, 348, 312, 244, 311, 340, 375,
	374, 252, 400, 406, 407, 0, 0, 412, 150, 151,
	152, 420, 425, 426, 427, 429, 430, 431, 432, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	405, 283, 237, 238, 388, 269, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 404,
	182, 0, 0, 433, 190, 0, 0, 0, 153, 0,
	191, 337, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 386, 398, 415,
	418, 0, 0, 0, 0, 242, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 413, 0, 0, 321, 322,
	323, 324, 286, 0, 259, 416, 346, 111, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 50, 0,
	0, 0, 0, 0, 410, 411, 282, 288, 428, 290,
	258, 336, 284, 395, 297, 0, 421, 0, 422, 0,
	0, 0, 0, 328, 293, 294, 360, 298, 306, 349,
	394, 334, 354, 256, 385, 361, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 236, 0,
	239, 0, 304, 133, 345, 281, 0, 0, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 0, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 0, 0, 0, 232,
	233, 234, 235, 0, 0, 0, 401, 402, 403, 424,
	387, 333, 192, 39, 180, 183, 185, 184, 0, 49,
	5, 0, 0, 116, 193, 438, 0, 0, 276, 0,
	0, 303, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 434, 0, 435, 0, 0, 0,
	0, 0, 362, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1038, 0, 0, 186, 0, 0, 558, 568, 0, 0,
	254, 187, 436, 0, 437, 559, 0, 567, 560, 564,
	563, 561, 562, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	565, 0, 0, 0, 0, 0, 245, 367, 383, 255,
	358, 396, 260, 365, 250, 332, 355, 0, 0, 247,
	381, 364, 314, 295, 296, 246, 0, 350, 274, 287,
	271, 330, 566, 380, 408, 270, 399, 0, 391, 249,
	0, 390, 329, 377, 382, 315, 309, 248, 379, 313,
	308, 299, 278, 423, 300, 301, 291, 341, 307, 342,
	292, 319, 318, 320, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 0, 0, 0, 366, 0, 0, 302, 0, 0,
	0, 409, 0, 353, 335, 0, 0, 0, 351, 305,
	378, 343, 384, 368, 392, 347, 344, 240, 369, 273,
	316, 251, 253, 268, 275, 277, 279, 280, 325, 326,
	338, 357, 370, 371, 372, 272, 261, 352, 262, 289,
	263, 241, 265, 264, 266, 359, 267, 243, 339, 376,
	0, 285, 348, 312, 244, 311, 340, 375, 374, 252,
	400, 406, 407, 0, 0, 412, 0, 0, 0, 420,
	425, 426, 427, 429, 430, 431, 432, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 405, 283,
	237, 238, 445, 269, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 404, 0, 0,
	0, 433, 444, 0, 0, 0, 0, 0, 443, 337,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 386, 398, 415, 418, 0,
	0, 0, 0, 242, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 413, 0, 0, 321, 322, 323, 324,
	286, 0, 259, 416, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 410, 411, 282, 288, 428, 290, 258, 336,
	284, 395, 297, 0, 421, 0, 422, 0, 0, 0,
	0, 328, 293, 294, 360, 298, 306, 349, 394, 334,
	354, 256, 385, 361, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 236, 0, 239, 0,
	304, 0, 345, 281, 0, 0, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 0,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 0, 0, 0, 232, 233, 234,
	235, 0, 0, 0, 401, 402, 403, 424, 387, 0,
	442, 0, 0, 0, 164, 51, 156, 132, 0, 0,
	0, 0, 446, 438, 333, 463, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 0, 303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 434, 0, 435,
	0, 0, 0, 0, 0, 362, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 254, 187, 436, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	367, 383, 255, 358, 396, 260, 365, 250, 332, 355,
	0, 0, 247, 381, 364, 314, 295, 296, 246, 0,
	350, 274, 287, 271, 330, 0, 380, 408, 270, 399,
	0, 391, 249, 0, 390, 329, 377, 382, 315, 309,
	248, 379, 313, 308, 299, 278, 423, 300, 301, 291,
	341, 307, 342, 292, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 409, 0, 353, 335, 0, 0,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	240, 369, 273, 316, 251, 253, 268, 275, 277, 279,
	280, 325, 326, 338, 357, 370, 371, 372, 272, 261,
	352, 262, 289, 263, 241, 265, 264, 266, 359, 267,
	243, 339, 376, 0, 285, 348, 312, 244, 311, 340,
	375, 374, 252, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 283, 237, 238, 445, 269, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	404, 0, 0, 0, 433, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 242, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 413, 0, 0, 321,
	322, 323, 324, 464, 466, 259, 416, 346, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 410, 411, 282, 288, 428,
	290, 258, 336, 284, 395, 297, 0, 421, 0, 422,
	0, 0, 0, 0, 328, 293, 294, 360, 298, 306,
	349, 394, 334, 354, 256, 385, 361, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 236,
	0, 239, 0, 304, 133, 345, 281, 0, 0, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 0, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 333, 0, 0,
	232, 233, 234, 235, 0, 866, 0, 401, 402, 403,
	424, 387, 0, 442, 276, 0, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 446, 438, 0, 0, 0,
	434, 0, 435, 0, 0, 0, 0, 0, 362, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 254, 187, 436, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 852, 0, 0, 0, 0,
	0, 0, 245, 367, 383, 255, 358, 396, 260, 365,
	250, 332, 355, 0, 0, 1918, 1920, 1921, 1922, 1923,
	1924, 1925, 0, 1930, 1926, 1927, 1928, 1929, 0, 1913,
	1914, 1915, 1916, 850, 1897, 1919, 0, 1898, 329, 1899,
	1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1910, 1911,
	1908, 1909, 1917, 341, 307, 342, 292, 319, 318, 320,
	877, 879, 881, 883, 886, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 0, 0, 0,
	366, 0, 0, 302, 0, 0, 0, 1912, 0, 353,
	335, 0, 0, 0, 351, 305, 378, 343, 384, 368,
	392, 347, 344, 240, 369, 273, 316, 251, 253, 268,
	275, 277, 279, 280, 325, 326, 338, 357, 370, 371,
	372, 272, 261, 352, 262, 289, 263, 241, 265, 264,
	266, 359, 267, 243, 339, 376, 0, 285, 348, 312,
	244, 311, 340, 375, 374, 252, 400, 406, 407, 0,
	0, 412, 0, 0, 0, 420, 425, 426, 427, 429,
	430, 431, 432, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 405, 283, 237, 238, 445, 269,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 404, 0, 0, 0, 433, 444, 0,
	0, 0, 0, 0, 443, 337, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 386, 398, 415, 418, 0, 0, 0, 0, 242,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 413,
	0, 0, 321, 322, 323, 324, 286, 0, 259, 416,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 411,
	282, 288, 428, 290, 258, 336, 284, 395, 297, 0,
	421, 0, 422, 0, 0, 0, 0, 328, 293, 294,
	360, 298, 306, 349, 394, 334, 354, 256, 385, 361,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 236, 0, 239, 876, 304, 0, 345, 281,
	0, 0, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 0, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	333, 0, 0, 232, 233, 234, 235, 0, 0, 0,
	401, 402, 403, 424, 387, 0, 442, 276, 0, 0,
	303, 0, 0, 0, 0, 0, 0, 0, 446, 438,
	0, 0, 0, 434, 0, 435, 0, 0, 0, 0,
	0, 362, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 254,
	187, 436, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 1992, 1995, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 367, 383, 255, 358,
	396, 260, 365, 250, 332, 355, 0, 0, 247, 381,
	364, 314, 295, 296, 246, 0, 350, 274, 287, 271,
	330, 0, 380, 408, 270, 399, 0, 391, 249, 0,
	390, 329, 377, 382, 315, 309, 248, 379, 313, 308,
	299, 278, 423, 300, 301, 291, 341, 307, 342, 292,
	319, 318, 320, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1996, 393, 0, 0, 0,
	1991, 0, 1990, 366, 1988, 1993, 302, 0, 0, 0,
	409, 0, 353, 335, 0, 0, 0, 351, 305, 378,
	343, 384, 368, 392, 347, 344, 240, 369, 273, 316,
	251, 253, 268, 275, 277, 279, 280, 325, 326, 338,
	357, 370, 371, 372, 272, 261, 352, 262, 289, 263,
	241, 265, 264, 266, 359, 267, 243, 339, 376, 1994,
	285, 348, 312, 244, 311, 340, 375, 374, 252, 400,
	406, 407, 0, 0, 412, 0, 0, 0, 420, 425,
	426, 427, 429, 430, 431, 432, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 405, 283, 237,
	238, 445, 269, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 404, 0, 0, 0,
	433, 444, 0, 0, 0, 0, 0, 443, 337, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 386, 398, 415, 418, 0, 0,
	0, 0, 242, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 413, 0, 0, 321, 322, 323, 324, 286,
	0, 259, 416, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 410, 411, 282, 288, 428, 290, 258, 336, 284,
	395, 297, 0, 421, 0, 422, 0, 0, 0, 0,
	328, 293, 294, 360, 298, 306, 349, 394, 334, 354,
	256, 385, 361, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 236, 0, 239, 0, 304,
	0, 345, 281, 0, 0, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 0, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 0, 0, 0, 232, 233, 234, 235,
	333, 0, 0, 401, 402, 403, 424, 387, 0, 442,
	0, 0, 1717, 0, 0, 0, 0, 276, 0, 0,
	303, 446, 438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 434, 0, 435, 0, 0, 0, 0,
	0, 362, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 1718, 0, 0, 0, 254,
	187, 436, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 972, 973, 974, 971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 367, 383, 255, 358,
	396, 260, 365, 250, 332, 355, 0, 0, 247, 381,
	364, 314, 295, 296, 246, 0, 350, 274, 287, 271,
	330, 0, 380, 408, 270, 399, 0, 391, 249, 0,
	390, 329, 377, 382, 315, 309, 248, 379, 313, 308,
	299, 278, 423, 300, 301, 291, 341, 307, 342, 292,
	319, 318, 320, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	0, 0, 0, 366, 0, 0, 302, 0, 0, 0,
	409, 0, 353, 335, 0, 0, 0, 351, 305, 378,
	343, 384, 368, 392, 347, 344, 240, 369, 273, 316,
	251, 253, 268, 275, 277, 279, 280, 325, 326, 338,
	357, 370, 371, 372, 272, 261, 352, 262, 289, 263,
	241, 265, 264, 266, 359, 267, 243, 339, 376, 0,
	285, 348, 312, 244, 311, 340, 375, 374, 252, 400,
	406, 407, 0, 0, 412, 0, 0, 0, 420, 425,
	426, 427, 429, 430, 431, 432, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 405, 283, 237,
	238, 445, 269, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 404, 0, 0, 0,
	433, 444, 0, 0, 0, 0, 0, 443, 337, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 386, 398, 415, 418, 0, 0,
	0, 0, 242, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 413, 0, 0, 321, 322, 323, 324, 286,
	0, 259, 416, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 410, 411, 282, 288, 428, 290, 258, 336, 284,
	395, 297, 0, 421, 0, 422, 0, 0, 0, 0,
	328, 293, 294, 360, 298, 306, 349, 394, 334, 354,
	256, 385, 361, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 236, 0, 239, 0, 304,
	0, 345, 281, 0, 0, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 0, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 333, 0, 0, 232, 233, 234, 235,
	0, 0, 0, 401, 402, 403, 424, 387, 0, 442,
	276, 786, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 446, 438, 0, 0, 0, 434, 0, 435, 0,
	0, 0, 0, 0, 362, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 793, 794, 0, 0,
	0, 0, 254, 187, 436, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 797, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 367,
	781, 255, 358, 396, 260, 365, 250, 332, 355, 0,
	0, 247, 381, 364, 314, 295, 296, 246, 0, 350,
	274, 287, 271, 330, 0, 380, 408, 270, 399, 772,
	391, 249, 771, 390, 329, 377, 382, 315, 309, 248,
	379, 313, 308, 299, 278, 423, 300, 301, 291, 341,
	307, 342, 292, 319, 318, 320, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 0, 366, 0, 0, 302,
	0, 0, 0, 409, 0, 353, 335, 0, 0, 0,
	351, 305, 378, 343, 384, 368, 392, 784, 344, 240,
	369, 273, 316, 251, 253, 268, 275, 277, 279, 280,
	325, 326, 338, 357, 370, 371, 372, 272, 261, 352,
	262, 289, 263, 241, 265, 264, 266, 359, 267, 243,
	339, 376, 0, 285, 348, 312, 244, 311, 340, 375,
	374, 252, 400, 406, 407, 0, 0, 412, 0, 0,
	0, 420, 425, 426, 427, 429, 430, 431, 432, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	405, 283, 237, 238, 445, 269, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 404,
	0, 0, 0, 433, 444, 0, 0, 0, 0, 0,
	443, 337, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 386, 398, 415,
	418, 0, 0, 0, 0, 242, 417, 0, 0, 0,
	0, 0, 0, 785, 0, 389, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 788, 0, 0, 321, 322,
	323, 324, 286, 0, 259, 416, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 411, 282, 288, 428, 290,
	258, 336, 284, 395, 297, 0, 421, 0, 422, 0,
	0, 0, 0, 795, 782, 791, 783, 298, 306, 349,
	394, 334, 354, 256, 385, 361, 792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 236, 0,
	239, 0, 304, 0, 345, 281, 0, 0, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 0, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 333, 0, 0, 232,
	233, 234, 235, 0, 0, 0, 401, 402, 403, 424,
	387, 0, 442, 276, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 446, 438, 0, 0, 0, 434,
	0, 435, 0, 0, 0, 0, 0, 362, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 254, 187, 436, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 2011, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 367, 383, 255, 358, 396, 260, 365, 250,
	332, 355, 0, 0, 247, 381, 364, 314, 295, 296,
	246, 0, 350, 274, 287, 271, 330, 0, 380, 408,
	270, 399, 0, 391, 249, 0, 390, 329, 377, 382,
	315, 309, 248, 379, 313, 308, 299, 278, 423, 300,
	301, 291, 341, 307, 342, 292, 319, 318, 320, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2010, 393, 0, 0, 0, 2015, 2013, 0, 366,
	0, 2014, 302, 0, 0, 0, 409, 0, 353, 335,
	0, 0, 0, 351, 305, 378, 343, 384, 368, 392,
	347, 344, 240, 369, 273, 316, 251, 253, 268, 275,
	277, 279, 280, 325, 326, 338, 357, 370, 371, 372,
	272, 261, 352, 262, 289, 263, 241, 265, 264, 266,
	359, 267, 243, 339, 376, 0, 285, 348, 312, 244,
	311, 340, 375, 374, 252, 400, 406, 407, 0, 0,
	412, 0, 0, 0, 420, 425, 426, 427, 429, 430,
	431, 432, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 405, 283, 237, 238, 445, 269, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 404, 0, 0, 0, 433, 444, 0, 0,
	0, 0, 0, 443, 337, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	386, 398, 415, 418, 0, 0, 0, 0, 242, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 413, 0,
	0, 321, 322, 323, 324, 286, 0, 259, 416, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 282,
	288, 428, 290, 258, 336, 284, 395, 297, 0, 421,
	0, 422, 0, 0, 0, 0, 328, 293, 294, 360,
	298, 306, 349, 394, 334, 354, 256, 385, 361, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 236, 0, 239, 0, 304, 0, 345, 281, 0,
	866, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 0, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 0,
	0, 0, 232, 233, 234, 235, 164, 0, 0, 401,
	402, 403, 424, 387, 0, 442, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 0,
	0, 0, 0, 276, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 435, 0, 0, 113, 0, 0, 362, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 1761, 0, 186, 0,
	852, 0, 0, 0, 842, 254, 187, 436, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	874, 878, 880, 882, 884, 885, 887, 0, 892, 888,
	889, 890, 891, 0, 869, 870, 871, 872, 850, 851,
	875, 0, 853, 0, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 865, 867, 863, 864, 873, 0, 0,
	0, 0, 0, 0, 0, 877, 879, 881, 883, 886,
	0, 245, 367, 383, 255, 358, 396, 260, 365, 250,
	332, 355, 0, 0, 247, 381, 364, 314, 295, 296,
	246, 0, 350, 274, 287, 271, 330, 0, 380, 408,
	270, 399, 868, 391, 249, 0, 390, 329, 377, 382,
	315, 309, 248, 379, 313, 308, 299, 278, 423, 300,
	301, 291, 341, 307, 342, 292, 319, 318, 320, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 0, 366,
	0, 0, 302, 0, 0, 0, 409, 0, 353, 335,
	0, 0, 0, 351, 305, 378, 343, 384, 368, 392,
	347, 344, 240, 369, 273, 316, 251, 253, 268, 275,
	277, 279, 280, 325, 326, 338, 357, 370, 371, 372,
	272, 261, 352, 262, 289, 263, 241, 265, 264, 266,
	359, 267, 243, 339, 376, 0, 285, 348, 312, 244,
	311, 340, 375, 374, 252, 400, 406, 407, 0, 0,
	412, 0, 0, 0, 420, 425, 426, 427, 429, 430,
	431, 432, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 405, 283, 237, 238, 445, 269, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 404, 0, 0, 0, 433, 444, 0, 0,
	0, 0, 0, 443, 337, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	386, 398, 415, 418, 0, 0, 0, 0, 242, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 413, 0,
	0, 321, 322, 323, 324, 286, 0, 259, 416, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 282,
	288, 428, 290, 258, 336, 284, 395, 297, 0, 421,
	876, 422, 0, 0, 0, 0, 328, 293, 294, 360,
	298, 306, 349, 394, 334, 354, 256, 385, 361, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 236, 0, 239, 0, 304, 133, 345, 281, 0,
	866, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 0, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 0,
	0, 0, 232, 233, 234, 235, 164, 0, 0, 401,
	402, 403, 424, 387, 0, 442, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 0,
	0, 0, 0, 276, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 435, 0, 0, 113, 0, 0, 362, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 1752, 0, 186, 0,
	852, 0, 0, 0, 0, 254, 187, 436, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	874, 878, 880, 882, 884, 885, 887, 0, 892, 888,
	889, 890, 891, 0, 869, 870, 871, 872, 850, 851,
	875, 0, 853, 0, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 865, 867, 863, 864, 873, 0, 0,
	0, 0, 0, 0, 0, 877, 879, 881, 883, 886,
	0, 245, 367, 383, 255, 358, 396, 260, 365, 250,
	332, 355, 0, 0, 247, 381, 364, 314, 295, 296,
	246, 0, 350, 274, 287, 271, 330, 0, 380, 408,
	270, 399, 868, 391, 249, 0, 390, 329, 377, 382,
	315, 309, 248, 379, 313, 308, 299, 278, 423, 300,
	301, 291, 341, 307, 342, 292, 319, 318, 320, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 0, 366,
	0, 0, 302, 0, 0, 0, 409, 0, 353, 335,
	0, 0, 0, 351, 305, 378, 343, 384, 368, 392,
	347, 344, 240, 369, 273, 316, 251, 253, 268, 275,
	277, 279, 280, 325, 326, 338, 357, 370, 371, 372,
	272, 261, 352, 262, 289, 263, 241, 265, 264, 266,
	359, 267, 243, 339, 376, 0, 285, 348, 312, 244,
	311, 340, 375, 374, 252, 400, 406, 407, 0, 0,
	412, 0, 0, 0, 420, 425, 426, 427, 429, 430,
	431, 432, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 405, 283, 237, 238, 445, 269, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 404, 0, 0, 0, 433, 444, 0, 0,
	0, 0, 0, 443, 337, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	386, 398, 415, 418, 0, 0, 0, 0, 242, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 413, 0,
	0, 321, 322, 323, 324, 286, 0, 259, 416, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 282,
	288, 428, 290, 258, 336, 284, 395, 297, 0, 421,
	876, 422, 0, 0, 0, 0, 328, 293, 294, 360,
	298, 306, 349, 394, 334, 354, 256, 385, 361, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 236, 0, 239, 0, 304, 133, 345, 281, 0,
	0, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 0, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 0,
	0, 0, 232, 233, 234, 235, 164, 0, 0, 401,
	402, 403, 424, 387, 0, 442, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 0,
	0, 0, 0, 276, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 435, 0, 0, 113, 0, 0, 362, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1656, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 254, 187, 436, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 367, 383, 255, 358, 396, 260, 365, 250,
	332, 355, 0, 0, 247, 381, 364, 314, 295, 296,
	246, 0, 350, 274, 287, 271, 330, 0, 380, 408,
	270, 399, 0, 391, 249, 0, 390, 329, 377, 382,
	315, 309, 248, 379, 313, 308, 299, 278, 423, 300,
	301, 291, 341, 307, 342, 292, 319, 318, 320, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 0, 366,
	0, 0, 302, 0, 0, 0, 409, 0, 353, 335,
	0, 0, 0, 351, 305, 378, 343, 384, 368, 392,
	347, 344, 240, 369, 273, 316, 251, 253, 268, 275,
	277, 279, 280, 325, 326, 338, 357, 370, 371, 372,
	272, 261, 352, 262, 289, 263, 241, 265, 264, 266,
	359, 267, 243, 339, 376, 0, 285, 348, 312, 244,
	311, 340, 375, 374, 252, 400, 406, 407, 0, 0,
	412, 0, 0, 0, 420, 425, 426, 427, 429, 430,
	431, 432, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 405, 283, 237, 238, 445, 269, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 404, 0, 0, 0, 433, 444, 0, 0,
	0, 0, 0, 443, 337, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	386, 398, 415, 418, 0, 0, 0, 0, 242, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 413, 0,
	0, 321, 322, 323, 324, 286, 0, 259, 416, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 282,
	288, 428, 290, 258, 336, 284, 395, 297, 0, 421,
	0, 422, 0, 0, 0, 0, 328, 293, 294, 360,
	298, 306, 349, 394, 334, 354, 256, 385, 361, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 236, 0, 239, 0, 304, 133, 345, 281, 0,
	0, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 0, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 333,
	0, 0, 232, 233, 234, 235, 0, 0, 0, 401,
	402, 403, 424, 387, 0, 442, 276, 0, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 0,
	0, 0, 434, 0, 435, 0, 0, 0, 0, 0,
	362, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 793, 794, 0, 0, 0, 0, 254, 187,
	436, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 797, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 367, 383, 255, 358, 396,
	260, 365, 250, 332, 355, 0, 0, 247, 381, 364,
	314, 295, 296, 246, 0, 350, 274, 287, 271, 330,
	0, 380, 408, 270, 399, 772, 391, 249, 771, 390,
	329, 377, 382, 315, 309, 248, 379, 313, 308, 299,
	278, 423, 300, 301, 291, 341, 307, 342, 292, 319,
	318, 320, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 0,
	0, 0, 366, 0, 0, 302, 0, 0, 0, 409,
	0, 353, 335, 0, 0, 0, 351, 305, 378, 343,
	384, 368, 392, 347, 344, 240, 369, 273, 316, 251,
	253, 268, 275, 277, 279, 280, 325, 326, 338, 357,
	370, 371, 372, 272, 261, 352, 262, 289, 263, 241,
	265, 264, 266, 359, 267, 243, 339, 376, 0, 285,
	348, 312, 244, 311, 340, 375, 374, 252, 400, 406,
	407, 0, 0, 412, 0, 0, 0, 420, 425, 426,
	427, 429, 430, 431, 432, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 405, 283, 237, 238,
	445, 269, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 404, 0, 0, 0, 433,
	444, 0, 0, 0, 0, 0, 443, 337, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 386, 398, 415, 418, 0, 0, 0,
	0, 242, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 413, 0, 0, 321, 322, 323, 324, 286, 0,
	259, 416, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 411, 282, 288, 428, 290, 258, 336, 284, 395,
	297, 0, 421, 0, 422, 0, 0, 0, 0, 795,
	1675, 791, 1676, 298, 306, 349, 394, 334, 354, 256,
	385, 361, 792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 236, 0, 239, 0, 304, 0,
	345, 281, 0, 0, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 0, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 333, 0, 0, 232, 233, 234, 235, 0,
	0, 2407, 401, 402, 403, 424, 387, 0, 442, 276,
	0, 0, 303, 0, 0, 0, 0, 0, 0, 0,
	446, 438, 0, 0, 0, 434, 0, 435, 0, 0,
	0, 0, 0, 362, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 254, 187, 436, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 367, 383,
	255, 358, 396, 260, 365, 250, 332, 355, 0, 0,
	247, 381, 364, 314, 295, 296, 246, 0, 350, 274,
	287, 271, 330, 0, 380, 408, 270, 399, 0, 391,
	249, 0, 390, 329, 377, 382, 315, 309, 248, 379,
	313, 308, 299, 278, 423, 300, 301, 291, 341, 307,
	342, 292, 319, 318, 320, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 2410,
	0, 0, 2409, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 0, 366, 0, 0, 302, 0,
	0, 0, 409, 0, 353, 335, 0, 0, 0, 351,
	305, 378, 343, 384, 368, 392, 347, 344, 240, 369,
	273, 316, 251, 253, 268, 275, 277, 279, 280, 325,
	326, 338, 357, 370, 371, 372, 272, 261, 352, 262,
	289, 263, 241, 265, 264, 266, 359, 267, 243, 339,
	376, 0, 285, 348, 312, 244, 311, 340, 375, 374,
	252, 400, 406, 407, 0, 0, 412, 0, 0, 0,
	420, 425, 426, 427, 429, 430, 431, 432, 0, 0,
	0, 0, 414, 0, 0, 0, 0, 0, 0, 405,
	283, 237, 238, 445, 269, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 404, 0,
	0, 0, 433, 444, 0, 0, 0, 0, 0, 443,
	337, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 386, 398, 415, 418,
	0, 0, 0, 0, 242, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 413, 0, 0, 321, 322, 323,
	324, 286, 0, 259, 416, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 410, 411, 282, 288, 428, 290, 258,
	336, 284, 395, 297, 0, 421, 0, 422, 0, 0,
	0, 0, 328, 293, 294, 360, 298, 306, 349, 394,
	334, 354, 256, 385, 361, 310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 236, 0, 239,
	0, 304, 0, 345, 281, 0, 0, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	0, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 333, 0, 0, 232, 233,
	234, 235, 0, 0, 0, 401, 402, 403, 424, 387,
	0, 442, 276, 1221, 0, 303, 0, 0, 0, 0,
	0, 0, 0, 446, 438, 0, 0, 0, 434, 0,
	435, 0, 0, 0, 0, 0, 362, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	1219, 0, 0, 0, 254, 187, 436, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1217, 0, 0, 0, 0, 0, 0,
	245, 367, 383, 255, 358, 396, 260, 365, 250, 332,
	355, 0, 0, 247, 381, 364, 314, 295, 296, 246,
	0, 350, 274, 287, 271, 330, 0, 380, 408, 270,
	399, 0, 391, 249, 0, 390, 329, 377, 382, 315,
	309, 248, 379, 313, 308, 299, 278, 423, 300, 301,
	291, 341, 307, 342, 292, 319, 318, 320, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 0, 366, 0,
	0, 302, 0, 0, 0, 409, 0, 353, 335, 0,
	0, 0, 351, 305, 378, 343, 384, 368, 392, 347,
	344, 240, 369, 273, 316, 251, 253, 268, 275, 277,
	279, 280, 325, 326, 338, 357, 370, 371, 372, 272,
	261, 352, 262, 289, 263, 241, 265, 264, 266, 359,
	267, 243, 339, 376, 0, 285, 348, 312, 244, 311,
	340, 375, 374, 252, 400, 406, 407, 0, 0, 412,
	0, 0, 0, 420, 425, 426, 427, 429, 430, 431,
	432, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 405, 283, 237, 238, 445, 269, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 404, 0, 0, 0, 433, 444, 0, 0, 0,
	0, 0, 443, 337, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 386,
	398, 415, 418, 0, 0, 0, 0, 242, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 389, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 413, 0, 0,
	321, 322, 323, 324, 286, 0, 259, 416, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 282, 288,
	428, 290, 258, 336, 284, 395, 297, 0, 421, 0,
	422, 0, 0, 0, 0, 328, 293, 294, 360, 298,
	306, 349, 394, 334, 354, 256, 385, 361, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	236, 0, 239, 0, 304, 0, 345, 281, 0, 0,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 0, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 333, 0,
	0, 232, 233, 234, 235, 0, 0, 0, 401, 402,
	403, 424, 387, 0, 442, 276, 1215, 0, 303, 0,
	0, 0, 0, 0, 0, 0, 446, 438, 0, 0,
	0, 434, 0, 435, 0, 0, 0, 0, 0, 362,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 0, 0, 1219, 0, 0, 0, 254, 187, 436,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1217, 0, 0, 0,
	0, 0, 0, 245, 367, 383, 255, 358, 396, 260,
	365, 250, 332, 355, 0, 0, 247, 381, 364, 314,
	295, 296, 246, 0, 350, 274, 287, 271, 330, 0,
	380, 408, 270, 399, 0, 391, 249, 0, 390, 329,
	377, 382, 315, 309, 248, 379, 313, 308, 299, 278,
	423, 300, 301, 291, 341, 307, 342, 292, 319, 318,
	320, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 0, 0,
	0, 366, 0, 0, 302, 0, 0, 0, 409, 0,
	353, 335, 0, 0, 0, 351, 305, 378, 343, 384,
	368, 392, 347, 344, 240, 369, 273, 316, 251, 253,
	268, 275, 277, 279, 280, 325, 326, 338, 357, 370,
	371, 372, 272, 261, 352, 262, 289, 263, 241, 265,
	264, 266, 359, 267, 243, 339, 376, 0, 285, 348,
	312, 244, 311, 340, 375, 374, 252, 400, 406, 407,
	0, 0, 412, 0, 0, 0, 420, 425, 426, 427,
	429, 430, 431, 432, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 405, 283, 237, 238, 445,
	269, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 404, 0, 0, 0, 433, 444,
	0, 0, 0, 0, 0, 443, 337, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 386, 398, 415, 418, 0, 0, 0, 0,
	242, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	413, 0, 0, 321, 322, 323, 324, 286, 0, 259,
	416, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 410,
	411, 282, 288, 428, 290, 258, 336, 284, 395, 297,
	0, 421, 0, 422, 0, 0, 0, 0, 328, 293,
	294, 360, 298, 306, 349, 394, 334, 354, 256, 385,
	361, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 236, 0, 239, 0, 304, 0, 345,
	281, 0, 0, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 0, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 333, 0, 0, 232, 233, 234, 235, 0, 0,
	0, 401, 402, 403, 424, 387, 0, 442, 276, 0,
	0, 303, 0, 0, 0, 0, 0, 0, 0, 446,
	438, 0, 0, 0, 434, 0, 435, 0, 0, 0,
	0, 0, 362, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3174, 0, 186, 618, 0, 0, 0, 0, 0,
	254, 187, 436, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 367, 383, 255,
	358, 396, 260, 365, 250, 332, 355, 0, 0, 247,
	381, 364, 314, 295, 296, 246, 0, 350, 274, 287,
	271, 330, 0, 380, 408, 270, 399, 0, 391, 249,
	0, 390, 329, 377, 382, 315, 309, 248, 379, 313,
	308, 299, 278, 423, 300, 301, 291, 341, 307, 342,
	292, 319, 318, 320, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 0, 0, 0, 366, 0, 0, 302, 0, 0,
	0, 409, 0, 353, 335, 0, 0, 0, 351, 305,
	378, 343, 384, 368, 392, 347, 344, 240, 369, 273,
	316, 251, 253, 268, 275, 277, 279, 280, 325, 326,
	338, 357, 370, 371, 372, 272, 261, 352, 262, 289,
	263, 241, 265, 264, 266, 359, 267, 243, 339, 376,
	0, 285, 348, 312, 244, 311, 340, 375, 374, 252,
	400, 406, 407, 0, 0, 412, 0, 0, 0, 420,
	425, 426, 427, 429, 430, 431, 432, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 405, 283,
	237, 238, 445, 269, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 404, 0, 0,
	0, 433, 444, 0, 0, 0, 0, 0, 443, 337,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 386, 398, 415, 418, 0,
	0, 0, 0, 242, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 413, 0, 0, 321, 322, 323, 324,
	286, 0, 259, 416, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 410, 411, 282, 288, 428, 290, 258, 336,
	284, 395, 297, 0, 421, 0, 422, 0, 0, 0,
	0, 328, 293, 294, 360, 298, 306, 349, 394, 334,
	354, 256, 385, 361, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 236, 0, 239, 0,
	304, 0, 345, 281, 0, 0, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 0,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 333, 0, 0, 232, 233, 234,
	235, 0, 0, 0, 401, 402, 403, 424, 387, 0,
	442, 276, 0, 0, 303, 0, 0, 0, 0, 0,
	0, 0, 446, 438, 0, 0, 0, 434, 0, 435,
	0, 0, 0, 0, 0, 362, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 1219,
	0, 0, 0, 254, 187, 436, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1217, 0, 0, 0, 0, 0, 0, 245,
	367, 383, 255, 358, 396, 260, 365, 250, 332, 355,
	0, 0, 247, 381, 364, 314, 295, 296, 246, 0,
	350, 274, 287, 271, 330, 0, 380, 408, 270, 399,
	0, 391, 249, 0, 390, 329, 377, 382, 315, 309,
	248, 379, 313, 308, 299, 278, 423, 300, 301, 291,
	341, 307, 342, 292, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 409, 0, 353, 335, 0, 0,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	240, 369, 273, 316, 251, 253, 268, 275, 277, 279,
	280, 325, 326, 338, 357, 370, 371, 372, 272, 261,
	352, 262, 289, 263, 241, 265, 264, 266, 359, 267,
	243, 339, 376, 0, 285, 348, 312, 244, 311, 340,
	375, 374, 252, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 283, 237, 238, 445, 269, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	404, 0, 0, 0, 433, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 242, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 413, 0, 0, 321,
	322, 323, 324, 286, 0, 259, 416, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 410, 411, 282, 288, 428,
	290, 258, 336, 284, 395, 297, 0, 421, 0, 422,
	0, 0, 0, 0, 328, 293, 294, 360, 298, 306,
	349, 394, 334, 354, 256, 385, 361, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 236,
	0, 239, 0, 304, 0, 345, 281, 0, 0, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 0, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 333, 0, 0,
	232, 233, 234, 235, 0, 0, 0, 401, 402, 403,
	424, 387, 0, 442, 276, 0, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 446, 438, 0, 0, 0,
	434, 0, 435, 0, 0, 0, 0, 0, 362, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 1219, 0, 0, 0, 254, 187, 436, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2903, 0, 0, 0, 0,
	0, 0, 245, 367, 383, 255, 358, 396, 260, 365,
	250, 332, 355, 0, 0, 247, 381, 364, 314, 295,
	296, 246, 0, 350, 274, 287, 271, 330, 0, 380,
	408, 270, 399, 0, 391, 249, 0, 390, 329, 377,
	382, 315, 309, 248, 379, 313, 308, 299, 278, 423,
	300, 301, 291, 341, 307, 342, 292, 319, 318, 320,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 0, 0, 0,
	366, 0, 0, 302, 0, 0, 0, 409, 0, 353,
	335, 0, 0, 0, 351, 305, 378, 343, 384, 368,
	392, 347, 344, 240, 369, 273, 316, 251, 253, 268,
	275, 277, 279, 280, 325, 326, 338, 357, 370, 371,
	372, 272, 261, 352, 262, 289, 263, 241, 265, 264,
	266, 359, 267, 243, 339, 376, 0, 285, 348, 312,
	244, 311, 340, 375, 374, 252, 400, 406, 407, 0,
	0, 412, 0, 0, 0, 420, 425, 426, 427, 429,
	430, 431, 432, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 405, 283, 237, 238, 445, 269,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 404, 0, 0, 0, 433, 444, 0,
	0, 0, 0, 0, 443, 337, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 386, 398, 415, 418, 0, 0, 0, 0, 242,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 413,
	0, 0, 321, 322, 323, 324, 286, 0, 259, 416,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 411,
	282, 288, 428, 290, 258, 336, 284, 395, 297, 0,
	421, 0, 422, 0, 0, 0, 0, 328, 293, 294,
	360, 298, 306, 349, 394, 334, 354, 256, 385, 361,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 236, 0, 239, 0, 304, 0, 345, 281,
	0, 0, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 0, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	0, 0, 0, 232, 233, 234, 235, 333, 0, 0,
	401, 402, 403, 424, 387, 0, 442, 0, 0, 2080,
	0, 0, 0, 0, 276, 0, 0, 303, 446, 438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	434, 0, 435, 0, 0, 0, 0, 0, 362, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 2082, 0, 0, 0, 254, 187, 436, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 367, 383, 255, 358, 396, 260, 365,
	250, 332, 355, 0, 0, 247, 381, 364, 314, 295,
	296, 246, 0, 350, 274, 287, 271, 330, 0, 380,
	408, 270, 399, 0, 391, 249, 0, 390, 329, 377,
	382, 315, 309, 248, 379, 313, 308, 299, 278, 423,
	300, 301, 291, 341, 307, 342, 292, 319, 318, 320,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 0, 0, 0,
	366, 0, 0, 302, 0, 0, 0, 409, 0, 353,
	335, 0, 0, 0, 351, 305, 378, 343, 384, 368,
	392, 347, 344, 240, 369, 273, 316, 251, 253, 268,
	275, 277, 279, 280, 325, 326, 338, 357, 370, 371,
	372, 272, 261, 352, 262, 289, 263, 241, 265, 264,
	266, 359, 267, 243, 339, 376, 0, 285, 348, 312,
	244, 311, 340, 375, 374, 252, 400, 406, 407, 0,
	0, 412, 0, 0, 0, 420, 425, 426, 427, 429,
	430, 431, 432, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 405, 283, 237, 238, 445, 269,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 404, 0, 0, 0, 433, 444, 0,
	0, 0, 0, 0, 443, 337, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 386, 398, 415, 418, 0, 0, 0, 0, 242,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 413,
	0, 0, 321, 322, 323, 324, 286, 0, 259, 416,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 411,
	282, 288, 428, 290, 258, 336, 284, 395, 297, 0,
	421, 0, 422, 0, 0, 0, 0, 328, 293, 294,
	360, 298, 306, 349, 394, 334, 354, 256, 385, 361,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 236, 0, 239, 0, 304, 0, 345, 281,
	0, 0, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 0, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	333, 0, 0, 232, 233, 234, 235, 0, 0, 0,
	401, 402, 403, 424, 387, 0, 442, 276, 2101, 0,
	303, 0, 0, 0, 0, 0, 0, 0, 446, 438,
	0, 0, 0, 434, 0, 435, 0, 0, 0, 0,
	0, 362, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 1219, 0, 0, 0, 254,
	187, 436, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 367, 383, 255, 358,
	396, 260, 365, 250, 332, 355, 0, 0, 247, 381,
	364, 314, 295, 296, 246, 0, 350, 274, 287, 271,
	330, 0, 380, 408, 270, 399, 0, 391, 249, 0,
	390, 329, 377, 382, 315, 309, 248, 379, 313, 308,
	299, 278, 423, 300, 301, 291, 341, 307, 342, 292,
	319, 318, 320, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	0, 0, 0, 366, 0, 0, 302, 0, 0, 0,
	409, 0, 353, 335, 0, 0, 0, 351, 305, 378,
	343, 384, 368, 392, 347, 344, 240, 369, 273, 316,
	251, 253, 268, 275, 277, 279, 280, 325, 326, 338,
	357, 370, 371, 372, 272, 261, 352, 262, 289, 263,
	241, 265, 264, 266, 359, 267, 243, 339, 376, 0,
	285, 348, 312, 244, 311, 340, 375, 374, 252, 400,
	406, 407, 0, 0, 412, 0, 0, 0, 420, 425,
	426, 427, 429, 430, 431, 432, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 405, 283, 237,
	238, 445, 269, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 404, 0, 0, 0,
	433, 444, 0, 0, 0, 0, 0, 443, 337, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 386, 398, 415, 418, 0, 0,
	0, 0, 242, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 413, 0, 0, 321, 322, 323, 324, 286,
	0, 259, 416, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 410, 411, 282, 288, 428, 290, 258, 336, 284,
	395, 297, 0, 421, 0, 422, 0, 0, 0, 0,
	328, 293, 294, 360, 298, 306, 349, 394, 334, 354,
	256, 385, 361, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 236, 0, 239, 0, 304,
	0, 345, 281, 0, 0, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 0, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 333, 0, 0, 232, 233, 234, 235,
	0, 0, 0, 401, 402, 403, 424, 387, 0, 442,
	276, 0, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 446, 438, 0, 0, 0, 434, 0, 435, 0,
	0, 0, 0, 0, 362, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3263, 0, 186, 0, 0, 0, 0,
	0, 0, 254, 187, 436, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 367,
	383, 255, 358, 396, 260, 365, 250, 332, 355, 0,
	0, 247, 381, 364, 314, 295, 296, 246, 0, 350,
	274, 287, 271, 330, 0, 380, 408, 270, 399, 0,
	391, 249, 0, 390, 329, 377, 382, 315, 309, 248,
	379, 313, 308, 299, 278, 423, 300, 301, 291, 341,
	307, 342, 292, 319, 318, 320, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 0, 366, 0, 0, 302,
	0, 0, 0, 409, 0, 353, 335, 0, 0, 0,
	351, 305, 378, 343, 384, 368, 392, 347, 344, 240,
	369, 273, 316, 251, 253, 268, 275, 277, 279, 280,
	325, 326, 338, 357, 370, 371, 372, 272, 261, 352,
	262, 289, 263, 241, 265, 264, 266, 359, 267, 243,
	339, 376, 0, 285, 348, 312, 244, 311, 340, 375,
	374, 252, 400, 406, 407, 0, 0, 412, 0, 0,
	0, 420, 425, 426, 427, 429, 430, 431, 432, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	405, 283, 237, 238, 445, 269, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 404,
	0, 0, 0, 433, 444, 0, 0, 0, 0, 0,
	443, 337, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 386, 398, 415,
	418, 0, 0, 0, 0, 242, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 413, 0, 0, 321, 322,
	323, 324, 286, 0, 259, 416, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 411, 282, 288, 428, 290,
	258, 336, 284, 395, 297, 0, 421, 0, 422, 0,
	0, 0, 0, 328, 293, 294, 360, 298, 306, 349,
	394, 334, 354, 256, 385, 361, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 236, 0,
	239, 0, 304, 0, 345, 281, 0, 0, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 0, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 333, 0, 0, 232,
	233, 234, 235, 0, 0, 0, 401, 402, 403, 424,
	387, 0, 442, 276, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 446, 438, 0, 0, 0, 434,
	0, 435, 0, 0, 0, 0, 0, 362, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 618,
	0, 0, 0, 0, 0, 254, 187, 436, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 367, 383, 255, 358, 396, 260, 365, 250,
	332, 355, 0, 0, 247, 381, 364, 314, 295, 296,
	246, 0, 350, 274, 287, 271, 330, 0, 380, 408,
	270, 399, 0, 391, 249, 0, 390, 329, 377, 382,
	315, 309, 248, 379, 313, 308, 299, 278, 423, 300,
	301, 291, 341, 307, 342, 292, 319, 318, 320, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 0, 366,
	0, 0, 302, 0, 0, 0, 409, 0, 353, 335,
	0, 0, 0, 351, 305, 378, 343, 384, 368, 392,
	347, 344, 240, 369, 273, 316, 251, 253, 268, 275,
	277, 279, 280, 325, 326, 338, 357, 370, 371, 372,
	272, 261, 352, 262, 289, 263, 241, 265, 264, 266,
	359, 267, 243, 339, 376, 0, 285, 348, 312, 244,
	311, 340, 375, 374, 252, 400, 406, 407, 0, 0,
	412, 0, 0, 0, 420, 425, 426, 427, 429, 430,
	431, 432, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 405, 283, 237, 238, 445, 269, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 404, 0, 0, 0, 433, 444, 0, 0,
	0, 0, 0, 443, 337, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	386, 398, 415, 418, 0, 0, 0, 0, 242, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 413, 0,
	0, 321, 322, 323, 324, 286, 0, 259, 416, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 282,
	288, 428, 290, 258, 336, 284, 395, 297, 0, 421,
	0, 422, 0, 0, 0, 0, 328, 293, 294, 360,
	298, 306, 349, 394, 334, 354, 256, 385, 361, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 236, 0, 239, 0, 304, 0, 345, 281, 0,
	0, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 0, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 333,
	0, 0, 232, 233, 234, 235, 0, 0, 0, 401,
	402, 403, 424, 387, 0, 442, 276, 0, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 0,
	0, 0, 434, 0, 435, 0, 0, 0, 0, 0,
	362, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3189, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 254, 187,
	436, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 367, 383, 255, 358, 396,
	260, 365, 250, 332, 355, 0, 0, 247, 381, 364,
	314, 295, 296, 246, 0, 350, 274, 287, 271, 330,
	0, 380, 408, 270, 399, 0, 391, 249, 0, 390,
	329, 377, 382, 315, 309, 248, 379, 313, 308, 299,
	278, 423, 300, 301, 291, 341, 307, 342, 292, 319,
	318, 320, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 0,
	0, 0, 366, 0, 0, 302, 0, 0, 0, 409,
	0, 353, 335, 0, 0, 0, 351, 305, 378, 343,
	384, 368, 392, 347, 344, 240, 369, 273, 316, 251,
	253, 268, 275, 277, 279, 280, 325, 326, 338, 357,
	370, 371, 372, 272, 261, 352, 262, 289, 263, 241,
	265, 264, 266, 359, 267, 243, 339, 376, 0, 285,
	348, 312, 244, 311, 340, 375, 374, 252, 400, 406,
	407, 0, 0, 412, 0, 0, 0, 420, 425, 426,
	427, 429, 430, 431, 432, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 405, 283, 237, 238,
	445, 269, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 404, 0, 0, 0, 433,
	444, 0, 0, 0, 0, 0, 443, 337, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 386, 398, 415, 418, 0, 0, 0,
	0, 242, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 413, 0, 0, 321, 322, 323, 324, 286, 0,
	259, 416, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 411, 282, 288, 428, 290, 258, 336, 284, 395,
	297, 0, 421, 0, 422, 0, 0, 0, 0, 328,
	293, 294, 360, 298, 306, 349, 394, 334, 354, 256,
	385, 361, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 236, 0, 239, 0, 304, 0,
	345, 281, 0, 0, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 0, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 333, 0, 0, 232, 233, 234, 235, 0,
	0, 0, 401, 402, 403, 424, 387, 0, 442, 276,
	0, 0, 303, 0, 0, 0, 0, 0, 0, 0,
	446, 438, 0, 0, 0, 434, 0, 435, 0, 0,
	0, 0, 0, 362, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 254, 187, 436, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 367, 383,
	255, 358, 396, 260, 365, 250, 332, 355, 0, 0,
	247, 381, 364, 314, 295, 296, 246, 0, 350, 274,
	287, 271, 330, 0, 380, 408, 270, 399, 0, 391,
	249, 0, 390, 329, 377, 382, 315, 309, 248, 379,
	313, 308, 299, 278, 423, 300, 301, 291, 341, 307,
	342, 292, 319, 318, 320, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 3119, 0, 0, 366, 0, 0, 302, 0,
	0, 0, 409, 0, 353, 335, 0, 0, 0, 351,
	305, 378, 343, 384, 368, 392, 347, 344, 240, 369,
	273, 316, 251, 253, 268, 275, 277, 279, 280, 325,
	326, 338, 357, 370, 371, 372, 272, 261, 352, 262,
	289, 263, 241, 265, 264, 266, 359, 267, 243, 339,
	376, 0, 285, 348, 312, 244, 311, 340, 375, 374,
	252, 400, 406, 407, 0, 0, 412, 0, 0, 0,
	420, 425, 426, 427, 429, 430, 431, 432, 0, 0,
	0, 0, 414, 0, 0, 0, 0, 0, 0, 405,
	283, 237, 238, 445, 269, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 404, 0,
	0, 0, 433, 444, 0, 0, 0, 0, 0, 443,
	337, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 386, 398, 415, 418,
	0, 0, 0, 0, 242, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 413, 0, 0, 321, 322, 323,
	324, 286, 0, 259, 416, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 410, 411, 282, 288, 428, 290, 258,
	336, 284, 395, 297, 0, 421, 0, 422, 0, 0,
	0, 0, 328, 293, 294, 360, 298, 306, 349, 394,
	334, 354, 256, 385, 361, 310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 236, 0, 239,
	0, 304, 0, 345, 281, 0, 0, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	0, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 333, 0, 0, 232, 233,
	234, 235, 0, 0, 0, 401, 402, 403, 424, 387,
	0, 442, 276, 0, 0, 303, 0, 0, 0, 0,
	0, 0, 0, 446, 438, 0, 0, 0, 434, 0,
	435, 0, 0, 0, 0, 0, 362, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2899, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 254, 187, 436, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 367, 383, 255, 358, 396, 260, 365, 250, 332,
	355, 0, 0, 247, 381, 364, 314, 295, 296, 246,
	0, 350, 274, 287, 271, 330, 0, 380, 408, 270,
	399, 0, 391, 249, 0, 390, 329, 377, 382, 315,
	309, 248, 379, 313, 308, 299, 278, 423, 300, 301,
	291, 341, 307, 342, 292, 319, 318, 320, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 0, 366, 0,
	0, 302, 0, 0, 0, 409, 0, 353, 335, 0,
	0, 0, 351, 305, 378, 343, 384, 368, 392, 347,
	344, 240, 369, 273, 316, 251, 253, 268, 275, 277,
	279, 280, 325, 326, 338, 357, 370, 371, 372, 272,
	261, 352, 262, 289, 263, 241, 265, 264, 266, 359,
	267, 243, 339, 376, 0, 285, 348, 312, 244, 311,
	340, 375, 374, 252, 400, 406, 407, 0, 0, 412,
	0, 0, 0, 420, 425, 426, 427, 429, 430, 431,
	432, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 405, 283, 237, 238, 445, 269, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 404, 0, 0, 0, 433, 444, 0, 0, 0,
	0, 0, 443, 337, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 386,
	398, 415, 418, 0, 0, 0, 0, 242, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 389, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 413, 0, 0,
	321, 322, 323, 324, 286, 0, 259, 416, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 282, 288,
	428, 290, 258, 336, 284, 395, 297, 0, 421, 0,
	422, 0, 0, 0, 0, 328, 293, 294, 360, 298,
	306, 349, 394, 334, 354, 256, 385, 361, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	236, 0, 239, 0, 304, 0, 345, 281, 0, 0,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 0, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 333, 0,
	0, 232, 233, 234, 235, 0, 0, 0, 401, 402,
	403, 424, 387, 0, 442, 276, 0, 0, 303, 0,
	0, 0, 0, 0, 0, 0, 446, 438, 0, 0,
	0, 434, 0, 435, 0, 0, 0, 0, 0, 362,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 0, 0, 2764, 0, 0, 0, 254, 187, 436,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 367, 383, 255, 358, 396, 260,
	365, 250, 332, 355, 0, 0, 247, 381, 364, 314,
	295, 296, 246, 0, 350, 274, 287, 271, 330, 0,
	380, 408, 270, 399, 0, 391, 249, 0, 390, 329,
	377, 382, 315, 309, 248, 379, 313, 308, 299, 278,
	423, 300, 301, 291, 341, 307, 342, 292, 319, 318,
	320, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 0, 0,
	0, 366, 0, 0, 302, 0, 0, 0, 409, 0,
	353, 335, 0, 0, 0, 351, 305, 378, 343, 384,
	368, 392, 347, 344, 240, 369, 273, 316, 251, 253,
	268, 275, 277, 279, 280, 325, 326, 338, 357, 370,
	371, 372, 272, 261, 352, 262, 289, 263, 241, 265,
	264, 266, 359, 267, 243, 339, 376, 0, 285, 348,
	312, 244, 311, 340, 375, 374, 252, 400, 406, 407,
	0, 0, 412, 0, 0, 0, 420, 425, 426, 427,
	429, 430, 431, 432, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 405, 283, 237, 238, 445,
	269, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 404, 0, 0, 0, 433, 444,
	0, 0, 0, 0, 0, 443, 337, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 386, 398, 415, 418, 0, 0, 0, 0,
	242, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	413, 0, 0, 321, 322, 323, 324, 286, 0, 259,
	416, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 410,
	411, 282, 288, 428, 290, 258, 336, 284, 395, 297,
	0, 421, 0, 422, 0, 0, 0, 0, 328, 293,
	294, 360, 298, 306, 349, 394, 334, 354, 256, 385,
	361, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 236, 0, 239, 0, 304, 0, 345,
	281, 0, 0, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 0, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 333, 0, 0, 232, 233, 234, 235, 0, 0,
	0, 401, 402, 403, 424, 387, 0, 442, 276, 0,
	0, 303, 0, 0, 0, 0, 0, 0, 0, 446,
	438, 0, 0, 0, 434, 0, 435, 0, 0, 0,
	0, 0, 362, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	254, 187, 436, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 367, 383, 255,
	358, 396, 260, 365, 250, 332, 355, 0, 0, 247,
	381, 364, 314, 295, 296, 246, 0, 350, 274, 287,
	271, 330, 0, 380, 408, 270, 399, 0, 391, 249,
	0, 390, 329, 377, 382, 315, 309, 248, 379, 313,
	308, 299, 278, 423, 300, 301, 291, 341, 307, 342,
	292, 319, 318, 320, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 2973, 0, 0, 366, 0, 0, 302, 0, 0,
	0, 409, 0, 353, 335, 0, 0, 0, 351, 305,
	378, 343, 384, 368, 392, 347, 344, 240, 369, 273,
	316, 251, 253, 268, 275, 277, 279, 280, 325, 326,
	338, 357, 370, 371, 372, 272, 261, 352, 262, 289,
	263, 241, 265, 264, 266, 359, 267, 243, 339, 376,
	0, 285, 348, 312, 244, 311, 340, 375, 374, 252,
	400, 406, 407, 0, 0, 412, 0, 0, 0, 420,
	425, 426, 427, 429, 430, 431, 432, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 405, 283,
	237, 238, 445, 269, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 404, 0, 0,
	0, 433, 444, 0, 0, 0, 0, 0, 443, 337,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 386, 398, 415, 418, 0,
	0, 0, 0, 242, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 413, 0, 0, 321, 322, 323, 324,
	286, 0, 259, 416, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 410, 411, 282, 288, 428, 290, 258, 336,
	284, 395, 297, 0, 421, 0, 422, 0, 0, 0,
	0, 328, 293, 294, 360, 298, 306, 349, 394, 334,
	354, 256, 385, 361, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 236, 0, 239, 0,
	304, 0, 345, 281, 0, 0, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 0,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 333, 0, 0, 232, 233, 234,
	235, 0, 0, 0, 401, 402, 403, 424, 387, 0,
	442, 276, 0, 0, 303, 0, 0, 0, 0, 0,
	0, 0, 446, 438, 0, 0, 0, 434, 0, 435,
	0, 0, 0, 0, 0, 362, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 254, 187, 436, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2617, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	367, 383, 255, 358, 396, 260, 365, 250, 332, 355,
	0, 0, 247, 381, 364, 314, 295, 296, 246, 0,
	350, 274, 287, 271, 330, 0, 380, 408, 270, 399,
	0, 391, 249, 0, 390, 329, 377, 382, 315, 309,
	248, 379, 313, 308, 299, 278, 423, 300, 301, 291,
	341, 307, 342, 292, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 409, 0, 353, 335, 0, 0,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	240, 369, 273, 316, 251, 253, 268, 275, 277, 279,
	280, 325, 326, 338, 357, 370, 371, 372, 272, 261,
	352, 262, 289, 263, 241, 265, 264, 266, 359, 267,
	243, 339, 376, 0, 285, 348, 312, 244, 311, 340,
	375, 374, 252, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 283, 237, 238, 445, 269, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	404, 0, 0, 0, 433, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 242, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 413, 0, 0, 321,
	322, 323, 324, 286, 0, 259, 416, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 410, 411, 282, 288, 428,
	290, 258, 336, 284, 395, 297, 0, 421, 0, 422,
	0, 0, 0, 0, 328, 293, 294, 360, 298, 306,
	349, 394, 334, 354, 256, 385, 361, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 236,
	0, 239, 0, 304, 0, 345, 281, 0, 0, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 0, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 333, 0, 0,
	232, 233, 234, 235, 0, 0, 0, 401, 402, 403,
	424, 387, 0, 442, 276, 0, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 446, 438, 0, 0, 0,
	434, 0, 435, 0, 0, 0, 0, 0, 362, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1656, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 254, 187, 436, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 367, 383, 255, 358, 396, 260, 365,
	250, 332, 355, 0, 0, 247, 381, 364, 314, 295,
	296, 246, 0, 350, 274, 287, 271, 330, 0, 380,
	408, 270, 399, 0, 391, 249, 0, 390, 329, 377,
	382, 315, 309, 248, 379, 313, 308, 299, 278, 423,
	300, 301, 291, 341, 307, 342, 292, 319, 318, 320,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 0, 0, 0,
	366, 0, 0, 302, 0, 0, 0, 409, 0, 353,
	335, 0, 0, 0, 351, 305, 378, 343, 384, 368,
	392, 347, 344, 240, 369, 273, 316, 251, 253, 268,
	275, 277, 279, 280, 325, 326, 338, 357, 370, 371,
	372, 272, 261, 352, 262, 289, 263, 241, 265, 264,
	266, 359, 267, 243, 339, 376, 0, 285, 348, 312,
	244, 311, 340, 375, 374, 252, 400, 406, 407, 0,
	0, 412, 0, 0, 0, 420, 425, 426, 427, 429,
	430, 431, 432, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 405, 283, 237, 238, 445, 269,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 404, 0, 0, 0, 433, 444, 0,
	0, 0, 0, 0, 443, 337, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 386, 398, 415, 418, 0, 0, 0, 0, 242,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 413,
	0, 0, 321, 322, 323, 324, 286, 0, 259, 416,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 411,
	282, 288, 428, 290, 258, 336, 284, 395, 297, 0,
	421, 0, 422, 0, 0, 0, 0, 328, 293, 294,
	360, 298, 306, 349, 394, 334, 354, 256, 385, 361,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 236, 0, 239, 0, 304, 0, 345, 281,
	0, 0, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 0, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	333, 0, 0, 232, 233, 234, 235, 0, 0, 0,
	401, 402, 403, 424, 387, 0, 442, 276, 0, 0,
	303, 0, 0, 0, 0, 0, 0, 0, 446, 438,
	0, 0, 0, 434, 0, 435, 0, 0, 0, 0,
	0, 362, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 254,
	187, 436, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2698,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 367, 383, 255, 358,
	396, 260, 365, 250, 332, 355, 0, 0, 247, 381,
	364, 314, 295, 296, 246, 0, 350, 274, 287, 271,
	330, 0, 380, 408, 270, 399, 0, 391, 249, 0,
	390, 329, 377, 382, 315, 309, 248, 379, 313, 308,
	299, 278, 423, 300, 301, 291, 341, 307, 342, 292,
	319, 318, 320, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	0, 0, 0, 366, 0, 0, 302, 0, 0, 0,
	409, 0, 353, 335, 0, 0, 0, 351, 305, 378,
	343, 384, 368, 392, 347, 344, 240, 369, 273, 316,
	251, 253, 268, 275, 277, 279, 280, 325, 326, 338,
	357, 370, 371, 372, 272, 261, 352, 262, 289, 263,
	241, 265, 264, 266, 359, 267, 243, 339, 376, 0,
	285, 348, 312, 244, 311, 340, 375, 374, 252, 400,
	406, 407, 0, 0, 412, 0, 0, 0, 420, 425,
	426, 427, 429, 430, 431, 432, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 405, 283, 237,
	238, 445, 269, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 404, 0, 0, 0,
	433, 444, 0, 0, 0, 0, 0, 443, 337, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 386, 398, 415, 418, 0, 0,
	0, 0, 242, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 413, 0, 0, 321, 322, 323, 324, 286,
	0, 259, 416, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 410, 411, 282, 288, 428, 290, 258, 336, 284,
	395, 297, 0, 421, 0, 422, 0, 0, 0, 0,
	328, 293, 294, 360, 298, 306, 349, 394, 334, 354,
	256, 385, 361, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 236, 0, 239, 0, 304,
	0, 345, 281, 0, 0, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 0, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 333, 0, 0, 232, 233, 234, 235,
	0, 0, 0, 401, 402, 403, 424, 387, 0, 442,
	276, 0, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 446, 438, 0, 0, 0, 434, 0, 435, 0,
	0, 0, 0, 0, 362, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 2566, 0,
	0, 0, 254, 187, 436, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 367,
	383, 255, 358, 396, 260, 365, 250, 332, 355, 0,
	0, 247, 381, 364, 314, 295, 296, 246, 0, 350,
	274, 287, 271, 330, 0, 380, 408, 270, 399, 0,
	391, 249, 0, 390, 329, 377, 382, 315, 309, 248,
	379, 313, 308, 299, 278, 423, 300, 301, 291, 341,
	307, 342, 292, 319, 318, 320, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 0, 366, 0, 0, 302,
	0, 0, 0, 409, 0, 353, 335, 0, 0, 0,
	351, 305, 378, 343, 384, 368, 392, 347, 344, 240,
	369, 273, 316, 251, 253, 268, 275, 277, 279, 280,
	325, 326, 338, 357, 370, 371, 372, 272, 261, 352,
	262, 289, 263, 241, 265, 264, 266, 359, 267, 243,
	339, 376, 0, 285, 348, 312, 244, 311, 340, 375,
	374, 252, 400, 406, 407, 0, 0, 412, 0, 0,
	0, 420, 425, 426, 427, 429, 430, 431, 432, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	405, 283, 237, 238, 445, 269, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 404,
	0, 0, 0, 433, 444, 0, 0, 0, 0, 0,
	443, 337, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 386, 398, 415,
	418, 0, 0, 0, 0, 242, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 413, 0, 0, 321, 322,
	323, 324, 286, 0, 259, 416, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 411, 282, 288, 428, 290,
	258, 336, 284, 395, 297, 0, 421, 0, 422, 0,
	0, 0, 0, 328, 293, 294, 360, 298, 306, 349,
	394, 334, 354, 256, 385, 361, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 236, 0,
	239, 0, 304, 0, 345, 281, 0, 0, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 0, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 333, 0, 0, 232,
	233, 234, 235, 0, 0, 0, 401, 402, 403, 424,
	387, 0, 442, 276, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 446, 438, 0, 0, 0, 434,
	0, 435, 0, 0, 0, 0, 0, 362, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 254, 187, 436, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 367, 383, 255, 358, 396, 260, 365, 250,
	332, 355, 0, 0, 247, 381, 364, 314, 295, 296,
	246, 0, 350, 274, 287, 271, 330, 0, 380, 408,
	270, 399, 0, 391, 249, 0, 390, 329, 377, 382,
	315, 309, 248, 379, 313, 308, 299, 278, 423, 300,
	301, 291, 341, 307, 342, 292, 319, 318, 320, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 0, 366,
	0, 0, 302, 0, 0, 0, 409, 0, 353, 335,
	0, 0, 0, 351, 305, 378, 343, 384, 368, 392,
	347, 344, 240, 369, 273, 316, 251, 253, 268, 275,
	277, 279, 280, 325, 326, 338, 357, 370, 371, 372,
	272, 261, 352, 262, 289, 263, 241, 265, 264, 266,
	359, 267, 243, 339, 376, 0, 285, 348, 312, 244,
	311, 340, 375, 374, 252, 400, 406, 407, 0, 0,
	412, 0, 0, 0, 420, 425, 426, 427, 429, 430,
	431, 432, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 405, 283, 237, 238, 445, 269, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 404, 0, 0, 0, 433, 444, 0, 0,
	0, 0, 0, 443, 337, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	386, 398, 415, 418, 0, 0, 0, 0, 242, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 413, 0,
	0, 321, 322, 323, 324, 286, 0, 259, 416, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 282,
	288, 428, 290, 258, 336, 284, 395, 297, 0, 421,
	0, 422, 0, 0, 0, 0, 328, 293, 294, 360,
	298, 306, 349, 394, 334, 354, 256, 385, 361, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 236, 0, 239, 0, 304, 0, 345, 281, 0,
	0, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 0, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 333,
	0, 0, 232, 233, 234, 235, 0, 0, 0, 401,
	402, 403, 424, 387, 0, 442, 276, 0, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 0,
	0, 0, 434, 0, 435, 0, 0, 0, 0, 0,
	362, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 1219, 0, 0, 0, 254, 187,
	436, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 367, 383, 255, 358, 396,
	260, 365, 250, 332, 355, 0, 0, 247, 381, 364,
	314, 295, 296, 246, 0, 350, 274, 287, 271, 330,
	0, 380, 408, 270, 399, 0, 391, 249, 0, 390,
	329, 377, 382, 315, 309, 248, 379, 313, 308, 299,
	278, 423, 300, 301, 291, 341, 307, 342, 292, 319,
	318, 320, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 0,
	0, 0, 366, 0, 0, 302, 0, 0, 0, 409,
	0, 353, 335, 0, 0, 0, 351, 305, 378, 343,
	384, 368, 392, 347, 344, 240, 369, 273, 316, 251,
	253, 268, 275, 277, 279, 280, 325, 326, 338, 357,
	370, 371, 372, 272, 261, 352, 262, 289, 263, 241,
	265, 264, 266, 359, 267, 243, 339, 376, 0, 285,
	348, 312, 244, 311, 340, 375, 374, 252, 400, 406,
	407, 0, 0, 412, 0, 0, 0, 420, 425, 426,
	427, 429, 430, 431, 432, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 405, 283, 237, 238,
	445, 269, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 404, 0, 0, 0, 433,
	444, 0, 0, 0, 0, 0, 443, 337, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 386, 398, 415, 418, 0, 0, 0,
	0, 242, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 413, 0, 0, 321, 322, 323, 324, 286, 0,
	259, 416, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 411, 282, 288, 428, 290, 258, 336, 284, 395,
	297, 0, 421, 0, 422, 0, 0, 0, 0, 328,
	293, 294, 360, 298, 306, 349, 394, 334, 354, 256,
	385, 361, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 236, 0, 239, 0, 304, 0,
	345, 281, 0, 0, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 0, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 333, 0, 0, 232, 233, 234, 235, 0,
	0, 0, 401, 402, 403, 424, 387, 0, 442, 276,
	0, 0, 303, 0, 0, 0, 0, 0, 0, 0,
	446, 438, 0, 0, 0, 434, 0, 435, 0, 0,
	0, 0, 0, 362, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 2082, 0, 0,
	0, 254, 187, 436, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 367, 383,
	255, 358, 396, 260, 365, 250, 332, 355, 0, 0,
	247, 381, 364, 314, 295, 296, 246, 0, 350, 274,
	287, 271, 330, 0, 380, 408, 270, 399, 0, 391,
	249, 0, 390, 329, 377, 382, 315, 309, 248, 379,
	313, 308, 299, 278, 423, 300, 301, 291, 341, 307,
	342, 292, 319, 318, 320, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 0, 366, 0, 0, 302, 0,
	0, 0, 409, 0, 353, 335, 0, 0, 0, 351,
	305, 378, 343, 384, 368, 392, 347, 344, 240, 369,
	273, 316, 251, 253, 268, 275, 277, 279, 280, 325,
	326, 338, 357, 370, 371, 372, 272, 261, 352, 262,
	289, 263, 241, 265, 264, 266, 359, 267, 243, 339,
	376, 0, 285, 348, 312, 244, 311, 340, 375, 374,
	252, 400, 406, 407, 0, 0, 412, 0, 0, 0,
	420, 425, 426, 427, 429, 430, 431, 432, 0, 0,
	0, 0, 414, 0, 0, 0, 0, 0, 0, 405,
	283, 237, 238, 445, 269, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 404, 0,
	0, 0, 433, 444, 0, 0, 0, 0, 0, 443,
	337, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 386, 398, 415, 418,
	0, 0, 0, 0, 242, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 413, 0, 0, 321, 322, 323,
	324, 286, 0, 259, 416, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 410, 411, 282, 288, 428, 290, 258,
	336, 284, 395, 297, 0, 421, 0, 422, 0, 0,
	0, 0, 328, 293, 294, 360, 298, 306, 349, 394,
	334, 354, 256, 385, 361, 310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 236, 0, 239,
	0, 304, 0, 345, 281, 0, 0, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	0, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 333, 0, 0, 232, 233,
	234, 235, 0, 0, 0, 401, 402, 403, 424, 387,
	0, 442, 276, 0, 0, 303, 0, 0, 0, 0,
	0, 0, 0, 446, 438, 0, 0, 0, 434, 0,
	435, 0, 0, 0, 0, 0, 362, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 254, 187, 436, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 367, 383, 255, 358, 396, 260, 365, 250, 332,
	355, 0, 0, 247, 381, 364, 314, 295, 296, 246,
	0, 350, 274, 287, 271, 330, 0, 380, 408, 270,
	399, 0, 391, 249, 0, 390, 329, 377, 382, 315,
	309, 248, 379, 313, 308, 299, 278, 423, 300, 301,
	291, 341, 307, 342, 292, 319, 318, 320, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 0, 366, 0,
	0, 302, 0, 0, 0, 409, 0, 353, 335, 0,
	0, 0, 351, 305, 378, 343, 384, 368, 392, 347,
	344, 240, 369, 273, 316, 251, 253, 268, 275, 277,
	279, 280, 325, 326, 338, 357, 370, 371, 372, 272,
	261, 352, 262, 289, 263, 241, 265, 264, 266, 359,
	267, 243, 339, 376, 0, 285, 348, 312, 244, 311,
	340, 375, 374, 252, 400, 406, 407, 0, 0, 412,
	0, 0, 0, 420, 425, 426, 427, 429, 430, 431,
	432, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 405, 283, 237, 238, 445, 269, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 404, 0, 0, 0, 433, 444, 0, 0, 0,
	0, 0, 443, 337, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 386,
	398, 415, 418, 0, 0, 0, 0, 242, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 389, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 413, 0, 0,
	321, 322, 323, 324, 286, 0, 259, 416, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 282, 288,
	428, 290, 258, 336, 284, 395, 297, 0, 421, 0,
	422, 0, 0, 0, 0, 328, 293, 294, 360, 298,
	306, 349, 394, 334, 354, 256, 385, 361, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	236, 0, 239, 0, 304, 0, 345, 281, 0, 0,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 0, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 333, 0,
	0, 232, 233, 234, 235, 0, 0, 0, 401, 402,
	403, 424, 387, 0, 442, 276, 0, 0, 303, 0,
	0, 0, 0, 0, 0, 0, 446, 438, 0, 0,
	0, 434, 0, 435, 0, 0, 0, 0, 0, 362,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 254, 187, 436,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2119, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 367, 383, 255, 358, 396, 260,
	365, 250, 332, 355, 0, 0, 247, 381, 364, 314,
	295, 296, 246, 0, 350, 274, 287, 271, 330, 0,
	380, 408, 270, 399, 0, 391, 249, 0, 390, 329,
	377, 382, 315, 309, 248, 379, 313, 308, 299, 278,
	423, 300, 301, 291, 341, 307, 342, 292, 319, 318,
	320, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 0, 0,
	0, 366, 0, 0, 302, 0, 0, 0, 409, 0,
	353, 335, 0, 0, 0, 351, 305, 378, 343, 384,
	368, 392, 347, 344, 240, 369, 273, 316, 251, 253,
	268, 275, 277, 279, 280, 325, 326, 338, 357, 370,
	371, 372, 272, 261, 352, 262, 289, 263, 241, 265,
	264, 266, 359, 267, 243, 339, 376, 0, 285, 348,
	312, 244, 311, 340, 375, 374, 252, 400, 406, 407,
	0, 0, 412, 0, 0, 0, 420, 425, 426, 427,
	429, 430, 431, 432, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 405, 283, 237, 238, 445,
	269, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 404, 0, 0, 0, 433, 444,
	0, 0, 0, 0, 0, 443, 337, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 386, 398, 415, 418, 0, 0, 0, 0,
	242, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	413, 0, 0, 321, 322, 323, 324, 286, 0, 259,
	416, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 410,
	411, 282, 288, 428, 290, 258, 336, 284, 395, 297,
	0, 421, 0, 422, 0, 0, 0, 0, 328, 293,
	294, 360, 298, 306, 349, 394, 334, 354, 256, 385,
	361, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 236, 0, 239, 0, 304, 0, 345,
	281, 0, 0, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 0, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 333, 0, 0, 232, 233, 234, 235, 0, 0,
	0, 401, 402, 403, 424, 387, 0, 442, 276, 0,
	0, 303, 0, 0, 0, 0, 0, 0, 0, 446,
	438, 0, 0, 0, 434, 0, 435, 0, 0, 0,
	0, 0, 362, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 0, 2117, 0, 0, 0,
	254, 187, 436, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 367, 383, 255,
	358, 396, 260, 365, 250, 332, 355, 0, 0, 247,
	381, 364, 314, 295, 296, 246, 0, 350, 274, 287,
	271, 330, 0, 380, 408, 270, 399, 0, 391, 249,
	0, 390, 329, 377, 382, 315, 309, 248, 379, 313,
	308, 299, 278, 423, 300, 301, 291, 341, 307, 342,
	292, 319, 318, 320, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 0, 0, 0, 366, 0, 0, 302, 0, 0,
	0, 409, 0, 353, 335, 0, 0, 0, 351, 305,
	378, 343, 384, 368, 392, 347, 344, 240, 369, 273,
	316, 251, 253, 268, 275, 277, 279, 280, 325, 326,
	338, 357, 370, 371, 372, 272, 261, 352, 262, 289,
	263, 241, 265, 264, 266, 359, 267, 243, 339, 376,
	0, 285, 348, 312, 244, 311, 340, 375, 374, 252,
	400, 406, 407, 0, 0, 412, 0, 0, 0, 420,
	425, 426, 427, 429, 430, 431, 432, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 405, 283,
	237, 238, 445, 269, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 404, 0, 0,
	0, 433, 444, 0, 0, 0, 0, 0, 443, 337,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 386, 398, 415, 418, 0,
	0, 0, 0, 242, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 413, 0, 0, 321, 322, 323, 324,
	286, 0, 259, 416, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 410, 411, 282, 288, 428, 290, 258, 336,
	284, 395, 297, 0, 421, 0, 422, 0, 0, 0,
	0, 328, 293, 294, 360, 298, 306, 349, 394, 334,
	354, 256, 385, 361, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 236, 0, 239, 0,
	304, 0, 345, 281, 0, 0, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 0,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 0, 1955, 0, 232, 233, 234,
	235, 333, 0, 0, 401, 402, 403, 424, 387, 0,
	442, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 303, 446, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 434, 0, 435, 0, 0, 0,
	0, 0, 362, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	254, 187, 436, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 367, 383, 255,
	358, 396, 260, 365, 250, 332, 355, 0, 0, 247,
	381, 364, 314, 295, 296, 246, 0, 350, 274, 287,
	271, 330, 0, 380, 408, 270, 399, 0, 391, 249,
	0, 390, 329, 377, 382, 315, 309, 248, 379, 313,
	308, 299, 278, 423, 300, 301, 291, 341, 307, 342,
	292, 319, 318, 320, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 0, 0, 0, 366, 0, 0, 302, 0, 0,
	0, 409, 0, 353, 335, 0, 0, 0, 351, 305,
	378, 343, 384, 368, 392, 347, 344, 240, 369, 273,
	316, 251, 253, 268, 275, 277, 279, 280, 325, 326,
	338, 357, 370, 371, 372, 272, 261, 352, 262, 289,
	263, 241, 265, 264, 266, 359, 267, 243, 339, 376,
	0, 285, 348, 312, 244, 311, 340, 375, 374, 252,
	400, 406, 407, 0, 0, 412, 0, 0, 0, 420,
	425, 426, 427, 429, 430, 431, 432, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 405, 283,
	237, 238, 445, 269, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 404, 0, 0,
	0, 433, 444, 0, 0, 0, 0, 0, 443, 337,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 386, 398, 415, 418, 0,
	0, 0, 0, 242, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 413, 0, 0, 321, 322, 323, 324,
	286, 0, 259, 416, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 410, 411, 282, 288, 428, 290, 258, 336,
	284, 395, 297, 0, 421, 0, 422, 0, 0, 0,
	0, 328, 293, 294, 360, 298, 306, 349, 394, 334,
	354, 256, 385, 361, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 236, 0, 239, 0,
	304, 0, 345, 281, 0, 0, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 0,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 333, 0, 0, 232, 233, 234,
	235, 0, 1643, 0, 401, 402, 403, 424, 387, 0,
	442, 276, 0, 0, 303, 0, 0, 0, 0, 0,
	0, 0, 446, 438, 0, 0, 0, 434, 0, 435,
	0, 0, 0, 0, 0, 362, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 254, 187, 436, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	367, 383, 255, 358, 396, 260, 365, 250, 332, 355,
	0, 0, 247, 381, 364, 314, 295, 296, 246, 0,
	350, 274, 287, 271, 330, 0, 380, 408, 270, 399,
	0, 391, 249, 0, 390, 329, 377, 382, 315, 309,
	248, 379, 313, 308, 299, 278, 423, 300, 301, 291,
	341, 307, 342, 292, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 409, 0, 353, 335, 0, 0,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	240, 369, 273, 316, 251, 253, 268, 275, 277, 279,
	280, 325, 326, 338, 357, 370, 371, 372, 272, 261,
	352, 262, 289, 263, 241, 265, 264, 266, 359, 267,
	243, 339, 376, 0, 285, 348, 312, 244, 311, 340,
	375, 374, 252, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 283, 237, 238, 445, 269, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	404, 0, 0, 0, 433, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 242, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 413, 0, 0, 321,
	322, 323, 324, 286, 0, 259, 416, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 410, 411, 282, 288, 428,
	290, 258, 336, 284, 395, 297, 0, 421, 0, 422,
	0, 0, 0, 0, 328, 293, 294, 360, 298, 306,
	349, 394, 334, 354, 256, 385, 361, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 236,
	0, 239, 0, 304, 0, 345, 281, 0, 0, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 0, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 333, 0, 0,
	232, 233, 234, 235, 0, 0, 0, 401, 402, 403,
	424, 387, 0, 442, 276, 0, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 446, 438, 0, 0, 0,
	434, 0, 435, 0, 0, 0, 0, 0, 362, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 1219, 0, 0, 0, 254, 187, 436, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 367, 383, 255, 358, 396, 260, 365,
	250, 332, 355, 0, 0, 247, 381, 364, 314, 295,
	296, 246, 0, 350, 274, 287, 271, 330, 0, 380,
	408, 270, 399, 0, 391, 249, 0, 390, 329, 377,
	382, 315, 309, 248, 379, 313, 308, 299, 278, 423,
	300, 301, 291, 341, 307, 342, 292, 319, 318, 320,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 0, 0, 0,
	366, 0, 0, 302, 0, 0, 0, 409, 0, 353,
	335, 0, 0, 0, 351, 305, 378, 343, 384, 368,
	392, 1556, 344, 240, 369, 273, 316, 251, 253, 268,
	275, 277, 279, 280, 325, 326, 338, 357, 370, 371,
	372, 272, 261, 352, 262, 289, 263, 241, 265, 264,
	266, 359, 267, 243, 339, 376, 0, 285, 348, 312,
	244, 311, 340, 375, 374, 252, 400, 406, 407, 0,
	0, 412, 0, 0, 0, 420, 425, 426, 427, 429,
	430, 431, 432, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 405, 283, 237, 238, 445, 269,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 404, 0, 0, 0, 433, 444, 0,
	0, 0, 0, 0, 443, 337, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 386, 398, 415, 418, 0, 0, 0, 0, 242,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 413,
	0, 0, 321, 322, 323, 324, 286, 0, 259, 416,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 411,
	282, 288, 428, 290, 258, 336, 284, 395, 297, 0,
	421, 0, 422, 0, 0, 0, 0, 328, 293, 294,
	360, 298, 306, 349, 394, 334, 354, 256, 385, 361,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 236, 0, 239, 0, 304, 0, 345, 281,
	0, 0, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 0, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	333, 0, 0, 232, 233, 234, 235, 0, 0, 0,
	401, 402, 403, 424, 387, 0, 442, 276, 0, 0,
	303, 0, 0, 0, 0, 0, 0, 0, 446, 438,
	0, 0, 0, 434, 0, 435, 0, 0, 0, 0,
	0, 362, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 254,
	187, 436, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 367, 383, 255, 358,
	396, 260, 365, 250, 332, 355, 0, 0, 247, 381,
	364, 314, 295, 296, 246, 0, 350, 274, 287, 271,
	330, 0, 380, 408, 270, 399, 0, 391, 249, 0,
	390, 329, 377, 382, 315, 309, 248, 379, 313, 308,
	299, 278, 423, 300, 301, 291, 341, 307, 342, 292,
	319, 318, 320, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 1244,
	0, 0, 0, 366, 0, 0, 302, 0, 0, 0,
	409, 0, 353, 335, 0, 0, 0, 351, 305, 378,
	343, 384, 368, 392, 347, 344, 240, 369, 273, 316,
	251, 253, 268, 275, 277, 279, 280, 325, 326, 338,
	357, 370, 371, 372, 272, 261, 352, 262, 289, 263,
	241, 265, 264, 266, 359, 267, 243, 339, 376, 0,
	285, 348, 312, 244, 311, 340, 375, 374, 252, 400,
	406, 407, 0, 0, 412, 0, 0, 0, 420, 425,
	426, 427, 429, 430, 431, 432, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 405, 283, 237,
	238, 445, 269, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 404, 0, 0, 0,
	433, 444, 0, 0, 0, 0, 0, 443, 337, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 386, 398, 415, 418, 0, 0,
	0, 0, 242, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 413, 0, 0, 321, 322, 323, 324, 286,
	0, 259, 416, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 410, 411, 282, 288, 428, 290, 258, 336, 284,
	395, 297, 0, 421, 0, 422, 0, 0, 0, 0,
	328, 293, 294, 360, 298, 306, 349, 394, 334, 354,
	256, 385, 361, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 236, 0, 239, 0, 304,
	0, 345, 281, 0, 0, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 0, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 333, 0, 0, 232, 233, 234, 235,
	0, 0, 0, 401, 402, 403, 424, 387, 0, 442,
	276, 0, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 446, 438, 0, 0, 0, 434, 0, 435, 0,
	0, 0, 0, 0, 362, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 254, 187, 436, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 367,
	383, 255, 358, 396, 260, 365, 250, 332, 355, 0,
	0, 247, 381, 364, 314, 295, 296, 246, 0, 350,
	274, 287, 271, 330, 0, 380, 408, 270, 399, 0,
	391, 249, 0, 390, 329, 377, 382, 315, 309, 248,
	379, 313, 308, 299, 278, 423, 300, 301, 291, 341,
	307, 342, 292, 319, 318, 320, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 0, 366, 0, 0, 302,
	0, 0, 0, 409, 0, 353, 335, 0, 0, 0,
	351, 305, 378, 343, 384, 368, 392, 347, 344, 240,
	369, 273, 316, 251, 253, 268, 275, 277, 279, 280,
	325, 326, 338, 357, 370, 371, 372, 272, 261, 352,
	262, 289, 263, 241, 265, 264, 266, 359, 267, 243,
	339, 376, 0, 285, 348, 312, 244, 311, 340, 375,
	374, 252, 400, 406, 407, 0, 0, 412, 0, 0,
	0, 420, 425, 426, 427, 429, 430, 431, 432, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	405, 283, 237, 238, 445, 269, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 404,
	0, 0, 0, 433, 444, 0, 0, 0, 0, 0,
	443, 337, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 386, 398, 415,
	418, 0, 0, 0, 0, 242, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 413, 0, 0, 321, 322,
	323, 324, 286, 0, 259, 416, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 411, 282, 288, 428, 290,
	258, 336, 284, 395, 297, 0, 421, 0, 422, 0,
	0, 0, 0, 328, 293, 294, 360, 298, 306, 349,
	394, 334, 354, 256, 385, 361, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 727, 0, 0, 373, 0, 236, 0,
	239, 0, 304, 0, 345, 281, 0, 0, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 0, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 333, 0, 0, 232,
	233, 234, 235, 0, 0, 0, 401, 402, 403, 424,
	387, 0, 442, 276, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 446, 438, 0, 0, 0, 434,
	0, 435, 0, 0, 0, 0, 0, 362, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 254, 187, 436, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 367, 383, 255, 358, 396, 260, 365, 250,
	332, 355, 0, 0, 247, 381, 364, 314, 295, 296,
	246, 0, 350, 274, 287, 271, 330, 0, 380, 408,
	270, 399, 0, 391, 249, 0, 390, 329, 377, 382,
	315, 309, 248, 379, 313, 308, 299, 278, 423, 300,
	301, 291, 341, 307, 342, 292, 319, 318, 320, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 0, 366,
	0, 0, 302, 0, 0, 0, 409, 0, 353, 335,
	0, 0, 0, 351, 305, 378, 343, 384, 368, 392,
	484, 344, 240, 369, 273, 316, 251, 253, 268, 275,
	277, 279, 280, 325, 326, 338, 357, 370, 371, 372,
	272, 261, 352, 262, 289, 263, 241, 265, 264, 266,
	359, 267, 243, 339, 376, 0, 285, 348, 312, 244,
	311, 340, 375, 374, 252, 400, 406, 407, 0, 0,
	412, 0, 0, 0, 420, 425, 426, 427, 429, 430,
	431, 432, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 405, 283, 237, 238, 445, 269, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 404, 0, 0, 0, 433, 444, 0, 0,
	0, 0, 0, 443, 337, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	386, 398, 415, 418, 0, 0, 0, 0, 242, 417,
	0, 0, 0, 0, 0, 0, 485, 0, 389, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 413, 0,
	0, 321, 322, 323, 324, 286, 0, 259, 416, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 282,
	288, 428, 290, 258, 336, 284, 395, 297, 0, 421,
	0, 422, 0, 0, 0, 0, 328, 293, 294, 360,
	298, 306, 349, 394, 334, 354, 256, 385, 361, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 236, 0, 239, 0, 304, 0, 345, 281, 0,
	0, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 0, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 333,
	0, 0, 232, 233, 234, 235, 0, 0, 0, 401,
	402, 403, 424, 387, 0, 442, 276, 0, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 0,
	0, 0, 434, 0, 435, 0, 0, 0, 0, 0,
	362, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 254, 187,
	436, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 367, 383, 255, 358, 396,
	260, 365, 250, 332, 355, 0, 0, 247, 381, 364,
	314, 295, 296, 246, 0, 350, 274, 287, 271, 330,
	0, 380, 408, 270, 399, 0, 391, 249, 0, 390,
	329, 377, 382, 315, 309, 248, 379, 313, 308, 299,
	278, 423, 300, 301, 291, 341, 307, 342, 292, 319,
	318, 320, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 461, 0, 0, 393, 0, 0, 0, 0,
	0, 0, 366, 0, 0, 302, 0, 0, 0, 409,
	0, 353, 335, 0, 0, 0, 351, 305, 378, 343,
	384, 368, 392, 347, 344, 240, 369, 273, 316, 251,
	253, 268, 275, 277, 279, 280, 325, 326, 338, 357,
	370, 371, 372, 272, 261, 352, 262, 289, 263, 241,
	265, 264, 266, 359, 267, 243, 339, 376, 0, 285,
	348, 312, 244, 311, 340, 375, 374, 252, 400, 406,
	407, 0, 0, 412, 0, 0, 0, 420, 425, 426,
	427, 429, 430, 431, 432, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 405, 283, 237, 238,
	445, 269, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 404, 0, 0, 0, 433,
	444, 0, 0, 0, 0, 0, 443, 337, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 386, 398, 415, 418, 0, 0, 0,
	0, 242, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 413, 0, 0, 321, 322, 323, 324, 286, 0,
	259, 416, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 411, 282, 288, 428, 290, 258, 336, 284, 395,
	297, 0, 421, 0, 422, 0, 0, 0, 0, 328,
	293, 294, 360, 298, 306, 349, 394, 334, 354, 256,
	385, 361, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 236, 0, 239, 0, 304, 0,
	345, 281, 0, 0, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 0, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 0, 333, 0, 232, 233, 234, 235, 0,
	0, 0, 401, 402, 403, 424, 387, 0, 442, 451,
	276, 0, 0, 303, 0, 0, 0, 0, 0, 0,
	446, 438, 0, 0, 0, 0, 434, 0, 435, 0,
	0, 0, 0, 0, 362, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 254, 187, 436, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 367,
	383, 255, 358, 396, 260, 365, 250, 332, 355, 0,
	0, 247, 381, 364, 314, 295, 296, 246, 0, 350,
	274, 287, 271, 330, 0, 380, 408, 270, 399, 0,
	391, 249, 0, 390, 329, 377, 382, 315, 309, 248,
	379, 313, 308, 299, 278, 423, 300, 301, 291, 341,
	307, 342, 292, 319, 318, 320, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 0, 366, 0, 0, 302,
	0, 0, 0, 409, 0, 353, 335, 0, 0, 0,
	351, 305, 378, 343, 384, 368, 392, 347, 344, 240,
	369, 273, 316, 251, 253, 268, 275, 277, 279, 280,
	325, 326, 338, 357, 370, 371, 372, 272, 261, 352,
	262, 289, 263, 241, 265, 264, 266, 359, 267, 243,
	339, 376, 0, 285, 348, 312, 244, 311, 340, 375,
	374, 252, 400, 406, 407, 0, 0, 412, 0, 0,
	0, 420, 425, 426, 427, 429, 430, 431, 432, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	405, 283, 237, 238, 445, 269, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 404,
	0, 0, 0, 433, 444, 0, 0, 0, 0, 0,
	443, 337, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 386, 398, 415,
	418, 0, 0, 0, 0, 242, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 413, 0, 0, 321, 322,
	323, 324, 286, 0, 259, 416, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 411, 282, 288, 428, 290,
	258, 336, 284, 395, 297, 0, 421, 0, 422, 0,
	0, 0, 0, 328, 293, 294, 360, 298, 306, 349,
	394, 334, 354, 256, 385, 361, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 236, 0,
	239, 0, 304, 0, 345, 281, 0, 0, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 0, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 333, 0, 0, 232,
	233, 234, 235, 0, 0, 0, 401, 402, 403, 424,
	387, 0, 442, 276, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 446, 438, 0, 0, 0, 434,
	0, 435, 0, 0, 0, 0, 0, 362, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 254, 187, 436, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 367, 383, 255, 358, 396, 260, 365, 250,
	332, 355, 0, 0, 247, 381, 364, 314, 295, 296,
	246, 0, 350, 274, 287, 271, 330, 0, 380, 408,
	270, 399, 0, 391, 249, 0, 390, 329, 377, 382,
	315, 309, 248, 379, 313, 308, 299, 278, 423, 300,
	301, 291, 341, 307, 342, 292, 319, 318, 320, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 0, 366,
	0, 0, 302, 0, 0, 0, 409, 0, 353, 335,
	0, 0, 0, 351, 305, 378, 343, 384, 368, 392,
	347, 344, 240, 369, 273, 316, 251, 253, 268, 275,
	277, 279, 280, 325, 326, 338, 357, 370, 371, 372,
	272, 261, 352, 262, 289, 263, 241, 265, 264, 266,
	359, 267, 243, 339, 376, 0, 285, 348, 312, 244,
	311, 340, 375, 374, 252, 400, 406, 407, 0, 0,
	412, 0, 0, 0, 420, 425, 426, 427, 429, 430,
	431, 432, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 405, 283, 237, 238, 445, 269, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 404, 0, 0, 0, 433, 444, 0, 0,
	0, 0, 0, 443, 337, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	386, 398, 415, 418, 0, 0, 0, 0, 242, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 413, 0,
	0, 321, 322, 323, 324, 286, 0, 259, 416, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 282,
	288, 428, 290, 258, 336, 284, 395, 297, 0, 421,
	0, 422, 0, 0, 0, 0, 328, 293, 294, 360,
	298, 306, 349, 394, 334, 354, 256, 385, 361, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 236, 0, 239, 0, 304, 0, 345, 281, 0,
	0, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 0, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 333,
	0, 0, 232, 233, 234, 235, 0, 0, 0, 401,
	402, 403, 424, 387, 0, 442, 276, 0, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 0,
	0, 0, 434, 0, 435, 0, 0, 0, 0, 0,
	362, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 254, 187,
	436, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 367, 1199, 255, 358, 396,
	260, 365, 250, 332, 355, 0, 0, 247, 381, 364,
	314, 295, 296, 246, 0, 350, 274, 287, 271, 330,
	0, 380, 408, 270, 399, 0, 391, 249, 0, 390,
	329, 377, 382, 315, 309, 248, 379, 313, 308, 299,
	278, 423, 300, 301, 291, 341, 307, 342, 292, 319,
	318, 320, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 0,
	0, 0, 366, 0, 0, 302, 0, 0, 0, 409,
	0, 353, 335, 0, 0, 0, 351, 305, 378, 343,
	384, 368, 392, 347, 344, 240, 369, 273, 316, 251,
	253, 268, 275, 277, 279, 280, 325, 326, 338, 357,
	370, 371, 372, 272, 261, 352, 262, 289, 263, 241,
	265, 264, 266, 359, 267, 243, 339, 376, 0, 285,
	348, 312, 244, 311, 340, 375, 374, 252, 400, 406,
	407, 0, 0, 412, 0, 0, 0, 420, 425, 426,
	427, 429, 430, 431, 432, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 405, 283, 237, 238,
	445, 269, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 404, 0, 0, 0, 433,
	444, 0, 0, 0, 0, 0, 443, 337, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 386, 398, 415, 418, 0, 0, 0,
	0, 242, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 413, 0, 0, 321, 322, 323, 324, 286, 0,
	259, 416, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 411, 282, 288, 428, 290, 258, 336, 284, 395,
	297, 0, 421, 0, 422, 0, 0, 0, 0, 328,
	293, 294, 360, 298, 306, 349, 394, 334, 354, 256,
	385, 361, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 236, 0, 239, 0, 304, 0,
	345, 281, 0, 0, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 0, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 333, 0, 0, 232, 233, 234, 235, 0,
	0, 0, 401, 402, 403, 424, 387, 0, 442, 276,
	0, 0, 303, 0, 0, 0, 0, 0, 0, 0,
	446, 438, 0, 0, 0, 434, 0, 435, 0, 0,
	0, 0, 0, 362, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 254, 187, 436, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 367, 1197,
	255, 358, 396, 260, 365, 250, 332, 355, 0, 0,
	247, 381, 364, 314, 295, 296, 246, 0, 350, 274,
	287, 271, 330, 0, 380, 408, 270, 399, 0, 391,
	249, 0, 390, 329, 377, 382, 315, 309, 248, 379,
	313, 308, 299, 278, 423, 300, 301, 291, 341, 307,
	342, 292, 319, 318, 320, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 0, 366, 0, 0, 302, 0,
	0, 0, 409, 0, 353, 335, 0, 0, 0, 351,
	305, 378, 343, 384, 368, 392, 347, 344, 240, 369,
	273, 316, 251, 253, 268, 275, 277, 279, 280, 325,
	326, 338, 357, 370, 371, 372, 272, 261, 352, 262,
	289, 263, 241, 265, 264, 266, 359, 267, 243, 339,
	376, 0, 285, 348, 312, 244, 311, 340, 375, 374,
	252, 400, 406, 407, 0, 0, 412, 0, 0, 0,
	420, 425, 426, 427, 429, 430, 431, 432, 0, 0,
	0, 0, 414, 0, 0, 0, 0, 0, 0, 405,
	283, 237, 238, 445, 269, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 404, 0,
	0, 0, 433, 444, 0, 0, 0, 0, 0, 443,
	337, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 386, 398, 415, 418,
	0, 0, 0, 0, 242, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 413, 0, 0, 321, 322, 323,
	324, 286, 0, 259, 416, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 410, 411, 282, 288, 428, 290, 258,
	336, 284, 395, 297, 0, 421, 0, 422, 0, 0,
	0, 0, 328, 293, 294, 360, 298, 306, 349, 394,
	334, 354, 256, 385, 361, 310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 236, 0, 239,
	0, 304, 0, 345, 281, 0, 0, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	0, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 333, 0, 0, 232, 233,
	234, 235, 0, 0, 0, 401, 402, 403, 424, 387,
	0, 442, 276, 0, 0, 303, 0, 0, 0, 0,
	0, 0, 0, 446, 438, 0, 0, 0, 434, 0,
	435, 0, 0, 0, 0, 0, 362, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 254, 187, 436, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 367, 383, 255, 358, 396, 260, 365, 250, 332,
	355, 0, 0, 247, 381, 364, 314, 295, 296, 246,
	0, 350, 274, 287, 271, 330, 0, 380, 408, 270,
	399, 0, 391, 249, 0, 390, 329, 377, 382, 315,
	309, 248, 379, 313, 308, 299, 278, 423, 300, 301,
	291, 341, 307, 342, 292, 319, 318, 320, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 0, 366, 0,
	0, 302, 0, 0, 0, 409, 0, 353, 335, 0,
	0, 0, 351, 305, 378, 343, 384, 368, 392, 347,
	344, 240, 369, 273, 316, 251, 253, 525, 275, 277,
	279, 280, 325, 326, 338, 357, 370, 371, 372, 272,
	261, 352, 262, 289, 263, 241, 265, 264, 266, 359,
	267, 243, 339, 376, 0, 285, 348, 312, 244, 311,
	340, 375, 374, 252, 400, 406, 407, 0, 0, 412,
	0, 0, 0, 420, 425, 426, 427, 429, 430, 431,
	432, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 405, 283, 237, 238, 445, 269, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 404, 0, 0, 0, 433, 444, 0, 0, 0,
	0, 0, 443, 337, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 386,
	398, 415, 418, 0, 0, 0, 0, 242, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 389, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 413, 0, 0,
	321, 322, 323, 324, 286, 1631, 259, 416, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 282, 288,
	428, 290, 258, 336, 284, 395, 297, 0, 421, 1633,
	422, 0, 0, 866, 0, 328, 293, 294, 360, 298,
	306, 349, 394, 334, 354, 256, 385, 361, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1631, 231, 0, 0, 0, 0, 0, 0, 0,
	3280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1608, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	236, 0, 239, 0, 304, 1633, 345, 281, 0, 0,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 0, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 0, 0,
	0, 232, 233, 234, 235, 0, 1608, 1624, 401, 402,
	403, 424, 387, 852, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 446, 438, 0, 0,
	0, 0, 0, 874, 878, 880, 882, 884, 885, 887,
	0, 892, 888, 889, 890, 891, 0, 869, 870, 871,
	872, 850, 851, 875, 719, 853, 720, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 865, 867, 863, 864,
	873, 0, 0, 1624, 0, 0, 0, 0, 877, 879,
	881, 883, 886, 0, 0, 0, 1612, 0, 0, 0,
	0, 0, 701, 0, 0, 0, 0, 1618, 0, 0,
	0, 0, 0, 0, 0, 713, 0, 716, 0, 0,
	0, 0, 0, 0, 0, 868, 0, 1606, 1640, 1631,
	0, 1607, 1609, 1611, 0, 1613, 1614, 1615, 1619, 1620,
	1621, 1623, 1626, 1627, 1628, 0, 0, 0, 0, 0,
	0, 0, 1616, 1625, 1617, 0, 0, 0, 0, 0,
	0, 0, 1612, 1633, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1618, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1632, 0, 0, 0,
	0, 0, 0, 1606, 1640, 0, 0, 1607, 1609, 1611,
	0, 1613, 1614, 1615, 1619, 1620, 1621, 1623, 1626, 1627,
	1628, 0, 0, 0, 1608, 0, 0, 0, 1616, 1625,
	1617, 504, 503, 510, 500, 1629, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 0, 509, 513, 0, 0,
	495, 0, 1605, 715, 0, 709, 0, 697, 0, 1604,
	518, 0, 1632, 0, 712, 711, 0, 0, 2190, 2191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 694, 0, 1622, 0, 702, 0, 3025, 0, 0,
	0, 1624, 1610, 0, 0, 0, 0, 504, 503, 510,
	500, 1629, 0, 522, 0, 0, 524, 0, 0, 507,
	508, 523, 509, 513, 0, 0, 495, 0, 1605, 0,
	0, 0, 0, 0, 718, 1604, 518, 0, 0, 708,
	0, 0, 0, 707, 0, 0, 0, 0, 0, 693,
	0, 0, 0, 700, 0, 0, 0, 0, 0, 1622,
	0, 0, 0, 0, 0, 0, 0, 0, 1610, 0,
	698, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1618, 0, 695, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 717, 0, 0,
	0, 1606, 1640, 876, 0, 1607, 1609, 1611, 0, 1613,
	1614, 1615, 1619, 1620, 1621, 1623, 1626, 1627, 1628, 0,
	0, 0, 0, 699, 0, 0, 1616, 1625, 1617, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 496, 498, 497, 0,
	0, 0, 0, 0, 0, 0, 502, 0, 0, 0,
	1632, 0, 0, 0, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 714, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 496, 498, 497, 0, 1605, 0, 0, 0,
	0, 0, 502, 1604, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 0,
	0, 521, 0, 0, 0, 0, 0, 1622, 499, 0,
	0, 0, 0, 0, 0, 0, 1610, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 501, 505, 511, 0,
	512, 514, 0, 0, 515, 516, 517, 0, 0, 519,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 501, 505, 511, 0, 512, 514, 0, 0,
	515, 516, 517, 0, 0, 519, 520,
}

var yyPact = [...]int{
	4317, -1000, -1000, -1000, -312, 10391, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34944,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34944,
	-309, 34401, 34401, -1000, -1000, 2342, -1000, 33857, 11522, 34944,
	311, 307, 34944, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 575,
	-1000, 33314, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 529,
	4400, 36573, 8141, -260, -1000, 2894, -107, 2000, 754, 760,
	983, 983, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 37139, 721, 32771, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3009, 362, 721, 13701, 5, 4,
	2894, 328, 257, -1000, 1070, 3250, 159, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8141, 8141,
	10391, -347, 10391, 8141, 34944, 34944, -1000, -1000, -1000, -1000,
	529, 4400, 8141, 2000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14740,
	-1000, 1276, -1000, -1000, -1000, -1000, -1000, 2519, 1272, 1995,
	489, 34944, -1000, 1264, 489, -1000, -1000, -1000, 2894, 2894,
	-1000, 34944, 34944, 73, 1486, -1000, 346, 309, 318, 1256,
	-1000, -1000, -1000, -1000, -1000, -1000, 408, 2870, -1000, 34944,
	34944, 2550, 34944, -1000, 1862, 452, 37339, 2729, 1140, 632,
	2565, -1000, -1000, 2518, -1000, 179, 187, 169, 289, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 207, -1000, 2791, -1000,
	-1000, 172, -1000, -1000, 177, -1000, -1000, -1000, 3, -1000,
	-1000, -1000, -1000, -1000, -1000, -90, -1000, -1000, 864, 1799,
	8141, -1000, 1775, -1000, 2337, -1000, -1000, -1000, -1000, 5334,
	9821, 9821, 9821, 9821, -1000, -1000, 2349, 8141, 2517, 2515,
	-1000, -1000, -1000, -1000, -1000, 1245, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1638, -1000, -1000, -1000, 9261,
	-1000, 2514, 2510, 2506, 2504, 2487, 2486, 2485, 2481, 2480,
	2476, 2474, 2468, 2467, 2465, 2150, 10949, 2461, 1992, 1989,
	2452, 2450, 2444, 1988, 2150, 2150, 2443, 2442, 2440, 2439,
	2438, 2435, 2429, 2428, 2427, 2423, 2418, 2416, 2415, 2414,
	2413, 2412, 2406, 2403, 2389, 2384, 2380, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1056, -1000, 2379, 2707, 2804, 2199, 2855, 2778, 2776, 2771,
	2765, 1783, -1000, -1000, 65, -1000, -126, -1000, -1000, 733,
	-1000, 707, -1000, 34944, 34944, 34944, 852, 527, 527, 527,
	527, 527, 527, 554, 527, -153, 573, 570, 566, 527,
	-1000, -1000, -1000, -1000, -1000, -1000, -105, -1000, 1485, 1484,
	2601, 683, -1000, -1000, -1000, -1000, 1098, 34944, -1000, 2277,
	1346, 1346, 2800, 474, 458, 421, 1346, 356, -1000, 1543,
	1543, 1543, 1543, 1346, 369, 468, 2804, 2804, -5, 1543,
	-20, 1346, 1346, -20, 1346, 1346, 1346, 154, -304, -1000,
	-1000, -1000, 1543, 1543, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2784, 2782, 529, 34944, 126, 34944, 529, 529, 529,
	534, -45, 36030, 35487, 1862, 446, 444, 1102, 1490, -1000,
	1442, 34944, 34944, 1442, 1442, 18096, 17553, -1000, 34944, -1000,
	2804, 2199, -1000, 2134, 2447, 2133, 2199, 529, 529, 529,
	529, 529, 139, 529, 529, 529, 529, 34944, 34944, 32228,
	529, 529, 7014, 7014, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 10391, 1705, 1683, 157, -71, -313, 188,
	-1000, -1000, 34944, 2692, 140, -1000, -1000, -1000, 2190, -1000,
	2270, 2270, 2270, 2270, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2270, 2270, 2295, 2371, -1000, -1000, 2266,
	2266, 2266, 2190, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2292, 2292,
	2294, 2294, 2292, 34944, 8141, 34944, 2715, 306, 2369, -1000,
	34944, 305, 2804, 2707, 2804, -1000, -1000, 1236, 1781, 1987,
	-1000, -1000, 346, 1360, -1000, 978, -1000, -1000, -1000, -1000,
	34944, -90, 314, -1000, -1000, 1969, 2367, -1000, 477, 1066,
	1063, -1000, 175, 37405, 27877, 1862, 27877, 34944, -1000, -1000,
	-1000, -1000, -1000, -1000, -2, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 174, -1000,
	8141, 8141, 8141, 8141, 8141, -1000, 517, 8701, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 9821, 9821, 9821, 9821, 9821,
	9821, 9821, 9821, 9821, 9821, 9821, 9821, 2331, 1449, 9821,
	9821, 9821, 9821, 2447, 2599, 1100, 229, -1000, -1000, -1000,
	-1000, -1000, 1536, 1799, 8141, 8141, 34944, -1000, -1000, 3956,
	8141, 8141, 3044, 8141, 2762, 8141, 8141, 8141, 2128, 3689,
	34944, 8141, -1000, 2125, 2124, -1000, -1000, 1659, 8141, -1000,
	-1000, 8141, -1000, -1000, 8141, 9821, 8141, -1000, -1000, -1000,
	2983, 2762, 2762, 1451, 8141, 8141, 2762, 2762, 2762, 1432,
	2762, 2762, 2762, 2762, 2762, 2762, 2762, 2762, 2123, 2119,
	2118, 2804, -260, 6454, -1000, -266, 2707, 8141, -1000, -1000,
	8141, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1985,
	1983, -331, -50, 749, 715, 720, -1000, 2749, -1000, 2366,
	2363, 1223, 527, -1000, -106, 34944, 1573, 34944, 27877, 34944,
	34944, 1862, 34944, 34944, 527, -159, 527, 527, 527, 34944,
	-1000, 2634, 27877, 2627, 534, -1000, 34944, 1098, 2746, 34944,
	2861, 9821, 9821, -1000, 31685, 1543, 1346, 1346, -1000, -1000,
	34944, -1000, -1000, -1000, 1543, 34944, 1543, 1543, 2861, 1543,
	-1000, -1000, -1000, 1346, 1346, -1000, -1000, -1000, -1000, 1543,
	1543, -1000, -1000, 2861, 34944, -14, 2861, 2861, -17, -1000,
	-1000, -1000, 34944, 34944, 527, 34944, -1000, 34944, 34944, -1000,
	-1000, 34944, 4328, 34944, 31142, 2781, -1000, 27877, 34944, 34944,
	25705, -1000, 1067, -1000, -43, -1000, -64, -45, 1442, -45,
	1442, -1000, 473, 530, 16467, 419, 27877, 4774, -1000, -1000,
	1442, 1442, 4774, 4774, 1294, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1096, -1000, 178, 2707, -1000, -1000, -1000, -1000,
	-1000, 34944, 34944, 27877, 1862, 34944, 529, 34944, 34944, 34944,
	34944, -1000, 2354, -1000, 2726, 34944, 34944, 962, -1000, -1000,
	13158, 1222, 962, -1000, 1519, -1000, 8141, 10391, -281, 8141,
	10391, 10391, 8141, 10391, -1000, 8141, 133, -1000, -1000, -1000,
	-1000, 1779, -1000, 1774, -1000, -1000, -1000, -1000, -1000, 1975,
	1975, -1000, 1773, -1000, -1000, -1000, -1000, 1764, -1000, -1000,
	1763, -1000, -1000, -1000, 2106, 864, -1000, 1973, 2564, -261,
	-1000, 15364, 34944, 34944, -1000, -1000, -261, -1000, 14804, 34944,
	2707, -1000, 2707, 34944, -1000, 2799, -1000, 346, 268, -1000,
	-1000, -1000, -1000, -1000, -1000, 1219, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1094, -1000, 34944, -1000, -1000,
	175, 27877, 28963, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	199, -1000, -1000, 163, -1000, 551, 100, 1358, -1000, -1000,
	129, 167, 567, 1799, -1000, 1549, 1549, 1556, -1000, 540,
	-1000, -1000, -1000, -1000, 2349, -1000, -1000, -1000, 1504, 2849,
	-1000, 1400, 1400, 1327, 1327, 1327, 1327, 1327, 1410, 1410,
	-1000, -1000, -1000, 5334, 2331, 9821, 9821, 9821, 9821, 499,
	499, 1831, 3301, -1000, 8141, 1518, -1000, 8141, 2430, 1226,
	1208, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2103, 2102, 2287, 2869, 2087, 8141, -1000, -1000, 1356,
	1355, 1353, -1000, 1745, 7581, -1000, -1000, -1000, 2084, 1195,
	2082, -1000, -1000, -1000, 2079, 1342, 873, 2078, 1778, 2076,
	1083, 8141, 8141, 8141, 2075, 1336, 1321, 8141, 8141, 8141,
	8141, 2072, 8141, 8141, 8141, 8141, 8141, 8141, 8141, 8141,
	26, 26, 26, -1000, -1000, 1318, -1000, 1799, -1000, 1965,
	-1000, 1134, 1077, -1000, 1826, -1000, -1000, -1000, 1916, -1000,
	-1000, 727, 690, 722, 34944, 826, 12065, 34944, 34944, -1000,
	2277, 2724, 130, -1000, 1065, -1000, 100, -100, 321, 884,
	2548, 2868, 34944, 527, 34944, 34944, 34944, 2740, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 30599, -1000, 2324, 1317,
	-1000, -1000, 8141, -1000, -1000, 2546, 34944, 34944, 2861, 2861,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 34944, 2861, 2861,
	1346, 1543, -1000, -1000, 1543, -1000, -1000, 1543, -1000, 1194,
	-1000, 34944, -1000, -1000, -1000, 2277, 1076, -1000, 969, 511,
	511, 723, 428, 2854, 14244, -1000, 1384, 973, 550, 2670,
	192, -1000, 1384, -211, 1384, 1384, 1384, 1384, 1384, 1384,
	1384, 402, 399, 1384, 1384, 1384, 1384, 1384, 1384, 1384,
	1384, 1384, 1384, 1384, 759, 1384, 1384, 1384, 1384, 1384,
	-1000, 1384, 2321, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	455, 124, 2775, 228, 221, 1065, 2769, 245, 2708, 1055,
	-1000, -1000, -1000, -1000, 20275, 20275, 15924, 20275, -1000, 1368,
	-45, -56, -1000, -1000, 1067, 4774, 1067, 4774, -1000, -1000,
	546, -1000, -1000, 884, -1000, 34944, 34944, -1000, -1000, 2306,
	1472, -1000, -1000, 10949, -1000, 4774, 4774, -1000, -1000, 20818,
	34944, -1000, -92, -1000, -76, 2798, 1047, -1000, -1000, 1050,
	884, 2562, 34944, 1047, 1047, -1000, -1000, 12065, 34944, -1000,
	-1000, 2861, 7014, -1000, 25705, -1000, -1000, 30049, -1000, 29506,
	2861, 1514, -1000, 10391, 1643, 153, -1000, 184, -319, 146,
	1562, 145, 1799, -1000, -1000, 2071, 2069, 1314, -1000, 1312,
	2067, 1311, 1308, -1000, -31, -1000, 2694, 885, -1000, 2304,
	-1000, 1305, 2617, -1000, 1042, -1000, 1471, 1302, -1000, 885,
	1300, 2607, 1042, 2798, -1000, 1146, 66, -1000, -1000, 34944,
	1969, 1287, 28963, 930, -1000, 542, 1145, 1132, -1000, 27877,
	183, 27877, -1000, 27877, -1000, -1000, 326, -1000, 34944, 2703,
	-1000, -1000, -1000, 1916, -335, -1000, -1000, -1000, -1000, -1000,
	1285, -1000, 499, 499, 1831, 3278, -1000, 9821, -1000, 9821,
	2554, 1513, -1000, 8141, 1622, 37003, 2372, 19182, 34944, -1000,
	-1000, 8141, 8141, -1000, 2544, -1000, -1000, -1000, -1000, 8141,
	8141, 1782, -1000, 34944, -1000, -1000, -1000, -1000, 19182, -1000,
	9821, -1000, 8141, 923, 2522, 1282, 26, 26, 26, 2511,
	2507, 2404, 1280, 26, 2381, 2311, 2307, 2256, 2235, 2226,
	2222, 2205, -1000, 2302, -1000, -1000, 6454, -1000, -31, 8141,
	8141, 8141, 2652, -1000, -1000, 104, -1000, 1467, -1000, -1000,
	-1000, 688, 152, 2065, 1038, -1000, -1000, 34944, -1000, -1000,
	-1000, 2064, 1033, -1000, -1000, -1000, 15300, 2270, 2270, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2270, 2270,
	2295, -1000, -1000, 2266, 2266, 2266, 2190, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2292, 2292, 2294, 2294,
	2292, -1000, 2277, 2737, -1000, 37, 1384, 466, 27877, 426,
	-1000, 34944, 1758, 1463, 2561, 271, 2679, 34944, 260, 34944,
	2291, 2290, 2289, 295, 15300, 34944, 920, -1000, 1131, 3250,
	-1000, 34944, 1799, -1000, 1862, -1000, 1346, -1000, -1000, 2861,
	1233, -1000, -1000, 2861, 1346, 1346, 1543, 34944, -1000, 2735,
	4328, -1000, 34944, -1000, -1000, -1000, 682, -1000, 691, 527,
	34944, 1605, 691, 1603, 2280, -1000, -1000, 34944, 34944, 34944,
	34944, -1000, -1000, 34944, -1000, 34944, 34944, 34944, 34944, -1000,
	34944, 34944, -1000, 34944, 1600, 1598, 2677, -1000, 1384, 1384,
	648, -1000, -1000, 457, -1000, 1762, 1753, 1752, 1750, 1956,
	1951, 1949, 1384, 1384, 1733, 1948, 28420, 1943, 971, 1728,
	1726, 1724, 1747, 1940, 736, -1000, 1939, 1746, 1727, 1708,
	34944, 2278, 1894, -1000, -1000, 37, 1384, 220, 34944, 1456,
	466, 319, 1787, 17010, 34944, 25705, 25705, 25705, 25705, -1000,
	2591, 2590, -1000, 2603, 2578, 2604, 34944, 25705, 2277, -1000,
	28420, -1000, -1000, -1000, 2447, 1257, 2793, 685, 8141, -1000,
	-1000, -68, -75, -1000, -1000, -1000, 27877, 1937, 419, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2878, 34944, 34944,
	563, 2063, -1000, 2859, -1000, 1015, -1000, -1000, 1126, -1000,
	2859, 1538, -315, 10391, 1520, 1466, -1000, 8141, 10391, 8141,
	-282, 205, -293, -1000, -1000, -1000, 1935, -1000, -1000, -1000,
	1714, -1000, 1711, 41, 49, 1595, -261, 6454, 322, 34944,
	-261, 34944, 6454, -1000, 34944, 313, -261, -1000, 34944, 1707,
	-1000, -1000, -1000, 2864, 27877, 1862, 1319, 27334, -1000, 162,
	-1000, 197, 461, 1934, -1000, 543, 103, 1916, -1000, -1000,
	-1000, 9821, -1000, -1000, -1000, -1000, 1799, 8141, 2061, -1000,
	687, 687, 2055, -1000, 2270, 2270, -1000, 2190, 2266, 2190,
	687, 687, 2054, -1000, 1756, 2201, -1000, 2081, 2030, 8141,
	-1000, 2053, 3240, 1115, -124, 26, 26, -1000, -1000, -1000,
	-1000, 26, 26, 26, 26, -1000, 26, 26, 26, 26,
	26, 26, 26, 26, 490, -1000, 41, 1799, 1799, -1000,
	-1000, 2684, -1000, 1916, 1915, -1000, 1910, 1909, 826, 15300,
	578, 12065, 2681, 2733, 327, 1791, -1000, -1000, -1000, 26791,
	427, -1000, -1000, -1000, 539, 198, 1703, 441, -1000, 34944,
	245, 2642, 1455, 1908, 34944, -1000, -1000, -1000, -1000, -1000,
	2679, -1000, 909, 272, 12608, 2732, 2261, 2245, 12608, 12608,
	12608, 287, 1488, -1000, 489, 958, 1125, 25705, 34944, -1000,
	25162, 2051, -1000, 884, 2861, -1000, 34944, -1000, 2861, 2861,
	1346, -1000, 327, -1000, 2654, 15300, -1000, 34944, -1000, 34944,
	-1000, 34944, 34944, 527, 8141, 2654, 34944, 541, -1000, -1000,
	799, 278, 552, 552, 935, -1000, 2699, -1000, -1000, -1000,
	34944, -1000, -1000, -1000, -1000, -1000, -1000, 19182, 19182, 2761,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1906, 1905, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 34944, 1248, -1000, 1450, 1791, 26791, 1444,
	1442, 1903, 427, 1758, 1443, -1000, 1901, -1000, 888, 34944,
	34944, -1000, 963, -1000, 1406, 2531, 2560, 2531, -1000, -1000,
	-1000, -1000, 2581, -1000, 2577, -1000, -1000, 963, -1000, -1000,
	-1000, -1000, -1000, 685, -1000, 2795, 691, 691, 691, 2048,
	-1000, -1000, -1000, 930, 2038, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2850, 2853, 26248, 2850, -1000, -315,
	1507, -1000, 1587, 141, 1555, 34944, -1000, -1000, -1000, 2037,
	2034, -268, 57, 2848, 2845, 2877, -1000, 2033, 894, -261,
	-1000, -1000, 885, -1000, -1000, -1000, -261, -1000, 885, -1000,
	-1000, 1862, -1000, 191, -1000, -1000, -1000, -1000, -1000, -1000,
	86, -1000, 34944, -1000, 102, -1000, 1799, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 8141, -1000, -1000, -1000, 1991, -1000, -1000, 8141,
	2032, 1899, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2872, -1000, 2838, -268,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 15300, -1000,
	1500, 327, -170, -1000, 1898, 96, -1000, -1000, -1000, 1897,
	1895, 1699, -1000, -1000, 1706, 1114, 117, -1000, -1000, -1000,
	-1000, -1000, -1000, 1787, 1780, 1405, -344, -1000, 2243, -1000,
	1384, 1384, 1384, 34944, 2025, 889, -1000, -1000, -1000, -1000,
	327, 24076, 12608, 2023, 2022, 2014, 493, 1465, 1464, -1000,
	1692, 20275, 25705, 25162, 914, -1000, 1112, -1000, -1000, -1000,
	2861, -1000, -1000, 2861, -1000, -1000, -1000, 34944, 242, 2240,
	-1000, 2225, 2532, 312, 2224, 2221, 34944, 1938, -1000, 2654,
	34944, 548, 2674, -1000, -1000, -1000, -1000, -1000, 332, -1000,
	34944, -1000, -1000, 1283, -1000, 19182, -1000, -1000, 1243, -1000,
	1894, 1893, -1000, 96, 1876, 4774, -1000, -1000, 2642, 1874,
	-1000, 34944, 888, 888, 2872, 34944, 6454, -1000, -1000, 8141,
	2219, -1000, 8141, -1000, -1000, -1000, -1000, -1000, 2207, 2695,
	-1000, -1000, -1000, -1000, -1000, -1000, 8141, 8141, -1000, -1000,
	515, 10391, -294, 200, -1000, -1000, -1000, -271, 1868, -1000,
	-1000, 2837, 1866, 1754, 34944, -1000, 885, 885, 884, -1000,
	-1000, -17, -1000, 1931, -1000, 1923, 26, -1000, 158, 8141,
	-271, -166, -1000, -1000, -170, -1000, 325, -1000, -1000, 324,
	-1000, -1000, 238, -1000, -1000, 1700, 469, -1000, -1000, -1000,
	1864, 1619, 1808, 23533, 19182, 19725, 1860, -1000, -175, 12608,
	-1000, 1241, -1000, 1384, 1384, 2010, 37055, 174, 37055, 762,
	1399, -1000, 1687, -1000, 1678, -1000, 2861, 914, 1112, -1000,
	-1000, 1290, -1000, -1000, -1000, -1000, 242, -1000, -1000, 1616,
	9821, -1000, -1000, 1858, 19725, 671, 1403, 1401, 694, 2203,
	-1000, 372, 2876, -1000, -1000, -1000, 621, 2200, -1000, 1580,
	1579, -1000, 34944, -1000, 23533, 23533, 373, 373, 23533, 23533,
	2198, 552, -1000, -1000, 9821, -1000, -1000, -1000, -1000, 1384,
	1281, -1000, -1000, -1000, -1000, -1000, -1000, 1780, -1000, -1000,
	2804, -1000, -1000, 1799, 34944, 1799, 24619, -1000, 2826, 2824,
	1799, 864, -1000, -315, 34944, 34944, -273, 1676, -1000, 1853,
	52, -1000, -1000, 867, -275, 40, 39, -1000, -1000, -1000,
	1974, -1000, 801, -1000, -1000, -1000, 864, -273, 34944, -1000,
	366, -1000, -1000, 453, 1846, -1000, -1000, 234, -1000, -1000,
	-1000, -1000, -1000, 101, -1000, 1389, 1237, -1000, 2190, 8141,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 24076, 1500,
	1500, -175, 488, 37253, -1000, 973, -1000, -17, 488, 445,
	236, -1000, 1669, -1000, -1000, 2872, -1000, -1000, -1000, 1831,
	-1000, -1000, -1000, -1000, -1000, -1000, 1842, 1841, -1000, -1000,
	-1000, -1000, -1000, 1663, 2187, -110, 2759, 1840, -1000, -1000,
	2186, 1231, 1229, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1214, 1147, 23533, -1000, -1000, 1831, 19182, 1384, -1000, -1000,
	1121, 1113, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2159,
	-1000, -1000, 2823, -1000, 1818, 531, 43, 39, -1000, 2819,
	42, 2818, 2813, -1000, -1000, 796, -262, 21, 15, 12,
	-1000, -1000, -1000, 8141, -1000, 2731, -1000, 161, -1000, 84,
	-1000, -1000, -1000, 1808, 1807, -1000, 23533, 2699, 1907, -1000,
	-1000, -1000, -1000, 330, 2812, 37055, -1000, 1384, -1000, 330,
	-1000, 290, -1000, 1390, -1000, 1661, -1000, 2804, -1000, -1000,
	1912, 8141, 2150, 1384, 1792, -162, 23533, 2528, 2526, 2513,
	2449, 1099, -1000, 19182, -1000, -1000, 22990, 34944, 1754, -1000,
	2148, 1660, 57, 44, 2810, -1000, 1754, 2809, 1754, 1754,
	1550, -1000, 19, 17, 10, -1000, -1000, -1000, -1000, 1802,
	-1000, -1000, -1000, -1000, 240, -1000, -1000, 2699, -1000, 2808,
	352, -1000, 19182, -1000, -1000, -1000, 1649, -1000, -1000, -1000,
	1849, -1000, 34944, -1000, 2556, -1000, 134, 1081, 240, 373,
	240, 373, 240, 373, 240, 373, 151, -1000, -1000, -1000,
	1016, -1000, -1000, 2757, 18639, 32, -1000, -1000, -1000, 1796,
	-1000, 1754, -1000, -1000, 796, -1000, -1000, -1000, -1000, -1000,
	1384, 1647, 262, -1000, -1000, -1000, 22447, 350, 358, 355,
	-1000, 519, -1000, -1000, -1000, 552, -1000, -1000, 2545, 2208,
	2867, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 34944, -1000, 34944, -1000, 1014, -1000, -1000, -1000, 1104,
	-1000, -1000, -1000, -1000, -1000, 1640, -1000, 34944, -1000, 34944,
	344, 1639, 9821, 2145, 9821, 2144, 357, 2142, -1000, -1000,
	2875, -1000, 2873, 697, 697, 240, 240, 240, 240, -1000,
	785, -1000, 1383, -1000, 21904, 34944, -1000, -1000, 1004, 2140,
	2806, -1000, 2866, 34944, 2436, 34944, 2137, 1352, 9821, -1000,
	-1000, -1000, 1674, 365, -1000, 34944, 5894, -1000, 797, -1000,
	-1000, 487, 347, -1000, 988, -1000, 984, 21361, 1632, 2036,
	-1000, -1000, -1000, -1000, -1000, 1799, 34944, 982, -1000, 34944,
	329, -1000, -1000, -1000, 965, -1000, -1000, -1000, -1000, 487,
	2606, -1000, 1630, -1000, -1000, 36989, 598, -1000, -1000, 36989,
	343, -1000, 483, 1944, -1000, -1000, 950, -1000, 34944, 670,
	8141, -1000, 343, 37055, -1000, 8141, 937, -1000, 37055, 891,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 148, 2910, 239, 153, 3475, 88, 237, 211, 208,
	236, 3473, 3471, 2716, 2696, 3462, 3458, 3456, 3452, 3450,
	3449, 3448, 3435, 3432, 3431, 3430, 3429, 3428, 3427, 3426,
	3425, 3409, 3405, 3404, 3403, 3396, 3395, 3393, 3390, 3387,
	217, 3372, 3371, 3369, 3368, 3367, 3366, 3365, 3364, 3363,
	3361, 3360, 3359, 3358, 3357, 3356, 3355, 3354, 3353, 3352,
	3350, 3349, 3347, 3344, 3343, 3342, 3336, 3332, 3330, 3329,
	3328, 3324, 202, 3323, 2692, 3321, 3320, 3319, 3318, 3317,
	3315, 3314, 213, 3313, 3311, 3309, 3308, 3307, 3306, 3304,
	3302, 3299, 3294, 3293, 220, 3292, 3290, 3288, 3286, 3285,
	3284, 216, 3282, 143, 176, 3279, 3278, 3276, 3274, 3273,
	3272, 224, 263, 68, 3270, 44, 3268, 215, 3267, 139,
	3266, 132, 3261, 3259, 3258, 3255, 3254, 3252, 3250, 3246,
	3245, 3243, 3242, 3241, 3240, 3239, 3235, 3233, 84, 3229,
	247, 3228, 69, 3225, 3223, 109, 230, 175, 244, 2403,
	250, 241, 167, 150, 86, 3222, 2678, 3217, 226, 229,
	131, 23, 3214, 157, 3213, 135, 43, 46, 242, 124,
	54, 190, 105, 3212, 207, 95, 93, 3211, 3209, 166,
	238, 168, 3208, 110, 3207, 3206, 3203, 3201, 184, 187,
	3199, 3196, 114, 3195, 3189, 101, 3187, 67, 188, 138,
	177, 3186, 94, 108, 106, 100, 3184, 3183, 90, 3182,
	3181, 3176, 3175, 162, 3173, 3171, 127, 64, 3168, 3167,
	3166, 66, 3165, 47, 3164, 33, 3163, 57, 3162, 3161,
	3160, 3159, 3158, 3156, 3154, 3152, 3151, 3150, 3149, 70,
	3148, 3146, 16, 17, 19, 3145, 26, 3144, 151, 3142,
	3141, 3135, 82, 79, 3133, 81, 1, 48, 3132, 214,
	119, 87, 145, 3131, 428, 3130, 3129, 3128, 137, 3127,
	557, 3124, 3123, 3121, 3120, 3119, 122, 3118, 210, 49,
	3117, 111, 118, 3116, 36, 42, 182, 192, 3115, 3113,
	3112, 627, 178, 91, 29, 0, 3110, 133, 3109, 3108,
	3107, 243, 3106, 233, 180, 155, 219, 259, 206, 3105,
	3102, 61, 3101, 136, 45, 55, 115, 9, 20, 272,
	3100, 14, 161, 3099, 195, 3098, 130, 7, 126, 3097,
	3096, 27, 280, 3095, 3089, 3086, 107, 3082, 3078, 203,
	72, 3077, 3072, 3071, 3069, 34, 3068, 35, 25, 3067,
	96, 3066, 235, 3065, 172, 117, 163, 156, 142, 221,
	225, 73, 71, 3064, 1532, 129, 89, 18, 3063, 222,
	3061, 149, 116, 3060, 76, 3059, 232, 377, 199, 3055,
	165, 8, 41, 32, 3053, 10, 3051, 209, 201, 3049,
	3048, 22, 51, 3046, 30, 3045, 3044, 3043, 3042, 5,
	3040, 3039, 3038, 2, 4, 3037, 3, 196, 3036, 3034,
	3033, 3032, 65, 218, 3031, 169, 160, 164, 3030, 85,
	3029, 3028, 3024, 636, 3023, 246, 3022, 3021, 3020, 3019,
	3014, 3013, 2999, 2998, 2983, 121, 38, 2982, 2981, 2980,
	2979, 74, 128, 2978, 2977, 2975, 2974, 37, 159, 2973,
	21, 2972, 31, 28, 39, 2971, 113, 2970, 12, 173,
	2968, 2966, 15, 2965, 2961, 11, 13, 2954, 2953, 123,
	2952, 83, 24, 141, 97, 2951, 2950, 78, 212, 125,
	2949, 2947, 240, 231, 191, 2946, 414, 228, 249, 2945,
	205, 2944, 2940, 2939, 2935, 2934, 2933, 930, 2932, 2931,
	234, 62, 75, 99, 2930, 2929, 2926, 80, 140, 103,
	104, 56, 77, 2925, 98, 179, 2923, 171, 2922, 2921,
	92, 2920, 2919, 2918, 2917, 2916, 170, 2913, 2912, 174,
	223, 2908, 2906, 2904, 2898, 245, 227, 2895,
}

//line mysql_sql.y:10347
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 525, 533, 533, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 109, 109, 108, 523, 523, 523, 524,
	524, 105, 126, 125, 128, 128, 127, 127, 124, 124,
	120, 123, 123, 122, 122, 121, 116, 118, 118, 117,
	119, 119, 106, 94, 107, 468, 468, 467, 467, 466,
	466, 420, 420, 465, 465, 465, 464, 464, 464, 463,
	463, 462, 462, 461, 461, 459, 459, 460, 458, 457,
	457, 457, 455, 455, 455, 451, 451, 453, 452, 452,
	454, 446, 446, 449, 449, 447, 447, 447, 447, 450,
	445, 445, 445, 444, 444, 93, 93, 93, 366, 366,
	92, 92, 380, 380, 380, 380, 380, 378, 378, 378,
	378, 378, 378, 377, 377, 376, 376, 381, 381, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 83,
	83, 83, 83, 83, 88, 88, 88, 530, 530, 529,
	529, 531, 531, 531, 531, 532, 532, 86, 86, 86,
	87, 375, 375, 375, 84, 85, 85, 365, 365, 370,
	370, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 374, 374, 374, 372, 372, 371,
	371, 373, 373, 77, 77, 77, 80, 79, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 78, 78, 78,
	78, 78, 78, 73, 73, 73, 73, 73, 72, 72,
	74, 74, 362, 362, 361, 89, 89, 90, 527, 527,
	526, 528, 528, 528, 528, 91, 97, 97, 97, 97,
	97, 97, 97, 96, 96, 99, 99, 98, 100, 82,
	82, 82, 82, 82, 82, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 493, 493, 493, 495, 495, 299,
	300, 534, 302, 298, 298, 298, 489, 489, 490, 491,
	492, 492, 492, 95, 11, 11, 11, 11, 11, 11,
	11, 71, 76, 247, 247, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 235, 235, 235,
	230, 230, 230, 230, 231, 231, 232, 232, 233, 233,
	233, 233, 234, 234, 292, 292, 252, 252, 252, 254,
	254, 253, 251, 249, 249, 249, 249, 249, 249, 250,
	250, 250, 255, 255, 69, 75, 75, 75, 506, 506,
	70, 517, 517, 423, 423, 313, 313, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 428, 429, 309, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 47, 50, 46, 46, 46,
	351, 351, 45, 535, 535, 287, 287, 58, 57, 49,
	59, 60, 61, 62, 63, 64, 44, 56, 56, 56,
	56, 56, 56, 56, 56, 67, 67, 440, 440, 537,
	537, 537, 65, 66, 422, 422, 422, 55, 54, 53,
	52, 51, 51, 43, 43, 42, 42, 48, 132, 133,
	306, 306, 306, 308, 308, 304, 536, 536, 394, 394,
	307, 307, 41, 41, 41, 41, 68, 305, 305, 286,
	303, 303, 303, 12, 12, 10, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 23,
	24, 26, 359, 359, 356, 25, 18, 17, 17, 20,
	16, 16, 19, 21, 22, 22, 9, 9, 9, 9,
	13, 13, 14, 153, 153, 203, 203, 501, 501, 497,
	497, 498, 498, 498, 499, 499, 500, 500, 101, 434,
	434, 434, 434, 434, 434, 8, 175, 175, 433, 433,
	433, 433, 433, 433, 363, 363, 478, 478, 478, 479,
	174, 174, 169, 169, 435, 435, 328, 480, 480, 443,
	443, 442, 442, 441, 441, 172, 172, 173, 173, 156,
	156, 112, 112, 448, 448, 448, 448, 456, 456, 419,
	419, 239, 239, 279, 279, 280, 280, 146, 146, 147,
	147, 147, 147, 147, 147, 486, 486, 488, 488, 487,
	171, 171, 167, 167, 168, 168, 168, 166, 166, 165,
	164, 164, 163, 161, 161, 161, 162, 162, 162, 179,
	179, 149, 149, 149, 148, 148, 148, 148, 148, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 150, 150, 494, 494, 494, 424, 424, 424, 431,
	431, 261, 261, 262, 262, 260, 260, 151, 151, 152,
	152, 152, 152, 259, 259, 258, 154, 154, 160, 159,
	159, 155, 155, 155, 155, 269, 269, 268, 268, 268,
	268, 104, 110, 110, 111, 178, 178, 267, 266, 266,
	266, 177, 177, 176, 176, 170, 170, 158, 158, 158,
	158, 265, 157, 263, 522, 522, 521, 521, 520, 518,
	518, 518, 519, 519, 519, 519, 470, 470, 470, 470,
	470, 293, 293, 293, 297, 297, 296, 296, 296, 296,
	296, 301, 7, 7, 7, 7, 7, 7, 30, 30,
	30, 30, 30, 30, 30, 30, 30, 36, 187, 188,
	37, 189, 189, 190, 190, 191, 191, 192, 193, 194,
	194, 194, 194, 35, 180, 180, 181, 181, 182, 182,
	183, 184, 184, 184, 186, 185, 34, 34, 27, 139,
	139, 140, 140, 140, 140, 142, 142, 236, 236, 236,
	141, 141, 143, 143, 143, 502, 505, 503, 503, 507,
	507, 507, 508, 508, 508, 508, 509, 509, 28, 129,
	134, 512, 512, 512, 511, 511, 513, 513, 514, 514,
	283, 283, 284, 284, 137, 138, 138, 136, 131, 145,
	145, 145, 145, 145, 130, 135, 504, 510, 510, 510,
	360, 360, 357, 358, 358, 355, 354, 354, 354, 516,
	516, 515, 515, 515, 294, 294, 29, 350, 350, 352,
	353, 353, 353, 344, 344, 344, 344, 33, 348, 348,
	349, 349, 349, 349, 349, 345, 345, 347, 347, 343,
	343, 343, 343, 343, 32, 144, 144, 342, 342, 339,
	339, 337, 337, 338, 338, 336, 336, 336, 340, 340,
	39, 39, 39, 341, 341, 31, 31, 31, 114, 113,
	113, 113, 282, 282, 281, 281, 115, 38, 215, 215,
	408, 408, 408, 408, 408, 426, 426, 426, 409, 409,
	409, 410, 410, 410, 411, 411, 411, 411, 411, 425,
	425, 427, 427, 427, 382, 382, 383, 383, 383, 386,
	386, 400, 400, 401, 401, 399, 399, 406, 406, 405,
	405, 404, 404, 403, 403, 402, 402, 402, 402, 397,
	397, 396, 396, 384, 384, 384, 384, 384, 385, 385,
	385, 395, 395, 398, 398, 223, 223, 224, 224, 257,
	257, 221, 221, 222, 222, 222, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 476, 476, 477, 226, 226, 237, 237, 237, 237,
	237, 237, 225, 225, 227, 227, 204, 204, 202, 202,
	195, 195, 196, 196, 197, 197, 197, 201, 201, 200,
	200, 200, 200, 198, 198, 199, 199, 199, 199, 199,
	199, 368, 368, 473, 473, 474, 474, 469, 469, 469,
	472, 472, 472, 472, 472, 475, 475, 475, 471, 471,
	205, 277, 277, 277, 295, 295, 295, 295, 276, 276,
	276, 220, 220, 219, 219, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 367, 367, 310,
	310, 311, 311, 246, 245, 245, 245, 245, 245, 243,
	244, 242, 242, 242, 242, 242, 241, 241, 240, 240,
	240, 346, 346, 238, 238, 229, 229, 229, 228, 228,
	228, 407, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 275, 275, 275, 320,
	320, 325, 325, 485, 485, 484, 206, 206, 206, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 216, 216,
	216, 391, 391, 391, 391, 392, 392, 392, 392, 393,
	393, 393, 389, 389, 390, 390, 329, 330, 330, 432,
	432, 387, 387, 388, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 439, 439, 439, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 496, 496, 496, 481, 481, 481, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 273, 273, 273,
	272, 272, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 272, 272, 272, 272, 331, 331, 332, 332, 436,
	436, 436, 436, 436, 436, 437, 437, 438, 438, 438,
	438, 430, 430, 430, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 430, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 430, 430, 430, 430, 430, 430, 430,
	318, 270, 270, 270, 333, 326, 326, 327, 327, 321,
	321, 321, 321, 321, 321, 321, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 322, 322,
	324, 324, 335, 335, 335, 334, 334, 334, 334, 334,
	334, 334, 218, 218, 218, 218, 315, 315, 315, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 208, 208, 208, 208, 212, 212, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 213, 213, 213, 213, 213, 211, 211, 211, 211,
	211, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 102,
	103, 103, 210, 278, 278, 412, 412, 415, 415, 413,
	413, 414, 416, 416, 416, 417, 417, 417, 418, 418,
	418, 421, 421, 285, 285, 285, 291, 291, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 7, 4, 1, 3, 2, 4, 5, 5, 6,
	5, 5, 3, 2, 2, 1, 3, 4, 3, 7,
	5, 8, 2, 2, 1, 3, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 2, 1,
	3, 2, 1, 2, 2, 1, 2, 3, 2, 3,
	3, 3, 1, 1, 7, 7, 8, 8, 0, 4,
	7, 0, 3, 0, 2, 0, 1, 1, 1, 1,
	4, 2, 2, 3, 3, 4, 5, 3, 4, 4,
	2, 2, 2, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 2, 5, 5,
	0, 2, 7, 0, 1, 0, 1, 5, 5, 3,
	3, 2, 4, 4, 4, 4, 4, 1, 1, 1,
	3, 3, 1, 1, 1, 6, 8, 0, 1, 1,
	1, 1, 5, 5, 0, 1, 1, 3, 3, 3,
	4, 6, 7, 4, 4, 7, 8, 3, 3, 3,
	0, 2, 2, 0, 2, 2, 1, 1, 1, 1,
	0, 1, 4, 4, 5, 4, 3, 1, 3, 1,
	1, 3, 5, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 4, 1, 3, 1, 4, 6, 6, 4, 4,
	4, 4, 3, 6, 3, 5, 1, 1, 2, 2,
	11, 8, 9, 1, 3, 2, 4, 0, 2, 0,
	1, 1, 1, 1, 0, 1, 0, 1, 4, 2,
	1, 5, 4, 4, 2, 5, 1, 3, 2, 1,
	5, 4, 4, 2, 0, 5, 0, 1, 3, 3,
	1, 3, 1, 3, 1, 3, 4, 0, 1, 0,
	1, 1, 3, 1, 1, 0, 4, 1, 3, 2,
	1, 0, 8, 0, 4, 7, 4, 0, 2, 0,
	2, 0, 2, 0, 4, 1, 3, 1, 1, 5,
	3, 4, 6, 4, 5, 2, 3, 1, 3, 6,
	0, 3, 0, 1, 2, 4, 4, 0, 1, 3,
	1, 3, 3, 0, 1, 1, 0, 2, 2, 0,
	2, 3, 3, 3, 1, 3, 3, 3, 3, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 7, 7, 1, 1, 1, 0, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 2, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 4, 4, 3, 2, 2, 2, 3, 2,
	3, 4, 1, 3, 4, 0, 2, 1, 1, 2,
	2, 0, 1, 2, 4, 1, 3, 1, 3, 2,
	3, 1, 4, 3, 0, 1, 1, 2, 5, 2,
	2, 2, 0, 2, 3, 3, 0, 1, 3, 1,
	3, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 7, 1, 1,
	7, 1, 3, 0, 1, 1, 3, 1, 3, 0,
	1, 1, 1, 12, 1, 3, 0, 1, 1, 3,
	1, 1, 2, 4, 1, 1, 9, 8, 7, 1,
	2, 2, 3, 3, 3, 0, 4, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 4, 1, 1, 3,
	4, 3, 0, 1, 1, 1, 0, 2, 7, 8,
	8, 0, 3, 3, 0, 2, 0, 3, 0, 5,
	1, 3, 0, 3, 3, 0, 2, 9, 6, 0,
	2, 2, 3, 3, 4, 4, 1, 0, 2, 2,
	1, 3, 2, 1, 3, 2, 1, 3, 2, 0,
	1, 3, 4, 3, 1, 1, 4, 1, 3, 1,
	1, 1, 1, 0, 1, 1, 1, 11, 0, 2,
	3, 2, 3, 1, 1, 1, 3, 3, 4, 0,
	2, 2, 2, 2, 6, 0, 4, 1, 1, 0,
	3, 0, 1, 1, 2, 4, 4, 4, 0, 1,
	9, 10, 8, 0, 2, 11, 9, 11, 2, 2,
	4, 5, 1, 3, 0, 3, 5, 10, 0, 2,
	0, 3, 2, 4, 3, 0, 2, 1, 0, 2,
	3, 0, 2, 3, 0, 3, 2, 4, 3, 0,
	1, 0, 1, 1, 0, 6, 0, 3, 5, 0,
	4, 0, 3, 1, 3, 4, 5, 0, 3, 1,
	3, 2, 3, 1, 2, 0, 4, 6, 5, 0,
	2, 0, 2, 4, 5, 4, 5, 1, 5, 6,
	5, 0, 3, 0, 1, 0, 4, 1, 3, 3,
	3, 0, 1, 1, 3, 2, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 5,
	4, 1, 3, 3, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 1, 1, 1, 1, 7,
	9, 7, 9, 2, 1, 7, 9, 7, 9, 8,
	5, 0, 1, 0, 1, 1, 1, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	3, 1, 3, 5, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 2, 1, 2, 2, 1, 1,
	2, 2, 2, 3, 3, 2, 2, 1, 5, 6,
	4, 1, 1, 1, 5, 4, 1, 1, 2, 0,
	1, 1, 2, 5, 0, 1, 1, 2, 2, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 2, 2,
	2, 0, 3, 0, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 3, 5,
	2, 2, 2, 2, 1, 1, 2, 5, 6, 6,
	6, 1, 1, 1, 1, 1, 4, 4, 4, 0,
	2, 0, 1, 1, 2, 4, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 5, 0, 1, 3, 0, 1, 0,
	2, 0, 1, 6, 8, 6, 6, 5, 5, 5,
	6, 6, 6, 6, 5, 6, 6, 6, 6, 6,
	6, 6, 6, 1, 1, 1, 4, 4, 6, 8,
	6, 4, 5, 4, 4, 4, 3, 4, 6, 6,
	7, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 8,
	4, 2, 3, 2, 4, 2, 2, 4, 6, 2,
	2, 4, 6, 4, 2, 0, 1, 2, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 1, 3, 0, 1, 1, 3, 3,
	3, 3, 3, 2, 1, 1, 3, 4, 3, 4,
	3, 4, 3, 4, 3, 4, 1, 3, 4, 4,
	5, 4, 5, 3, 4, 5, 6, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 1, 1,
	2, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 4, 4, 1, 2,
	3, 5, 1, 1, 3, 0, 1, 0, 3, 0,
	3, 3, 0, 3, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -525, -533, -2, -5, 589, -1, -4, -103, -77,
	-7, -105, -106, -8, -101, -9, -10, -12, -81, -96,
	-98, -100, -99, -40, -11, -95, -72, -73, -83, -89,
	-92, -93, -94, -107, -102, -104, -146, -108, -109, 582,
	-78, -79, -80, -30, -29, -28, -27, -129, -134, 588,
	437, 13, 486, -13, -14, -486, -15, 256, -298, -299,
	-300, -302, -534, -41, -42, -43, -51, -52, -53, -54,
	-55, -65, -66, -67, -44, -45, -46, -49, -47, -58,
	-57, -59, -60, -61, -62, -63, -64, -48, -132, -133,
	-68, -50, -70, -69, -75, -71, -76, -131, -136, 231,
	-74, 75, -84, -85, -86, -87, -88, -90, -91, 363,
	369, 426, 581, 60, -147, -149, 592, 593, 157, 158,
	160, 161, -31, -32, -33, -34, -35, -36, -38, -37,
	-39, 227, 15, 522, -16, -19, -17, -20, -18, -25,
	-26, -24, -21, -23, -130, -22, -135, 251, 250, 37,
	317, 318, 319, 367, 249, 228, 14, 30, 41, 343,
	-148, 81, 229, -150, 12, 596, -6, -3, -2, -116,
	-120, -124, -127, -128, -125, -126, -4, -103, 115, 241,
	583, -295, 359, 584, 586, 585, 84, 92, -288, -290,
	363, 369, 581, 593, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 489, 568, 569, 570, 571, 517, 341, 342, 519,
	268, 292, 394, 298, 305, 157, 176, 170, 198, 190,
	165, 272, 310, 273, 91, 160, 472, 105, 449, 423,
	163, 287, 289, 291, 294, 293, 295, 297, 274, 344,
	186, 181, 286, 270, 179, 275, 39, 276, 203, 277,
	278, 524, 445, 340, 451, 302, 421, 180, 446, 290,
	448, 207, 211, 463, 464, 174, 175, 453, 466, 202,
	205, 206, 248, 42, 521, 260, 467, 209, 201, 197,
	475, 306, 304, 200, 173, 196, 271, 64, 213, 212,
	214, 417, 418, 419, 420, 279, 280, 357, 462, 193,
	182, 345, 166, 22, 470, 255, 450, 370, 281, 299,
	307, 208, 210, 262, 267, 523, 425, 266, 303, 468,
	178, 259, 288, 254, 471, 167, 372, 282, 161, 296,
	465, 474, 63, 385, 172, 164, 245, 158, 264, 269,
	283, 284, 285, 515, 309, 308, 300, 194, 261, 199,
	184, 171, 195, 159, 263, 473, 386, 579, 343, 404,
	192, 189, 265, 238, 469, 452, 162, 408, 387, 187,
	311, 575, 576, 577, 358, 339, 312, 313, 185, 252,
	443, 444, 316, 414, 332, 388, 424, 395, 389, 220,
	320, 455, 457, 204, 578, 321, 322, 323, 447, 324,
	325, 326, 327, 362, 55, 57, 93, 95, 594, -373,
	-371, -295, 581, 369, 363, 343, 593, -189, -295, 595,
	-156, 38, -202, -295, -156, -74, -14, -13, -148, -149,
	-202, 235, -303, 23, 421, -82, 422, 231, 81, -295,
	-9, -94, -8, -101, -72, -146, 426, -301, -295, 317,
	317, -301, 235, -295, 266, 402, -423, 241, -377, -350,
	267, -376, -352, -379, -353, 31, 227, 229, 228, 263,
	15, 367, 237, 13, 12, 368, 249, 24, 25, 27,
	14, 369, 371, 28, 372, 375, 376, 377, 41, 380,
	381, 256, 84, 92, 87, 274, -188, -295, -327, -321,
	112, 257, -323, -316, -317, -319, -465, -459, -314, 81,
	139, 140, 147, 113, -318, -407, 35, 115, 531, 487,
	-271, -272, -273, -274, -275, -295, -460, -458, 87, 96,
	99, 102, 103, 101, 100, 151, 183, 98, 88, 152,
	-149, 84, -481, 540, -289, 561, 568, 569, 570, 571,
	560, 60, -430, -438, 234, -436, 150, 188, 252, 184,
	13, 145, 414, 185, 537, 557, 489, 541, 564, 533,
	534, 535, 528, 529, 530, 532, 542, 544, 556, -439,
	552, 562, 563, 550, 565, 566, 567, 86, 85, 555,
	554, 543, 538, 539, 545, 527, 536, 546, 547, 553,
	558, 559, 351, 105, 352, 353, 479, 344, 354, 241,
	421, 69, 355, 356, 357, 358, 359, 486, 360, 70,
	361, 350, 256, 404, 362, 187, 204, 491, 490, 492,
	483, 480, 478, 481, 482, 484, 485, 548, 549, 551,
	-110, -111, 573, -165, -166, -264, 11, 6, 7, 8,
	9, -523, 423, 523, 87, 162, 159, -364, 162, 111,
	167, 166, -364, 320, 262, 364, -139, 238, 341, 404,
	324, 93, 266, -344, -342, -341, -425, 314, 310, 236,
	-140, 246, 245, 106, 479, 234, 108, 378, 305, 55,
	57, -497, -498, 224, 225, 226, -488, 512, -487, -295,
	353, 95, 26, 235, 364, 262, 457, 455, 456, 458,
	459, 460, 461, -56, -440, -422, 452, 451, -307, 444,
	450, 442, 454, 445, 342, 326, 325, 227, 590, 513,
	-285, 388, 424, 476, 477, 365, 425, 463, 465, 446,
	105, 191, 188, 238, 235, 341, 479, 404, 93, 324,
	-497, 159, 463, 465, 266, 402, 40, -370, 414, -369,
	-371, 464, 475, 85, 86, 462, -285, 105, 443, 443,
	-166, -264, -165, -147, -149, -104, -486, 236, 341, 404,
	266, 237, 235, 516, 238, 479, 234, 317, 364, 262,
	324, 93, -424, -494, 31, -431, 221, 222, 223, 32,
	33, -1, 119, 596, -321, -321, -6, 599, -6, -321,
	-295, -295, 154, -208, -212, -209, -211, -210, -214, -213,
	188, 189, 150, 192, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 205, 206, 203, 30, 204, 252, 184,
	185, 186, 187, 207, 170, 190, 520, 215, 171, 216,
	172, 217, 173, 218, 174, 175, 219, 176, 179, 180,
	181, 182, 178, 153, 81, 153, 87, -172, 258, -202,
	153, -172, -166, -165, -166, -202, -276, -295, 423, 122,
	-82, -82, 422, -489, -490, -491, -493, 231, 422, 421,
	153, 274, 16, -301, -301, 79, -202, -352, 266, -377,
	-350, 35, 78, 154, 239, 154, 78, 81, 365, 341,
	404, 366, 479, 235, 378, 238, 266, 379, 341, 404,
	235, 238, 479, 266, 341, 235, 238, 404, 266, 379,
	442, 443, 238, 26, 370, 373, 374, 443, -444, 475,
	154, 111, 108, 109, 110, -321, 129, -334, 122, 123,
	124, 125, 126, 127, 128, 136, 135, 146, 139, 140,
	141, 142, 143, 144, 145, 137, 138, 132, 112, 130,
	134, 131, 114, -149, -321, -327, 60, -319, -319, -319,
	-319, -407, -325, -321, 81, 81, 153, 100, 87, -321,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, -437, 81, 81, -331, -332, 81, 81, -314,
	-276, 81, 87, 87, 81, 81, 81, 87, -332, -332,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, -166, 154, 81, -112, 38, -168, 21, -150, -149,
	20, 31, 32, 31, 32, 31, 32, 31, 32, 96,
	594, 220, 468, 522, 165, 166, 167, -187, -295, -189,
	-180, -295, 238, -140, 108, -339, 241, -339, -339, -339,
	-339, -339, 237, -339, 516, 515, 235, 235, 235, -339,
	486, 122, 122, 58, -499, 169, 154, -488, -171, 81,
	-306, 130, 134, -306, 23, 264, 264, 264, -306, 304,
	-535, -536, 16, 132, -304, -536, -304, -304, -306, -537,
	237, 453, 42, 265, 264, -167, -168, -167, 447, 443,
	-394, 448, 449, -308, -536, -307, -306, -306, -307, -306,
	-306, -306, 235, 238, 479, 324, 591, -535, -535, 30,
	30, -423, -202, -423, 513, -286, -295, -423, -423, -423,
	-500, 240, -530, -529, 466, -532, 468, 159, -371, 159,
	-371, -352, 266, 266, 154, 122, 23, -372, 122, 133,
	-371, -371, -372, -372, -225, 40, -294, 150, -295, 87,
	-225, 40, -527, -526, -202, -167, -150, -149, 82, 82,
	82, -423, -423, -423, -423, -423, -425, -423, -423, -423,
	-423, -301, -180, -189, 241, -423, -423, -151, -152, 141,
	-321, -295, -151, -3, -118, -117, 116, 117, 119, 584,
	359, 583, 587, 581, -371, 40, -418, 386, 385, -412,
	-414, 81, -413, 81, -413, -413, -413, -413, -413, 81,
	81, -415, 81, -415, -415, -412, -416, 81, -416, -417,
	81, -417, -416, -295, -326, -327, -295, 38, -433, 60,
	-146, 81, 30, 81, -295, -434, 60, -146, 81, 30,
	-167, -112, -168, 153, 96, 87, -82, 82, 154, -492,
	102, 103, -495, 202, 194, -295, -97, 87, -7, -8,
	-9, -10, -40, -72, -146, -461, -459, 81, 31, 413,
	78, 16, -378, 235, 479, 364, 262, 238, 341, -376,
	-359, -356, -354, -294, -352, -355, -354, -381, -276, 443,
	-113, 427, 316, -321, -321, -321, -321, -321, 101, 112,
	339, 102, 103, -316, -335, 31, 312, 313, -317, -317,
	-317, -317, -317, -317, -317, -317, -317, -317, -317, -317,
	-324, -333, -407, 81, 132, 130, 134, 131, 114, -319,
	-319, -317, -317, 82, 154, -485, -484, 116, -321, -321,
	-295, -482, -483, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 355, 350, 356, 354, 344, 362,
	357, 358, 187, 510, 511, 504, 505, 506, 507, 508,
	509, -326, -326, -321, -482, -326, -270, 32, 31, -327,
	-327, -327, 82, -321, -496, 337, 336, 338, -169, -295,
	-326, 82, 82, 82, 96, -327, -327, -326, -317, -326,
	-483, -270, -270, -270, 141, -327, -327, -270, -270, -270,
	-270, 141, -270, -270, -270, -270, -270, -270, -270, -270,
	82, 82, 82, -167, -111, -442, -441, -321, 40, 574,
	-112, -321, -164, -163, -321, -524, 87, 87, 597, 469,
	470, 163, 166, 165, 34, 81, 81, 153, -339, 486,
	-202, 112, -502, -295, -360, -357, -354, -295, -295, -350,
	-295, -295, -339, 516, -339, -339, -339, -202, -236, 52,
	53, 54, -354, -141, 55, 56, -500, -487, 34, -170,
	-295, -260, 17, -319, -319, -354, 266, -535, -306, -306,
	-287, -286, -308, -303, -308, -308, -260, -536, -306, -306,
	-308, -304, -260, -295, 443, -260, -260, -394, -305, -295,
	-305, -339, -286, -287, -287, -202, -247, -248, 232, 348,
	349, 230, 228, 11, 229, -256, 305, -340, 487, -231,
	-232, 76, 41, -234, 390, 383, 268, 272, 91, 273,
	423, 274, 237, 276, 277, 278, 293, 295, 248, 279,
	280, 281, 414, 282, 158, 294, 283, 284, 285, 366,
	-226, 6, 327, 40, 50, 51, 436, 435, 525, 522,
	269, -502, -502, 30, 30, -360, -295, -295, -159, -154,
	-158, -155, -160, -263, -265, -157, 81, -202, -149, -295,
	154, 467, 469, 470, -530, -372, -530, -372, 31, 413,
	-375, 413, 31, -350, -369, 463, 465, -365, 87, 414,
	-355, -374, 78, 150, -441, -372, -372, -374, -374, 149,
	154, -528, 468, 469, 224, -112, -204, -202, -502, -359,
	-350, -295, -423, -204, -204, -295, -295, 81, 35, -295,
	-295, -259, 154, -258, 16, -296, -295, 34, 87, 153,
	-259, -119, -117, 118, -321, -6, 583, -321, -6, -6,
	-321, -6, -321, -421, 387, 96, 96, -278, 87, -278,
	96, 96, 96, 82, 87, -363, 78, -435, -328, -480,
	573, -174, 82, -169, -478, -479, -169, -173, -295, -435,
	-174, 82, -478, -112, -112, -295, 23, -82, -490, 153,
	154, -170, -378, -358, -355, -380, 141, -295, -366, 154,
	522, 600, 85, 239, -516, -515, 405, 82, 154, -445,
	240, 486, 87, 597, 220, 101, 339, 102, 103, -407,
	-327, -324, -319, -319, -317, -317, -322, 253, -322, 111,
	-321, -320, -484, 118, -321, 34, 154, 79, 153, 82,
	82, 16, 16, 82, -321, 82, 82, 82, 82, 16,
	16, -321, 82, 153, 82, 82, 82, 82, 79, 82,
	154, 82, 154, -327, -321, -327, 82, 82, 82, -321,
	-321, -321, -327, 82, -321, -321, -321, -321, -321, -321,
	-321, -321, -388, 438, -388, -388, 154, 82, 87, 154,
	22, 154, -161, 36, 37, -282, -281, 87, 164, 167,
	167, 166, -188, -190, -191, -192, -193, -194, 132, 155,
	156, -181, -182, -183, -184, -208, -276, 189, 192, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 205, 206,
	203, 204, 252, 184, 185, 186, 187, 207, 170, 190,
	171, 172, 173, 174, 175, 176, 179, 180, 181, 182,
	178, -295, -202, -171, 35, -505, 391, -517, 154, 40,
	-515, 479, -137, 316, -343, 79, -144, 16, -202, -339,
	-202, -202, -202, -215, 34, 16, -153, -203, -295, 81,
	82, 154, -321, -351, 79, -295, -287, -260, -260, -202,
	-295, -260, -260, -306, -308, -308, -304, 153, -286, -171,
	154, -201, -292, -198, -200, 243, -311, -199, 246, -474,
	244, 242, 106, 247, 301, 107, 237, -292, -292, 243,
	-235, 239, 34, -292, -250, 237, 301, 244, 20, -249,
	237, 107, -295, 243, 247, 242, -291, 122, -285, 149,
	239, 42, 366, -291, 526, -291, -291, -291, -291, -291,
	-291, -291, 275, 275, -291, -291, -291, -291, -291, -291,
	-291, -291, -291, -291, -291, 159, -291, -291, -291, -291,
	-291, -291, 81, 270, 271, -506, 391, 30, 347, 347,
	-517, 30, -145, 341, 30, -266, -267, -268, -269, 67,
	71, 73, 68, 69, 70, 74, 30, 154, -293, -297,
	34, -295, 87, -293, -149, -154, -159, -293, 81, -529,
	-531, 471, 468, 474, -374, -374, 239, 81, 122, -374,
	-374, 40, -294, -526, 475, 469, -179, 23, 154, 78,
	-204, -181, -189, -260, -152, -154, -295, 87, -295, 141,
	-260, 119, -6, 117, -123, -122, -121, 120, 581, 587,
	119, 119, 119, 82, 82, 82, 154, 82, 82, 82,
	154, 82, 154, -448, 448, 39, 154, 81, 82, 154,
	60, 154, 122, 82, 154, 82, 60, -179, 153, 423,
	-295, -459, 82, -380, 154, 239, 153, 153, -356, 369,
	-294, -358, 20, 522, -276, 38, -282, 597, 82, -322,
	-322, 111, -319, -316, 82, 119, -321, 117, -206, -208,
	385, 386, -207, -213, 150, 188, 252, 187, 186, 184,
	385, 386, -225, -295, -321, -321, 82, -321, -321, 16,
	-295, -225, -317, -321, -166, 82, 82, -387, -388, -387,
	-387, 82, 82, 82, 82, -387, 82, 82, 82, 82,
	82, 82, 82, 82, 81, -441, -448, -321, -321, -163,
	-162, 43, 598, 154, 122, 167, 377, 82, 154, -276,
	82, 154, -208, -171, 34, -508, 450, 393, 403, -291,
	-313, -312, 343, 41, -428, 414, 399, 400, -357, 266,
	-295, -514, 94, 122, 78, 331, 332, 333, 334, -337,
	-338, -336, -340, -502, 81, -223, 522, -202, 81, 81,
	81, -408, 321, -208, -202, -153, -295, 16, 154, -501,
	153, -1, -295, -350, -306, -260, -536, -260, -306, -306,
	-308, -295, 34, -248, -205, -276, -199, -473, -474, -339,
	-295, 107, -473, 107, 81, -205, -276, -276, -251, -305,
	-276, -295, -295, -295, -254, -253, -276, -295, -295, -295,
	107, 107, -230, 40, 47, 48, 49, -291, -291, 191,
	-233, 40, 413, 415, 416, 96, 96, 96, 96, 87,
	87, 87, -291, -291, 96, 87, -297, 87, -475, 166,
	44, 45, 96, 96, 96, 96, 40, 87, -237, 40,
	286, 290, 287, 288, 289, 87, 96, 40, 96, 40,
	96, 40, -295, 81, -476, -477, 87, -508, -291, 347,
	-371, 122, -313, -513, 316, -138, 91, 31, -175, 232,
	229, -502, -362, -361, -276, -158, -158, -158, -158, 67,
	67, 67, 72, 67, 72, 67, -268, -362, -160, -171,
	-297, 82, -522, -521, -520, -518, 75, 240, 76, -326,
	468, 472, 473, -358, -309, 87, -365, 14, -202, -202,
	-427, 296, 297, 82, -262, 18, 153, -262, 115, -6,
	-119, -121, -321, -6, -321, 583, 359, 584, 87, 96,
	96, -456, 433, 428, 430, 107, -328, -443, -442, 60,
	-146, -169, -435, -479, -441, -295, 60, -146, -435, -295,
	96, 16, -355, -350, 141, 141, -295, 370, -366, 87,
	392, 87, 235, 598, -282, -316, -321, 82, -216, 175,
	174, -216, 82, -413, -413, -412, -415, -412, -216, -216,
	82, 82, 23, 82, 82, 82, -321, 82, 82, 154,
	-432, 488, -387, -387, -387, -387, -387, -387, -387, -387,
	-387, -387, -387, -387, -387, -387, -330, -329, 258, -456,
	44, 45, -281, 87, 87, 87, -192, -208, 233, -183,
	40, 34, -146, -509, 91, -503, 87, -295, -510, 91,
	394, 152, 345, 40, 395, 396, 411, 340, 96, 96,
	401, -504, -295, -145, -512, 51, 122, 87, -202, -336,
	-285, 149, 277, 324, -195, -196, -197, -205, -198, -200,
	34, 81, 81, -195, -195, -195, -409, 323, 20, 96,
	140, -172, 79, 153, -154, -203, -295, 141, 82, -260,
	-295, -260, -260, -306, -146, -252, 44, 46, -208, -471,
	-295, -469, -471, -295, -469, -469, -339, -321, -252, -205,
	239, 30, 229, -255, 329, 330, -367, 302, 112, -367,
	154, -161, -295, -225, -225, 30, 87, 87, -204, 82,
	154, 122, -509, -503, 122, -372, 87, -510, -514, 122,
	87, 154, -175, -175, -260, 154, 122, -177, -176, 78,
	79, -178, 78, -176, 67, 67, -260, -520, -519, 23,
	-474, -474, -474, 82, 82, -261, 19, 20, 141, -261,
	119, 117, 119, 119, -295, 82, 82, -419, 575, -452,
	-454, 428, 20, 20, 14, 82, -435, -435, -350, -366,
	414, -202, 598, -321, 82, -321, 82, 87, -166, 20,
	-419, -185, -208, -314, -146, -142, 522, 87, -507, 405,
	87, 87, 96, 40, 96, 152, 397, -429, -138, -511,
	91, 122, 597, 81, -291, -291, -291, -295, 82, 154,
	-146, -224, -257, -295, 87, -195, 82, 82, 82, -410,
	257, 96, 140, 96, 140, 96, -293, -154, -295, -260,
	-501, 153, -260, -260, -276, -220, -219, -217, 101, 112,
	40, 383, -218, 91, 149, 291, 294, 293, 269, 292,
	-246, -310, 78, 389, 329, 330, -340, 575, 517, 242,
	106, 107, 371, -311, 81, 81, 79, 311, 81, 81,
	-471, 82, -252, -276, 40, -255, 40, 302, -253, 149,
	-225, 82, -477, 87, -507, 87, -374, -512, 87, -502,
	-166, -361, -441, -321, 81, -321, 81, 67, 11, 18,
	-321, -327, 241, -6, 584, 359, -239, 576, 87, 20,
	87, -450, 87, -362, -115, -446, -394, 82, 82, -387,
	-390, -389, -393, 434, 303, 441, -327, -239, 521, -142,
	-143, 59, 475, 20, 522, 344, 40, 96, 40, 398,
	87, 102, 103, -283, -284, 87, -345, -347, -276, 81,
	-225, -227, -294, 150, 87, -223, -197, 82, 154, -291,
	-291, 82, -221, -222, -256, -340, -114, -113, -221, -411,
	158, 96, 140, 96, 96, -260, -260, -217, 101, -317,
	87, -227, -228, 40, 290, 286, 122, 122, -229, 40,
	270, 271, -238, 81, 301, 14, 191, 81, 107, 107,
	-202, -345, -345, -472, 331, 332, 333, 335, 334, -472,
	-345, -345, 81, -368, -367, -317, -291, 149, -511, -167,
	-170, -470, -295, 242, 20, 20, -295, -295, -279, 577,
	96, 87, 430, -420, 578, -455, 433, -449, -447, 428,
	429, 430, 431, 82, -392, 114, 397, 401, -315, -318,
	96, 99, 183, 152, -279, -186, -295, 301, 87, 392,
	87, 344, 598, 154, 122, 82, 154, -412, -321, -257,
	-314, -314, -223, -382, 258, 154, -256, -285, -115, -382,
	-426, 166, 322, 522, 96, 140, 96, -166, 87, 87,
	96, 81, -436, 30, 87, -346, 81, 82, 82, 82,
	82, -345, -225, -291, 82, 82, 154, 81, 20, 87,
	-457, 240, -453, -454, 432, -447, 20, 430, 20, 20,
	-391, -392, 401, -315, -318, 573, 439, 439, 439, 34,
	370, 414, -284, 87, -348, -347, -161, 82, -383, 310,
	20, -256, -291, -383, 322, 96, 140, 96, -167, 82,
	-321, -331, -291, 82, -241, -240, 518, -345, -348, 79,
	-348, 79, -348, 79, -348, 79, 82, -225, -295, 242,
	-280, -295, -450, -464, 81, 96, -452, -451, -453, 20,
	-450, 20, -450, -450, 111, 440, 440, 440, 87, -349,
	248, 91, 522, 329, 330, -161, 20, -384, 303, 304,
	-385, -398, 306, -225, 96, 82, -295, -245, -243, -244,
	78, 446, 299, 300, 82, -472, -472, -472, -472, -246,
	82, 154, -468, 30, 82, -463, -462, -277, -458, -295,
	433, 434, 87, -450, -391, -291, 87, 328, -276, 81,
	-396, 307, 81, -394, 81, -394, 107, 332, -367, -244,
	78, -243, 78, 15, 14, -348, -348, -348, -348, -295,
	-467, -466, -465, 82, 154, 153, 96, -295, -381, -386,
	308, 96, -317, 81, -317, 81, -395, 305, 81, -242,
	296, 297, 30, 166, -242, 154, 122, -462, -295, 82,
	-400, 81, 20, 82, -381, 82, -381, 81, 122, -317,
	101, 40, 298, -466, 40, -321, 153, -401, -399, 258,
	-385, 82, 82, 82, -381, 96, 82, -295, 82, 154,
	-295, -397, 309, 82, -399, -402, 60, 96, -406, -403,
	81, -256, 260, 132, -406, -256, -405, -404, 308, 261,
	81, 82, 154, -295, 257, 81, -327, -404, -403, -327,
	82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 822, 823, 824, 825, 826, 827, 0,
	0, 0, 0, 596, 597, 0, 565, 0, 0, 0,
	0, 0, 0, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 354, 355, 356, 357, 358, 359, 360, 0,
	288, 284, 209, 210, 211, 212, 213, 295, 296, 433,
	0, 0, 0, 0, 677, -2, 56, 0, 277, 0,
	268, 268, 828, 829, 830, 831, 832, 833, 834, 835,
	836, -2, 609, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 343, 344, 345,
	339, 340, 342, 341, -2, 0, 609, 0, 0, 0,
	697, 0, 0, 714, 736, 23, 0, 7, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 0, 0,
	19, 0, 19, 0, 0, 0, 1184, 1185, 1186, 1187,
	-2, 1677, 1655, 1822, 1834, 1835, 1836, 1837, 1838, 1839,
	1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849,
	1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859,
	1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1682,
	1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702,
	1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722,
	1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732,
	1733, 1734, 1735, 1736, 1737, 1738, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1823, 0,
	261, 259, 1655, 1677, 1739, 1772, 1822, 0, 841, 0,
	655, 0, 660, 1138, 655, 289, 598, 599, 697, 697,
	563, 0, 325, 0, 1668, 329, 0, 0, 0, 560,
	319, 320, 321, 322, 323, 324, 0, 0, 821, 0,
	0, 315, 0, 283, 1730, 0, 0, 0, 0, 0,
	0, 153, 947, 155, 949, 159, 166, 0, 0, 171,
	172, 175, 176, 177, 178, 179, 0, 183, 0, 185,
	188, 0, 190, 191, 0, 194, 195, 196, 0, 206,
	207, 208, 950, 951, 952, -2, 84, 839, 1589, 1477,
	0, 1484, 1485, 1496, 1507, 1264, 1265, 1266, 1267, 0,
	0, 0, 0, 0, 1274, 1275, 0, 1291, 1838, 0,
	1281, 1282, 1283, 1284, 1285, 93, 105, 106, 1529, 1530,
	1531, 1532, 1533, 1534, 1535, 0, 1537, 1538, 1539, 1450,
	1251, 1184, 0, 1847, 0, 1867, 1872, 1873, 1874, 1875,
	1866, 0, 0, 1435, 0, 1425, 0, 0, -2, -2,
	0, 0, 1797, -2, 1844, 1863, 1871, 1848, 1870, 1840,
	1841, 1842, 1835, 1836, 1837, 1839, 1849, 1851, 1862, 0,
	1858, 1868, 1869, 0, 0, 0, 0, 107, 108, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1441, -2, 1443, 1444, 1446, -2, 1448, 1449,
	-2, 1452, 1453, 1454, -2, -2, 1457, 1458, 1459, 1460,
	1461, 1462, 1465, -2, -2, -2, -2, 1437, 1438, 1439,
	1440, 1429, 1430, 1431, 1432, 1433, 1434, -2, -2, -2,
	697, 772, 0, -2, 0, 0, 0, 719, 722, 725,
	728, 0, 57, 58, 0, 278, 279, 267, 269, 0,
	273, 0, 266, 0, 0, 0, 0, 979, 979, 979,
	979, 979, 979, 0, 979, 0, 0, 0, 0, 979,
	869, 954, 955, 956, 977, 978, 0, 1030, 0, 0,
	0, 614, 610, 611, 612, 613, 685, 0, 687, 690,
	540, 540, 487, 0, 0, 0, 540, 0, 501, 493,
	0, 0, 0, 540, 0, 0, 692, 692, 0, 543,
	550, 540, 540, -2, 540, 540, 540, 0, 0, 507,
	508, 509, 493, 493, 512, 513, 514, 525, 526, 551,
	1613, 0, 0, 433, 0, 433, 0, 433, 433, 433,
	616, 1767, 1675, 1744, 1730, 0, 0, 234, 1797, 239,
	0, 1676, 1693, 0, 0, 1711, 0, -2, 0, 305,
	692, 0, 698, 0, 697, 0, 0, 433, 433, 433,
	433, 433, 1029, 433, 433, 433, 433, 0, 0, 0,
	433, 433, 0, 0, 737, 738, 733, 734, 735, 739,
	740, 5, 6, 19, 0, 0, 0, 0, 0, 0,
	63, 62, 0, 1590, 1608, 1542, 1543, 1544, 1595, 1546,
	1599, 1599, 1599, 1599, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1599, 1599, 0, 0, 1588, 1566, 1597,
	1597, 1597, 1595, 1592, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1602, 1602,
	1605, 1605, 1602, 0, 1475, 0, 0, 0, 0, 659,
	0, 0, 692, -2, 0, 564, 326, 1188, 0, 0,
	330, 331, 0, 0, 346, 0, 349, 334, 335, 336,
	0, 133, 0, 317, 318, 0, 0, 285, 0, 0,
	0, 434, 0, 0, 0, 0, 0, 0, 163, 160,
	167, 170, 180, 187, 0, 199, 201, 204, 161, 168,
	173, 174, 181, 202, 162, 164, 165, 169, 203, 205,
	182, 186, 200, 184, 189, 192, 193, 198, 0, 134,
	0, 0, 0, 0, 0, 1483, 0, 0, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 1477, 0, 0, 1270, 1271, 1272,
	1273, 1276, 0, 1292, 0, 0, 0, 1536, 1540, 0,
	1475, 1475, 0, 1475, 1471, 0, 0, 0, 0, 0,
	0, 1475, 1411, 0, 0, 1413, 1426, 0, 0, 1415,
	1416, 0, 1419, 1420, 1475, 0, 1475, 1424, 1407, 1408,
	0, 1471, 1471, 1471, 0, 0, 1471, 1471, 1471, 1471,
	1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471, 0, 0,
	0, 692, 0, 0, 680, 0, 661, 0, 716, 718,
	0, 720, 721, 723, 724, 726, 727, 729, 730, 59,
	0, 0, 0, 0, 271, 0, 276, 0, 838, 0,
	0, 854, 979, 870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 979, 0, 979, 979, 979, 0,
	-2, 0, 0, 0, 616, 615, 0, 686, 0, 0,
	745, 0, 0, 486, 0, 493, 540, 540, 499, 500,
	495, 494, 546, 547, 543, 0, 543, 543, 745, 0,
	519, 520, 521, 540, 540, 527, 693, 528, 529, 543,
	0, 548, 549, 745, 0, 0, 745, 745, 0, 537,
	538, 539, 0, 0, 979, 0, 556, 495, 495, 1614,
	1615, 0, 988, 0, 0, 0, 559, 0, 0, 0,
	0, 617, 214, 217, 0, 220, 0, 1767, 0, 1767,
	0, 227, 0, 0, 0, 0, 0, 0, 257, 258,
	0, 0, 0, 0, 248, 251, 1132, 1133, 944, 945,
	252, 253, 297, 298, 0, 661, 715, 717, 711, 712,
	713, 0, 0, 0, 0, 0, 433, 0, 0, 0,
	0, 592, 0, 594, 0, 0, 0, 753, 747, 749,
	816, 93, 753, 8, 80, 77, 0, 19, 0, 0,
	19, 19, 0, 19, 262, 0, 1611, 1609, 1610, 1545,
	1596, 0, 1571, 0, 1572, 1573, 1574, 1584, 1585, 0,
	0, 1567, 0, 1568, 1569, 1570, 1561, 0, 1562, 1563,
	0, 1564, 1565, 260, 0, 1476, 842, 0, 634, 647,
	629, 0, 636, 0, 1139, 618, 647, 620, 0, 636,
	661, 683, 661, 0, 327, 0, 332, 0, 0, 348,
	350, 351, 352, 337, 338, 561, 313, 314, 306, 307,
	308, 309, 310, 311, 312, 316, 103, 0, 286, 287,
	0, 0, 0, 147, 148, 149, 150, 151, 152, 154,
	138, 582, 584, 936, 948, 0, 939, 0, 157, 197,
	130, 0, 0, 1478, 1479, 1480, 1481, 1482, 1486, 0,
	1488, 1490, 1492, 1494, 0, 1512, -2, -2, 1252, 1253,
	1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263,
	1497, 1510, 1511, 0, 0, 0, 0, 0, 0, 1508,
	1508, 1503, 0, 1268, 0, 1289, 1293, 0, 0, 0,
	94, 1470, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 0, 0, 1477, 0, 0, 0, 1472, 1473, 0,
	0, 0, 1366, 0, 0, 1372, 1373, 1374, 0, 642,
	0, 1436, 1412, 1427, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 771, 773, 0, 651, 653, 654, 0,
	681, 694, 699, 700, 703, 55, 60, 53, 1004, 280,
	281, 0, 0, 275, 0, -2, 856, 0, 0, 871,
	690, 0, 0, 885, 431, 930, 0, 0, 0, 946,
	969, 975, 0, 979, 0, 0, 0, 1008, 872, 877,
	878, 879, 873, 874, 880, 881, 0, 688, 0, 0,
	785, 485, 0, 541, 542, 490, 1730, 495, 745, 745,
	502, 496, 503, 545, 504, 505, 506, 0, 745, 745,
	540, 543, 530, 544, 543, 533, 534, 0, 552, 557,
	553, 0, 555, 510, 511, 690, 362, 363, 404, 404,
	404, 387, 404, 0, 0, 375, 1616, 0, 0, 0,
	0, 384, 1616, 0, 1616, 1616, 1616, 1616, 1616, 1616,
	1616, 0, 0, 1616, 1616, 1616, 1616, 1616, 1616, 1616,
	1616, 1616, 1616, 1616, 0, 1616, 1616, 1616, 1616, 1616,
	1118, 1616, 0, 989, 394, 395, 396, 397, 402, 403,
	0, 428, 0, 0, 0, 431, 0, 919, 758, 0,
	759, 760, 756, 787, 811, 811, 0, 811, 791, 1138,
	0, 0, 225, 226, 215, 0, 216, 0, 228, 229,
	0, 231, 232, 233, 240, 1675, 1744, 235, 237, 0,
	0, 241, 254, 255, 256, 0, 0, 246, 247, 0,
	0, 300, 301, 303, 0, 709, 579, 1136, 580, 581,
	585, 0, 0, 588, 589, 590, 591, 856, 0, 924,
	925, 745, 0, 754, 0, 750, 817, 0, 819, 0,
	745, 0, 78, 19, 0, 71, 68, 0, 0, 0,
	0, 0, 1591, 1541, 1612, 0, 0, 0, 1593, 0,
	0, 0, 0, 61, 663, 625, 0, 628, 644, 0,
	648, 0, 0, 640, 633, 637, 0, 0, 657, 619,
	0, 0, 624, 709, 684, 1189, 0, 333, 347, 0,
	0, 0, 0, 141, 933, 0, 142, 146, 136, 0,
	0, 0, 938, 0, 935, 940, 0, 156, 0, 0,
	131, 132, 999, 1004, 0, 1487, 1489, 1491, 1493, 1495,
	0, 1498, 1508, 1508, 1504, 0, 1499, 0, 1501, 0,
	1478, 0, 1294, 0, 0, 0, 0, 0, 0, 1356,
	1357, 0, 0, 1361, 0, 1363, 1364, 1365, 1367, 0,
	0, 0, 1371, 0, 1410, 1428, 1414, 1417, 0, 1421,
	0, 1423, 0, 697, 0, 0, 1331, 1331, 1331, 0,
	0, 0, 0, 1331, 0, 0, 0, 0, 0, 0,
	0, 0, 1286, 0, 1287, 1288, 0, 774, 663, 0,
	0, 0, 706, 704, 705, 0, 1002, 0, 282, 270,
	272, 0, 0, 0, 844, 845, 847, 0, 850, 851,
	852, 0, 857, 858, 860, 861, 0, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1660, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 855, 690, 0, 980, 892, 1616, 435, 0, 0,
	932, 0, 908, 0, 0, 0, -2, 0, 1075, 0,
	0, 0, 0, 1010, 0, 0, 0, 603, 607, 23,
	691, 0, 746, 488, 0, 489, 540, 497, 498, 745,
	1138, 522, 523, 745, 540, 540, 543, 0, 554, 0,
	988, 365, 0, 1147, 1148, 405, 0, 1154, 1163, 979,
	1221, 0, 1163, 0, 0, 1165, 1166, 0, 0, 0,
	0, 388, 389, 0, 374, 0, 0, 0, 0, 373,
	0, 0, 415, 0, 0, 0, 0, 1617, 1616, 1616,
	0, 382, 383, 0, 386, 0, 0, 0, 0, 0,
	0, 0, 1616, 1616, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1109, 0, 0, 0, 0,
	0, 0, 0, 1124, 1125, 892, 1616, 0, 0, 0,
	435, 906, 915, 0, 0, 0, 0, 0, 0, 778,
	0, 0, 777, 0, 0, 0, 0, 0, 690, 812,
	0, 814, 815, 789, -2, 0, 758, 794, 1475, 218,
	219, 0, 0, 224, 242, 244, 0, 0, 0, 243,
	245, 249, 250, 299, 302, 304, 679, 0, 0, 0,
	1031, 0, 595, 743, 748, 755, 818, 820, 94, 751,
	743, 0, 81, 19, 80, 72, 73, 0, 19, 0,
	0, 0, 0, 1601, 1600, 1586, 0, 1587, 1598, 1603,
	0, 1606, 0, 667, 0, 0, 647, 649, 0, 0,
	647, 0, 0, 656, 0, 0, 647, 682, 0, 0,
	562, 104, 353, 0, 0, 0, 0, 0, 583, 0,
	937, 138, 0, 0, 158, 0, 0, 1004, 1474, 1500,
	1502, 0, 1509, 1505, 1269, 1277, 1290, 0, 0, 1296,
	1308, 1308, 0, 1299, 1599, 1599, 1302, 1595, 1597, 1595,
	1308, 1308, 0, 95, 0, 0, 1362, 0, 0, 0,
	643, 0, 0, 0, 1329, 1331, 1331, 1337, 1332, 1338,
	1339, 1331, 1331, 1331, 1331, 1344, 1331, 1331, 1331, 1331,
	1331, 1331, 1331, 1331, 1327, 652, 667, 695, 696, 701,
	702, 0, 54, 1004, 0, 274, 0, 0, 849, 0,
	0, 0, 862, 0, 0, 896, 893, 894, 895, 0,
	927, 436, 437, 438, 439, 0, 0, 0, 931, 0,
	919, 901, 0, 0, 0, 970, 971, 972, 973, 974,
	-2, 983, 0, 0, 1140, 0, 0, 0, 1140, 1140,
	1140, 1018, 0, 1009, 655, 0, -2, 0, 0, 605,
	0, 0, 786, 491, 745, 515, 0, 531, 745, 745,
	540, 558, 0, 364, 406, 0, 1153, 1178, 1164, 1178,
	1222, 1178, 1178, 979, 0, 406, 0, 0, 376, 412,
	0, 0, 0, 0, 372, 409, 703, 413, 414, 416,
	0, 418, 378, 390, 391, 392, 393, 0, 0, 0,
	385, 398, 399, 400, 401, 1086, 1087, 1088, 1091, 1092,
	1093, 1094, 0, 0, 1097, 1098, 1099, 1100, 1101, 1175,
	1176, 1177, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1126,
	1127, 1128, 1129, 1130, 1131, 1110, 1111, 1112, 1113, 1114,
	1115, 1116, 1117, 0, 0, 1121, 0, 896, 0, 0,
	0, 0, 927, 908, 0, 918, 0, 920, 921, 0,
	0, 626, 745, 292, 0, 781, 775, 0, 764, 779,
	780, 767, 0, 769, 0, 765, 766, 745, 757, 788,
	813, 790, 793, 795, 796, 802, 0, 0, 0, 0,
	221, 222, 223, 230, 0, 455, 236, 710, 1137, 586,
	587, 1032, 1033, 593, 741, 0, 0, 741, 76, 79,
	0, 74, 0, 0, 0, 0, 66, 64, 1594, 0,
	0, 669, 118, 0, 0, 0, 645, 0, 650, 647,
	632, 641, 631, 638, 639, 658, 647, 623, 622, 1190,
	328, 0, 934, 138, 143, 144, 145, 139, 137, 941,
	0, 943, 0, 1000, 0, 1506, 1295, 1278, 1297, 1309,
	1310, 1298, 1279, 1300, 1301, 1303, 1304, 1305, 1306, 1307,
	1280, 1358, 0, 1360, 1368, 1369, 0, 1418, 1422, 0,
	0, 0, 1335, 1336, 1340, 1341, 1342, 1343, 1345, 1346,
	1347, 1348, 1349, 1350, 1351, 1352, 697, 1328, 0, 669,
	707, 708, 1003, 1005, 837, 840, 846, 848, 0, 859,
	0, 0, 875, 868, 0, 0, 887, 888, 898, 0,
	0, 0, 441, 442, 0, 0, 0, 454, 450, 451,
	452, 432, 926, 915, 904, 0, 0, 914, 0, 984,
	1616, 1616, 1616, 0, 0, 1141, 1142, 1144, 1145, 1146,
	0, 0, 1140, 0, 0, 0, 1021, 0, 0, 1012,
	0, 811, 0, 0, 745, 604, 607, 608, 689, 492,
	745, 535, 532, 745, 361, 377, 407, 0, -2, 0,
	1179, 0, 1167, 1179, 0, 0, 1178, 0, 366, 406,
	0, 0, 0, 419, 422, 423, 420, 1217, 0, 421,
	0, 411, 417, 1089, 1090, 0, 1095, 1096, 0, 1120,
	0, 0, 424, 0, 0, 0, 425, 430, 901, 0,
	916, 0, 922, 923, 697, 0, 0, 761, 782, 0,
	0, 762, 0, 763, 768, 770, 291, 797, 0, 0,
	799, 800, 801, 792, 238, 731, 0, 0, 752, 732,
	0, 19, 0, 0, 69, 1604, 1607, 671, 0, 668,
	119, 0, 0, 0, 0, 646, 630, 621, 140, 135,
	942, 121, 1001, 0, 1370, 0, 1331, 1330, 1324, 0,
	671, 0, 865, 863, 875, 867, 882, 897, 886, 0,
	928, 929, 0, 443, 444, 0, 447, 453, 899, 900,
	0, 0, 912, 0, 0, 0, 0, 976, 1075, 0,
	992, 0, 1077, 1616, 1616, 0, -2, 0, -2, 1024,
	0, 1019, 0, 1011, 0, 1014, 745, 745, -2, 601,
	606, 0, 516, 536, 408, 1180, -2, 1193, 1195, 0,
	989, 1198, 1199, 0, 0, 0, 0, 0, 0, 1243,
	1207, 0, 0, 1211, 1212, 1213, 0, 0, 1216, 0,
	1524, 1525, 0, 1220, 0, 0, 0, 0, 0, 0,
	0, 1161, 367, 368, 0, 370, 371, 1218, 410, 1616,
	380, 1119, 1122, 1123, 429, 426, 427, 904, 907, 627,
	692, 293, 294, 783, 0, 776, 806, 803, 0, 0,
	742, 744, 70, 75, 0, 0, 673, 0, 670, 0,
	664, 666, 129, 635, 91, 112, 0, 1359, 1409, 1334,
	0, 1325, 0, 1319, 1320, 1321, 1326, 673, 0, 866,
	0, 883, 884, 0, 0, 440, 445, 0, 448, 449,
	905, 902, 903, 0, 910, 0, 0, 965, 1595, 0,
	985, 986, 1134, 1135, 987, 990, 1143, 1076, 0, 0,
	0, 1075, 1034, -2, 1083, 0, 996, 121, 1034, 1015,
	0, 1022, 0, 1020, 1013, 697, 602, 1194, 1196, 1197,
	1200, 1201, 1202, 1248, 1249, 1250, 0, 0, 1205, 1245,
	1246, 1247, 1206, 0, 0, 0, 0, 0, 1522, 1523,
	1241, 0, 0, 1168, 1170, 1171, 1172, 1173, 1174, 1169,
	0, 0, 0, 1160, 1162, 369, 0, 1616, 917, 290,
	0, 0, 807, 809, 804, 805, 65, 67, 82, 0,
	672, 120, 0, 83, 0, 109, 0, 122, 123, 0,
	0, 0, 0, 1333, 1322, 0, 0, 0, 0, 0,
	1526, 1527, 1528, 0, 662, 0, 864, 0, 889, 0,
	891, 446, 909, 912, 0, 958, 0, 703, 0, 1078,
	1079, 1080, 991, 1036, 0, 988, 1085, 1616, 998, 1036,
	1007, 0, 1017, 0, 1026, 0, 1023, 692, 1203, 1204,
	0, 0, 1425, 1616, 0, 1236, 0, 958, 958, 958,
	958, 0, 379, 0, 784, 798, 0, 0, 0, 92,
	96, 0, 118, 115, 0, 124, 0, 0, 0, 0,
	0, 1311, 0, 0, 0, 1315, 1316, 1317, 1318, 0,
	876, 890, 911, 913, 957, 966, 967, 703, 995, 0,
	1073, 1084, 0, 997, 1016, 1025, 0, 1028, 600, 1244,
	0, 1210, 0, 1215, 1224, 1237, 0, 0, 1149, 0,
	1151, 0, 1155, 0, 1157, 0, 0, 381, 808, 810,
	0, 675, 665, 85, 0, 0, 113, 114, 116, 0,
	125, 0, 127, 128, 0, 1312, 1313, 1314, 853, 959,
	1616, 0, 0, 963, 964, 968, 0, 1061, 0, 0,
	1067, 0, 1074, 1089, 1027, 1208, 1214, 1223, 1225, 1226,
	0, 1238, 1239, 1240, 1242, 958, 958, 958, 958, 1159,
	674, 0, 1006, 0, 97, 0, 99, 101, 102, 1181,
	110, 111, 117, 126, 1323, 0, 961, 0, 1037, 0,
	1039, 0, 0, 0, 0, 0, 1071, 0, 1209, 1227,
	0, 1228, 0, 0, 0, 1150, 1152, 1156, 1158, 676,
	86, 87, 0, 98, 0, 0, 960, 962, 0, 1041,
	0, 1062, 0, 0, 0, 0, 0, 0, 0, 1229,
	1231, 1232, 0, 0, 1230, 0, 0, 100, 1182, 1038,
	1035, 0, 1073, 1063, 0, 1065, 0, 0, 0, 0,
	1233, 1235, 1234, 88, 89, 90, 0, 0, 1043, 0,
	1059, 1064, 1066, 1068, 0, 1072, 1070, 1183, 1042, 0,
	1055, 1040, 0, 1069, 1044, -2, 0, 1060, 1045, -2,
	0, 1053, 0, 0, 1046, 1054, 0, 1049, 0, 0,
	0, 1048, 0, -2, 1056, 0, 0, 1050, -2, 0,
	1058, 1057,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 599, 596,
	123, 122, 124, 3, 600, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 597, 135, 598, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:750
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:757
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:763
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:771
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:777
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:781
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:796
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:800
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:806
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:811
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:815
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:847
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:855
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:863
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:873
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:893
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:899
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:906
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:914
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:920
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:929
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:939
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:947
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:955
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:963
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:973
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:981
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:991
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:998
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1007
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1017
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1021
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1027
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1031
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1037
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1046
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1056
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1060
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1066
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1075
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1079
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1085
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1106
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1119
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1126
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1130
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1136
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1140
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1146
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1153
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1161
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1165
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1179
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1183
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1187
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1192
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1196
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1200
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1206
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1215
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1226
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1230
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1236
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1240
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1246
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1250
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1256
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1280
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1299
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1303
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1307
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1312
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1316
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1323
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1331
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1338
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1343
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1350
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1355
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1359
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1383
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1387
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1393
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1399
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1417
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1434
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1457
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1461
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1465
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1470
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1474
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1480
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1493
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1504
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1517
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1521
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1531
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1544
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1557
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1563
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1569
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1576
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1584
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1593
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1597
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1601
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1605
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1609
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1613
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1620
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1624
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1630
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1637
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1646
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1650
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1656
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1660
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1664
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1668
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1672
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1676
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1680
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1684
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1688
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1692
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1696
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1700
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1704
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1708
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1712
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1716
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1720
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1724
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1728
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1732
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1736
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1740
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1744
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1748
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1752
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1756
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1760
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1764
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1768
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1772
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1776
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1780
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1784
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1788
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1792
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1796
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1800
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1804
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1808
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1812
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1816
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1820
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1824
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1828
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1832
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1836
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1840
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1844
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1848
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1852
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1865
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1872
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1879
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1889
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1893
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1899
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1906
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1914
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1918
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1922
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1926
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1932
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1936
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1942
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1949
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1956
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1965
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1995
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1999
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2003
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2009
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2015
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2019
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2026
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2032
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2036
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2042
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2050
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2059
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2068
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2076
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2084
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2107
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2130
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2137
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2144
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2152
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2159
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2166
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2175
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2179
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2183
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2189
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2193
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2199
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2203
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2209
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2213
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2224
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2230
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2235
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2239
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2243
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2247
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2251
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2255
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2259
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2263
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2267
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2273
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2277
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2281
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2285
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2290
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2295
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2301
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2308
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2314
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2321
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2328
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2338
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2345
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2356
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2367
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2371
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2377
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2387
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2393
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2397
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2403
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2409
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2413
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2417
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2421
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2427
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2439
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2445
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2449
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2455
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2459
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2465
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2471
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2482
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2488
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2492
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2496
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2500
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2504
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2508
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2516
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2524
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2534
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2575
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2579
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2585
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2591
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2596
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2597
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2598
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2603
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2619
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2630
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2639
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2643
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2649
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2656
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2665
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2675
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2684
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2694
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2704
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2713
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2721
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2725
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2729
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2733
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2737
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2746
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2752
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2756
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2760
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2764
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2768
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2772
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2776
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2780
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2785
		{
			yyVAL.str = ""
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2816
		{
			yyVAL.str = ""
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2820
		{
			yyVAL.str = string("COLUMN")
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2825
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2831
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2837
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2846
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2850
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2856
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2863
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2871
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2878
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2885
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2892
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2899
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2906
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2914
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2921
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2928
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2937
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2941
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2948
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2960
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2968
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2976
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2989
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2995
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3006
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3017
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3021
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3026
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3030
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3035
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3039
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3055
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3059
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3063
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3067
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3071
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3075
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3079
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3083
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3087
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3091
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3095
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3099
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3103
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3107
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3111
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3115
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3121
		{
			yyVAL.item = nil
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3126
		{
			yyVAL.item = nil
		}
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3166
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3172
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3180
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3184
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3188
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3201
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3207
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3212
		{
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3216
		{
		}
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3221
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3231
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3241
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3249
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3255
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3261
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3267
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3273
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3279
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3285
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3294
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3298
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3302
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3306
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3310
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3314
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3318
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3322
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3328
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3335
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3345
		{
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3347
		{
		}
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3356
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3366
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3375
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3379
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3383
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3389
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3395
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3401
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3407
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3416
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3426
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3438
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3442
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3448
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3460
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3474
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3480
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3487
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3492
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3496
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3500
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3505
		{
			yyVAL.str = ""
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3509
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3515
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3528
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3532
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3538
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3543
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3547
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3551
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3557
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3563
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3567
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3573
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3579
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3583
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3587
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3593
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3597
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3621
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3630
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3639
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3648
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3652
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3658
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3667
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3676
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3686
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3690
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3697
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3703
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3707
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3713
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3719
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3728
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3735
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3746
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3751
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3758
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3774
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3787
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3798
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3802
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3808
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3813
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3820
		{
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3822
		{
		}
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3825
		{
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3834
		{
		}
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3838
		{
		}
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3843
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3852
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3859
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3865
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3873
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3880
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3887
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3907
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3917
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3921
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3927
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3934
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3940
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3948
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3955
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3962
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3981
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3985
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3990
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3994
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3998
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4004
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4013
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4017
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4023
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4027
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4033
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4037
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4043
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4048
		{
		}
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4052
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4059
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4063
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4070
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4075
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4079
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4085
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4089
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4095
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4099
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4104
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4108
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4121
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4128
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4135
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4153
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4172
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4178
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4185
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4189
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4202
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4206
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4211
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4215
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4222
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4227
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4234
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4240
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4244
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4248
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4252
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4256
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4260
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4266
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4273
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4282
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4286
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4292
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4300
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4304
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4309
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4313
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4319
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4323
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4327
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4332
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4336
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4342
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4348
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4352
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4358
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4363
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4367
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4371
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4376
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4380
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4384
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4393
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4401
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4405
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4409
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4423
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4427
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4437
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4447
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4457
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4469
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4477
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4485
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4494
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4502
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4510
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4518
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4526
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4534
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4542
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4550
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4558
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4568
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4579
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4593
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4597
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4601
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4606
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4610
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4614
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4623
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4627
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4632
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4636
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4641
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4645
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4651
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4655
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4661
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4665
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4670
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4674
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4679
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4687
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4693
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4701
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4709
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4719
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4725
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4734
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4743
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4752
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4762
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4766
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4776
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4780
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4784
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4788
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4794
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4804
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4808
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4814
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4820
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4824
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4830
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4836
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4840
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4844
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4850
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4854
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4860
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4864
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4870
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4874
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4880
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4884
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4894
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4907
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4913
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4919
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4932
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4943
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4950
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4954
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4960
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4970
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4974
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4978
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4983
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4987
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4991
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4995
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5000
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5004
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5008
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5012
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5016
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5021
		{
			yyVAL.str = ""
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5025
		{
			yyVAL.str = yyDollar[1].str
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5029
		{
			yyVAL.str = yyDollar[2].str
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5035
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5041
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5045
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5049
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5053
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5057
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5063
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 837:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5098
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5108
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5114
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 840:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5120
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5130
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5135
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5141
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5148
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5152
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5158
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5164
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5169
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5173
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5177
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5181
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5188
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5200
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5205
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5211
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5218
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5222
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5228
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5234
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5238
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5242
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5248
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5254
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5260
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5269
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5280
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5292
		{
			yyVAL.str = yyDollar[1].str
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5296
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5302
		{
			yyVAL.str = "OR REPLACE"
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5306
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5310
		{
			yyVAL.str = "DEFINER = "
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5314
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5319
		{
			yyVAL.str = ""
		}
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5323
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5337
		{
			yyVAL.str = ""
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5345
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5351
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5361
		{
			yyVAL.str = yyDollar[1].str
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5365
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5371
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5378
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5384
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5392
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5398
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5405
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5412
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5420
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5426
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5435
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5447
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5459
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5471
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5477
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5484
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5492
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5498
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5506
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5512
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5520
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5526
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5535
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5539
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5544
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5548
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5555
		{
			yyVAL.str = yyDollar[3].str
		}
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5560
		{
			yyVAL.str = ""
		}
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5564
		{
			yyVAL.str = yyDollar[2].str
		}
	case 917:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5570
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5584
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5594
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5598
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5604
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5610
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5616
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5625
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5634
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5643
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5648
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5654
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5662
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5768
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5772
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5778
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5788
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5792
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5798
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5808
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5812
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5816
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5821
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5825
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5831
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5838
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5844
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5853
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5860
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5869
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5873
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5879
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5893
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5897
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5901
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5906
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5910
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5914
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5918
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5924
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5943
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5947
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5969
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5973
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5977
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5981
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5985
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5991
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5995
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6001
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6006
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6011
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6015
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6019
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6023
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6027
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6033
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6044
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6048
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6058
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6062
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6071
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6077
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6081
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6087
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6091
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6095
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6100
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6104
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6110
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6121
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6132
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6143
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6147
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6153
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6165
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6174
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6187
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6194
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6204
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6212
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6223
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6227
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6232
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6236
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6243
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6254
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6267
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6281
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6285
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6289
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6296
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6303
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6310
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6317
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6321
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6325
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6329
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6333
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6340
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6347
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6351
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6358
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6365
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6369
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6376
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6383
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6390
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6397
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6401
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6406
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6410
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6414
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6419
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6423
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6433
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6437
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6444
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6451
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6455
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6464
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6468
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6474
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6478
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6484
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6493
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6503
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6507
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6513
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6517
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6523
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6530
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6539
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6543
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6548
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6552
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6557
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6561
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6566
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6570
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6580
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6584
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6595
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6603
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6611
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6619
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6630
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6639
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6649
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6659
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6663
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6668
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6672
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6677
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6681
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6687
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6691
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6697
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6701
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6706
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6710
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6716
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6720
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6724
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6730
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6734
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6738
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6742
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6746
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6750
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6754
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6759
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6763
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6767
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6771
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6775
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6779
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6783
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6787
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6791
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6795
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6799
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6803
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6807
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6811
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6815
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6819
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6823
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6827
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6831
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6835
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6839
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6843
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6847
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6851
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6855
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6859
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6863
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6867
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6873
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6877
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6883
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6889
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6893
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6899
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6903
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6907
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6911
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6915
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6919
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6933
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6937
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6946
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6951
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6957
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6964
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6968
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6974
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6978
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6982
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6988
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6992
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6998
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7007
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7016
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7039
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7064
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7078
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7084
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7093
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7102
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7111
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7120
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7130
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7138
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7144
		{
			yyVAL.str = ""
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7148
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7158
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7164
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7170
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7189
		{
			yyVAL.str = ""
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7193
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7199
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7205
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7209
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7213
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7219
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7223
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7227
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7231
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7237
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7241
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7245
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7250
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7254
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7260
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7264
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7270
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7274
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7278
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7282
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7286
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7290
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7295
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7299
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7303
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7307
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7311
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7315
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7319
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7323
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7327
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7331
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7344
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7348
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7352
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7356
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7360
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7364
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7370
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7374
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7379
		{
			yyVAL.str = ""
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7383
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7389
		{
			yyVAL.str = ""
		}
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7393
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1223:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7399
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7411
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7418
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7425
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7432
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7439
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7448
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7454
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7460
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7464
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7468
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7472
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7476
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7481
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7488
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7492
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7496
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7501
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7505
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7510
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7514
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7530
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7536
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7540
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7544
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7548
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7552
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7556
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7560
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7564
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7568
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7572
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7576
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7580
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7584
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7590
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7594
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7598
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7602
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7606
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7610
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7614
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7618
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7622
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7626
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7630
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7634
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7639
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7647
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7652
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7656
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7665
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7669
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7673
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7677
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7681
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7687
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7695
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7703
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7712
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7716
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7721
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7725
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7731
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7735
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7741
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7750
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7762
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7779
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7796
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7809
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7822
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7834
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7848
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7863
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7878
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7895
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7910
		{
		}
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7917
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7921
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7925
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7931
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7935
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7939
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7943
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7949
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7953
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7957
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7963
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7971
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7981
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7985
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7992
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7997
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8001
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8006
		{
			yyVAL.str = ","
		}
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8010
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8015
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8022
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8048
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8059
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8069
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8079
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8089
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8098
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8107
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8117
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8127
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8137
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8147
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8157
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8167
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8177
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8187
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8197
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8207
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8217
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8227
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8246
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8254
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8262
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8270
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8278
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8288
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8296
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8305
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8313
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8321
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8329
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8337
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8348
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8358
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8370
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8381
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8403
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8439
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8451
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8463
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8474
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8482
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8489
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8496
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8508
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8516
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8526
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8536
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8544
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8555
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8564
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8573
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8581
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8591
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8599
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8613
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8619
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8623
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8642
		{
		}
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8644
		{
		}
	case 1470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8685
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8696
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8700
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8704
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8710
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8715
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8719
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8725
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8729
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8736
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8740
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8744
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8752
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8756
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8760
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8764
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8770
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8774
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8778
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8782
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8786
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8790
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8794
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8798
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8802
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8806
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8814
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8818
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8822
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8826
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8830
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8834
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8838
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8842
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8846
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8850
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8856
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8860
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8866
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8870
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8877
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8881
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8885
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8891
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8895
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8899
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8903
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8907
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8911
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8915
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8921
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8925
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8929
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8933
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8939
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8952
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8957
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8963
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8967
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8980
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8985
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8989
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8993
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8997
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9001
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9008
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9012
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9026
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9030
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9037
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9048
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9053
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9059
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9071
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9083
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9095
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9108
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9121
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9134
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9147
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9160
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9173
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9186
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9199
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9212
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9225
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9240
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9267
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9309
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9345
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9381
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9398
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9410
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9430
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9450
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9470
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9486
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9499
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9512
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9525
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9538
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9550
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9562
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9574
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9586
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9598
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9610
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9622
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9634
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9646
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9659
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9672
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9685
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9698
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9713
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9721
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9730
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9740
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9763
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9768
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9774
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9781
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9785
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9790
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9794
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9800
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9806
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9813
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9820
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9829
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9836
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9843
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9852
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9856
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9860
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9866
		{
		}
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9868
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9878
		{
			yyVAL.str = ""
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9882
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
