// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const STREAM = 57355
const INSERT = 57356
const UPDATE = 57357
const DELETE = 57358
const FROM = 57359
const WHERE = 57360
const GROUP = 57361
const HAVING = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CONNECT = 57367
const MANAGE = 57368
const GRANTS = 57369
const OWNERSHIP = 57370
const REFERENCE = 57371
const LOWER_THAN_SET = 57372
const SET = 57373
const ALL = 57374
const DISTINCT = 57375
const DISTINCTROW = 57376
const AS = 57377
const EXISTS = 57378
const ASC = 57379
const DESC = 57380
const INTO = 57381
const DUPLICATE = 57382
const DEFAULT = 57383
const LOCK = 57384
const KEYS = 57385
const NULLS = 57386
const FIRST = 57387
const LAST = 57388
const AFTER = 57389
const INSTANT = 57390
const INPLACE = 57391
const COPY = 57392
const DISABLE = 57393
const ENABLE = 57394
const UNDEFINED = 57395
const MERGE = 57396
const TEMPTABLE = 57397
const DEFINER = 57398
const INVOKER = 57399
const SQL = 57400
const SECURITY = 57401
const CASCADED = 57402
const VALUES = 57403
const NEXT = 57404
const VALUE = 57405
const SHARE = 57406
const MODE = 57407
const SQL_NO_CACHE = 57408
const SQL_CACHE = 57409
const JOIN = 57410
const STRAIGHT_JOIN = 57411
const LEFT = 57412
const RIGHT = 57413
const INNER = 57414
const OUTER = 57415
const CROSS = 57416
const NATURAL = 57417
const USE = 57418
const FORCE = 57419
const LOWER_THAN_ON = 57420
const ON = 57421
const USING = 57422
const SUBQUERY_AS_EXPR = 57423
const LOWER_THAN_STRING = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const STRING = 57428
const VALUE_ARG = 57429
const LIST_ARG = 57430
const COMMENT = 57431
const COMMENT_KEYWORD = 57432
const QUOTE_ID = 57433
const STAGE = 57434
const CREDENTIALS = 57435
const STAGES = 57436
const INTEGRAL = 57437
const HEX = 57438
const BIT_LITERAL = 57439
const FLOAT = 57440
const HEXNUM = 57441
const NULL = 57442
const TRUE = 57443
const FALSE = 57444
const LOWER_THAN_CHARSET = 57445
const CHARSET = 57446
const UNIQUE = 57447
const KEY = 57448
const OR = 57449
const PIPE_CONCAT = 57450
const XOR = 57451
const AND = 57452
const NOT = 57453
const BETWEEN = 57454
const CASE = 57455
const WHEN = 57456
const THEN = 57457
const ELSE = 57458
const END = 57459
const ELSEIF = 57460
const LOWER_THAN_EQ = 57461
const LE = 57462
const GE = 57463
const NE = 57464
const NULL_SAFE_EQUAL = 57465
const IS = 57466
const LIKE = 57467
const REGEXP = 57468
const IN = 57469
const ASSIGNMENT = 57470
const ILIKE = 57471
const SHIFT_LEFT = 57472
const SHIFT_RIGHT = 57473
const DIV = 57474
const MOD = 57475
const UNARY = 57476
const COLLATE = 57477
const BINARY = 57478
const UNDERSCORE_BINARY = 57479
const INTERVAL = 57480
const OUT = 57481
const INOUT = 57482
const BEGIN = 57483
const START = 57484
const TRANSACTION = 57485
const COMMIT = 57486
const ROLLBACK = 57487
const WORK = 57488
const CONSISTENT = 57489
const SNAPSHOT = 57490
const CHAIN = 57491
const NO = 57492
const RELEASE = 57493
const PRIORITY = 57494
const QUICK = 57495
const BIT = 57496
const TINYINT = 57497
const SMALLINT = 57498
const MEDIUMINT = 57499
const INT = 57500
const INTEGER = 57501
const BIGINT = 57502
const INTNUM = 57503
const REAL = 57504
const DOUBLE = 57505
const FLOAT_TYPE = 57506
const DECIMAL = 57507
const NUMERIC = 57508
const DECIMAL_VALUE = 57509
const TIME = 57510
const TIMESTAMP = 57511
const DATETIME = 57512
const YEAR = 57513
const CHAR = 57514
const VARCHAR = 57515
const BOOL = 57516
const CHARACTER = 57517
const VARBINARY = 57518
const NCHAR = 57519
const TEXT = 57520
const TINYTEXT = 57521
const MEDIUMTEXT = 57522
const LONGTEXT = 57523
const BLOB = 57524
const TINYBLOB = 57525
const MEDIUMBLOB = 57526
const LONGBLOB = 57527
const JSON = 57528
const ENUM = 57529
const UUID = 57530
const ARRAY_INT8 = 57531
const ARRAY_INT16 = 57532
const ARRAY_INT32 = 57533
const ARRAY_INT64 = 57534
const ARRAY_FLOAT32 = 57535
const ARRAY_FLOAT64 = 57536
const GEOMETRY = 57537
const POINT = 57538
const LINESTRING = 57539
const POLYGON = 57540
const GEOMETRYCOLLECTION = 57541
const MULTIPOINT = 57542
const MULTILINESTRING = 57543
const MULTIPOLYGON = 57544
const INT1 = 57545
const INT2 = 57546
const INT3 = 57547
const INT4 = 57548
const INT8 = 57549
const S3OPTION = 57550
const SQL_SMALL_RESULT = 57551
const SQL_BIG_RESULT = 57552
const SQL_BUFFER_RESULT = 57553
const LOW_PRIORITY = 57554
const HIGH_PRIORITY = 57555
const DELAYED = 57556
const CREATE = 57557
const ALTER = 57558
const DROP = 57559
const RENAME = 57560
const ANALYZE = 57561
const ADD = 57562
const RETURNS = 57563
const SCHEMA = 57564
const TABLE = 57565
const SEQUENCE = 57566
const INDEX = 57567
const VIEW = 57568
const TO = 57569
const IGNORE = 57570
const IF = 57571
const PRIMARY = 57572
const COLUMN = 57573
const CONSTRAINT = 57574
const SPATIAL = 57575
const FULLTEXT = 57576
const FOREIGN = 57577
const KEY_BLOCK_SIZE = 57578
const SHOW = 57579
const DESCRIBE = 57580
const EXPLAIN = 57581
const DATE = 57582
const ESCAPE = 57583
const REPAIR = 57584
const OPTIMIZE = 57585
const TRUNCATE = 57586
const MAXVALUE = 57587
const PARTITION = 57588
const REORGANIZE = 57589
const LESS = 57590
const THAN = 57591
const PROCEDURE = 57592
const TRIGGER = 57593
const STATUS = 57594
const VARIABLES = 57595
const ROLE = 57596
const PROXY = 57597
const AVG_ROW_LENGTH = 57598
const STORAGE = 57599
const DISK = 57600
const MEMORY = 57601
const CHECKSUM = 57602
const COMPRESSION = 57603
const DATA = 57604
const DIRECTORY = 57605
const DELAY_KEY_WRITE = 57606
const ENCRYPTION = 57607
const ENGINE = 57608
const MAX_ROWS = 57609
const MIN_ROWS = 57610
const PACK_KEYS = 57611
const ROW_FORMAT = 57612
const STATS_AUTO_RECALC = 57613
const STATS_PERSISTENT = 57614
const STATS_SAMPLE_PAGES = 57615
const DYNAMIC = 57616
const COMPRESSED = 57617
const REDUNDANT = 57618
const COMPACT = 57619
const FIXED = 57620
const COLUMN_FORMAT = 57621
const AUTO_RANDOM = 57622
const ENGINE_ATTRIBUTE = 57623
const SECONDARY_ENGINE_ATTRIBUTE = 57624
const INSERT_METHOD = 57625
const RESTRICT = 57626
const CASCADE = 57627
const ACTION = 57628
const PARTIAL = 57629
const SIMPLE = 57630
const CHECK = 57631
const ENFORCED = 57632
const RANGE = 57633
const LIST = 57634
const ALGORITHM = 57635
const LINEAR = 57636
const PARTITIONS = 57637
const SUBPARTITION = 57638
const SUBPARTITIONS = 57639
const CLUSTER = 57640
const TYPE = 57641
const ANY = 57642
const SOME = 57643
const EXTERNAL = 57644
const LOCALFILE = 57645
const URL = 57646
const PREPARE = 57647
const DEALLOCATE = 57648
const RESET = 57649
const EXTENSION = 57650
const INCREMENT = 57651
const CYCLE = 57652
const MINVALUE = 57653
const PUBLICATION = 57654
const SUBSCRIPTIONS = 57655
const PUBLICATIONS = 57656
const PROPERTIES = 57657
const PARSER = 57658
const VISIBLE = 57659
const INVISIBLE = 57660
const BTREE = 57661
const HASH = 57662
const RTREE = 57663
const BSI = 57664
const ZONEMAP = 57665
const LEADING = 57666
const BOTH = 57667
const TRAILING = 57668
const UNKNOWN = 57669
const EXPIRE = 57670
const ACCOUNT = 57671
const ACCOUNTS = 57672
const UNLOCK = 57673
const DAY = 57674
const NEVER = 57675
const PUMP = 57676
const MYSQL_COMPATIBILITY_MODE = 57677
const MODIFY = 57678
const CHANGE = 57679
const SECOND = 57680
const ASCII = 57681
const COALESCE = 57682
const COLLATION = 57683
const HOUR = 57684
const MICROSECOND = 57685
const MINUTE = 57686
const MONTH = 57687
const QUARTER = 57688
const REPEAT = 57689
const REVERSE = 57690
const ROW_COUNT = 57691
const WEEK = 57692
const REVOKE = 57693
const FUNCTION = 57694
const PRIVILEGES = 57695
const TABLESPACE = 57696
const EXECUTE = 57697
const SUPER = 57698
const GRANT = 57699
const OPTION = 57700
const REFERENCES = 57701
const REPLICATION = 57702
const SLAVE = 57703
const CLIENT = 57704
const USAGE = 57705
const RELOAD = 57706
const FILE = 57707
const TEMPORARY = 57708
const ROUTINE = 57709
const EVENT = 57710
const SHUTDOWN = 57711
const NULLX = 57712
const AUTO_INCREMENT = 57713
const APPROXNUM = 57714
const SIGNED = 57715
const UNSIGNED = 57716
const ZEROFILL = 57717
const ENGINES = 57718
const LOW_CARDINALITY = 57719
const AUTOEXTEND_SIZE = 57720
const ADMIN_NAME = 57721
const RANDOM = 57722
const SUSPEND = 57723
const ATTRIBUTE = 57724
const HISTORY = 57725
const REUSE = 57726
const CURRENT = 57727
const OPTIONAL = 57728
const FAILED_LOGIN_ATTEMPTS = 57729
const PASSWORD_LOCK_TIME = 57730
const UNBOUNDED = 57731
const SECONDARY = 57732
const RESTRICTED = 57733
const USER = 57734
const IDENTIFIED = 57735
const CIPHER = 57736
const ISSUER = 57737
const X509 = 57738
const SUBJECT = 57739
const SAN = 57740
const REQUIRE = 57741
const SSL = 57742
const NONE = 57743
const PASSWORD = 57744
const SHARED = 57745
const EXCLUSIVE = 57746
const MAX_QUERIES_PER_HOUR = 57747
const MAX_UPDATES_PER_HOUR = 57748
const MAX_CONNECTIONS_PER_HOUR = 57749
const MAX_USER_CONNECTIONS = 57750
const FORMAT = 57751
const VERBOSE = 57752
const CONNECTION = 57753
const TRIGGERS = 57754
const PROFILES = 57755
const LOAD = 57756
const INFILE = 57757
const TERMINATED = 57758
const OPTIONALLY = 57759
const ENCLOSED = 57760
const ESCAPED = 57761
const STARTING = 57762
const LINES = 57763
const ROWS = 57764
const IMPORT = 57765
const DISCARD = 57766
const MODUMP = 57767
const OVER = 57768
const PRECEDING = 57769
const FOLLOWING = 57770
const GROUPS = 57771
const DATABASES = 57772
const TABLES = 57773
const SEQUENCES = 57774
const EXTENDED = 57775
const FULL = 57776
const PROCESSLIST = 57777
const FIELDS = 57778
const COLUMNS = 57779
const OPEN = 57780
const ERRORS = 57781
const WARNINGS = 57782
const INDEXES = 57783
const SCHEMAS = 57784
const NODE = 57785
const LOCKS = 57786
const ROLES = 57787
const TABLE_NUMBER = 57788
const COLUMN_NUMBER = 57789
const TABLE_VALUES = 57790
const TABLE_SIZE = 57791
const NAMES = 57792
const GLOBAL = 57793
const PERSIST = 57794
const SESSION = 57795
const ISOLATION = 57796
const LEVEL = 57797
const READ = 57798
const WRITE = 57799
const ONLY = 57800
const REPEATABLE = 57801
const COMMITTED = 57802
const UNCOMMITTED = 57803
const SERIALIZABLE = 57804
const LOCAL = 57805
const EVENTS = 57806
const PLUGINS = 57807
const CURRENT_TIMESTAMP = 57808
const DATABASE = 57809
const CURRENT_TIME = 57810
const LOCALTIME = 57811
const LOCALTIMESTAMP = 57812
const UTC_DATE = 57813
const UTC_TIME = 57814
const UTC_TIMESTAMP = 57815
const REPLACE = 57816
const CONVERT = 57817
const SEPARATOR = 57818
const TIMESTAMPDIFF = 57819
const CURRENT_DATE = 57820
const CURRENT_USER = 57821
const CURRENT_ROLE = 57822
const SECOND_MICROSECOND = 57823
const MINUTE_MICROSECOND = 57824
const MINUTE_SECOND = 57825
const HOUR_MICROSECOND = 57826
const HOUR_SECOND = 57827
const HOUR_MINUTE = 57828
const DAY_MICROSECOND = 57829
const DAY_SECOND = 57830
const DAY_MINUTE = 57831
const DAY_HOUR = 57832
const YEAR_MONTH = 57833
const SQL_TSI_HOUR = 57834
const SQL_TSI_DAY = 57835
const SQL_TSI_WEEK = 57836
const SQL_TSI_MONTH = 57837
const SQL_TSI_QUARTER = 57838
const SQL_TSI_YEAR = 57839
const SQL_TSI_SECOND = 57840
const SQL_TSI_MINUTE = 57841
const RECURSIVE = 57842
const CONFIG = 57843
const DRAINER = 57844
const MATCH = 57845
const AGAINST = 57846
const BOOLEAN = 57847
const LANGUAGE = 57848
const WITH = 57849
const QUERY = 57850
const EXPANSION = 57851
const WITHOUT = 57852
const VALIDATION = 57853
const ADDDATE = 57854
const BIT_AND = 57855
const BIT_OR = 57856
const BIT_XOR = 57857
const CAST = 57858
const COUNT = 57859
const APPROX_COUNT_DISTINCT = 57860
const APPROX_PERCENTILE = 57861
const CURDATE = 57862
const CURTIME = 57863
const DATE_ADD = 57864
const DATE_SUB = 57865
const EXTRACT = 57866
const GROUP_CONCAT = 57867
const MAX = 57868
const MID = 57869
const MIN = 57870
const NOW = 57871
const POSITION = 57872
const SESSION_USER = 57873
const STD = 57874
const STDDEV = 57875
const MEDIAN = 57876
const STDDEV_POP = 57877
const STDDEV_SAMP = 57878
const SUBDATE = 57879
const SUBSTR = 57880
const SUBSTRING = 57881
const SUM = 57882
const SYSDATE = 57883
const SYSTEM_USER = 57884
const TRANSLATE = 57885
const TRIM = 57886
const VARIANCE = 57887
const VAR_POP = 57888
const VAR_SAMP = 57889
const AVG = 57890
const RANK = 57891
const ROW_NUMBER = 57892
const DENSE_RANK = 57893
const NEXTVAL = 57894
const SETVAL = 57895
const CURRVAL = 57896
const LASTVAL = 57897
const ARROW = 57898
const ROW = 57899
const OUTFILE = 57900
const HEADER = 57901
const MAX_FILE_SIZE = 57902
const FORCE_QUOTE = 57903
const PARALLEL = 57904
const UNUSED = 57905
const BINDINGS = 57906
const DO = 57907
const DECLARE = 57908
const LOOP = 57909
const WHILE = 57910
const LEAVE = 57911
const ITERATE = 57912
const UNTIL = 57913
const CALL = 57914
const SPBEGIN = 57915
const BACKEND = 57916
const SERVERS = 57917
const KILL = 57918
const QUERY_RESULT = 57919

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"ARRAY_INT8",
	"ARRAY_INT16",
	"ARRAY_INT32",
	"ARRAY_INT64",
	"ARRAY_FLOAT32",
	"ARRAY_FLOAT64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'{'",
	"'}'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10265

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 114,
	22, 693,
	-2, 674,
	-1, 128,
	242, 948,
	-2, 1019,
	-1, 151,
	43, 514,
	242, 514,
	269, 521,
	270, 521,
	458, 514,
	-2, 547,
	-1, 187,
	596, 1727,
	-2, 430,
	-1, 522,
	321, 130,
	432, 130,
	-2, 1633,
	-1, 585,
	82, 1425,
	-2, 1781,
	-1, 586,
	82, 1443,
	-2, 1752,
	-1, 590,
	82, 1444,
	-2, 1780,
	-1, 615,
	82, 1355,
	-2, 1847,
	-1, 616,
	82, 1356,
	-2, 1846,
	-1, 617,
	82, 1357,
	-2, 1836,
	-1, 618,
	82, 1811,
	-2, 1831,
	-1, 619,
	82, 1812,
	-2, 1832,
	-1, 620,
	82, 1813,
	-2, 1838,
	-1, 621,
	82, 1814,
	-2, 1821,
	-1, 622,
	82, 1815,
	-2, 1829,
	-1, 623,
	82, 1816,
	-2, 1839,
	-1, 624,
	82, 1817,
	-2, 1840,
	-1, 625,
	82, 1818,
	-2, 1845,
	-1, 626,
	82, 1819,
	-2, 1850,
	-1, 627,
	82, 1820,
	-2, 1851,
	-1, 629,
	82, 1422,
	-2, 1622,
	-1, 633,
	82, 1427,
	-2, 1634,
	-1, 636,
	82, 1431,
	-2, 1652,
	-1, 640,
	82, 1435,
	-2, 1698,
	-1, 641,
	82, 1436,
	-2, 1776,
	-1, 649,
	82, 1446,
	-2, 1761,
	-1, 650,
	82, 1447,
	-2, 1806,
	-1, 651,
	82, 1448,
	-2, 1771,
	-1, 652,
	82, 1449,
	-2, 1796,
	-1, 663,
	82, 1333,
	-2, 1841,
	-1, 664,
	82, 1334,
	-2, 1842,
	-1, 665,
	82, 1335,
	-2, 1843,
	-1, 669,
	22, 694,
	-2, 657,
	-1, 747,
	453, 547,
	454, 547,
	-2, 515,
	-1, 791,
	123, 1622,
	134, 1622,
	154, 1622,
	-2, 1597,
	-1, 900,
	22, 694,
	-2, 657,
	-1, 1000,
	22, 693,
	-2, 1233,
	-1, 1370,
	82, 1493,
	-2, 1778,
	-1, 1371,
	82, 1494,
	-2, 1779,
	-1, 1505,
	83, 838,
	-2, 844,
	-1, 1878,
	83, 1583,
	155, 1583,
	-2, 1763,
	-1, 1879,
	83, 1583,
	155, 1583,
	-2, 1762,
	-1, 1880,
	83, 1555,
	155, 1555,
	-2, 1749,
	-1, 1881,
	83, 1556,
	155, 1556,
	-2, 1754,
	-1, 1882,
	83, 1557,
	155, 1557,
	-2, 1686,
	-1, 1883,
	83, 1558,
	155, 1558,
	-2, 1680,
	-1, 1884,
	83, 1559,
	155, 1559,
	-2, 1613,
	-1, 1885,
	83, 1560,
	155, 1560,
	-2, 1751,
	-1, 1886,
	83, 1561,
	155, 1561,
	-2, 1684,
	-1, 1887,
	83, 1562,
	155, 1562,
	-2, 1679,
	-1, 1888,
	83, 1563,
	155, 1563,
	-2, 1666,
	-1, 1889,
	83, 1583,
	155, 1583,
	-2, 1667,
	-1, 1890,
	83, 1583,
	155, 1583,
	-2, 1668,
	-1, 1891,
	83, 1583,
	155, 1583,
	-2, 1669,
	-1, 1892,
	83, 1583,
	155, 1583,
	-2, 1670,
	-1, 1893,
	83, 1583,
	155, 1583,
	-2, 1671,
	-1, 1894,
	83, 1583,
	155, 1583,
	-2, 1672,
	-1, 1896,
	83, 1572,
	155, 1572,
	-2, 1796,
	-1, 1897,
	83, 1546,
	155, 1546,
	-2, 1781,
	-1, 1898,
	83, 1581,
	155, 1581,
	-2, 1752,
	-1, 1899,
	83, 1581,
	155, 1581,
	-2, 1780,
	-1, 1900,
	83, 1581,
	155, 1581,
	-2, 1635,
	-1, 1901,
	83, 1579,
	155, 1579,
	-2, 1771,
	-1, 1902,
	83, 1576,
	155, 1576,
	-2, 1657,
	-1, 1903,
	82, 1527,
	83, 1527,
	155, 1527,
	390, 1527,
	391, 1527,
	392, 1527,
	-2, 1612,
	-1, 1904,
	82, 1528,
	83, 1528,
	155, 1528,
	390, 1528,
	391, 1528,
	392, 1528,
	-2, 1614,
	-1, 1905,
	82, 1531,
	83, 1531,
	155, 1531,
	390, 1531,
	391, 1531,
	392, 1531,
	-2, 1753,
	-1, 1906,
	82, 1533,
	83, 1533,
	155, 1533,
	390, 1533,
	391, 1533,
	392, 1533,
	-2, 1736,
	-1, 1907,
	82, 1535,
	83, 1535,
	155, 1535,
	390, 1535,
	391, 1535,
	392, 1535,
	-2, 1685,
	-1, 1908,
	82, 1537,
	83, 1537,
	155, 1537,
	390, 1537,
	391, 1537,
	392, 1537,
	-2, 1662,
	-1, 1909,
	82, 1538,
	83, 1538,
	155, 1538,
	390, 1538,
	391, 1538,
	392, 1538,
	-2, 1663,
	-1, 1910,
	82, 1540,
	83, 1540,
	155, 1540,
	390, 1540,
	391, 1540,
	392, 1540,
	-2, 1611,
	-1, 1911,
	83, 1586,
	155, 1586,
	390, 1586,
	391, 1586,
	392, 1586,
	-2, 1640,
	-1, 1912,
	83, 1586,
	155, 1586,
	390, 1586,
	391, 1586,
	392, 1586,
	-2, 1653,
	-1, 1913,
	83, 1589,
	155, 1589,
	390, 1589,
	391, 1589,
	392, 1589,
	-2, 1636,
	-1, 1914,
	83, 1589,
	155, 1589,
	390, 1589,
	391, 1589,
	392, 1589,
	-2, 1701,
	-1, 1915,
	83, 1586,
	155, 1586,
	390, 1586,
	391, 1586,
	392, 1586,
	-2, 1721,
	-1, 1931,
	106, 983,
	150, 983,
	189, 983,
	192, 983,
	282, 983,
	-2, 976,
	-1, 2067,
	22, 693,
	-2, 787,
	-1, 2260,
	106, 983,
	150, 983,
	189, 983,
	192, 983,
	282, 983,
	-2, 977,
	-1, 2272,
	80, 603,
	155, 603,
	-2, 1122,
	-1, 2599,
	192, 983,
	306, 1201,
	-2, 1175,
	-1, 2731,
	106, 983,
	150, 983,
	189, 983,
	192, 983,
	-2, 1065,
	-1, 2734,
	106, 983,
	150, 983,
	189, 983,
	192, 983,
	-2, 1065,
	-1, 2744,
	80, 603,
	155, 603,
	-2, 1123,
	-1, 2752,
	192, 983,
	306, 1201,
	-2, 1176,
	-1, 2870,
	106, 983,
	150, 983,
	189, 983,
	192, 983,
	-2, 1066,
	-1, 3226,
	83, 1037,
	155, 1037,
	-2, 983,
	-1, 3230,
	83, 1037,
	155, 1037,
	-2, 983,
	-1, 3244,
	83, 1041,
	155, 1041,
	-2, 983,
	-1, 3249,
	83, 1042,
	155, 1042,
	-2, 983,
}

const yyPrivate = 57344

const yyLast = 38200

var yyAct = [...]int{
	552, 1289, 3230, 3229, 1582, 3209, 178, 3238, 1351, 3101,
	533, 531, 554, 3162, 3127, 3180, 3109, 2617, 3110, 541,
	2825, 3022, 2910, 2766, 1205, 3036, 1856, 3014, 1032, 2830,
	1347, 2680, 3040, 2860, 2861, 2945, 2858, 2681, 582, 439,
	1279, 2976, 1146, 790, 3023, 2828, 670, 2935, 3025, 445,
	1536, 450, 450, 2722, 2865, 1969, 2275, 450, 466, 475,
	2869, 2753, 475, 1354, 2708, 2571, 2820, 163, 2872, 2388,
	2387, 1671, 2711, 2389, 2559, 2311, 2596, 2371, 1636, 2381,
	2614, 1876, 535, 2678, 2160, 486, 2603, 1764, 1668, 2666,
	2410, 2649, 2251, 1733, 2384, 2543, 2862, 2538, 2540, 1198,
	1098, 480, 2061, 2602, 1940, 2572, 894, 2261, 2045, 1275,
	1538, 524, 1683, 525, 2447, 2569, 2159, 1644, 1874, 530,
	1487, 1742, 1866, 1999, 1741, 1760, 2109, 1972, 2486, 1707,
	2201, 723, 2430, 1734, 1664, 1759, 1119, 796, 1639, 54,
	2062, 2050, 1637, 2240, 2235, 2293, 1970, 1574, 1565, 1154,
	1939, 174, 8, 173, 7, 439, 1495, 6, 1514, 1280,
	2126, 842, 1792, 36, 1345, 1238, 1283, 1761, 449, 449,
	2089, 444, 534, 1288, 457, 1214, 784, 113, 178, 1184,
	178, 1350, 833, 834, 1872, 1922, 532, 2574, 2573, 1548,
	1135, 525, 35, 523, 1965, 754, 1771, 2202, 1400, 1121,
	1384, 1547, 1336, 911, 794, 26, 542, 15, 1070, 13,
	1740, 1723, 1245, 14, 1344, 438, 1697, 1737, 32, 1183,
	462, 472, 1155, 783, 459, 2069, 1513, 1181, 1131, 722,
	667, 1406, 488, 1405, 23, 16, 164, 10, 1147, 489,
	474, 700, 157, 1237, 1094, 829, 720, 831, 160, 704,
	1768, 2970, 669, 2480, 2480, 1778, 2725, 2162, 2673, 2115,
	2113, 742, 2112, 471, 2110, 467, 1252, 469, 1248, 826,
	825, 470, 830, 826, 826, 162, 468, 446, 1033, 1167,
	1250, 969, 970, 971, 968, 969, 970, 971, 968, 2818,
	2443, 2441, 1712, 2941, 2936, 2821, 2679, 455, 800, 1491,
	1027, 3027, 478, 1736, 668, 2007, 161, 3092, 50, 153,
	129, 161, 1426, 161, 8, 678, 7, 161, 161, 161,
	824, 2987, 161, 161, 50, 153, 129, 161, 161, 50,
	153, 129, 1303, 1086, 2709, 2847, 797, 1296, 932, 2147,
	1765, 2842, 3057, 484, 2509, 1776, 1111, 1926, 485, 2088,
	814, 799, 658, 2845, 657, 659, 660, 2155, 661, 662,
	2462, 2087, 1300, 966, 2416, 2988, 112, 1293, 2455, 2417,
	2418, 772, 112, 1648, 1163, 1337, 158, 1164, 1341, 1649,
	1650, 158, 1321, 1302, 1087, 1681, 2237, 158, 1295, 158,
	1143, 1440, 158, 158, 1499, 1500, 2238, 158, 158, 1152,
	1153, 940, 1340, 947, 942, 2075, 948, 1185, 2074, 1187,
	1150, 2076, 679, 671, 1149, 1152, 1153, 3145, 3113, 3114,
	2127, 763, 1561, 1353, 2838, 964, 793, 792, 3030, 3088,
	3030, 3143, 943, 3029, 950, 3029, 3087, 959, 3028, 3086,
	3028, 1847, 2682, 2236, 3131, 3132, 3016, 2142, 2943, 450,
	2448, 3016, 969, 970, 971, 968, 2449, 3019, 2450, 450,
	904, 2939, 2682, 1166, 2946, 2947, 2948, 2949, 3091, 914,
	1356, 905, 3033, 1422, 2691, 2712, 1665, 475, 475, 1419,
	450, 1342, 1772, 1421, 1418, 1420, 1424, 1425, 2327, 2719,
	2554, 1423, 1655, 1332, 1720, 809, 806, 801, 805, 807,
	1251, 1249, 899, 901, 1339, 2957, 2039, 936, 2958, 945,
	2852, 1921, 710, 2243, 2226, 2544, 3032, 768, 2776, 836,
	767, 1659, 2473, 812, 2552, 2005, 128, 804, 159, 962,
	963, 1426, 938, 961, 1258, 1257, 2152, 2819, 1002, 935,
	2375, 914, 2442, 2042, 941, 944, 2968, 2041, 151, 3094,
	3095, 2849, 2046, 2965, 1264, 2837, 903, 2568, 898, 2615,
	2616, 2960, 2839, 3138, 2475, 3112, 896, 2578, 2984, 927,
	937, 795, 946, 3046, 519, 2548, 902, 521, 810, 2549,
	2550, 1355, 520, 2268, 904, 813, 1781, 1783, 1784, 1141,
	477, 1777, 2959, 476, 900, 2551, 2380, 923, 2255, 2256,
	2257, 2258, 802, 2788, 3147, 800, 773, 1928, 2957, 3142,
	3041, 2958, 2781, 952, 3223, 1175, 953, 3239, 1165, 1338,
	3103, 3171, 3178, 769, 2964, 811, 2952, 472, 472, 1679,
	1680, 1130, 2619, 1429, 1430, 1431, 1432, 1433, 1434, 1427,
	1428, 957, 958, 797, 955, 939, 2791, 949, 2902, 3203,
	1362, 1365, 1366, 2911, 2912, 2913, 2915, 2914, 799, 916,
	915, 1363, 2091, 2016, 2960, 803, 1036, 2015, 918, 471,
	471, 467, 467, 469, 469, 2249, 800, 470, 470, 2891,
	1037, 2897, 468, 468, 907, 908, 771, 2546, 483, 1092,
	445, 1095, 1422, 1194, 2969, 2959, 2695, 2479, 1419, 2036,
	2037, 1193, 1421, 1418, 1420, 1424, 1425, 1766, 1766, 1766,
	1423, 1145, 1144, 1067, 797, 1128, 925, 920, 921, 951,
	2355, 924, 723, 1127, 1004, 1005, 1006, 1007, 2985, 799,
	3240, 916, 915, 826, 826, 826, 1126, 909, 826, 3093,
	808, 473, 3246, 826, 3210, 826, 473, 2736, 2986, 3183,
	1008, 3234, 3099, 3100, 2111, 3103, 2977, 956, 1253, 1793,
	895, 770, 2525, 1767, 1779, 1968, 1975, 2816, 1099, 450,
	484, 1177, 1151, 2846, 1985, 3013, 1182, 439, 439, 2611,
	2148, 2079, 954, 2003, 1148, 1769, 439, 439, 1152, 1153,
	1209, 1209, 668, 450, 1100, 1101, 1102, 1103, 1104, 2555,
	1106, 51, 1152, 1153, 1110, 1142, 51, 1666, 2427, 2428,
	2953, 475, 1095, 445, 3024, 1211, 1241, 1241, 130, 2242,
	1207, 1207, 2545, 130, 1105, 130, 2618, 178, 1782, 130,
	130, 130, 926, 3148, 130, 130, 439, 1216, 2848, 130,
	130, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1429, 1430, 1431, 1432, 1433, 1434, 1427, 1428,
	2156, 1093, 2966, 2412, 2414, 2328, 932, 2329, 2330, 795,
	1045, 1046, 2853, 2476, 1988, 2246, 2247, 2478, 1656, 1333,
	1968, 1990, 1259, 3233, 2547, 3184, 1173, 1203, 1204, 1978,
	2245, 1287, 1364, 1290, 1109, 1108, 2615, 2616, 1298, 713,
	1780, 714, 1107, 479, 2533, 2612, 1974, 1658, 2904, 1072,
	1215, 1976, 2325, 2953, 1116, 2898, 2899, 2954, 1319, 2225,
	1074, 1860, 3245, 2488, 2487, 1124, 1137, 1138, 1090, 2893,
	1129, 1502, 1209, 2892, 1209, 904, 669, 1139, 1989, 2346,
	2347, 1097, 1304, 1503, 764, 1157, 1158, 1859, 1160, 1161,
	1162, 680, 711, 1189, 1191, 931, 1132, 1136, 1136, 1136,
	1176, 1501, 1201, 1202, 764, 1977, 1862, 1861, 1118, 2028,
	2356, 2358, 2359, 2360, 2357, 1314, 1315, 1277, 1278, 1132,
	1132, 1088, 1089, 1984, 1233, 1168, 1169, 1982, 2566, 681,
	1854, 817, 822, 823, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1156, 2878, 2002, 1159,
	1395, 1396, 1254, 684, 1404, 717, 718, 719, 1192, 3181,
	3182, 3252, 1539, 1979, 1443, 1444, 1445, 766, 1453, 1539,
	765, 1352, 2413, 3251, 800, 3186, 1334, 1459, 800, 2273,
	1460, 967, 1869, 455, 1217, 2646, 1282, 766, 1227, 1286,
	765, 1231, 1467, 1468, 1462, 1285, 1232, 526, 1294, 1349,
	1242, 2345, 1301, 1243, 683, 1870, 1871, 1318, 686, 685,
	3242, 1824, 3224, 472, 1823, 1317, 969, 970, 971, 968,
	3219, 932, 672, 1328, 2129, 929, 1096, 969, 970, 971,
	968, 2642, 2732, 967, 1367, 1330, 3213, 2059, 1850, 450,
	2147, 1512, 1209, 1516, 1517, 967, 1519, 1520, 2613, 1305,
	1485, 450, 930, 1346, 1209, 471, 3212, 467, 723, 469,
	2567, 1537, 1853, 470, 2621, 1327, 1209, 1324, 468, 1323,
	1310, 2060, 1177, 2507, 2231, 3190, 2228, 466, 669, 3164,
	1306, 1488, 3243, 2583, 1774, 2134, 967, 3121, 3115, 1452,
	3067, 2091, 3220, 712, 1326, 1325, 1560, 1322, 1765, 2060,
	3007, 930, 1647, 1343, 1566, 1566, 2646, 1177, 1774, 1177,
	1177, 1511, 1348, 450, 1803, 1512, 1512, 2274, 672, 1209,
	1633, 1634, 1646, 1393, 1394, 819, 820, 821, 1774, 1564,
	1518, 1435, 1436, 1963, 1439, 3006, 439, 1508, 1209, 3002,
	1700, 1386, 1454, 969, 970, 971, 968, 1774, 1521, 1522,
	1523, 3165, 3001, 1855, 3000, 1461, 1509, 1463, 2274, 3122,
	2973, 2060, 2973, 450, 1512, 1209, 967, 1688, 1524, 450,
	1691, 1692, 3008, 827, 828, 1133, 1695, 1696, 832, 1924,
	2999, 1702, 1584, 1335, 2972, 1628, 1629, 1828, 178, 1802,
	1553, 178, 178, 1438, 178, 1756, 1677, 2795, 2630, 2407,
	1117, 555, 565, 2207, 1398, 1559, 1568, 1944, 1562, 1563,
	556, 2973, 564, 557, 561, 560, 558, 559, 2163, 1464,
	1660, 1492, 2145, 1515, 2973, 1549, 2973, 1551, 1552, 1652,
	1572, 1654, 1674, 1675, 1685, 1529, 1453, 1453, 1744, 1486,
	1557, 1672, 1673, 1453, 1453, 2138, 2136, 1542, 1751, 1540,
	1541, 1687, 2973, 1567, 2131, 1711, 2973, 1195, 1714, 1715,
	2124, 1717, 1068, 1667, 2122, 562, 3207, 1545, 1546, 2091,
	2631, 2060, 1537, 3166, 2718, 967, 1209, 1763, 1698, 2747,
	1684, 1690, 1558, 1533, 1555, 1556, 1684, 1534, 2120, 1132,
	967, 1134, 715, 1923, 1944, 1544, 1569, 563, 2118, 1943,
	1515, 1550, 1851, 1554, 1832, 1831, 1822, 2584, 2432, 2276,
	1570, 1571, 897, 2150, 1136, 2149, 3199, 2132, 2137, 2141,
	2588, 932, 1757, 1960, 1819, 2924, 2132, 1804, 1755, 1786,
	1705, 1813, 2125, 1812, 1745, 2793, 2123, 1811, 1262, 1773,
	1265, 1266, 1507, 1790, 1791, 1632, 1346, 1635, 1651, 1311,
	1653, 1267, 1268, 1269, 1270, 1271, 1272, 1739, 1307, 1661,
	2119, 1013, 917, 897, 1739, 1682, 1975, 1978, 2071, 2470,
	2119, 1944, 892, 984, 1850, 800, 967, 967, 967, 1686,
	1465, 1466, 800, 890, 1469, 1470, 1471, 1472, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1172, 1708, 1174, 1706,
	1178, 1179, 1180, 967, 1197, 967, 3047, 1829, 1676, 967,
	3187, 1774, 1133, 797, 1836, 472, 1442, 1441, 1199, 1122,
	797, 1312, 2879, 1123, 2579, 2739, 1725, 2737, 799, 1200,
	1222, 1223, 1224, 1225, 1226, 799, 1228, 1229, 1230, 2000,
	897, 2971, 1235, 1236, 2895, 524, 774, 904, 1916, 450,
	3048, 2671, 2894, 1749, 1748, 1750, 1754, 471, 2724, 467,
	1746, 469, 450, 450, 450, 470, 2880, 800, 2647, 2740,
	468, 2738, 1753, 2640, 1941, 2635, 2632, 1758, 987, 988,
	989, 990, 991, 984, 1948, 1177, 985, 986, 987, 988,
	989, 990, 991, 984, 2561, 1953, 2481, 1794, 2377, 2253,
	2580, 1979, 2135, 1196, 2081, 797, 1974, 1968, 1973, 1177,
	1971, 1976, 1113, 1112, 906, 1785, 1788, 1789, 2110, 2170,
	799, 2104, 1995, 2179, 1709, 972, 1473, 1401, 1134, 1787,
	1392, 1401, 2434, 1799, 1001, 1386, 1510, 1246, 1798, 1709,
	971, 968, 1010, 1877, 2581, 3085, 1389, 1391, 1388, 968,
	1390, 889, 885, 886, 887, 888, 2906, 2184, 2905, 2183,
	2182, 2180, 2451, 2317, 1016, 1977, 1917, 2316, 2001, 992,
	993, 985, 986, 987, 988, 989, 990, 991, 984, 1933,
	1934, 1935, 2064, 2064, 1646, 2064, 1918, 975, 976, 977,
	978, 979, 980, 981, 973, 2299, 1950, 1951, 969, 970,
	971, 968, 682, 439, 439, 2297, 1954, 1955, 2886, 2674,
	1015, 904, 1952, 969, 970, 971, 968, 1209, 450, 2252,
	1846, 1848, 1849, 1014, 2114, 969, 970, 971, 968, 2181,
	450, 2855, 2856, 1246, 904, 445, 3228, 3216, 1863, 1241,
	1457, 1646, 3172, 3167, 2099, 3105, 2101, 2085, 1957, 1962,
	178, 1958, 1925, 2006, 1458, 2008, 2009, 2010, 2011, 2012,
	2013, 2014, 2068, 3106, 2017, 2018, 2019, 2020, 2021, 2022,
	2023, 2024, 2025, 2026, 2027, 3202, 2029, 2030, 2031, 2032,
	2033, 2077, 2034, 2078, 2500, 2066, 1949, 2070, 3076, 969,
	970, 971, 968, 1036, 3049, 1959, 2143, 1956, 1961, 1763,
	2850, 2082, 2083, 1967, 1966, 2993, 1209, 1037, 1209, 2989,
	1209, 1980, 1981, 2937, 1986, 904, 2882, 2105, 2881, 2098,
	2741, 2716, 687, 800, 1857, 1858, 1801, 1136, 2715, 2553,
	1877, 969, 970, 971, 968, 1215, 3201, 2466, 2153, 2446,
	2672, 2445, 2093, 2499, 1209, 2188, 1815, 1684, 2096, 2367,
	969, 970, 971, 968, 2365, 2350, 2851, 2103, 2043, 2172,
	2195, 797, 2185, 2186, 2349, 1209, 2363, 2072, 2187, 969,
	970, 971, 968, 2723, 1207, 2348, 799, 2717, 2197, 1189,
	1191, 969, 970, 971, 968, 969, 970, 971, 968, 2196,
	2106, 2340, 2334, 2086, 1247, 1207, 969, 970, 971, 968,
	969, 970, 971, 968, 2097, 2366, 2095, 2352, 2333, 904,
	2364, 2157, 1814, 1240, 1240, 2332, 2199, 2331, 2094, 1728,
	3039, 1727, 2362, 2174, 983, 982, 992, 993, 985, 986,
	987, 988, 989, 990, 991, 984, 1726, 1722, 969, 970,
	971, 968, 1721, 1826, 1308, 2154, 969, 970, 971, 968,
	969, 970, 971, 968, 2832, 2168, 1689, 1085, 3137, 2382,
	2140, 2539, 2218, 2351, 1209, 2826, 2146, 2250, 2831, 2144,
	2151, 3133, 3089, 1512, 3035, 2859, 3011, 2992, 2991, 2272,
	969, 970, 971, 968, 2785, 2278, 2967, 1346, 2938, 2697,
	519, 2164, 2165, 521, 969, 970, 971, 968, 520, 2232,
	2888, 2287, 2868, 2203, 2178, 2229, 904, 2854, 2208, 2824,
	969, 970, 971, 968, 2296, 969, 970, 971, 968, 2503,
	2167, 904, 904, 904, 1566, 2822, 2802, 904, 2502, 2307,
	2308, 2309, 904, 2656, 2313, 2314, 2799, 2315, 2797, 2372,
	2262, 2714, 2713, 2263, 2710, 969, 970, 971, 968, 1277,
	1278, 2501, 2222, 2219, 969, 970, 971, 968, 2700, 2269,
	2064, 2694, 2161, 2641, 2637, 1357, 1358, 1359, 1360, 1361,
	2628, 2627, 1584, 2279, 2368, 2562, 2530, 969, 970, 971,
	968, 2529, 439, 2477, 2444, 2239, 2421, 1512, 904, 1646,
	1646, 1646, 1646, 2361, 2233, 2353, 2270, 2343, 2341, 2337,
	904, 1646, 2291, 2281, 2064, 2336, 2335, 2283, 1852, 1402,
	1403, 2290, 1282, 2295, 1730, 1286, 1437, 2291, 2302, 2303,
	1209, 1285, 2248, 2306, 1447, 1724, 2301, 1498, 2312, 2271,
	1309, 2216, 450, 450, 8, 1044, 7, 614, 613, 2294,
	2277, 1040, 1039, 2294, 893, 1515, 3051, 178, 2950, 2286,
	161, 2289, 178, 153, 129, 2734, 2292, 969, 970, 971,
	968, 2298, 2733, 2731, 2699, 2323, 2324, 1489, 2686, 2403,
	2677, 1493, 2305, 1453, 1496, 1453, 2194, 2676, 2461, 2338,
	2339, 2215, 2465, 2665, 2390, 2664, 2589, 2505, 1209, 2280,
	2498, 2472, 2490, 2485, 2429, 2230, 2390, 2284, 2285, 2227,
	2342, 2121, 2117, 2374, 2116, 1837, 1827, 969, 970, 971,
	968, 1825, 1821, 1820, 2435, 1818, 2282, 1809, 1806, 2439,
	158, 1114, 1805, 2373, 1729, 2214, 1484, 2378, 1483, 1482,
	1456, 2391, 2392, 2393, 2394, 1807, 1455, 1446, 2405, 2404,
	2402, 1221, 1488, 1219, 2406, 669, 161, 2460, 3241, 2424,
	2425, 969, 970, 971, 968, 2419, 2422, 3198, 2376, 2655,
	2213, 3192, 3179, 2493, 3176, 2495, 3174, 2458, 969, 970,
	971, 968, 904, 2464, 2469, 2437, 2433, 2436, 3075, 1034,
	2542, 3009, 2474, 2998, 2994, 2415, 969, 970, 971, 968,
	2557, 2454, 1261, 2919, 2457, 450, 1489, 2901, 2810, 2459,
	3066, 1489, 1489, 2452, 2808, 904, 904, 904, 2783, 2782,
	2779, 800, 2778, 2468, 1646, 1941, 158, 2587, 800, 2482,
	2726, 1276, 1263, 2591, 1120, 2369, 2483, 969, 970, 971,
	968, 3064, 2212, 2494, 2601, 2456, 2604, 2300, 2604, 2604,
	2266, 2265, 2463, 904, 1710, 2489, 2565, 1713, 2264, 1281,
	1716, 2532, 1284, 1718, 2496, 2497, 1273, 2623, 969, 970,
	971, 968, 2217, 2130, 1209, 1209, 2080, 2620, 1877, 2262,
	2035, 2510, 1942, 1387, 2526, 2511, 2512, 2513, 2514, 2622,
	2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2624, 2625,
	2534, 2531, 2585, 158, 1207, 1207, 1693, 1506, 1505, 2558,
	1331, 2291, 2291, 2291, 673, 674, 675, 676, 2564, 672,
	450, 1297, 2563, 2599, 800, 2542, 1274, 2582, 2609, 2586,
	2600, 2575, 2576, 1069, 1066, 1065, 1512, 1512, 1064, 1063,
	1062, 2590, 995, 1061, 999, 2592, 2593, 1060, 2537, 2291,
	2607, 2605, 2606, 2211, 1059, 1058, 1057, 1056, 2610, 2210,
	996, 998, 994, 1055, 997, 983, 982, 992, 993, 985,
	986, 987, 988, 989, 990, 991, 984, 1054, 800, 969,
	970, 971, 968, 2188, 1266, 969, 970, 971, 968, 1053,
	3062, 1220, 2675, 1052, 1267, 1268, 1269, 1270, 1271, 1272,
	1051, 1050, 2595, 1049, 1048, 1047, 1796, 1043, 1042, 1800,
	1041, 567, 114, 2209, 1038, 1031, 1030, 114, 2206, 1028,
	1027, 2633, 2639, 2634, 2638, 2205, 2636, 1026, 1025, 450,
	2643, 2644, 2629, 2204, 1024, 2654, 2594, 1684, 1023, 969,
	970, 971, 968, 1022, 969, 970, 971, 968, 1810, 2645,
	2658, 969, 970, 971, 968, 1021, 1817, 1020, 1019, 969,
	970, 971, 968, 1018, 2657, 1017, 456, 2200, 3217, 114,
	1012, 1011, 934, 2670, 1830, 891, 3060, 1833, 1834, 1835,
	2650, 2651, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845,
	2661, 2662, 2663, 969, 970, 971, 968, 2780, 1947, 2687,
	1930, 922, 3153, 2689, 3151, 3111, 2688, 2690, 2653, 2254,
	2191, 2092, 1732, 933, 2169, 2693, 2396, 2395, 3227, 2730,
	2701, 983, 982, 992, 993, 985, 986, 987, 988, 989,
	990, 991, 984, 2064, 1646, 2744, 969, 970, 971, 968,
	969, 970, 971, 968, 2139, 2399, 2692, 1945, 2397, 904,
	2400, 2812, 1397, 2398, 2401, 2133, 2056, 2057, 2601, 2813,
	2703, 99, 904, 1531, 1532, 2705, 53, 52, 2706, 2560,
	798, 2224, 904, 447, 114, 2527, 2528, 1209, 969, 970,
	971, 968, 1526, 1527, 1528, 2004, 2790, 1620, 2721, 114,
	2047, 114, 2128, 1512, 2746, 2319, 2597, 904, 2598, 2535,
	2158, 2794, 2320, 2321, 2322, 2777, 1255, 1207, 2811, 1857,
	1858, 3031, 2743, 1071, 1291, 1919, 452, 1694, 2772, 928,
	2815, 453, 454, 178, 2536, 451, 800, 2052, 2055, 2056,
	2057, 2053, 2288, 2054, 2058, 2742, 904, 2786, 2234, 2727,
	2728, 2729, 2804, 2789, 2784, 2750, 2745, 2792, 1937, 1535,
	2707, 1504, 2748, 3124, 2840, 2749, 2996, 2798, 2787, 2796,
	1489, 2626, 1489, 2803, 2801, 1442, 1441, 2044, 2312, 2806,
	2805, 1083, 1084, 1081, 1082, 2800, 960, 904, 1209, 1209,
	1489, 1489, 2040, 904, 2491, 2492, 2871, 1079, 1080, 2871,
	2817, 1077, 1078, 2390, 2052, 2055, 2056, 2057, 2053, 1631,
	2054, 2058, 2864, 1171, 1170, 2827, 1240, 2660, 1207, 2866,
	2090, 1209, 1752, 1125, 1073, 3193, 3097, 3082, 2887, 3080,
	2841, 3042, 2843, 3021, 3020, 3018, 3010, 450, 3196, 904,
	904, 2932, 2390, 904, 904, 2931, 2823, 2702, 2684, 2683,
	2668, 2866, 1991, 1076, 2667, 2876, 2431, 2875, 2873, 1539,
	2922, 2746, 2467, 2921, 2916, 3155, 3154, 3154, 2777, 1537,
	1932, 2929, 2908, 2909, 2885, 2889, 2917, 2918, 1808, 2933,
	2934, 2772, 919, 3155, 2903, 2685, 2423, 672, 1140, 2291,
	2833, 983, 982, 992, 993, 985, 986, 987, 988, 989,
	990, 991, 984, 2963, 165, 3, 61, 2926, 2, 1186,
	2073, 1678, 1213, 2883, 2884, 2925, 2956, 2171, 1, 2927,
	1497, 677, 2408, 2409, 2659, 2189, 2190, 673, 674, 675,
	676, 2411, 672, 2192, 2193, 2979, 1770, 2379, 2038, 1920,
	2556, 2951, 1115, 716, 1448, 2955, 2198, 1316, 816, 2961,
	913, 1313, 912, 910, 2907, 1399, 569, 1735, 2370, 2344,
	2928, 3123, 3194, 2974, 3161, 3074, 3126, 1329, 1489, 553,
	3012, 2220, 2221, 1496, 2942, 3078, 2980, 2923, 2982, 2944,
	904, 2981, 2829, 1775, 1209, 114, 114, 798, 965, 2453,
	2990, 2506, 738, 605, 580, 1029, 1299, 1292, 2508, 818,
	579, 2720, 2995, 2244, 2426, 2983, 815, 739, 3004, 1719,
	2940, 1256, 1260, 3003, 1207, 983, 982, 992, 993, 985,
	986, 987, 988, 989, 990, 991, 984, 2877, 2735, 2577,
	2267, 3237, 3026, 3226, 904, 3208, 3191, 3102, 3222, 3141,
	3017, 3015, 3177, 3043, 983, 982, 992, 993, 985, 986,
	987, 988, 989, 990, 991, 984, 2836, 2834, 1000, 904,
	2835, 3038, 3170, 3098, 490, 1657, 1209, 3034, 3037, 3069,
	3072, 437, 781, 2920, 1731, 3045, 491, 1946, 3090, 2997,
	698, 1929, 699, 2260, 3053, 3059, 3061, 3063, 3065, 2259,
	3068, 3073, 3058, 3050, 1368, 974, 1207, 1385, 2523, 3081,
	2524, 3083, 3084, 3079, 1009, 1209, 3077, 529, 3005, 1797,
	2241, 2767, 2420, 60, 59, 3107, 58, 57, 1701, 186,
	571, 185, 2857, 3071, 3128, 551, 3096, 550, 549, 3104,
	548, 547, 2051, 2049, 2048, 1207, 3130, 1641, 1640, 1699,
	2310, 2304, 1987, 3116, 2166, 3117, 1992, 3118, 3129, 3119,
	1573, 3120, 3108, 3055, 3056, 2900, 2354, 1525, 904, 1983,
	1590, 2326, 1587, 3134, 3044, 3026, 1586, 3135, 983, 982,
	992, 993, 985, 986, 987, 988, 989, 990, 991, 984,
	3054, 2318, 2896, 3160, 3149, 2890, 1617, 3152, 3150, 3144,
	3146, 2870, 2751, 1075, 2752, 3163, 2758, 1936, 841, 3168,
	837, 904, 3156, 3157, 3158, 3159, 839, 840, 838, 3169,
	2177, 2173, 1964, 2570, 1868, 3173, 1867, 3175, 1865, 1864,
	1091, 2962, 2704, 1875, 1873, 2652, 3130, 3189, 2438, 2648,
	2440, 3185, 1743, 1494, 2223, 904, 1642, 904, 3129, 1638,
	3188, 1931, 2844, 3195, 1530, 3197, 691, 1927, 1489, 97,
	143, 3200, 47, 1489, 3139, 88, 87, 3163, 96, 904,
	3204, 141, 46, 3211, 170, 169, 172, 3215, 3218, 171,
	168, 3221, 2107, 2108, 167, 3136, 1244, 166, 2874, 666,
	161, 37, 50, 153, 129, 1426, 3225, 33, 12, 11,
	2484, 3232, 34, 21, 3235, 3236, 22, 1352, 20, 154,
	3244, 1320, 19, 3247, 25, 31, 146, 3249, 3250, 3232,
	155, 3248, 2504, 30, 3236, 107, 161, 1218, 50, 153,
	129, 106, 456, 29, 105, 104, 103, 102, 101, 112,
	28, 1352, 18, 1352, 41, 154, 40, 39, 9, 95,
	93, 27, 146, 1795, 100, 94, 155, 91, 114, 92,
	158, 89, 72, 71, 70, 1352, 85, 84, 83, 82,
	81, 713, 80, 714, 78, 112, 79, 983, 982, 992,
	993, 985, 986, 987, 988, 989, 990, 991, 984, 737,
	100, 69, 68, 67, 66, 65, 158, 983, 982, 992,
	993, 985, 986, 987, 988, 989, 990, 991, 984, 696,
	982, 992, 993, 985, 986, 987, 988, 989, 990, 991,
	984, 90, 707, 76, 711, 86, 114, 77, 2608, 75,
	114, 74, 73, 64, 63, 62, 116, 117, 126, 118,
	119, 114, 127, 125, 124, 123, 122, 121, 120, 42,
	43, 114, 44, 45, 137, 136, 1422, 138, 140, 142,
	139, 134, 1419, 132, 135, 133, 1421, 1418, 1420, 1424,
	1425, 131, 116, 117, 1423, 118, 119, 55, 17, 24,
	4, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 726,
	128, 152, 159, 0, 98, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 145, 144, 0, 0, 0, 0, 56,
	0, 0, 0, 0, 0, 0, 128, 152, 159, 0,
	98, 0, 0, 0, 709, 0, 703, 0, 692, 0,
	0, 0, 0, 0, 0, 706, 705, 0, 151, 145,
	144, 0, 0, 0, 0, 56, 0, 0, 725, 0,
	0, 0, 689, 0, 0, 0, 697, 0, 764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 148, 149, 0, 0, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1429, 1430, 1431, 1432,
	1433, 1434, 1427, 1428, 0, 712, 156, 0, 2696, 0,
	702, 0, 0, 0, 701, 2698, 147, 148, 149, 0,
	688, 0, 0, 0, 695, 0, 108, 0, 0, 0,
	150, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 693, 156, 0, 0, 0, 0, 0, 0, 0,
	0, 766, 0, 0, 765, 0, 0, 0, 0, 0,
	0, 0, 108, 0, 690, 0, 150, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	0, 0, 0, 1645, 751, 0, 0, 0, 0, 0,
	49, 0, 727, 0, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 110, 0, 0, 0, 729,
	0, 0, 0, 0, 0, 0, 49, 0, 0, 0,
	0, 1618, 0, 0, 1489, 0, 1580, 0, 0, 51,
	0, 0, 0, 0, 0, 1489, 0, 0, 2807, 114,
	0, 2809, 114, 114, 0, 114, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2814, 1620, 1589, 0, 708,
	0, 0, 130, 0, 0, 51, 1621, 1622, 0, 0,
	0, 0, 750, 749, 0, 0, 0, 0, 0, 2756,
	0, 0, 0, 0, 0, 0, 0, 798, 0, 748,
	0, 0, 1588, 0, 798, 0, 0, 0, 130, 0,
	724, 0, 501, 114, 500, 507, 497, 1595, 0, 0,
	0, 728, 759, 0, 0, 504, 505, 2768, 506, 510,
	111, 38, 492, 0, 0, 0, 0, 48, 5, 0,
	2759, 115, 515, 0, 0, 755, 0, 0, 0, 0,
	2754, 0, 0, 0, 0, 2774, 2775, 0, 0, 0,
	0, 2755, 0, 0, 0, 0, 111, 38, 0, 0,
	0, 0, 0, 48, 0, 0, 0, 115, 0, 0,
	0, 756, 760, 0, 1611, 519, 0, 0, 521, 1000,
	0, 0, 0, 520, 0, 0, 0, 0, 2760, 745,
	0, 743, 747, 763, 0, 0, 0, 744, 741, 740,
	0, 746, 731, 732, 730, 733, 734, 735, 736, 0,
	761, 0, 762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 757, 758, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1579, 1581,
	1578, 2975, 1575, 0, 0, 0, 0, 1599, 0, 0,
	753, 0, 0, 0, 0, 0, 0, 0, 1605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2773, 0, 1973, 1593, 1627,
	0, 0, 1594, 1596, 1598, 0, 1600, 1601, 1602, 1606,
	1607, 1608, 1610, 1613, 1614, 1615, 0, 0, 0, 0,
	0, 0, 2764, 1603, 1612, 1604, 0, 0, 0, 0,
	0, 0, 493, 495, 494, 1583, 0, 0, 0, 0,
	0, 0, 499, 752, 2761, 2765, 2763, 2762, 0, 0,
	0, 0, 0, 0, 503, 0, 0, 1619, 1016, 0,
	0, 518, 0, 0, 863, 0, 0, 0, 496, 0,
	0, 0, 487, 0, 0, 0, 0, 0, 1576, 1577,
	0, 0, 2770, 2771, 0, 0, 0, 0, 0, 0,
	0, 0, 3052, 0, 0, 0, 1616, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1592, 0, 0, 0, 0, 0, 0,
	1591, 0, 0, 0, 2776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2757, 0, 0, 0,
	0, 0, 2769, 0, 1609, 2067, 0, 0, 0, 0,
	0, 863, 0, 1597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1624, 1623, 0, 0, 0,
	0, 0, 498, 502, 508, 0, 509, 511, 0, 0,
	512, 513, 514, 0, 845, 516, 517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1645, 0, 871, 875, 877, 879, 881, 882,
	884, 114, 889, 885, 886, 887, 888, 1585, 866, 867,
	868, 869, 843, 844, 872, 0, 846, 0, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 862, 864, 856,
	857, 858, 859, 860, 861, 870, 0, 0, 0, 1626,
	0, 0, 1625, 874, 876, 878, 880, 883, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 845, 0, 0, 0, 835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3206, 0, 0, 0, 0,
	865, 871, 875, 877, 879, 881, 882, 884, 0, 889,
	885, 886, 887, 888, 0, 866, 867, 868, 869, 843,
	844, 872, 0, 846, 0, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 862, 864, 856, 857, 858, 859,
	860, 861, 870, 0, 0, 0, 0, 0, 0, 863,
	874, 876, 878, 880, 883, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2175, 2176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 845,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 871,
	875, 877, 879, 881, 882, 884, 0, 889, 885, 886,
	887, 888, 0, 866, 867, 868, 869, 843, 844, 872,
	0, 846, 0, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 862, 864, 856, 857, 858, 859, 860, 861,
	870, 0, 0, 0, 0, 0, 0, 0, 874, 876,
	878, 880, 883, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1645, 1645, 1645, 1645, 0, 873, 0, 0, 0, 0,
	0, 0, 1645, 0, 0, 865, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 0, 0,
	114, 0, 873, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 587, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 543, 0,
	0, 0, 270, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 0,
	434, 0, 0, 578, 0, 0, 360, 315, 0, 0,
	0, 0, 637, 645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 536, 0, 114, 568, 614, 613,
	555, 565, 0, 0, 248, 184, 435, 0, 436, 556,
	0, 564, 557, 561, 560, 558, 559, 0, 629, 0,
	0, 0, 0, 0, 0, 527, 540, 0, 544, 0,
	0, 0, 0, 0, 0, 1645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 0, 537, 538, 0, 0, 0, 0, 588, 0,
	539, 0, 0, 583, 562, 566, 0, 0, 0, 0,
	239, 365, 381, 249, 356, 394, 254, 363, 244, 330,
	353, 0, 0, 241, 379, 362, 312, 289, 290, 240,
	873, 348, 268, 281, 265, 328, 563, 586, 590, 264,
	651, 584, 389, 243, 0, 388, 327, 375, 380, 313,
	307, 242, 377, 311, 306, 293, 272, 652, 294, 295,
	296, 297, 298, 299, 285, 339, 305, 340, 286, 317,
	316, 318, 0, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 581, 0, 0, 0, 391, 0, 0, 635, 0,
	0, 0, 364, 0, 0, 300, 0, 0, 0, 585,
	0, 351, 333, 648, 528, 0, 349, 303, 376, 341,
	382, 366, 390, 345, 342, 234, 367, 267, 314, 245,
	247, 262, 269, 271, 273, 274, 323, 324, 336, 355,
	369, 370, 371, 266, 255, 350, 256, 283, 257, 235,
	259, 258, 260, 357, 261, 237, 337, 374, 0, 279,
	346, 310, 238, 309, 338, 373, 372, 246, 398, 404,
	405, 410, 0, 411, 0, 0, 0, 419, 424, 425,
	426, 428, 429, 430, 431, 0, 0, 0, 0, 413,
	0, 0, 0, 1450, 1449, 1451, 403, 277, 231, 232,
	443, 633, 329, 0, 0, 0, 0, 647, 628, 630,
	631, 634, 638, 639, 640, 641, 642, 644, 646, 650,
	442, 0, 0, 0, 0, 0, 441, 335, 0, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 361, 384, 396, 414, 417, 0, 0, 0,
	0, 236, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 649, 0, 0, 0, 395, 0, 0, 0, 0,
	0, 589, 0, 0, 319, 320, 321, 322, 636, 0,
	253, 415, 344, 0, 0, 1645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 409, 276, 282, 427, 284, 252, 334, 278, 393,
	291, 0, 420, 0, 421, 0, 0, 0, 0, 326,
	287, 288, 358, 292, 304, 347, 392, 332, 352, 250,
	383, 359, 308, 0, 0, 658, 632, 657, 659, 660,
	656, 661, 662, 643, 546, 0, 593, 654, 653, 655,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 114, 302, 0, 343, 275, 0,
	0, 621, 598, 599, 600, 545, 601, 596, 597, 622,
	591, 618, 619, 570, 594, 602, 617, 603, 620, 623,
	624, 663, 664, 609, 665, 606, 625, 616, 615, 604,
	592, 626, 627, 577, 572, 607, 608, 595, 610, 611,
	612, 573, 574, 575, 576, 368, 587, 0, 399, 400,
	401, 423, 385, 0, 440, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 543, 0,
	0, 0, 270, 1490, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 0,
	434, 0, 0, 578, 0, 0, 360, 315, 0, 0,
	0, 0, 637, 645, 0, 0, 0, 0, 0, 0,
	0, 1669, 0, 0, 536, 0, 0, 568, 614, 613,
	555, 565, 0, 0, 248, 184, 435, 0, 436, 556,
	0, 564, 557, 561, 560, 558, 559, 0, 629, 0,
	0, 0, 0, 0, 0, 527, 540, 0, 544, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 538, 0, 0, 0, 0, 588, 0,
	539, 0, 0, 1670, 562, 566, 0, 0, 0, 0,
	239, 365, 381, 249, 356, 394, 254, 363, 244, 330,
	353, 0, 0, 241, 379, 362, 312, 289, 290, 240,
	0, 348, 268, 281, 265, 328, 563, 586, 590, 264,
	651, 584, 389, 243, 0, 388, 327, 375, 380, 313,
	307, 242, 377, 311, 306, 293, 272, 652, 294, 295,
	296, 297, 298, 299, 285, 339, 305, 340, 286, 317,
	316, 318, 0, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 581, 0, 0, 0, 391, 0, 0, 635, 0,
	0, 0, 364, 0, 0, 300, 0, 0, 0, 585,
	0, 351, 333, 648, 528, 0, 349, 303, 376, 341,
	382, 366, 390, 345, 342, 234, 367, 267, 314, 245,
	247, 262, 269, 271, 273, 274, 323, 324, 336, 355,
	369, 370, 371, 266, 255, 350, 256, 283, 257, 235,
	259, 258, 260, 357, 261, 237, 337, 374, 0, 279,
	346, 310, 238, 309, 338, 373, 372, 246, 398, 404,
	405, 410, 0, 411, 0, 0, 0, 419, 424, 425,
	426, 428, 429, 430, 431, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 403, 277, 231, 232,
	443, 633, 329, 0, 0, 0, 0, 647, 628, 630,
	631, 634, 638, 639, 640, 641, 642, 644, 646, 650,
	442, 0, 0, 0, 0, 0, 441, 335, 0, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 361, 384, 396, 414, 417, 0, 0, 0,
	0, 236, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 649, 0, 0, 0, 395, 0, 0, 0, 0,
	0, 589, 0, 0, 319, 320, 321, 322, 636, 0,
	253, 415, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 409, 276, 282, 427, 284, 252, 334, 278, 393,
	291, 0, 420, 0, 421, 0, 0, 0, 0, 326,
	287, 288, 358, 292, 304, 347, 392, 332, 352, 250,
	383, 359, 308, 0, 0, 658, 632, 657, 659, 660,
	656, 661, 662, 643, 546, 0, 593, 654, 653, 655,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 302, 0, 343, 275, 0,
	0, 621, 598, 599, 600, 545, 601, 596, 597, 622,
	591, 618, 619, 570, 594, 602, 617, 603, 620, 623,
	624, 663, 664, 609, 665, 606, 625, 616, 615, 604,
	592, 626, 627, 577, 572, 607, 608, 595, 610, 611,
	612, 573, 574, 575, 576, 161, 368, 587, 399, 400,
	401, 423, 385, 0, 440, 0, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	0, 0, 0, 270, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 434, 0, 0, 1003, 0, 0, 360, 315, 0,
	0, 0, 0, 637, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 536, 0, 0, 568, 614,
	613, 555, 565, 0, 0, 248, 184, 435, 0, 436,
	556, 0, 564, 557, 561, 560, 558, 559, 0, 629,
	0, 0, 0, 0, 0, 0, 527, 540, 0, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 537, 538, 0, 0, 0, 0, 588,
	0, 539, 0, 0, 583, 562, 566, 0, 0, 0,
	0, 239, 365, 381, 249, 356, 394, 254, 363, 244,
	330, 353, 0, 0, 241, 379, 362, 312, 289, 290,
	240, 0, 348, 268, 281, 265, 328, 563, 586, 590,
	264, 651, 584, 389, 243, 0, 388, 327, 375, 380,
	313, 307, 242, 377, 311, 306, 293, 272, 652, 294,
	295, 296, 297, 298, 299, 285, 339, 305, 340, 286,
	317, 316, 318, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 0, 0, 0, 391, 0, 0, 635,
	0, 0, 0, 364, 0, 0, 300, 0, 0, 0,
	585, 0, 351, 333, 648, 528, 0, 349, 303, 376,
	341, 382, 366, 390, 345, 342, 234, 367, 267, 314,
	245, 247, 262, 269, 271, 273, 274, 323, 324, 336,
	355, 369, 370, 371, 266, 255, 350, 256, 283, 257,
	235, 259, 258, 260, 357, 261, 237, 337, 374, 0,
	279, 346, 310, 238, 309, 338, 373, 372, 246, 398,
	404, 405, 410, 0, 411, 0, 0, 0, 419, 424,
	425, 426, 428, 429, 430, 431, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 403, 277, 231,
	232, 443, 633, 329, 0, 0, 0, 0, 647, 628,
	630, 631, 634, 638, 639, 640, 641, 642, 644, 646,
	650, 442, 0, 0, 0, 0, 0, 441, 335, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 384, 396, 414, 417, 0, 0,
	0, 0, 236, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 649, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 589, 0, 0, 319, 320, 321, 322, 636,
	0, 253, 415, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 409, 276, 282, 427, 284, 252, 334, 278,
	393, 291, 0, 420, 0, 421, 0, 0, 0, 0,
	326, 287, 288, 358, 292, 304, 347, 392, 332, 352,
	250, 383, 359, 308, 0, 0, 658, 632, 657, 659,
	660, 656, 661, 662, 643, 546, 0, 593, 654, 653,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 302, 130, 343, 275,
	0, 0, 621, 598, 599, 600, 545, 601, 596, 597,
	622, 591, 618, 619, 570, 594, 602, 617, 603, 620,
	623, 624, 663, 664, 609, 665, 606, 625, 616, 615,
	604, 592, 626, 627, 577, 572, 607, 608, 595, 610,
	611, 612, 573, 574, 575, 576, 368, 587, 0, 399,
	400, 401, 423, 385, 0, 440, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	0, 0, 0, 270, 3205, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 434, 0, 0, 578, 0, 0, 360, 315, 0,
	0, 0, 0, 637, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 536, 0, 0, 568, 614,
	613, 555, 565, 0, 0, 248, 184, 435, 0, 436,
	556, 0, 564, 557, 561, 560, 558, 559, 0, 629,
	0, 0, 0, 0, 0, 0, 527, 540, 0, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 537, 538, 0, 0, 0, 0, 588,
	0, 539, 0, 0, 583, 562, 566, 0, 0, 0,
	0, 239, 365, 381, 249, 356, 394, 254, 363, 244,
	330, 353, 0, 0, 241, 379, 362, 312, 289, 290,
	240, 0, 348, 268, 281, 265, 328, 563, 586, 590,
	264, 651, 584, 389, 243, 0, 388, 327, 375, 380,
	313, 307, 242, 377, 311, 306, 293, 272, 652, 294,
	295, 296, 297, 298, 299, 285, 339, 305, 340, 286,
	317, 316, 318, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 0, 0, 0, 391, 0, 0, 635,
	0, 0, 0, 364, 0, 0, 300, 0, 0, 0,
	585, 0, 351, 333, 648, 528, 0, 349, 303, 376,
	341, 382, 366, 390, 345, 342, 234, 367, 267, 314,
	245, 247, 262, 269, 271, 273, 274, 323, 324, 336,
	355, 369, 370, 371, 266, 255, 350, 256, 283, 257,
	235, 259, 258, 260, 357, 261, 237, 337, 374, 0,
	279, 346, 310, 238, 309, 338, 373, 372, 246, 398,
	404, 405, 410, 0, 411, 0, 0, 0, 419, 424,
	425, 426, 428, 429, 430, 431, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 403, 277, 231,
	232, 443, 633, 329, 0, 0, 0, 0, 647, 628,
	630, 631, 634, 638, 639, 640, 641, 642, 644, 646,
	650, 442, 0, 0, 0, 0, 0, 441, 335, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 384, 396, 414, 417, 0, 0,
	0, 0, 236, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 649, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 589, 0, 0, 319, 320, 321, 322, 636,
	0, 253, 415, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 409, 276, 282, 427, 284, 252, 334, 278,
	393, 291, 0, 420, 0, 421, 0, 0, 0, 0,
	326, 287, 288, 358, 292, 304, 347, 392, 332, 352,
	250, 383, 359, 308, 0, 0, 658, 632, 657, 659,
	660, 656, 661, 662, 643, 546, 0, 593, 654, 653,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 302, 0, 343, 275,
	0, 0, 621, 598, 599, 600, 545, 601, 596, 597,
	622, 591, 618, 619, 570, 594, 602, 617, 603, 620,
	623, 624, 663, 664, 609, 665, 606, 625, 616, 615,
	604, 592, 626, 627, 577, 572, 607, 608, 595, 610,
	611, 612, 573, 574, 575, 576, 368, 587, 0, 399,
	400, 401, 423, 385, 0, 440, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	0, 0, 0, 270, 1490, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 434, 0, 0, 578, 0, 0, 360, 315, 0,
	0, 0, 0, 637, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 536, 0, 0, 568, 614,
	613, 555, 565, 0, 0, 248, 184, 435, 0, 436,
	556, 0, 564, 557, 561, 560, 558, 559, 0, 629,
	0, 0, 0, 0, 0, 0, 527, 540, 0, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 537, 538, 0, 0, 0, 0, 588,
	0, 539, 0, 0, 583, 562, 566, 0, 0, 0,
	0, 239, 365, 381, 249, 356, 394, 254, 363, 244,
	330, 353, 0, 0, 241, 379, 362, 312, 289, 290,
	240, 0, 348, 268, 281, 265, 328, 563, 586, 590,
	264, 651, 584, 389, 243, 0, 388, 327, 375, 380,
	313, 307, 242, 377, 311, 306, 293, 272, 652, 294,
	295, 296, 297, 298, 299, 285, 339, 305, 340, 286,
	317, 316, 318, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 0, 0, 0, 391, 0, 0, 635,
	0, 0, 0, 364, 0, 0, 300, 0, 0, 0,
	585, 0, 351, 333, 648, 528, 0, 349, 303, 376,
	341, 382, 366, 390, 345, 342, 234, 367, 267, 314,
	245, 247, 262, 269, 271, 273, 274, 323, 324, 336,
	355, 369, 370, 371, 266, 255, 350, 256, 283, 257,
	235, 259, 258, 260, 357, 261, 237, 337, 374, 0,
	279, 346, 310, 238, 309, 338, 373, 372, 246, 398,
	404, 405, 410, 0, 411, 0, 0, 0, 419, 424,
	425, 426, 428, 429, 430, 431, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 403, 277, 231,
	232, 443, 633, 329, 0, 0, 0, 0, 647, 628,
	630, 631, 634, 638, 639, 640, 641, 642, 644, 646,
	650, 442, 0, 0, 0, 0, 0, 441, 335, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 384, 396, 414, 417, 0, 0,
	0, 0, 236, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 649, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 589, 0, 0, 319, 320, 321, 322, 636,
	0, 253, 415, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 409, 276, 282, 427, 284, 252, 334, 278,
	393, 291, 0, 420, 0, 421, 0, 0, 0, 0,
	326, 287, 288, 358, 292, 304, 347, 392, 332, 352,
	250, 383, 359, 308, 0, 0, 658, 632, 657, 659,
	660, 656, 661, 662, 643, 546, 0, 593, 654, 653,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 302, 0, 343, 275,
	0, 0, 621, 598, 599, 600, 545, 601, 596, 597,
	622, 591, 618, 619, 570, 594, 602, 617, 603, 620,
	623, 624, 663, 664, 609, 665, 606, 625, 616, 615,
	604, 592, 626, 627, 577, 572, 607, 608, 595, 610,
	611, 612, 573, 574, 575, 576, 368, 587, 0, 399,
	400, 401, 423, 385, 0, 440, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	0, 0, 0, 270, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 434, 0, 0, 578, 0, 0, 360, 315, 0,
	0, 0, 0, 637, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 536, 0, 0, 568, 614,
	613, 555, 565, 0, 0, 248, 184, 435, 0, 436,
	556, 0, 564, 557, 561, 560, 558, 559, 0, 629,
	0, 0, 0, 0, 0, 0, 527, 540, 0, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 537, 538, 1239, 0, 0, 0, 588,
	0, 539, 0, 0, 583, 562, 566, 0, 0, 0,
	0, 239, 365, 381, 249, 356, 394, 254, 363, 244,
	330, 353, 0, 0, 241, 379, 362, 312, 289, 290,
	240, 0, 348, 268, 281, 265, 328, 563, 586, 590,
	264, 651, 584, 389, 243, 0, 388, 327, 375, 380,
	313, 307, 242, 377, 311, 306, 293, 272, 652, 294,
	295, 296, 297, 298, 299, 285, 339, 305, 340, 286,
	317, 316, 318, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 0, 0, 0, 391, 0, 0, 635,
	0, 0, 0, 364, 0, 0, 300, 0, 0, 0,
	585, 0, 351, 333, 648, 528, 0, 349, 303, 376,
	341, 382, 366, 390, 345, 342, 234, 367, 267, 314,
	245, 247, 262, 269, 271, 273, 274, 323, 324, 336,
	355, 369, 370, 371, 266, 255, 350, 256, 283, 257,
	235, 259, 258, 260, 357, 261, 237, 337, 374, 0,
	279, 346, 310, 238, 309, 338, 373, 372, 246, 398,
	404, 405, 410, 0, 411, 0, 0, 0, 419, 424,
	425, 426, 428, 429, 430, 431, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 403, 277, 231,
	232, 443, 633, 329, 0, 0, 0, 0, 647, 628,
	630, 631, 634, 638, 639, 640, 641, 642, 644, 646,
	650, 442, 0, 0, 0, 0, 0, 441, 335, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 384, 396, 414, 417, 0, 0,
	0, 0, 236, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 649, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 589, 0, 0, 319, 320, 321, 322, 636,
	0, 253, 415, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 409, 276, 282, 427, 284, 252, 334, 278,
	393, 291, 0, 420, 0, 421, 0, 0, 0, 0,
	326, 287, 288, 358, 292, 304, 347, 392, 332, 352,
	250, 383, 359, 308, 0, 0, 658, 632, 657, 659,
	660, 656, 661, 662, 643, 546, 0, 593, 654, 653,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 302, 0, 343, 275,
	0, 0, 621, 598, 599, 600, 545, 601, 596, 597,
	622, 591, 618, 619, 570, 594, 602, 617, 603, 620,
	623, 624, 663, 664, 609, 665, 606, 625, 616, 615,
	604, 592, 626, 627, 577, 572, 607, 608, 595, 610,
	611, 612, 573, 574, 575, 576, 0, 0, 0, 399,
	400, 401, 423, 385, 0, 440, 368, 587, 0, 0,
	1816, 0, 0, 0, 0, 0, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	0, 0, 0, 270, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 434, 0, 0, 578, 0, 0, 360, 315, 0,
	0, 0, 0, 637, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 536, 0, 0, 568, 614,
	613, 555, 565, 0, 0, 248, 184, 435, 0, 436,
	556, 0, 564, 557, 561, 560, 558, 559, 0, 629,
	0, 0, 0, 0, 0, 0, 527, 540, 0, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 537, 538, 0, 0, 0, 0, 588,
	0, 539, 0, 0, 583, 562, 566, 0, 0, 0,
	0, 239, 365, 381, 249, 356, 394, 254, 363, 244,
	330, 353, 0, 0, 241, 379, 362, 312, 289, 290,
	240, 0, 348, 268, 281, 265, 328, 563, 586, 590,
	264, 651, 584, 389, 243, 0, 388, 327, 375, 380,
	313, 307, 242, 377, 311, 306, 293, 272, 652, 294,
	295, 296, 297, 298, 299, 285, 339, 305, 340, 286,
	317, 316, 318, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 0, 0, 0, 391, 0, 0, 635,
	0, 0, 0, 364, 0, 0, 300, 0, 0, 0,
	585, 0, 351, 333, 648, 528, 0, 349, 303, 376,
	341, 382, 366, 390, 345, 342, 234, 367, 267, 314,
	245, 247, 262, 269, 271, 273, 274, 323, 324, 336,
	355, 369, 370, 371, 266, 255, 350, 256, 283, 257,
	235, 259, 258, 260, 357, 261, 237, 337, 374, 0,
	279, 346, 310, 238, 309, 338, 373, 372, 246, 398,
	404, 405, 410, 0, 411, 0, 0, 0, 419, 424,
	425, 426, 428, 429, 430, 431, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 403, 277, 231,
	232, 443, 633, 329, 0, 0, 0, 0, 647, 628,
	630, 631, 634, 638, 639, 640, 641, 642, 644, 646,
	650, 442, 0, 0, 0, 0, 0, 441, 335, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 384, 396, 414, 417, 0, 0,
	0, 0, 236, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 649, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 589, 0, 0, 319, 320, 321, 322, 636,
	0, 253, 415, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 409, 276, 282, 427, 284, 252, 334, 278,
	393, 291, 0, 420, 0, 421, 0, 0, 0, 0,
	326, 287, 288, 358, 292, 304, 347, 392, 332, 352,
	250, 383, 359, 308, 0, 0, 658, 632, 657, 659,
	660, 656, 661, 662, 643, 546, 0, 593, 654, 653,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 302, 0, 343, 275,
	0, 0, 621, 598, 599, 600, 545, 601, 596, 597,
	622, 591, 618, 619, 570, 594, 602, 617, 603, 620,
	623, 624, 663, 664, 609, 665, 606, 625, 616, 615,
	604, 592, 626, 627, 577, 572, 607, 608, 595, 610,
	611, 612, 573, 574, 575, 576, 368, 587, 0, 399,
	400, 401, 423, 385, 0, 440, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	0, 0, 0, 270, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 434, 0, 0, 578, 0, 0, 360, 315, 0,
	0, 0, 0, 637, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 536, 0, 0, 568, 614,
	613, 555, 565, 0, 0, 248, 184, 435, 0, 436,
	556, 0, 564, 557, 561, 560, 558, 559, 0, 629,
	0, 0, 0, 0, 0, 0, 527, 540, 0, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 537, 538, 0, 0, 0, 0, 588,
	0, 539, 0, 0, 583, 562, 566, 0, 0, 0,
	0, 239, 365, 381, 249, 356, 394, 254, 363, 244,
	330, 353, 0, 0, 241, 379, 362, 312, 289, 290,
	240, 0, 348, 268, 281, 265, 328, 563, 586, 590,
	264, 651, 584, 389, 243, 0, 388, 327, 375, 380,
	313, 307, 242, 377, 311, 306, 293, 272, 652, 294,
	295, 296, 297, 298, 299, 285, 339, 305, 340, 286,
	317, 316, 318, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 0, 0, 0, 391, 0, 0, 635,
	0, 0, 0, 364, 0, 0, 300, 0, 0, 0,
	585, 0, 351, 333, 648, 528, 0, 349, 303, 376,
	341, 382, 366, 390, 345, 342, 234, 367, 267, 314,
	245, 247, 262, 269, 271, 273, 274, 323, 324, 336,
	355, 369, 370, 371, 266, 255, 350, 256, 283, 257,
	235, 259, 258, 260, 357, 261, 237, 337, 374, 0,
	279, 346, 310, 238, 309, 338, 373, 372, 246, 398,
	404, 405, 410, 0, 411, 0, 0, 0, 419, 424,
	425, 426, 428, 429, 430, 431, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 403, 277, 231,
	232, 443, 633, 329, 0, 0, 0, 0, 647, 628,
	630, 631, 634, 638, 639, 640, 641, 642, 644, 646,
	650, 442, 0, 0, 0, 0, 0, 441, 335, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 384, 396, 414, 417, 0, 0,
	0, 0, 236, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 649, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 589, 0, 0, 319, 320, 321, 322, 636,
	0, 253, 415, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 409, 276, 282, 427, 284, 252, 334, 278,
	393, 291, 0, 420, 0, 421, 0, 0, 0, 0,
	326, 287, 288, 358, 292, 304, 347, 392, 332, 352,
	250, 383, 359, 308, 0, 0, 658, 632, 657, 659,
	660, 656, 661, 662, 643, 546, 0, 593, 654, 653,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 302, 0, 343, 275,
	0, 0, 621, 598, 599, 600, 545, 601, 596, 597,
	622, 591, 618, 619, 570, 594, 602, 617, 603, 620,
	623, 624, 663, 664, 609, 665, 606, 625, 616, 615,
	604, 592, 626, 627, 577, 572, 607, 608, 595, 610,
	611, 612, 573, 574, 575, 576, 368, 587, 0, 399,
	400, 401, 423, 385, 0, 440, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 1369, 0, 0, 0, 543,
	0, 0, 0, 270, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 434, 0, 0, 578, 0, 0, 360, 315, 0,
	0, 0, 0, 637, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 536, 0, 0, 568, 614,
	613, 555, 565, 0, 0, 248, 184, 435, 0, 436,
	556, 0, 564, 557, 561, 560, 558, 559, 0, 629,
	0, 0, 0, 0, 0, 0, 0, 540, 0, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 537, 538, 0, 0, 0, 0, 588,
	0, 539, 0, 0, 583, 562, 566, 0, 0, 0,
	0, 239, 365, 381, 249, 356, 394, 254, 363, 244,
	330, 353, 0, 0, 241, 379, 362, 312, 289, 290,
	240, 0, 348, 268, 281, 265, 328, 563, 586, 590,
	264, 651, 584, 389, 243, 0, 388, 327, 375, 380,
	313, 307, 242, 377, 311, 306, 293, 272, 652, 294,
	295, 296, 297, 298, 299, 285, 339, 305, 340, 286,
	317, 316, 318, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 0, 0, 0, 391, 0, 0, 635,
	0, 0, 0, 364, 0, 0, 300, 0, 0, 0,
	585, 0, 351, 333, 648, 0, 0, 349, 303, 376,
	341, 382, 366, 390, 345, 342, 234, 367, 267, 314,
	245, 247, 262, 269, 271, 273, 274, 323, 324, 336,
	355, 369, 370, 371, 266, 255, 350, 256, 283, 257,
	235, 259, 258, 260, 357, 261, 237, 337, 374, 0,
	279, 346, 310, 238, 309, 338, 373, 372, 246, 398,
	1370, 1371, 410, 0, 411, 0, 0, 0, 419, 424,
	425, 426, 428, 429, 430, 431, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 403, 277, 231,
	232, 443, 633, 329, 0, 0, 0, 0, 647, 628,
	630, 631, 634, 638, 639, 640, 641, 642, 644, 646,
	650, 442, 0, 0, 0, 0, 0, 441, 335, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 384, 396, 414, 417, 0, 0,
	0, 0, 236, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 649, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 589, 0, 0, 319, 320, 321, 322, 636,
	0, 253, 415, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 409, 276, 282, 427, 284, 252, 334, 278,
	393, 291, 0, 420, 0, 421, 0, 0, 0, 0,
	326, 287, 288, 358, 292, 304, 347, 392, 332, 352,
	250, 383, 359, 308, 0, 0, 658, 632, 657, 659,
	660, 656, 661, 662, 643, 546, 0, 593, 654, 653,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 302, 0, 343, 275,
	0, 0, 621, 598, 599, 600, 545, 601, 596, 597,
	622, 591, 618, 619, 570, 594, 602, 617, 603, 620,
	623, 624, 663, 664, 609, 665, 606, 625, 616, 615,
	604, 592, 626, 627, 577, 572, 607, 608, 595, 610,
	611, 612, 573, 574, 575, 576, 368, 587, 0, 399,
	400, 401, 423, 385, 0, 440, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	0, 0, 0, 270, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 434, 0, 0, 578, 0, 0, 360, 315, 0,
	0, 0, 0, 637, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 568, 614,
	613, 555, 565, 0, 0, 248, 184, 435, 0, 436,
	556, 0, 564, 557, 561, 560, 558, 559, 0, 629,
	0, 0, 0, 0, 0, 0, 527, 540, 0, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 537, 538, 0, 0, 0, 0, 588,
	0, 539, 0, 0, 583, 562, 566, 0, 0, 0,
	0, 239, 365, 381, 249, 356, 394, 254, 363, 244,
	330, 353, 0, 0, 241, 379, 362, 312, 289, 290,
	240, 0, 348, 268, 281, 265, 328, 563, 586, 590,
	264, 651, 584, 389, 243, 0, 388, 327, 375, 380,
	313, 307, 242, 377, 311, 306, 293, 272, 652, 294,
	295, 296, 297, 298, 299, 285, 339, 305, 340, 286,
	317, 316, 318, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 0, 0, 0, 391, 0, 0, 635,
	0, 0, 0, 364, 0, 0, 300, 0, 0, 0,
	585, 0, 351, 333, 648, 528, 0, 349, 303, 376,
	341, 382, 366, 390, 345, 342, 234, 367, 267, 314,
	245, 247, 262, 269, 271, 273, 274, 323, 324, 336,
	355, 369, 370, 371, 266, 255, 350, 256, 283, 257,
	235, 259, 258, 260, 357, 261, 237, 337, 374, 0,
	279, 346, 310, 238, 309, 338, 373, 372, 246, 398,
	404, 405, 410, 0, 411, 0, 0, 0, 419, 424,
	425, 426, 428, 429, 430, 431, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 403, 277, 231,
	232, 443, 633, 329, 0, 0, 0, 0, 647, 628,
	630, 631, 634, 638, 639, 640, 641, 642, 644, 646,
	650, 442, 0, 0, 0, 0, 0, 441, 335, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 384, 396, 414, 417, 0, 0,
	0, 0, 236, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 649, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 589, 0, 0, 319, 320, 321, 322, 636,
	0, 253, 415, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 409, 276, 282, 427, 284, 252, 334, 278,
	393, 291, 0, 420, 0, 421, 0, 0, 0, 0,
	326, 287, 288, 358, 292, 304, 347, 392, 332, 352,
	250, 383, 359, 308, 0, 0, 658, 632, 657, 659,
	660, 656, 661, 662, 643, 546, 0, 593, 654, 653,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 302, 0, 343, 275,
	0, 0, 621, 598, 599, 600, 545, 601, 596, 597,
	622, 591, 618, 619, 570, 594, 602, 617, 603, 620,
	623, 624, 663, 664, 609, 665, 606, 625, 616, 615,
	604, 592, 626, 627, 577, 572, 607, 608, 595, 610,
	611, 612, 573, 574, 575, 576, 368, 587, 0, 399,
	400, 401, 423, 385, 0, 440, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	0, 0, 0, 270, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 434, 0, 0, 578, 0, 0, 360, 315, 0,
	0, 0, 0, 637, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 536, 0, 0, 568, 614,
	613, 555, 565, 0, 0, 248, 184, 435, 0, 436,
	556, 0, 564, 557, 561, 560, 558, 559, 0, 629,
	0, 0, 0, 0, 0, 0, 0, 540, 0, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 537, 538, 0, 0, 0, 0, 588,
	0, 539, 0, 0, 583, 562, 566, 0, 0, 0,
	0, 239, 365, 381, 249, 356, 394, 254, 363, 244,
	330, 353, 0, 0, 241, 379, 362, 312, 289, 290,
	240, 0, 348, 268, 281, 265, 328, 563, 586, 590,
	264, 651, 584, 389, 243, 0, 388, 327, 375, 380,
	313, 307, 242, 377, 311, 306, 293, 272, 652, 294,
	295, 296, 297, 298, 299, 285, 339, 305, 340, 286,
	317, 316, 318, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 0, 0, 0, 391, 0, 0, 635,
	0, 0, 0, 364, 0, 0, 300, 0, 0, 0,
	585, 0, 351, 333, 648, 0, 0, 349, 303, 376,
	341, 382, 366, 390, 345, 342, 234, 367, 267, 314,
	245, 247, 262, 269, 271, 273, 274, 323, 324, 336,
	355, 369, 370, 371, 266, 255, 350, 256, 283, 257,
	235, 259, 258, 260, 357, 261, 237, 337, 374, 0,
	279, 346, 310, 238, 309, 338, 373, 372, 246, 398,
	404, 405, 410, 0, 411, 0, 0, 0, 419, 424,
	425, 426, 428, 429, 430, 431, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 403, 277, 231,
	232, 443, 633, 329, 0, 0, 0, 0, 647, 628,
	630, 631, 634, 638, 639, 640, 641, 642, 644, 646,
	650, 442, 0, 0, 0, 0, 0, 441, 335, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 384, 396, 414, 417, 0, 0,
	0, 0, 236, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 649, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 589, 0, 0, 319, 320, 321, 322, 636,
	0, 253, 415, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 409, 276, 282, 427, 284, 252, 334, 278,
	393, 291, 0, 420, 0, 421, 0, 0, 0, 0,
	326, 287, 288, 358, 292, 304, 347, 392, 332, 352,
	250, 383, 359, 308, 0, 0, 658, 632, 657, 659,
	660, 656, 661, 662, 643, 546, 0, 593, 654, 653,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 302, 0, 343, 275,
	0, 0, 621, 598, 599, 600, 545, 601, 596, 597,
	622, 591, 618, 619, 570, 594, 602, 617, 603, 620,
	623, 624, 663, 664, 609, 665, 606, 625, 616, 615,
	604, 592, 626, 627, 577, 572, 607, 608, 595, 610,
	611, 612, 573, 574, 575, 576, 0, 0, 0, 399,
	400, 401, 423, 385, 0, 440, 161, 368, 50, 153,
	129, 0, 0, 0, 0, 0, 0, 331, 0, 0,
	0, 0, 0, 0, 0, 154, 0, 0, 0, 0,
	0, 0, 146, 0, 270, 0, 155, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 0, 434, 0, 0, 112, 0, 0, 360, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	100, 0, 0, 0, 0, 0, 158, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 248, 184, 435, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 365, 381, 249, 356, 394, 254, 363,
	244, 330, 353, 0, 0, 241, 379, 362, 312, 289,
	290, 240, 0, 348, 268, 281, 265, 328, 0, 378,
	406, 264, 397, 0, 389, 243, 0, 388, 327, 375,
	380, 313, 307, 242, 377, 311, 306, 293, 272, 422,
	294, 295, 296, 297, 298, 299, 285, 339, 305, 340,
	286, 317, 316, 318, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 128, 152, 159, 0,
	98, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	176, 0, 0, 0, 364, 0, 0, 300, 151, 145,
	144, 407, 0, 351, 333, 56, 0, 0, 349, 303,
	376, 341, 382, 366, 390, 345, 342, 234, 367, 267,
	314, 245, 247, 262, 269, 271, 273, 274, 323, 324,
	336, 355, 369, 370, 371, 266, 255, 350, 256, 283,
	257, 235, 259, 258, 260, 357, 261, 237, 337, 374,
	0, 279, 346, 310, 238, 309, 338, 373, 372, 246,
	398, 404, 405, 410, 0, 411, 147, 148, 149, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 403, 277,
	231, 232, 386, 263, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 402, 179, 0,
	0, 432, 187, 0, 0, 0, 150, 0, 188, 335,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 384, 396, 414, 417, 0,
	0, 0, 0, 236, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 412, 0, 0, 319, 320, 321, 322,
	280, 0, 253, 415, 344, 110, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 0, 0, 0,
	0, 0, 408, 409, 276, 282, 427, 284, 252, 334,
	278, 393, 291, 0, 420, 0, 421, 0, 0, 0,
	0, 326, 287, 288, 358, 292, 304, 347, 392, 332,
	352, 250, 383, 359, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 302, 130, 343,
	275, 0, 0, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	0, 0, 0, 227, 228, 229, 230, 0, 0, 0,
	399, 400, 401, 423, 385, 368, 189, 38, 177, 180,
	182, 181, 0, 48, 5, 331, 0, 115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 0,
	434, 0, 0, 0, 0, 0, 360, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1035, 0, 0, 183, 0, 0,
	555, 565, 0, 0, 248, 184, 435, 0, 436, 556,
	0, 564, 557, 561, 560, 558, 559, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 0, 0, 0, 0, 0,
	239, 365, 381, 249, 356, 394, 254, 363, 244, 330,
	353, 0, 0, 241, 379, 362, 312, 289, 290, 240,
	0, 348, 268, 281, 265, 328, 563, 378, 406, 264,
	397, 0, 389, 243, 0, 388, 327, 375, 380, 313,
	307, 242, 377, 311, 306, 293, 272, 422, 294, 295,
	296, 297, 298, 299, 285, 339, 305, 340, 286, 317,
	316, 318, 0, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 0, 0, 0, 0,
	0, 0, 364, 0, 0, 300, 0, 0, 0, 407,
	0, 351, 333, 0, 0, 0, 349, 303, 376, 341,
	382, 366, 390, 345, 342, 234, 367, 267, 314, 245,
	247, 262, 269, 271, 273, 274, 323, 324, 336, 355,
	369, 370, 371, 266, 255, 350, 256, 283, 257, 235,
	259, 258, 260, 357, 261, 237, 337, 374, 0, 279,
	346, 310, 238, 309, 338, 373, 372, 246, 398, 404,
	405, 410, 0, 411, 0, 0, 0, 419, 424, 425,
	426, 428, 429, 430, 431, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 403, 277, 231, 232,
	443, 263, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 402, 0, 0, 0, 432,
	442, 0, 0, 0, 0, 0, 441, 335, 0, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 361, 384, 396, 414, 417, 0, 0, 0,
	0, 236, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 387, 0, 0, 0, 395, 0, 0, 0, 0,
	0, 412, 0, 0, 319, 320, 321, 322, 280, 0,
	253, 415, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 409, 276, 282, 427, 284, 252, 334, 278, 393,
	291, 0, 420, 0, 421, 0, 0, 0, 0, 326,
	287, 288, 358, 292, 304, 347, 392, 332, 352, 250,
	383, 359, 308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 302, 0, 343, 275, 0,
	0, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 0, 0,
	0, 227, 228, 229, 230, 0, 0, 0, 399, 400,
	401, 423, 385, 0, 440, 161, 368, 50, 153, 129,
	0, 0, 0, 0, 0, 0, 331, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 434, 0, 0, 0, 0, 0, 360, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 248, 184, 435, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 365, 381, 249, 356, 394, 254, 363, 244,
	330, 353, 0, 0, 241, 379, 362, 312, 289, 290,
	240, 0, 348, 268, 281, 265, 328, 0, 378, 406,
	264, 397, 0, 389, 243, 0, 388, 327, 375, 380,
	313, 307, 242, 377, 311, 306, 293, 272, 422, 294,
	295, 296, 297, 298, 299, 285, 339, 305, 340, 286,
	317, 316, 318, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 464,
	0, 0, 0, 0, 0, 0, 391, 0, 0, 0,
	0, 0, 0, 364, 0, 0, 300, 0, 0, 0,
	407, 0, 351, 333, 0, 0, 0, 349, 303, 376,
	341, 382, 366, 390, 345, 342, 234, 367, 267, 314,
	245, 247, 262, 269, 271, 273, 274, 323, 324, 336,
	355, 369, 370, 371, 266, 255, 350, 256, 283, 257,
	235, 259, 258, 260, 357, 261, 237, 337, 374, 0,
	279, 346, 310, 238, 309, 338, 373, 372, 246, 398,
	404, 405, 410, 0, 411, 0, 0, 0, 419, 424,
	425, 426, 428, 429, 430, 431, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 403, 277, 231,
	232, 443, 263, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 402, 0, 0, 0,
	432, 442, 0, 0, 0, 0, 0, 441, 335, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 384, 396, 414, 417, 0, 0,
	0, 0, 236, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 387, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 412, 0, 0, 319, 320, 321, 322, 461,
	463, 253, 415, 344, 473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 409, 276, 282, 427, 284, 252, 334, 278,
	393, 291, 0, 420, 0, 421, 0, 0, 0, 0,
	326, 287, 288, 358, 292, 304, 347, 392, 332, 352,
	250, 383, 359, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 302, 130, 343, 275,
	0, 0, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 0, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 0,
	0, 0, 227, 228, 229, 230, 368, 0, 0, 399,
	400, 401, 423, 385, 0, 440, 331, 0, 0, 0,
	0, 0, 0, 0, 863, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 434, 0, 0, 0, 0, 0, 360, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 248, 184, 435, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 845, 0, 0, 0, 0, 0,
	0, 239, 365, 381, 249, 356, 394, 254, 363, 244,
	330, 353, 0, 0, 1903, 1905, 1906, 1907, 1908, 1909,
	1910, 0, 1915, 1911, 1912, 1913, 1914, 0, 1898, 1899,
	1900, 1901, 843, 1878, 1904, 0, 1879, 327, 1880, 1881,
	1882, 1883, 1884, 1885, 1886, 1887, 1888, 1895, 1896, 1889,
	1890, 1891, 1892, 1893, 1894, 1902, 339, 305, 340, 286,
	317, 316, 318, 874, 876, 878, 880, 883, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 0, 0, 0,
	0, 0, 0, 364, 0, 0, 300, 0, 0, 0,
	1897, 0, 351, 333, 0, 0, 0, 349, 303, 376,
	341, 382, 366, 390, 345, 342, 234, 367, 267, 314,
	245, 247, 262, 269, 271, 273, 274, 323, 324, 336,
	355, 369, 370, 371, 266, 255, 350, 256, 283, 257,
	235, 259, 258, 260, 357, 261, 237, 337, 374, 0,
	279, 346, 310, 238, 309, 338, 373, 372, 246, 398,
	404, 405, 410, 0, 411, 0, 0, 0, 419, 424,
	425, 426, 428, 429, 430, 431, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 403, 277, 231,
	232, 443, 263, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 402, 0, 0, 0,
	432, 442, 0, 0, 0, 0, 0, 441, 335, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 384, 396, 414, 417, 0, 0,
	0, 0, 236, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 387, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 412, 0, 0, 319, 320, 321, 322, 280,
	0, 253, 415, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 409, 276, 282, 427, 284, 252, 334, 278,
	393, 291, 0, 420, 0, 421, 0, 0, 0, 0,
	326, 287, 288, 358, 292, 304, 347, 392, 332, 352,
	250, 383, 359, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 873, 302, 0, 343, 275,
	0, 0, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 0, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 0,
	0, 0, 227, 228, 229, 230, 368, 0, 0, 399,
	400, 401, 423, 385, 0, 440, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 434, 0, 0, 0, 0, 0, 360, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 248, 184, 435, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	1975, 1978, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 365, 381, 249, 356, 394, 254, 363, 244,
	330, 353, 0, 0, 241, 379, 362, 312, 289, 290,
	240, 0, 348, 268, 281, 265, 328, 0, 378, 406,
	264, 397, 0, 389, 243, 0, 388, 327, 375, 380,
	313, 307, 242, 377, 311, 306, 293, 272, 422, 294,
	295, 296, 297, 298, 299, 285, 339, 305, 340, 286,
	317, 316, 318, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1979, 391, 0, 0, 0,
	1974, 0, 1973, 364, 1971, 1976, 300, 0, 0, 0,
	407, 0, 351, 333, 0, 0, 0, 349, 303, 376,
	341, 382, 366, 390, 345, 342, 234, 367, 267, 314,
	245, 247, 262, 269, 271, 273, 274, 323, 324, 336,
	355, 369, 370, 371, 266, 255, 350, 256, 283, 257,
	235, 259, 258, 260, 357, 261, 237, 337, 374, 1977,
	279, 346, 310, 238, 309, 338, 373, 372, 246, 398,
	404, 405, 410, 0, 411, 0, 0, 0, 419, 424,
	425, 426, 428, 429, 430, 431, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 403, 277, 231,
	232, 443, 263, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 402, 0, 0, 0,
	432, 442, 0, 0, 0, 0, 0, 441, 335, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 384, 396, 414, 417, 0, 0,
	0, 0, 236, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 387, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 412, 0, 0, 319, 320, 321, 322, 280,
	0, 253, 415, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 409, 276, 282, 427, 284, 252, 334, 278,
	393, 291, 0, 420, 0, 421, 0, 0, 0, 0,
	326, 287, 288, 358, 292, 304, 347, 392, 332, 352,
	250, 383, 359, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 302, 0, 343, 275,
	0, 0, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 0, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 0,
	0, 0, 227, 228, 229, 230, 368, 0, 0, 399,
	400, 401, 423, 385, 0, 440, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1703, 0,
	0, 0, 0, 270, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 434, 0, 0, 0, 0, 0, 360, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 1704, 0, 0, 0, 248, 184, 435, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 969, 970, 971, 968, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 365, 381, 249, 356, 394, 254, 363, 244,
	330, 353, 0, 0, 241, 379, 362, 312, 289, 290,
	240, 0, 348, 268, 281, 265, 328, 0, 378, 406,
	264, 397, 0, 389, 243, 0, 388, 327, 375, 380,
	313, 307, 242, 377, 311, 306, 293, 272, 422, 294,
	295, 296, 297, 298, 299, 285, 339, 305, 340, 286,
	317, 316, 318, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 0, 0, 0,
	0, 0, 0, 364, 0, 0, 300, 0, 0, 0,
	407, 0, 351, 333, 0, 0, 0, 349, 303, 376,
	341, 382, 366, 390, 345, 342, 234, 367, 267, 314,
	245, 247, 262, 269, 271, 273, 274, 323, 324, 336,
	355, 369, 370, 371, 266, 255, 350, 256, 283, 257,
	235, 259, 258, 260, 357, 261, 237, 337, 374, 0,
	279, 346, 310, 238, 309, 338, 373, 372, 246, 398,
	404, 405, 410, 0, 411, 0, 0, 0, 419, 424,
	425, 426, 428, 429, 430, 431, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 403, 277, 231,
	232, 443, 263, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 402, 0, 0, 0,
	432, 442, 0, 0, 0, 0, 0, 441, 335, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 384, 396, 414, 417, 0, 0,
	0, 0, 236, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 387, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 412, 0, 0, 319, 320, 321, 322, 280,
	0, 253, 415, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 409, 276, 282, 427, 284, 252, 334, 278,
	393, 291, 0, 420, 0, 421, 0, 0, 0, 0,
	326, 287, 288, 358, 292, 304, 347, 392, 332, 352,
	250, 383, 359, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 302, 0, 343, 275,
	0, 0, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 0, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 0,
	0, 0, 227, 228, 229, 230, 368, 0, 0, 399,
	400, 401, 423, 385, 0, 440, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 780, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 434, 0, 0, 0, 0, 0, 360, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 787,
	788, 0, 0, 0, 0, 248, 184, 435, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 791,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 365, 775, 249, 356, 394, 254, 363, 244,
	330, 353, 0, 0, 241, 379, 362, 312, 289, 290,
	240, 0, 348, 268, 281, 265, 328, 0, 378, 406,
	264, 397, 766, 389, 243, 765, 388, 327, 375, 380,
	313, 307, 242, 377, 311, 306, 293, 272, 422, 294,
	295, 296, 297, 298, 299, 285, 339, 305, 340, 286,
	317, 316, 318, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 0, 0, 0,
	0, 0, 0, 364, 0, 0, 300, 0, 0, 0,
	407, 0, 351, 333, 0, 0, 0, 349, 303, 376,
	341, 382, 366, 390, 778, 342, 234, 367, 267, 314,
	245, 247, 262, 269, 271, 273, 274, 323, 324, 336,
	355, 369, 370, 371, 266, 255, 350, 256, 283, 257,
	235, 259, 258, 260, 357, 261, 237, 337, 374, 0,
	279, 346, 310, 238, 309, 338, 373, 372, 246, 398,
	404, 405, 410, 0, 411, 0, 0, 0, 419, 424,
	425, 426, 428, 429, 430, 431, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 403, 277, 231,
	232, 443, 263, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 402, 0, 0, 0,
	432, 442, 0, 0, 0, 0, 0, 441, 335, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 384, 396, 414, 417, 0, 0,
	0, 0, 236, 416, 0, 0, 0, 0, 0, 0,
	779, 0, 387, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 782, 0, 0, 319, 320, 321, 322, 280,
	0, 253, 415, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 409, 276, 282, 427, 284, 252, 334, 278,
	393, 291, 0, 420, 0, 421, 0, 0, 0, 0,
	789, 776, 785, 777, 292, 304, 347, 392, 332, 352,
	250, 383, 359, 786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 302, 0, 343, 275,
	0, 0, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 0, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 0,
	0, 0, 227, 228, 229, 230, 368, 0, 0, 399,
	400, 401, 423, 385, 0, 440, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 434, 0, 0, 0, 0, 0, 360, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 248, 184, 435, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 1994, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 365, 381, 249, 356, 394, 254, 363, 244,
	330, 353, 0, 0, 241, 379, 362, 312, 289, 290,
	240, 0, 348, 268, 281, 265, 328, 0, 378, 406,
	264, 397, 0, 389, 243, 0, 388, 327, 375, 380,
	313, 307, 242, 377, 311, 306, 293, 272, 422, 294,
	295, 296, 297, 298, 299, 285, 339, 305, 340, 286,
	317, 316, 318, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1993, 391, 0, 0, 0,
	1998, 1996, 0, 364, 0, 1997, 300, 0, 0, 0,
	407, 0, 351, 333, 0, 0, 0, 349, 303, 376,
	341, 382, 366, 390, 345, 342, 234, 367, 267, 314,
	245, 247, 262, 269, 271, 273, 274, 323, 324, 336,
	355, 369, 370, 371, 266, 255, 350, 256, 283, 257,
	235, 259, 258, 260, 357, 261, 237, 337, 374, 0,
	279, 346, 310, 238, 309, 338, 373, 372, 246, 398,
	404, 405, 410, 0, 411, 0, 0, 0, 419, 424,
	425, 426, 428, 429, 430, 431, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 403, 277, 231,
	232, 443, 263, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 402, 0, 0, 0,
	432, 442, 0, 0, 0, 0, 0, 441, 335, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 384, 396, 414, 417, 0, 0,
	0, 0, 236, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 387, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 412, 0, 0, 319, 320, 321, 322, 280,
	0, 253, 415, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 409, 276, 282, 427, 284, 252, 334, 278,
	393, 291, 0, 420, 0, 421, 0, 0, 0, 0,
	326, 287, 288, 358, 292, 304, 347, 392, 332, 352,
	250, 383, 359, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 302, 0, 343, 275,
	0, 0, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 0, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 0,
	0, 0, 227, 228, 229, 230, 161, 368, 0, 399,
	400, 401, 423, 385, 0, 440, 0, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 0, 434, 0, 0, 112, 0, 0, 360, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 1747, 0, 183,
	0, 0, 0, 0, 0, 0, 248, 184, 435, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 365, 381, 249, 356, 394, 254, 363,
	244, 330, 353, 0, 0, 241, 379, 362, 312, 289,
	290, 240, 0, 348, 268, 281, 265, 328, 0, 378,
	406, 264, 397, 0, 389, 243, 0, 388, 327, 375,
	380, 313, 307, 242, 377, 311, 306, 293, 272, 422,
	294, 295, 296, 297, 298, 299, 285, 339, 305, 340,
	286, 317, 316, 318, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 0, 0, 0, 364, 0, 0, 300, 0, 0,
	0, 407, 0, 351, 333, 0, 0, 0, 349, 303,
	376, 341, 382, 366, 390, 345, 342, 234, 367, 267,
	314, 245, 247, 262, 269, 271, 273, 274, 323, 324,
	336, 355, 369, 370, 371, 266, 255, 350, 256, 283,
	257, 235, 259, 258, 260, 357, 261, 237, 337, 374,
	0, 279, 346, 310, 238, 309, 338, 373, 372, 246,
	398, 404, 405, 410, 0, 411, 0, 0, 0, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 403, 277,
	231, 232, 443, 263, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 402, 0, 0,
	0, 432, 442, 0, 0, 0, 0, 0, 441, 335,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 384, 396, 414, 417, 0,
	0, 0, 0, 236, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 412, 0, 0, 319, 320, 321, 322,
	280, 0, 253, 415, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 409, 276, 282, 427, 284, 252, 334,
	278, 393, 291, 0, 420, 0, 421, 0, 0, 0,
	0, 326, 287, 288, 358, 292, 304, 347, 392, 332,
	352, 250, 383, 359, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 302, 130, 343,
	275, 0, 0, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	0, 0, 0, 227, 228, 229, 230, 161, 368, 0,
	399, 400, 401, 423, 385, 0, 440, 0, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 433, 0, 434, 0, 0, 112, 0, 0, 360,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 1738, 0,
	183, 0, 0, 0, 0, 0, 0, 248, 184, 435,
	0, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 365, 381, 249, 356, 394, 254,
	363, 244, 330, 353, 0, 0, 241, 379, 362, 312,
	289, 290, 240, 0, 348, 268, 281, 265, 328, 0,
	378, 406, 264, 397, 0, 389, 243, 0, 388, 327,
	375, 380, 313, 307, 242, 377, 311, 306, 293, 272,
	422, 294, 295, 296, 297, 298, 299, 285, 339, 305,
	340, 286, 317, 316, 318, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 0,
	0, 0, 0, 0, 0, 364, 0, 0, 300, 0,
	0, 0, 407, 0, 351, 333, 0, 0, 0, 349,
	303, 376, 341, 382, 366, 390, 345, 342, 234, 367,
	267, 314, 245, 247, 262, 269, 271, 273, 274, 323,
	324, 336, 355, 369, 370, 371, 266, 255, 350, 256,
	283, 257, 235, 259, 258, 260, 357, 261, 237, 337,
	374, 0, 279, 346, 310, 238, 309, 338, 373, 372,
	246, 398, 404, 405, 410, 0, 411, 0, 0, 0,
	419, 424, 425, 426, 428, 429, 430, 431, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 403,
	277, 231, 232, 443, 263, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 402, 0,
	0, 0, 432, 442, 0, 0, 0, 0, 0, 441,
	335, 0, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 361, 384, 396, 414, 417,
	0, 0, 0, 0, 236, 416, 0, 0, 0, 0,
	0, 0, 0, 0, 387, 0, 0, 0, 395, 0,
	0, 0, 0, 0, 412, 0, 0, 319, 320, 321,
	322, 280, 0, 253, 415, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 409, 276, 282, 427, 284, 252,
	334, 278, 393, 291, 0, 420, 0, 421, 0, 0,
	0, 0, 326, 287, 288, 358, 292, 304, 347, 392,
	332, 352, 250, 383, 359, 308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 302, 130,
	343, 275, 0, 0, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 0, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 0, 0, 0, 227, 228, 229, 230, 161, 368,
	0, 399, 400, 401, 423, 385, 0, 440, 0, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 112, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1643, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	130, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 787, 788, 0, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 791, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 766, 389, 243, 765, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 789, 1662, 785, 1663, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 2383, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	2386, 0, 0, 2385, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 1212, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 1210, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1208, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 1206, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 1210, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1208, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3125,
	0, 183, 614, 0, 0, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 1210, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1208, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 1210, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2867, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2063, 0, 0, 0, 0, 270, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 2065, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 2084, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 1210, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3214,
	0, 183, 0, 0, 0, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 614, 0, 0, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3140, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 3070, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2863, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 2930, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2588, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1643, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2669, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 2541, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 1210, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 2065, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 368,
	0, 0, 399, 400, 401, 423, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 2100, 0, 0, 0, 248, 184,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 365, 381, 249, 356, 394,
	254, 363, 244, 330, 353, 0, 0, 241, 379, 362,
	312, 289, 290, 240, 0, 348, 268, 281, 265, 328,
	0, 378, 406, 264, 397, 0, 389, 243, 0, 388,
	327, 375, 380, 313, 307, 242, 377, 311, 306, 293,
	272, 422, 294, 295, 296, 297, 298, 299, 285, 339,
	305, 340, 286, 317, 316, 318, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 234,
	367, 267, 314, 245, 247, 262, 269, 271, 273, 274,
	323, 324, 336, 355, 369, 370, 371, 266, 255, 350,
	256, 283, 257, 235, 259, 258, 260, 357, 261, 237,
	337, 374, 0, 279, 346, 310, 238, 309, 338, 373,
	372, 246, 398, 404, 405, 410, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	403, 277, 231, 232, 443, 263, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 432, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 414,
	417, 0, 0, 0, 0, 236, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 412, 0, 0, 319, 320,
	321, 322, 280, 0, 253, 415, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 276, 282, 427, 284,
	252, 334, 278, 393, 291, 0, 420, 0, 421, 0,
	0, 0, 0, 326, 287, 288, 358, 292, 304, 347,
	392, 332, 352, 250, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 302,
	0, 343, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 0,
	0, 0, 399, 400, 401, 423, 385, 368, 440, 0,
	0, 1938, 0, 0, 0, 0, 0, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 0, 434, 0, 0, 0, 0, 0, 360, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 248, 184, 435, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 365, 381, 249, 356, 394, 254, 363,
	244, 330, 353, 0, 0, 241, 379, 362, 312, 289,
	290, 240, 0, 348, 268, 281, 265, 328, 0, 378,
	406, 264, 397, 0, 389, 243, 0, 388, 327, 375,
	380, 313, 307, 242, 377, 311, 306, 293, 272, 422,
	294, 295, 296, 297, 298, 299, 285, 339, 305, 340,
	286, 317, 316, 318, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 0, 0, 0, 364, 0, 0, 300, 0, 0,
	0, 407, 0, 351, 333, 0, 0, 0, 349, 303,
	376, 341, 382, 366, 390, 345, 342, 234, 367, 267,
	314, 245, 247, 262, 269, 271, 273, 274, 323, 324,
	336, 355, 369, 370, 371, 266, 255, 350, 256, 283,
	257, 235, 259, 258, 260, 357, 261, 237, 337, 374,
	0, 279, 346, 310, 238, 309, 338, 373, 372, 246,
	398, 404, 405, 410, 0, 411, 0, 0, 0, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 403, 277,
	231, 232, 443, 263, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 402, 0, 0,
	0, 432, 442, 0, 0, 0, 0, 0, 441, 335,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 384, 396, 414, 417, 0,
	0, 0, 0, 236, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 412, 0, 0, 319, 320, 321, 322,
	280, 0, 253, 415, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 409, 276, 282, 427, 284, 252, 334,
	278, 393, 291, 0, 420, 0, 421, 0, 0, 0,
	0, 326, 287, 288, 358, 292, 304, 347, 392, 332,
	352, 250, 383, 359, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 302, 0, 343,
	275, 0, 0, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	0, 0, 0, 227, 228, 229, 230, 368, 0, 0,
	399, 400, 401, 423, 385, 0, 440, 331, 0, 0,
	0, 0, 0, 0, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 0, 434, 0, 0, 0, 0, 0, 360, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 248, 184, 435, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 365, 381, 249, 356, 394, 254, 363,
	244, 330, 353, 0, 0, 241, 379, 362, 312, 289,
	290, 240, 0, 348, 268, 281, 265, 328, 0, 378,
	406, 264, 397, 0, 389, 243, 0, 388, 327, 375,
	380, 313, 307, 242, 377, 311, 306, 293, 272, 422,
	294, 295, 296, 297, 298, 299, 285, 339, 305, 340,
	286, 317, 316, 318, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 0, 0, 0, 364, 0, 0, 300, 0, 0,
	0, 407, 0, 351, 333, 0, 0, 0, 349, 303,
	376, 341, 382, 366, 390, 345, 342, 234, 367, 267,
	314, 245, 247, 262, 269, 271, 273, 274, 323, 324,
	336, 355, 369, 370, 371, 266, 255, 350, 256, 283,
	257, 235, 259, 258, 260, 357, 261, 237, 337, 374,
	0, 279, 346, 310, 238, 309, 338, 373, 372, 246,
	398, 404, 405, 410, 0, 411, 0, 0, 0, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 403, 277,
	231, 232, 443, 263, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 402, 0, 0,
	0, 432, 442, 0, 0, 0, 0, 0, 441, 335,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 384, 396, 414, 417, 0,
	0, 0, 0, 236, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 412, 0, 0, 319, 320, 321, 322,
	280, 0, 253, 415, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 409, 276, 282, 427, 284, 252, 334,
	278, 393, 291, 0, 420, 0, 421, 0, 0, 0,
	0, 326, 287, 288, 358, 292, 304, 347, 392, 332,
	352, 250, 383, 359, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 302, 0, 343,
	275, 0, 0, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	0, 0, 0, 227, 228, 229, 230, 368, 0, 0,
	399, 400, 401, 423, 385, 0, 440, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 0, 434, 0, 0, 0, 0, 0, 360, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 1210, 0, 0, 0, 248, 184, 435, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 365, 381, 249, 356, 394, 254, 363,
	244, 330, 353, 0, 0, 241, 379, 362, 312, 289,
	290, 240, 0, 348, 268, 281, 265, 328, 0, 378,
	406, 264, 397, 0, 389, 243, 0, 388, 327, 375,
	380, 313, 307, 242, 377, 311, 306, 293, 272, 422,
	294, 295, 296, 297, 298, 299, 285, 339, 305, 340,
	286, 317, 316, 318, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 0, 0, 0, 364, 0, 0, 300, 0, 0,
	0, 407, 0, 351, 333, 0, 0, 0, 349, 303,
	376, 341, 382, 366, 390, 1543, 342, 234, 367, 267,
	314, 245, 247, 262, 269, 271, 273, 274, 323, 324,
	336, 355, 369, 370, 371, 266, 255, 350, 256, 283,
	257, 235, 259, 258, 260, 357, 261, 237, 337, 374,
	0, 279, 346, 310, 238, 309, 338, 373, 372, 246,
	398, 404, 405, 410, 0, 411, 0, 0, 0, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 403, 277,
	231, 232, 443, 263, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 402, 0, 0,
	0, 432, 442, 0, 0, 0, 0, 0, 441, 335,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 384, 396, 414, 417, 0,
	0, 0, 0, 236, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 412, 0, 0, 319, 320, 321, 322,
	280, 0, 253, 415, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 409, 276, 282, 427, 284, 252, 334,
	278, 393, 291, 0, 420, 0, 421, 0, 0, 0,
	0, 326, 287, 288, 358, 292, 304, 347, 392, 332,
	352, 250, 383, 359, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 302, 0, 343,
	275, 0, 0, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	0, 0, 0, 227, 228, 229, 230, 368, 0, 0,
	399, 400, 401, 423, 385, 0, 440, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 0, 434, 0, 0, 0, 0, 0, 360, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 248, 184, 435, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 365, 381, 249, 356, 394, 254, 363,
	244, 330, 353, 0, 0, 241, 379, 362, 312, 289,
	290, 240, 0, 348, 268, 281, 265, 328, 0, 378,
	406, 264, 397, 0, 389, 243, 0, 388, 327, 375,
	380, 313, 307, 242, 377, 311, 306, 293, 272, 422,
	294, 295, 296, 297, 298, 299, 285, 339, 305, 340,
	286, 317, 316, 318, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	1234, 0, 0, 0, 364, 0, 0, 300, 0, 0,
	0, 407, 0, 351, 333, 0, 0, 0, 349, 303,
	376, 341, 382, 366, 390, 345, 342, 234, 367, 267,
	314, 245, 247, 262, 269, 271, 273, 274, 323, 324,
	336, 355, 369, 370, 371, 266, 255, 350, 256, 283,
	257, 235, 259, 258, 260, 357, 261, 237, 337, 374,
	0, 279, 346, 310, 238, 309, 338, 373, 372, 246,
	398, 404, 405, 410, 0, 411, 0, 0, 0, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 403, 277,
	231, 232, 443, 263, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 402, 0, 0,
	0, 432, 442, 0, 0, 0, 0, 0, 441, 335,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 384, 396, 414, 417, 0,
	0, 0, 0, 236, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 412, 0, 0, 319, 320, 321, 322,
	280, 0, 253, 415, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 409, 276, 282, 427, 284, 252, 334,
	278, 393, 291, 0, 420, 0, 421, 0, 0, 0,
	0, 326, 287, 288, 358, 292, 304, 347, 392, 332,
	352, 250, 383, 359, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 302, 0, 343,
	275, 0, 0, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	0, 0, 0, 227, 228, 229, 230, 368, 0, 0,
	399, 400, 401, 423, 385, 0, 440, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 0, 434, 0, 0, 0, 0, 0, 360, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 248, 184, 435, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 365, 381, 249, 356, 394, 254, 363,
	244, 330, 353, 0, 0, 241, 379, 362, 312, 289,
	290, 240, 0, 348, 268, 281, 265, 328, 0, 378,
	406, 264, 397, 0, 389, 243, 0, 388, 327, 375,
	380, 313, 307, 242, 377, 311, 306, 293, 272, 422,
	294, 295, 296, 297, 298, 299, 285, 339, 305, 340,
	286, 317, 316, 318, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 0, 0, 0, 364, 0, 0, 300, 0, 0,
	0, 407, 0, 351, 333, 0, 0, 0, 349, 303,
	376, 341, 382, 366, 390, 345, 342, 234, 367, 267,
	314, 245, 247, 262, 269, 271, 273, 274, 323, 324,
	336, 355, 369, 370, 371, 266, 255, 350, 256, 283,
	257, 235, 259, 258, 260, 357, 261, 237, 337, 374,
	0, 279, 346, 310, 238, 309, 338, 373, 372, 246,
	398, 404, 405, 410, 0, 411, 0, 0, 0, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 403, 277,
	231, 232, 443, 263, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 402, 0, 0,
	0, 432, 442, 0, 0, 0, 0, 0, 441, 335,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 384, 396, 414, 417, 0,
	0, 0, 0, 236, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 412, 0, 0, 319, 320, 321, 322,
	280, 0, 253, 415, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 409, 276, 282, 427, 284, 252, 334,
	278, 393, 291, 0, 420, 0, 421, 0, 0, 0,
	0, 326, 287, 288, 358, 292, 304, 347, 392, 332,
	352, 250, 383, 359, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 721, 0, 0, 0, 233, 0, 302, 0, 343,
	275, 0, 0, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	0, 0, 0, 227, 228, 229, 230, 368, 0, 0,
	399, 400, 401, 423, 385, 0, 440, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 0, 434, 0, 0, 0, 0, 0, 360, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 248, 184, 435, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 365, 381, 249, 356, 394, 254, 363,
	244, 330, 353, 0, 0, 241, 379, 362, 312, 289,
	290, 240, 0, 348, 268, 281, 265, 328, 0, 378,
	406, 264, 397, 0, 389, 243, 0, 388, 327, 375,
	380, 313, 307, 242, 377, 311, 306, 293, 272, 422,
	294, 295, 296, 297, 298, 299, 285, 339, 305, 340,
	286, 317, 316, 318, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 0, 0, 0, 364, 0, 0, 300, 0, 0,
	0, 407, 0, 351, 333, 0, 0, 0, 349, 303,
	376, 341, 382, 366, 390, 481, 342, 234, 367, 267,
	314, 245, 247, 262, 269, 271, 273, 274, 323, 324,
	336, 355, 369, 370, 371, 266, 255, 350, 256, 283,
	257, 235, 259, 258, 260, 357, 261, 237, 337, 374,
	0, 279, 346, 310, 238, 309, 338, 373, 372, 246,
	398, 404, 405, 410, 0, 411, 0, 0, 0, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 403, 277,
	231, 232, 443, 263, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 402, 0, 0,
	0, 432, 442, 0, 0, 0, 0, 0, 441, 335,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 384, 396, 414, 417, 0,
	0, 0, 0, 236, 416, 0, 0, 0, 0, 0,
	0, 482, 0, 387, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 412, 0, 0, 319, 320, 321, 322,
	280, 0, 253, 415, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 409, 276, 282, 427, 284, 252, 334,
	278, 393, 291, 0, 420, 0, 421, 0, 0, 0,
	0, 326, 287, 288, 358, 292, 304, 347, 392, 332,
	352, 250, 383, 359, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 302, 0, 343,
	275, 0, 0, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	0, 0, 0, 227, 228, 229, 230, 368, 0, 0,
	399, 400, 401, 423, 385, 0, 440, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 0, 434, 0, 0, 0, 0, 0, 360, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 248, 184, 435, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 365, 381, 249, 356, 394, 254, 363,
	244, 330, 353, 0, 0, 241, 379, 362, 312, 289,
	290, 240, 0, 348, 268, 281, 265, 328, 0, 378,
	406, 264, 397, 0, 389, 243, 0, 388, 327, 375,
	380, 313, 307, 242, 377, 311, 306, 293, 272, 422,
	294, 295, 296, 297, 298, 299, 285, 339, 305, 340,
	286, 317, 316, 318, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 458, 0, 0, 391, 0, 0,
	0, 0, 0, 0, 364, 0, 0, 300, 0, 0,
	0, 407, 0, 351, 333, 0, 0, 0, 349, 303,
	376, 341, 382, 366, 390, 345, 342, 234, 367, 267,
	314, 245, 247, 262, 269, 271, 273, 274, 323, 324,
	336, 355, 369, 370, 371, 266, 255, 350, 256, 283,
	257, 235, 259, 258, 260, 357, 261, 237, 337, 374,
	0, 279, 346, 310, 238, 309, 338, 373, 372, 246,
	398, 404, 405, 410, 0, 411, 0, 0, 0, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 403, 277,
	231, 232, 443, 263, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 402, 0, 0,
	0, 432, 442, 0, 0, 0, 0, 0, 441, 335,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 384, 396, 414, 417, 0,
	0, 0, 0, 236, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 412, 0, 0, 319, 320, 321, 322,
	280, 0, 253, 415, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 409, 276, 282, 427, 284, 252, 334,
	278, 393, 291, 0, 420, 0, 421, 0, 0, 0,
	0, 326, 287, 288, 358, 292, 304, 347, 392, 332,
	352, 250, 383, 359, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 302, 0, 343,
	275, 0, 0, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	0, 0, 0, 227, 228, 229, 230, 368, 0, 0,
	399, 400, 401, 423, 385, 0, 440, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 448, 270, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 0, 434, 0, 0, 0, 0, 0, 360, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 248, 184, 435, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 365, 381, 249, 356, 394, 254, 363,
	244, 330, 353, 0, 0, 241, 379, 362, 312, 289,
	290, 240, 0, 348, 268, 281, 265, 328, 0, 378,
	406, 264, 397, 0, 389, 243, 0, 388, 327, 375,
	380, 313, 307, 242, 377, 311, 306, 293, 272, 422,
	294, 295, 296, 297, 298, 299, 285, 339, 305, 340,
	286, 317, 316, 318, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 0, 0, 0, 364, 0, 0, 300, 0, 0,
	0, 407, 0, 351, 333, 0, 0, 0, 349, 303,
	376, 341, 382, 366, 390, 345, 342, 234, 367, 267,
	314, 245, 247, 262, 269, 271, 273, 274, 323, 324,
	336, 355, 369, 370, 371, 266, 255, 350, 256, 283,
	257, 235, 259, 258, 260, 357, 261, 237, 337, 374,
	0, 279, 346, 310, 238, 309, 338, 373, 372, 246,
	398, 404, 405, 410, 0, 411, 0, 0, 0, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 403, 277,
	231, 232, 443, 263, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 402, 0, 0,
	0, 432, 442, 0, 0, 0, 0, 0, 441, 335,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 384, 396, 414, 417, 0,
	0, 0, 0, 236, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 412, 0, 0, 319, 320, 321, 322,
	280, 0, 253, 415, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 409, 276, 282, 427, 284, 252, 334,
	278, 393, 291, 0, 420, 0, 421, 0, 0, 0,
	0, 326, 287, 288, 358, 292, 304, 347, 392, 332,
	352, 250, 383, 359, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 302, 0, 343,
	275, 0, 0, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	0, 0, 0, 227, 228, 229, 230, 368, 0, 0,
	399, 400, 401, 423, 385, 0, 440, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 0, 434, 0, 0, 0, 0, 0, 360, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 248, 184, 435, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 365, 381, 249, 356, 394, 254, 363,
	244, 330, 353, 0, 0, 241, 379, 362, 312, 289,
	290, 240, 0, 348, 268, 281, 265, 328, 0, 378,
	406, 264, 397, 0, 389, 243, 0, 388, 327, 375,
	380, 313, 307, 242, 377, 311, 306, 293, 272, 422,
	294, 295, 296, 297, 298, 299, 285, 339, 305, 340,
	286, 317, 316, 318, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 0, 0, 0, 364, 0, 0, 300, 0, 0,
	0, 407, 0, 351, 333, 0, 0, 0, 349, 303,
	376, 341, 382, 366, 390, 345, 342, 234, 367, 267,
	314, 245, 247, 262, 269, 271, 273, 274, 323, 324,
	336, 355, 369, 370, 371, 266, 255, 350, 256, 283,
	257, 235, 259, 258, 260, 357, 261, 237, 337, 374,
	0, 279, 346, 310, 238, 309, 338, 373, 372, 246,
	398, 404, 405, 410, 0, 411, 0, 0, 0, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 403, 277,
	231, 232, 443, 263, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 402, 0, 0,
	0, 432, 442, 0, 0, 0, 0, 0, 441, 335,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 384, 396, 414, 417, 0,
	0, 0, 0, 236, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 412, 0, 0, 319, 320, 321, 322,
	280, 0, 253, 415, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 409, 276, 282, 427, 284, 252, 334,
	278, 393, 291, 0, 420, 0, 421, 0, 0, 0,
	0, 326, 287, 288, 358, 292, 304, 347, 392, 332,
	352, 250, 383, 359, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 302, 0, 343,
	275, 0, 0, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	0, 0, 0, 227, 228, 229, 230, 368, 0, 0,
	399, 400, 401, 423, 385, 0, 440, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 0, 434, 0, 0, 0, 0, 0, 360, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 248, 184, 435, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 365, 1190, 249, 356, 394, 254, 363,
	244, 330, 353, 0, 0, 241, 379, 362, 312, 289,
	290, 240, 0, 348, 268, 281, 265, 328, 0, 378,
	406, 264, 397, 0, 389, 243, 0, 388, 327, 375,
	380, 313, 307, 242, 377, 311, 306, 293, 272, 422,
	294, 295, 296, 297, 298, 299, 285, 339, 305, 340,
	286, 317, 316, 318, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 0, 0, 0, 364, 0, 0, 300, 0, 0,
	0, 407, 0, 351, 333, 0, 0, 0, 349, 303,
	376, 341, 382, 366, 390, 345, 342, 234, 367, 267,
	314, 245, 247, 262, 269, 271, 273, 274, 323, 324,
	336, 355, 369, 370, 371, 266, 255, 350, 256, 283,
	257, 235, 259, 258, 260, 357, 261, 237, 337, 374,
	0, 279, 346, 310, 238, 309, 338, 373, 372, 246,
	398, 404, 405, 410, 0, 411, 0, 0, 0, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 403, 277,
	231, 232, 443, 263, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 402, 0, 0,
	0, 432, 442, 0, 0, 0, 0, 0, 441, 335,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 384, 396, 414, 417, 0,
	0, 0, 0, 236, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 412, 0, 0, 319, 320, 321, 322,
	280, 0, 253, 415, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 409, 276, 282, 427, 284, 252, 334,
	278, 393, 291, 0, 420, 0, 421, 0, 0, 0,
	0, 326, 287, 288, 358, 292, 304, 347, 392, 332,
	352, 250, 383, 359, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 302, 0, 343,
	275, 0, 0, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	0, 0, 0, 227, 228, 229, 230, 368, 0, 0,
	399, 400, 401, 423, 385, 0, 440, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 0, 434, 0, 0, 0, 0, 0, 360, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 248, 184, 435, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 365, 1188, 249, 356, 394, 254, 363,
	244, 330, 353, 0, 0, 241, 379, 362, 312, 289,
	290, 240, 0, 348, 268, 281, 265, 328, 0, 378,
	406, 264, 397, 0, 389, 243, 0, 388, 327, 375,
	380, 313, 307, 242, 377, 311, 306, 293, 272, 422,
	294, 295, 296, 297, 298, 299, 285, 339, 305, 340,
	286, 317, 316, 318, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 0, 0, 0, 364, 0, 0, 300, 0, 0,
	0, 407, 0, 351, 333, 0, 0, 0, 349, 303,
	376, 341, 382, 366, 390, 345, 342, 234, 367, 267,
	314, 245, 247, 262, 269, 271, 273, 274, 323, 324,
	336, 355, 369, 370, 371, 266, 255, 350, 256, 283,
	257, 235, 259, 258, 260, 357, 261, 237, 337, 374,
	0, 279, 346, 310, 238, 309, 338, 373, 372, 246,
	398, 404, 405, 410, 0, 411, 0, 0, 0, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 403, 277,
	231, 232, 443, 263, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 402, 0, 0,
	0, 432, 442, 0, 0, 0, 0, 0, 441, 335,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 384, 396, 414, 417, 0,
	0, 0, 0, 236, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 412, 0, 0, 319, 320, 321, 322,
	280, 0, 253, 415, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 409, 276, 282, 427, 284, 252, 334,
	278, 393, 291, 0, 420, 0, 421, 0, 0, 0,
	0, 326, 287, 288, 358, 292, 304, 347, 392, 332,
	352, 250, 383, 359, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 302, 0, 343,
	275, 0, 0, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	0, 0, 0, 227, 228, 229, 230, 368, 0, 0,
	399, 400, 401, 423, 385, 0, 440, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 0, 434, 0, 0, 0, 0, 0, 360, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 248, 184, 435, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 365, 381, 249, 356, 394, 254, 363,
	244, 330, 353, 0, 0, 241, 379, 362, 312, 289,
	290, 240, 0, 348, 268, 281, 265, 328, 0, 378,
	406, 264, 397, 0, 389, 243, 0, 388, 327, 375,
	380, 313, 307, 242, 377, 311, 306, 293, 272, 422,
	294, 295, 296, 297, 298, 299, 285, 339, 305, 340,
	286, 317, 316, 318, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 0, 0, 0, 364, 0, 0, 300, 0, 0,
	0, 407, 0, 351, 333, 0, 0, 0, 349, 303,
	376, 341, 382, 366, 390, 345, 342, 234, 367, 267,
	314, 245, 247, 522, 269, 271, 273, 274, 323, 324,
	336, 355, 369, 370, 371, 266, 255, 350, 256, 283,
	257, 235, 259, 258, 260, 357, 261, 237, 337, 374,
	0, 279, 346, 310, 238, 309, 338, 373, 372, 246,
	398, 404, 405, 410, 0, 411, 0, 0, 0, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 403, 277,
	231, 232, 443, 263, 329, 1618, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 402, 0, 0,
	0, 432, 442, 0, 0, 0, 0, 0, 441, 335,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	1620, 0, 0, 0, 361, 384, 396, 414, 417, 0,
	0, 0, 0, 236, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 412, 0, 0, 319, 320, 321, 322,
	280, 3231, 253, 415, 344, 0, 0, 0, 0, 0,
	0, 1595, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 409, 276, 282, 427, 284, 252, 334,
	278, 393, 291, 0, 420, 0, 421, 0, 0, 0,
	0, 326, 287, 288, 358, 292, 304, 347, 392, 332,
	352, 250, 383, 359, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1611, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1618, 0, 0, 0, 0, 233, 0, 302, 0, 343,
	275, 0, 0, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 1620, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	0, 0, 1618, 227, 228, 229, 230, 0, 0, 0,
	399, 400, 401, 423, 385, 0, 440, 0, 0, 0,
	0, 1599, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1605, 0, 0, 0, 1595, 1620, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1593, 1627, 0, 0, 1594, 1596, 1598, 0,
	1600, 1601, 1602, 1606, 1607, 1608, 1610, 1613, 1614, 1615,
	501, 0, 500, 507, 497, 0, 0, 1603, 1612, 1604,
	0, 0, 0, 504, 505, 0, 506, 510, 1595, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 2978,
	515, 0, 0, 1611, 0, 0, 0, 0, 0, 0,
	0, 1619, 0, 0, 0, 501, 0, 500, 507, 497,
	0, 0, 0, 0, 0, 0, 0, 0, 504, 505,
	0, 506, 510, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 519, 0, 515, 521, 0, 0, 0,
	1616, 520, 0, 0, 0, 1611, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1592, 0, 0,
	0, 0, 0, 0, 1591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1599, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1605, 1609, 0,
	0, 0, 0, 0, 0, 0, 0, 1597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1593, 1627, 0,
	0, 1594, 1596, 1598, 0, 1600, 1601, 1602, 1606, 1607,
	1608, 1610, 1613, 1614, 1615, 0, 0, 0, 1599, 0,
	0, 0, 1603, 1612, 1604, 0, 0, 0, 0, 1605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1593,
	1627, 0, 0, 1594, 1596, 1598, 1619, 1600, 1601, 1602,
	1606, 1607, 1608, 1610, 1613, 1614, 1615, 0, 0, 0,
	493, 495, 494, 0, 1603, 1612, 1604, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 503, 0, 0, 1616, 0, 0, 0, 518,
	0, 0, 0, 0, 0, 0, 496, 0, 1619, 0,
	0, 0, 1592, 0, 0, 493, 495, 494, 0, 1591,
	0, 0, 0, 0, 0, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 1609, 518, 0, 0, 1616, 0, 0,
	0, 496, 1597, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1592, 0, 0, 0, 0, 0,
	0, 1591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1609, 0, 0, 0, 0,
	0, 0, 0, 0, 1597, 0, 0, 0, 0, 0,
	498, 502, 508, 0, 509, 511, 0, 0, 512, 513,
	514, 0, 0, 516, 517, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 498, 502, 508, 0, 509,
	511, 0, 0, 512, 513, 514, 0, 0, 516, 517,
}

var yyPact = [...]int{
	3208, -1000, -1000, -1000, -320, 10794, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35464, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35464, -317,
	34904, 34904, -1000, -1000, 2098, -1000, 34344, 11933, 35464, 271,
	268, 35464, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 663, -1000,
	33784, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 524, 3760,
	37144, 8543, -270, -1000, 2861, -113, 788, 829, 901, 901,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3245, 786,
	33224, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3412, 277, 786, 14173, -21, -22, 2861, 311, 256,
	-1000, 959, 3244, 150, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 8543, 8543, 10794, -324, 10794,
	8543, 35464, 35464, -1000, -1000, -1000, -1000, 524, 3760, 8543,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -22, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 4080, -1000, 1289,
	-1000, -1000, -1000, -1000, 2443, 1278, 2016, 497, 35464, -1000,
	1269, 497, -1000, -1000, -1000, 2861, 2861, -1000, 35464, 35464,
	43, 1451, -1000, 315, 310, 305, 1268, -1000, -1000, -1000,
	-1000, -1000, -1000, 389, 2805, -1000, 35464, 35464, 2471, 35464,
	-1000, 1865, 445, 37768, 2633, 1006, 711, 2484, -1000, -1000,
	2440, -1000, 169, 161, 163, 373, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 194, -1000, 2699, -1000, -1000, 158, -1000,
	-1000, 151, -1000, -1000, -1000, -23, -1000, -1000, -1000, -1000,
	-1000, -1000, -117, -1000, -1000, 886, 1801, 8543, -1000, 1524,
	-1000, 2279, -1000, -1000, -1000, -1000, 5733, 10223, 10223, 10223,
	10223, -1000, -1000, 2271, 8543, 2439, 2438, -1000, -1000, -1000,
	-1000, -1000, 1267, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1582, -1000, -1000, -1000, 9663, -1000, 2433, 2431,
	2426, 2425, 2423, 2411, 2406, 2402, 2396, 2395, 2388, 2387,
	2384, 2383, 2157, 11362, 2382, 2014, 2013, 2378, 2376, 2375,
	2007, 2157, 2157, 2373, 2372, 2371, 2369, 2368, 2361, 2357,
	2345, 2331, 2325, 2324, 2323, 2322, 2315, 2311, 2308, 2307,
	2306, 2303, 2302, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1167, -1000, 2301, 2624,
	2742, 2194, 2772, 2709, 2705, 2691, 2689, 1820, -1000, -1000,
	-1000, -140, -1000, -1000, 815, -1000, 760, -1000, 35464, 35464,
	35464, 843, 522, 522, 522, 522, 522, 522, 582, 522,
	662, 655, 654, 522, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -145, 1450, 1449, 2122, 744, -1000, -1000, -1000, -1000,
	1105, 35464, -1000, 2202, 1348, 1348, 2739, 467, 454, 446,
	1348, 322, -1000, 1455, 1455, 1455, 1455, 1348, 347, 442,
	2742, 2742, -38, 1455, -30, 1348, 1348, -30, 1348, 1348,
	1348, 134, -313, -1000, -1000, -1000, 1455, 1455, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2723, 2722, 524, 35464, 97,
	35464, 524, 524, 524, 531, -64, 36584, 36024, 1865, 430,
	422, 1162, 1440, -1000, 1355, 35464, 35464, 1355, 1355, 18656,
	18096, -1000, 35464, -1000, 2742, 2194, -1000, 2120, 2358, 2118,
	2194, 524, 524, 524, 524, 524, 129, 524, 524, 524,
	35464, 35464, 32664, 524, 524, 7413, 7413, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 10794, 1576, 1736, 148,
	-84, -322, 176, -1000, -1000, 35464, 2615, 144, -1000, -1000,
	-1000, 2170, -1000, 2200, 2200, 2200, 2200, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2200, 2200, 2200, 2200,
	2200, 2200, 2234, 2294, -1000, -1000, 2199, 2199, 2199, 2170,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2227, 2227, 2230, 2230, 2227,
	35464, 8543, 35464, 2625, 306, 2289, -1000, 35464, 301, 2742,
	2624, 2742, -1000, -1000, 1264, 1807, 2002, -1000, -1000, 315,
	1326, -1000, 872, -1000, -1000, -1000, -1000, 35464, -117, 294,
	-1000, -1000, 2011, 2278, -1000, 461, 957, 1226, -1000, 135,
	37813, 28176, 1865, 28176, 35464, -1000, -1000, -1000, -1000, -1000,
	-1000, -25, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 149, -1000, 8543, 8543, 8543,
	8543, 8543, -1000, 548, 9103, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 10223, 10223, 10223, 10223, 10223, 10223, 10223, 10223,
	10223, 10223, 10223, 10223, 2251, 1475, 10223, 10223, 10223, 10223,
	2358, 2519, 1109, 218, -1000, -1000, -1000, -1000, -1000, 1470,
	1801, 8543, 8543, 35464, -1000, -1000, 343, 8543, 8543, 3037,
	8543, 2683, 8543, 8543, 8543, 2114, 4612, 35464, 8543, -1000,
	2113, 2107, -1000, -1000, 1617, 8543, -1000, -1000, 8543, -1000,
	-1000, 8543, 10223, 8543, -1000, -1000, -1000, 124, 2683, 2683,
	8543, 8543, 2683, 2683, 2683, 1444, 2683, 2683, 2683, 2683,
	2683, 2683, 2683, 2683, 2106, 2105, 2103, 2742, -270, 6853,
	-1000, -276, 2624, 8543, -1000, -1000, 8543, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1999, -80, 797, 764, 777,
	-1000, 2666, -1000, 2276, 2275, 1248, 522, -1000, 35464, 1483,
	35464, 28176, 35464, 35464, 1865, 35464, 35464, 522, 522, 522,
	35464, -1000, 2579, 28176, 2557, 531, -1000, 35464, 1105, 2664,
	35464, 2781, 10223, 10223, -1000, 32104, 1455, 1348, 1348, -1000,
	-1000, 35464, -1000, -1000, -1000, 1455, 35464, 1455, 1455, 2781,
	1455, -1000, -1000, -1000, 1348, 1348, -1000, -1000, -1000, -1000,
	1455, 1455, -1000, -1000, 2781, 35464, -26, 2781, 2781, -54,
	-1000, -1000, -1000, 35464, 35464, 522, 35464, -1000, 35464, 35464,
	-1000, -1000, 35464, 3685, 35464, 31544, 2718, -1000, 28176, 35464,
	35464, 25936, -1000, 1007, -1000, -99, -1000, -95, -64, 1355,
	-64, 1355, -1000, 460, 489, 16976, 388, 28176, 5172, -1000,
	-1000, 1355, 1355, 5172, 5172, 1318, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1101, -1000, 156, 2624, -1000, -1000, -1000,
	-1000, -1000, 35464, 35464, 28176, 1865, 35464, 524, 35464, 35464,
	35464, -1000, 2274, -1000, 2631, 35464, 35464, 1183, -1000, -1000,
	13613, 1236, 1183, -1000, 1480, -1000, 8543, 10794, -292, 8543,
	10794, 10794, 8543, 10794, -1000, 8543, 102, -1000, -1000, -1000,
	-1000, 1805, -1000, 1800, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1997, 1997, -1000, 1799, -1000, -1000, -1000,
	-1000, 1784, -1000, -1000, 1782, -1000, -1000, -1000, 2101, 886,
	-1000, 1986, 2483, -271, -1000, 15855, 35464, 35464, -1000, -1000,
	-271, -1000, 15294, 35464, 2624, -1000, 2624, 35464, -1000, 2738,
	-1000, 315, 233, -1000, -1000, -1000, -1000, -1000, -1000, 1234,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1100,
	-1000, 35464, -1000, -1000, 135, 28176, 29296, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 185, -1000, -1000, 164, -1000, 541,
	72, 1316, -1000, -1000, 100, 167, 675, 1801, -1000, 1489,
	1489, 1497, -1000, 484, -1000, -1000, -1000, -1000, 2271, -1000,
	-1000, -1000, 1491, 3203, -1000, 1396, 1396, 1286, 1286, 1286,
	1286, 1286, 1406, 1406, -1000, -1000, -1000, 5733, 2251, 10223,
	10223, 10223, 10223, 501, 501, 3191, 3171, -1000, 8543, 1474,
	-1000, 8543, 1751, 1094, 1233, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2099, 2095, 2178, 2801, 2094,
	8543, -1000, -1000, 1314, 1310, 1308, -1000, 1789, 7983, -1000,
	-1000, -1000, 2092, 1230, 2090, -1000, -1000, -1000, 2089, 1283,
	991, 2088, 1748, 2083, 1092, 8543, 8543, 1282, 1281, 8543,
	8543, 8543, 8543, 2082, 8543, 8543, 8543, 8543, 8543, 8543,
	8543, 8543, -2, -2, -2, -1000, -1000, 1279, -1000, 1801,
	-1000, 1980, -1000, 967, 1058, -1000, 1747, -1000, -1000, -1000,
	-1000, 782, 753, 799, 35464, 909, 12493, 35464, 35464, 2202,
	2629, 115, -1000, 1198, -1000, 72, -137, 286, 926, 2470,
	2793, 35464, 35464, 35464, 2663, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 30984, -1000, 2250, 1276, -1000, -1000, 8543,
	-1000, -1000, 2468, 35464, 35464, 2781, 2781, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 35464, 2781, 2781, 1348, 1455, -1000,
	-1000, 1455, -1000, -1000, 1455, -1000, 1229, -1000, 35464, -1000,
	-1000, -1000, 2202, 1038, -1000, 1319, 517, 517, 739, 632,
	2771, 14733, -1000, 1376, 858, 539, 2592, 154, -1000, 1376,
	-223, 1376, 1376, 1376, 1376, 1376, 1376, 1376, 387, 383,
	1376, 1376, 1376, 1376, 1376, 1376, 1376, 1376, 1376, 1376,
	1376, 809, 1376, 1376, 1376, 1376, 1376, -1000, 1376, 2248,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 424, 110, 2701,
	195, 191, 1198, 2686, 206, 2609, 1066, -1000, -1000, -1000,
	-1000, 20896, 20896, 16416, 20896, -1000, 1346, -64, -68, -1000,
	-1000, 1007, 5172, 1007, 5172, -1000, -1000, 537, -1000, -1000,
	926, -1000, 35464, 35464, -1000, -1000, 2244, 1441, -1000, -1000,
	11362, -1000, 5172, 5172, -1000, -1000, 21456, 35464, -1000, -119,
	-1000, -125, 2736, 996, -1000, -1000, 1003, 926, 2482, 35464,
	996, -1000, -1000, 12493, 35464, -1000, -1000, 2781, 7413, -1000,
	25936, -1000, -1000, 30416, -1000, 29856, 2781, 1461, -1000, 10794,
	1732, 143, -1000, 172, -326, 140, 1564, 139, 1801, -1000,
	-1000, 2081, 2079, 1275, -1000, 1265, 2078, 1241, 1237, -1000,
	-33, -1000, 2602, 929, -1000, 2241, -1000, 1231, 2544, -1000,
	990, -1000, 1439, 1223, -1000, 929, 1222, 2533, 990, 2736,
	-1000, 1225, 19, -1000, -1000, 35464, 2011, 1199, 29296, 945,
	-1000, 536, 1221, 1219, -1000, 28176, 162, 28176, -1000, 28176,
	-1000, -1000, 336, -1000, 35464, 2611, -1000, -1000, -1000, 1934,
	-340, -1000, -1000, -1000, -1000, -1000, 1195, -1000, 501, 501,
	3191, 2972, -1000, 10223, -1000, 10223, 2481, 1459, -1000, 8543,
	1701, 3993, 1432, 19776, 35464, -1000, -1000, 8543, 8543, -1000,
	2477, -1000, -1000, -1000, -1000, 8543, 8543, 2119, -1000, 35464,
	-1000, -1000, -1000, -1000, 19776, -1000, 10223, -1000, 8543, 1071,
	2434, -2, -2, 2400, 2392, 2385, 1180, -2, 2380, 2326,
	2320, 2209, 2137, 2102, 2058, 2008, -1000, 2240, -1000, -1000,
	6853, -1000, -33, 8543, 8543, 8543, 2577, -1000, -1000, -1000,
	-1000, -1000, 751, 132, 2076, 981, -1000, -1000, 35464, -1000,
	-1000, -1000, 2072, 979, -1000, -1000, -1000, 4268, 2200, 2200,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2200,
	2200, 2200, 2200, 2200, 2200, 2234, -1000, -1000, 2199, 2199,
	2199, 2170, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2227, 2227, 2230, 2230, 2227, -1000, 2202, 2653, -1000,
	-12, 1376, 471, 28176, 404, -1000, 35464, 1584, 1436, 2480,
	262, 2596, 35464, 2226, 2219, 2218, 257, 4268, 35464, 1022,
	-1000, 1215, 3244, -1000, 35464, 1801, -1000, 1865, -1000, 1348,
	-1000, -1000, 2781, 1218, -1000, -1000, 2781, 1348, 1348, 1455,
	35464, -1000, 2647, 3685, -1000, 35464, -1000, -1000, -1000, 659,
	-1000, 781, 522, 35464, 1557, 781, 1547, 2215, -1000, -1000,
	35464, 35464, 35464, 35464, -1000, -1000, 35464, -1000, 35464, 35464,
	35464, 35464, -1000, 35464, 35464, -1000, 35464, 1519, 1515, 2604,
	-1000, 1376, 1376, 720, -1000, -1000, 447, -1000, 1780, 1778,
	1771, 1755, 1978, 1977, 1971, 1376, 1376, 1754, 1970, 28736,
	1969, 894, 1738, 1727, 1718, 1826, 1967, 679, -1000, 1965,
	1785, 1773, 1768, 35464, 2203, 1911, -1000, -1000, -12, 1376,
	188, 35464, 1435, 471, 275, 1827, 17536, 35464, 25936, 25936,
	25936, 25936, -1000, 2499, 2498, -1000, 2530, 2527, 2536, 35464,
	25936, 2202, -1000, 28736, -1000, -1000, -1000, 2358, 1176, 2676,
	787, 8543, -1000, -1000, -109, -108, -1000, -1000, -1000, 28176,
	1958, 388, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2811, 35464, 35464, 507, 2071, -1000, 2777, -1000, 976, -1000,
	-1000, 1214, -1000, 2777, 1476, -321, 10794, 1465, 1457, -1000,
	8543, 10794, 8543, -293, 178, -295, -1000, -1000, -1000, 1956,
	-1000, -1000, -1000, 1704, -1000, 1702, 12, 23, 1514, -271,
	6853, 307, 35464, -271, 35464, 6853, -1000, 35464, 299, -271,
	-1000, 35464, 1700, -1000, -1000, -1000, 2785, 28176, 1865, 1287,
	27616, -1000, 147, -1000, 184, 476, 1955, -1000, 637, 99,
	-1000, 1433, 1934, -1000, -1000, -1000, 10223, -1000, -1000, -1000,
	-1000, 1801, 8543, 2070, -1000, 748, 748, 2069, -1000, 2200,
	2200, -1000, 2170, 2199, 2170, 748, 748, 2067, -1000, 1720,
	1928, -1000, 1905, 1896, 8543, -1000, 2064, 2848, 978, -149,
	-2, -1000, -1000, -1000, -2, -2, -2, -2, -1000, -2,
	-2, -2, -2, -2, -2, -2, -2, 499, -1000, 12,
	1801, 1801, -1000, -1000, 2580, -1000, 1953, 1948, 909, 4268,
	666, 12493, 2608, 2639, 316, 1829, -1000, -1000, -1000, 27056,
	423, -1000, -1000, -1000, 534, 179, 1692, 393, -1000, 35464,
	206, 2567, 1431, 1947, 35464, -1000, -1000, -1000, -1000, -1000,
	2596, -1000, 838, 228, 13053, 13053, 13053, 239, 1463, -1000,
	497, 1063, 1213, 25936, 35464, -1000, 25376, 2063, -1000, 926,
	2781, -1000, 35464, -1000, 2781, 2781, 1348, -1000, 316, -1000,
	2601, 4268, -1000, 35464, -1000, 35464, -1000, 35464, 35464, 522,
	8543, 2601, 35464, 535, -1000, -1000, 874, 225, 519, 519,
	969, -1000, 2622, -1000, -1000, -1000, 35464, -1000, -1000, -1000,
	-1000, -1000, -1000, 19776, 19776, 2680, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1943, 1942,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35464,
	1175, -1000, 1413, 1829, 27056, 1412, 1355, 1936, 423, 1584,
	1410, -1000, 1935, -1000, 936, 35464, 35464, -1000, 1011, -1000,
	1405, 2451, 2479, 2451, -1000, -1000, -1000, -1000, 2151, -1000,
	1925, -1000, -1000, 1011, -1000, -1000, -1000, -1000, -1000, 787,
	-1000, 2733, 781, 781, 781, 2062, -1000, -1000, -1000, 945,
	2060, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2774, 2769, 26496, 2774, -1000, -321, 1391, -1000, 1682, 138,
	1549, 35464, -1000, -1000, -1000, 2054, 2047, -280, 29, 2768,
	2767, 2810, -1000, 2045, 943, -271, -1000, -1000, 929, -1000,
	-1000, -1000, -271, -1000, 929, -1000, -1000, 1865, -1000, 183,
	-1000, -1000, -1000, -1000, -1000, -1000, 55, -1000, 35464, -1000,
	1934, 1933, 98, -1000, 1801, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	8543, -1000, -1000, -1000, 1866, -1000, -1000, 8543, 2041, 1930,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2816, -1000, 2766, -280, -1000, -1000, -1000,
	-1000, -1000, -1000, 4268, -1000, 1173, 316, -190, -1000, 1916,
	65, -1000, -1000, -1000, 1914, 1913, 1691, -1000, -1000, 1740,
	1181, 87, -1000, -1000, -1000, -1000, -1000, -1000, 1827, 1741,
	1395, -341, -1000, 2198, -1000, 1376, 1376, 1376, 35464, 2040,
	937, -1000, -1000, -1000, -1000, 2039, 2032, 485, 1390, 1388,
	-1000, 1683, 20896, 25936, 25376, 1004, -1000, 1185, -1000, -1000,
	-1000, 2781, -1000, -1000, 2781, -1000, -1000, -1000, 35464, 3708,
	2190, -1000, 2188, 2467, 296, 2187, 2186, 35464, 1861, -1000,
	2601, 35464, 562, 2595, -1000, -1000, -1000, -1000, -1000, 339,
	-1000, 35464, -1000, -1000, 1245, -1000, 19776, -1000, -1000, 1174,
	-1000, 1911, 1910, -1000, 65, 1908, 5172, -1000, -1000, 2567,
	1898, -1000, 35464, 936, 936, 2816, 35464, 6853, -1000, -1000,
	8543, 2182, -1000, 8543, -1000, -1000, -1000, -1000, -1000, 2176,
	2590, -1000, -1000, -1000, -1000, -1000, -1000, 8543, 8543, -1000,
	-1000, 521, 10794, -296, 173, -1000, -1000, -1000, -282, 1897,
	-1000, -1000, 2765, 1881, 1837, 35464, -1000, 929, 929, 926,
	-1000, -1000, -54, -1000, -1000, -1000, 1845, -1000, 1831, -2,
	-1000, 116, 8543, -282, -182, -1000, -1000, -190, -1000, 293,
	-1000, -1000, 314, -1000, -1000, 202, -1000, -1000, 1719, 469,
	-1000, -1000, -1000, 1879, 1588, 1847, 24256, 19776, 20336, 1874,
	-1000, 37706, 13053, 149, 37706, 848, 1385, -1000, 1681, -1000,
	1679, -1000, 2781, 1004, 1185, -1000, -1000, 1238, -1000, -1000,
	-1000, -1000, 3708, -1000, -1000, 1566, 10223, -1000, -1000, 1872,
	20336, 638, 1389, 1381, 640, 2175, -1000, 342, 2809, -1000,
	-1000, -1000, 716, 1510, 1508, -1000, 35464, -1000, 24256, 24256,
	317, 317, 24256, 24256, 2171, 519, -1000, -1000, 10223, -1000,
	-1000, -1000, -1000, 1376, 1235, -1000, -1000, -1000, -1000, -1000,
	-1000, 1741, -1000, -1000, 2742, -1000, -1000, 1801, 35464, 1801,
	24816, -1000, 2764, 2760, 1801, 886, -1000, -321, 35464, 35464,
	-284, 1676, -1000, 1860, 26, -1000, -1000, 890, -286, 10,
	31, -1000, -1000, -1000, 2025, -1000, 511, -1000, -1000, -1000,
	886, -284, 35464, -1000, 318, -1000, -1000, 465, 1858, -1000,
	-1000, 197, -1000, -1000, -1000, -1000, -1000, 96, -1000, 1378,
	1161, -1000, 2170, 8543, -1000, -1000, -1000, -1000, -1000, 493,
	37654, -1000, 858, -1000, -1000, -54, 493, 401, 224, -1000,
	1672, -1000, -1000, 2816, -1000, -1000, -1000, 3191, -1000, -1000,
	-1000, -1000, -1000, -1000, 1850, 1849, -1000, -1000, -1000, -1000,
	-1000, 1668, 2162, -131, 2675, -1000, -1000, 2161, 1157, 1131,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1129, 1116, 24256,
	-1000, -1000, 3191, 19776, 1376, -1000, -1000, 1112, 1077, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2159, -1000, -1000, 2755,
	-1000, 1848, 530, 9, 31, -1000, 2754, 22, 2753, 2752,
	-1000, -1000, 408, -273, -4, -11, -14, -1000, -1000, -1000,
	8543, -1000, 2626, -1000, 141, -1000, 53, -1000, -1000, -1000,
	1847, 1846, -1000, 24256, 2622, 1797, 295, 2750, 37706, -1000,
	1376, -1000, 295, -1000, 246, -1000, 1369, -1000, 1657, -1000,
	2742, -1000, -1000, 2023, 8543, 2157, 1376, -178, 24256, 2446,
	2360, 2211, 2180, 1067, -1000, 19776, -1000, -1000, 23696, 35464,
	1837, -1000, 2156, 1651, 29, 14, 2748, -1000, 1837, 2746,
	1837, 1837, 1493, -1000, -6, -9, -16, -1000, -1000, -1000,
	-1000, 1844, -1000, -1000, -1000, -1000, 215, -1000, -1000, 2622,
	-1000, 2745, 444, -1000, 19776, -1000, -1000, -1000, 1608, -1000,
	-1000, -1000, 1640, -1000, 35464, 2476, -1000, 114, 1065, 215,
	317, 215, 317, 215, 317, 215, 317, 142, -1000, -1000,
	-1000, 1064, -1000, -1000, 2672, 19216, 6, -1000, -1000, -1000,
	1843, -1000, 1837, -1000, -1000, 408, -1000, -1000, -1000, -1000,
	-1000, 1376, 1830, 230, -1000, -1000, -1000, 23136, 297, 349,
	335, -1000, 496, -1000, -1000, -1000, 519, -1000, -1000, 2475,
	2473, 2790, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 35464, -1000, 35464, -1000, 1056, -1000, -1000, -1000,
	1179, -1000, -1000, -1000, -1000, -1000, 1606, -1000, 35464, -1000,
	35464, 308, 1605, 10223, 2144, 10223, 2142, 312, 2140, -1000,
	-1000, 2808, -1000, 2791, 718, 718, 215, 215, 215, 215,
	-1000, 880, -1000, 1347, -1000, 22576, 35464, -1000, -1000, 1052,
	2139, 2744, -1000, 2819, 35464, 2695, 35464, 2135, 1253, 10223,
	-1000, -1000, -1000, 1694, 346, -1000, 35464, 6293, -1000, 1172,
	-1000, -1000, 481, 309, -1000, 1033, -1000, 1013, 22016, 1600,
	2435, -1000, -1000, -1000, -1000, -1000, 1801, 35464, 997, -1000,
	35464, 300, -1000, -1000, -1000, 989, -1000, -1000, -1000, -1000,
	481, 2507, -1000, 1599, -1000, -1000, 37489, 618, -1000, -1000,
	37489, 304, -1000, 464, 2126, -1000, -1000, 987, -1000, 35464,
	660, 8543, -1000, 304, 37706, -1000, 8543, 950, -1000, 37706,
	938, -1000, -1000,
}

var yyPgo = [...]int{
	0, 157, 2844, 236, 153, 3410, 67, 237, 209, 207,
	235, 3409, 3408, 2617, 2616, 3407, 3401, 3395, 3394, 3393,
	3391, 3390, 3389, 3388, 3387, 3385, 3384, 3383, 3382, 3380,
	3379, 3378, 3377, 3376, 3375, 3374, 3373, 3372, 3368, 234,
	3365, 3364, 3363, 3362, 3361, 3359, 3357, 3355, 3353, 3351,
	3325, 3324, 3323, 3322, 3321, 3319, 3306, 3304, 3302, 3300,
	3299, 3298, 3297, 3296, 3294, 3293, 3292, 3291, 3289, 3287,
	3285, 205, 3281, 2611, 3280, 3279, 3278, 3277, 3276, 3274,
	3272, 220, 3270, 3268, 3267, 3266, 3265, 3264, 3263, 3261,
	3255, 3253, 3245, 218, 3244, 3242, 3241, 3238, 3236, 3233,
	213, 3232, 151, 192, 3229, 3228, 3227, 3221, 3219, 230,
	208, 63, 3218, 45, 3217, 212, 3216, 129, 3214, 126,
	3213, 3212, 3210, 3209, 3206, 3205, 3204, 3202, 3201, 3198,
	3196, 3195, 3192, 3190, 3189, 3187, 79, 3186, 249, 3184,
	64, 3182, 3181, 108, 163, 177, 242, 2461, 248, 243,
	165, 150, 78, 3179, 2623, 3176, 142, 225, 138, 26,
	3174, 156, 3173, 137, 46, 42, 238, 121, 50, 136,
	106, 3172, 217, 94, 91, 3169, 3165, 170, 244, 184,
	3164, 118, 3163, 3162, 3161, 3160, 193, 171, 3159, 3158,
	122, 3156, 3154, 115, 3153, 65, 188, 146, 187, 3152,
	117, 104, 112, 105, 3151, 3150, 81, 3148, 3147, 3146,
	3140, 161, 3138, 3137, 128, 61, 3136, 3134, 3132, 60,
	3131, 24, 3126, 54, 3125, 3122, 3121, 3106, 3102, 3101,
	3100, 3099, 3097, 3096, 3095, 66, 3094, 3093, 15, 16,
	18, 3092, 23, 3090, 147, 3086, 3082, 3081, 76, 75,
	3080, 80, 4, 3079, 216, 110, 89, 132, 3078, 413,
	3077, 3074, 3073, 141, 3072, 391, 3071, 3070, 3068, 3067,
	3065, 96, 3064, 211, 47, 3063, 84, 116, 3062, 36,
	43, 189, 201, 3061, 3060, 3059, 123, 194, 102, 30,
	0, 3058, 140, 3057, 3056, 3054, 240, 3053, 224, 190,
	148, 199, 261, 149, 3052, 3051, 55, 3050, 143, 82,
	48, 119, 11, 19, 186, 3049, 1057, 162, 3047, 200,
	3044, 173, 1, 133, 3040, 3038, 28, 278, 3037, 3035,
	3034, 107, 3029, 3023, 100, 68, 3022, 3021, 3020, 33,
	3019, 34, 25, 3018, 85, 3017, 239, 3016, 181, 125,
	164, 158, 135, 214, 226, 73, 69, 3014, 1662, 134,
	87, 17, 3013, 223, 3012, 176, 99, 3011, 88, 3005,
	232, 348, 202, 3004, 167, 8, 41, 32, 3003, 9,
	3002, 130, 197, 3000, 2997, 21, 44, 2996, 29, 2982,
	2979, 2978, 2977, 5, 2976, 2975, 2973, 2, 7, 2971,
	3, 206, 2970, 2969, 2968, 2967, 40, 554, 2952, 109,
	159, 166, 2951, 83, 2950, 2949, 2947, 688, 2946, 241,
	2945, 2944, 2943, 2941, 2940, 2939, 2938, 2937, 2936, 93,
	38, 2935, 2934, 2933, 2932, 71, 120, 2929, 2928, 2923,
	2922, 35, 160, 2919, 20, 2915, 31, 27, 37, 2914,
	114, 2910, 12, 172, 2909, 2907, 14, 2906, 2905, 10,
	13, 2904, 2901, 103, 2900, 86, 22, 145, 127, 2899,
	2898, 77, 210, 124, 2897, 2896, 233, 231, 198, 2895,
	139, 229, 246, 2893, 203, 2892, 2891, 2890, 2888, 2887,
	2884, 1352, 2883, 2882, 227, 56, 70, 98, 2880, 2879,
	2878, 72, 144, 97, 95, 53, 74, 2877, 92, 196,
	2876, 185, 2871, 2864, 90, 2863, 2862, 2861, 2860, 2858,
	175, 2852, 2851, 179, 219, 2850, 2849, 2848, 2846, 228,
	222, 2828,
}

//line mysql_sql.y:10265
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 519, 527, 527, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 107, 517, 517, 517, 518, 518, 104, 124,
	123, 126, 126, 125, 125, 122, 122, 118, 121, 121,
	120, 120, 119, 114, 116, 116, 115, 117, 117, 105,
	93, 106, 462, 462, 461, 461, 460, 460, 414, 414,
	459, 459, 459, 458, 458, 458, 457, 457, 456, 456,
	455, 455, 453, 453, 454, 452, 451, 451, 451, 449,
	449, 449, 445, 445, 447, 446, 446, 448, 440, 440,
	443, 443, 441, 441, 441, 441, 444, 439, 439, 439,
	438, 438, 92, 92, 92, 360, 360, 91, 91, 374,
	374, 374, 374, 374, 372, 372, 372, 372, 372, 372,
	371, 371, 370, 370, 375, 375, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 82, 82, 82, 82,
	82, 87, 87, 87, 524, 524, 523, 523, 525, 525,
	525, 525, 526, 526, 85, 85, 85, 86, 369, 369,
	369, 83, 84, 84, 359, 359, 364, 364, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 368, 368, 368, 366, 366, 365, 365, 367, 367,
	76, 76, 76, 79, 78, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 77, 77, 77, 77, 77, 77,
	72, 72, 72, 72, 72, 71, 71, 73, 73, 356,
	356, 355, 88, 88, 89, 521, 521, 520, 522, 522,
	522, 522, 90, 96, 96, 96, 96, 96, 96, 96,
	95, 95, 98, 98, 97, 99, 81, 81, 81, 81,
	81, 81, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 487, 487, 487, 489, 489, 294, 295, 528, 297,
	293, 293, 293, 483, 483, 484, 485, 486, 486, 486,
	94, 11, 11, 11, 11, 11, 11, 11, 70, 75,
	243, 243, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 231, 231, 231, 226, 226, 226,
	226, 227, 227, 228, 228, 229, 229, 229, 229, 230,
	230, 287, 287, 248, 248, 248, 250, 250, 249, 247,
	245, 245, 245, 245, 245, 245, 246, 246, 246, 251,
	251, 68, 74, 74, 74, 500, 500, 69, 511, 511,
	417, 417, 308, 308, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	422, 423, 304, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 46, 49, 45, 45, 45, 345, 345, 44,
	529, 529, 282, 282, 57, 56, 48, 58, 59, 60,
	61, 62, 63, 43, 55, 55, 55, 55, 55, 55,
	55, 55, 66, 66, 434, 434, 531, 531, 531, 64,
	65, 416, 416, 416, 54, 53, 52, 51, 50, 50,
	42, 42, 41, 41, 47, 130, 131, 301, 301, 301,
	303, 303, 299, 530, 530, 388, 388, 302, 302, 40,
	40, 40, 40, 67, 300, 300, 281, 298, 298, 298,
	12, 12, 10, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 23, 24, 26, 353,
	353, 350, 25, 18, 17, 20, 16, 16, 19, 21,
	22, 22, 9, 9, 9, 9, 13, 13, 14, 151,
	151, 201, 201, 495, 495, 491, 491, 492, 492, 492,
	493, 493, 494, 494, 100, 428, 428, 428, 428, 428,
	428, 8, 173, 173, 427, 427, 427, 427, 427, 427,
	357, 357, 472, 472, 472, 473, 172, 172, 167, 167,
	429, 429, 323, 474, 474, 437, 437, 436, 436, 435,
	435, 170, 170, 171, 171, 154, 154, 110, 110, 442,
	442, 442, 442, 450, 450, 413, 413, 235, 235, 274,
	274, 275, 275, 144, 144, 145, 145, 145, 145, 145,
	145, 480, 480, 482, 482, 481, 169, 169, 165, 165,
	166, 166, 166, 164, 164, 163, 162, 162, 161, 159,
	159, 159, 160, 160, 160, 177, 177, 147, 147, 147,
	146, 146, 146, 146, 146, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 148, 148, 488,
	488, 488, 418, 418, 418, 425, 425, 256, 256, 257,
	257, 255, 255, 149, 149, 150, 150, 150, 150, 254,
	254, 253, 152, 152, 158, 157, 157, 153, 153, 153,
	153, 264, 264, 263, 263, 263, 263, 103, 108, 108,
	109, 176, 176, 262, 261, 261, 261, 175, 175, 174,
	174, 168, 168, 156, 156, 156, 156, 260, 155, 258,
	516, 516, 515, 515, 514, 512, 512, 512, 513, 513,
	513, 513, 464, 464, 464, 464, 464, 288, 288, 288,
	292, 292, 291, 291, 291, 291, 291, 296, 7, 7,
	7, 7, 7, 7, 30, 30, 30, 30, 30, 30,
	30, 30, 36, 185, 186, 37, 187, 187, 188, 188,
	189, 189, 190, 191, 192, 192, 192, 192, 35, 178,
	178, 179, 179, 180, 180, 181, 182, 182, 182, 184,
	183, 34, 34, 27, 137, 137, 138, 138, 138, 138,
	140, 140, 232, 232, 232, 139, 139, 141, 141, 141,
	496, 499, 497, 497, 501, 501, 501, 502, 502, 502,
	502, 503, 503, 28, 127, 132, 506, 506, 506, 505,
	505, 507, 507, 508, 508, 278, 278, 279, 279, 135,
	136, 136, 134, 129, 143, 143, 143, 143, 143, 128,
	133, 498, 504, 504, 504, 354, 354, 351, 352, 352,
	349, 348, 348, 348, 510, 510, 509, 509, 509, 289,
	289, 29, 344, 344, 346, 347, 347, 347, 338, 338,
	338, 338, 33, 342, 342, 343, 343, 343, 343, 343,
	339, 339, 341, 341, 337, 337, 337, 337, 337, 32,
	142, 142, 336, 336, 334, 334, 332, 332, 333, 333,
	331, 331, 331, 335, 335, 31, 31, 31, 112, 111,
	111, 111, 277, 277, 276, 276, 113, 38, 213, 213,
	402, 402, 402, 402, 402, 420, 420, 420, 403, 403,
	403, 404, 404, 404, 405, 405, 405, 405, 405, 419,
	419, 421, 421, 421, 376, 376, 377, 377, 377, 380,
	380, 394, 394, 395, 395, 393, 393, 400, 400, 399,
	399, 398, 398, 397, 397, 396, 396, 396, 396, 391,
	391, 390, 390, 378, 378, 378, 378, 378, 379, 379,
	379, 389, 389, 392, 392, 219, 219, 220, 220, 220,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 470, 470, 471, 222, 222,
	233, 233, 233, 233, 233, 233, 221, 221, 223, 223,
	202, 202, 200, 200, 193, 193, 194, 194, 195, 195,
	195, 199, 199, 198, 198, 198, 198, 196, 196, 197,
	197, 197, 197, 197, 197, 362, 362, 467, 467, 468,
	468, 463, 463, 463, 466, 466, 466, 466, 466, 469,
	469, 469, 465, 465, 203, 272, 272, 272, 290, 290,
	290, 290, 271, 271, 271, 218, 218, 217, 217, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 361,
	361, 305, 305, 306, 306, 242, 241, 241, 241, 241,
	241, 239, 240, 238, 238, 238, 238, 238, 237, 237,
	236, 236, 236, 340, 340, 234, 234, 225, 225, 225,
	224, 224, 224, 401, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 270, 270,
	270, 315, 315, 320, 320, 479, 479, 478, 204, 204,
	204, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	214, 214, 214, 385, 385, 385, 385, 386, 386, 386,
	386, 387, 387, 387, 383, 383, 384, 384, 324, 325,
	325, 426, 426, 381, 381, 382, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 433, 433, 433, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 490, 490, 490, 475, 475, 475, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 268, 268, 268,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 326, 326, 327, 327, 430,
	430, 430, 430, 430, 430, 431, 431, 432, 432, 432,
	432, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	313, 265, 265, 265, 328, 321, 321, 322, 322, 316,
	316, 316, 316, 316, 316, 316, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 317, 317,
	319, 319, 330, 330, 330, 329, 329, 329, 329, 329,
	329, 329, 216, 216, 216, 216, 310, 310, 310, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 206, 206, 206, 206, 210, 210, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 211, 211, 211, 211, 211, 209, 209, 209, 209,
	209, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 101, 102, 102, 208, 273, 273, 406,
	406, 409, 409, 407, 407, 408, 410, 410, 410, 411,
	411, 411, 412, 412, 412, 415, 415, 280, 280, 280,
	286, 286, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 1, 3, 3, 1, 2, 2,
	2, 1, 2, 2, 3, 4, 4, 6, 1, 1,
	1, 2, 4, 6, 1, 4, 1, 3, 3, 4,
	4, 4, 4, 3, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 2, 2, 0, 1, 4, 2, 4,
	1, 5, 3, 2, 1, 2, 2, 4, 4, 5,
	2, 1, 3, 4, 4, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 2, 4, 3, 3, 1, 1, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 1, 7, 4,
	1, 3, 2, 4, 5, 5, 6, 5, 5, 3,
	2, 2, 1, 3, 4, 3, 7, 5, 8, 2,
	2, 1, 3, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 2, 1, 3, 2, 1,
	2, 2, 1, 2, 3, 2, 3, 3, 3, 1,
	1, 7, 7, 8, 8, 0, 4, 7, 0, 3,
	0, 2, 0, 1, 1, 1, 1, 4, 2, 2,
	3, 3, 4, 5, 3, 4, 4, 2, 2, 2,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 2, 5, 5, 0, 2, 7,
	0, 1, 0, 1, 5, 5, 3, 3, 2, 4,
	4, 4, 4, 4, 1, 1, 1, 3, 3, 1,
	1, 1, 6, 8, 0, 1, 1, 1, 1, 5,
	5, 0, 1, 1, 3, 3, 3, 4, 6, 7,
	4, 4, 7, 8, 3, 3, 3, 0, 2, 2,
	0, 2, 2, 1, 1, 1, 1, 0, 1, 4,
	4, 5, 4, 3, 1, 3, 1, 1, 3, 5,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 4, 1,
	3, 1, 4, 6, 6, 4, 4, 4, 3, 6,
	3, 5, 1, 1, 2, 2, 11, 8, 9, 1,
	3, 2, 4, 0, 2, 0, 1, 1, 1, 1,
	0, 1, 0, 1, 4, 2, 1, 5, 4, 4,
	2, 5, 1, 3, 2, 1, 5, 4, 4, 2,
	0, 5, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 5, 3, 4, 6, 4,
	5, 2, 3, 1, 3, 6, 0, 3, 0, 1,
	2, 4, 4, 0, 1, 3, 1, 3, 3, 0,
	1, 1, 0, 2, 2, 0, 2, 3, 3, 3,
	1, 3, 3, 3, 3, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 7, 7, 1,
	1, 1, 0, 1, 1, 1, 1, 0, 2, 0,
	3, 0, 2, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 3, 1, 1, 1, 4, 4, 4,
	3, 2, 2, 2, 3, 2, 3, 4, 1, 3,
	4, 0, 2, 1, 1, 2, 2, 0, 1, 2,
	4, 1, 3, 1, 3, 2, 3, 1, 4, 3,
	0, 1, 1, 2, 5, 2, 2, 2, 0, 2,
	3, 3, 0, 1, 3, 1, 3, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 7, 1, 1, 7, 1, 3, 0, 1,
	1, 3, 1, 3, 0, 1, 1, 1, 12, 1,
	3, 0, 1, 1, 3, 1, 1, 2, 4, 1,
	1, 9, 8, 7, 1, 2, 2, 3, 3, 3,
	0, 4, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 4, 1, 1, 3, 4, 3, 0, 1, 1,
	1, 0, 2, 7, 8, 8, 0, 3, 3, 0,
	2, 0, 3, 0, 5, 1, 3, 0, 3, 3,
	0, 2, 9, 6, 0, 2, 2, 3, 3, 4,
	4, 1, 0, 2, 2, 1, 3, 2, 1, 3,
	2, 1, 3, 2, 0, 1, 3, 4, 3, 1,
	1, 4, 1, 3, 1, 1, 1, 1, 0, 1,
	1, 1, 11, 0, 2, 3, 2, 3, 1, 1,
	1, 3, 3, 4, 0, 2, 2, 2, 2, 6,
	0, 4, 1, 1, 0, 3, 0, 1, 1, 2,
	4, 4, 4, 0, 1, 11, 9, 11, 2, 2,
	4, 5, 1, 3, 0, 3, 5, 10, 0, 2,
	0, 3, 2, 4, 3, 0, 2, 1, 0, 2,
	3, 0, 2, 3, 0, 3, 2, 4, 3, 0,
	1, 0, 1, 1, 0, 6, 0, 3, 5, 0,
	4, 0, 3, 1, 3, 4, 5, 0, 3, 1,
	3, 2, 3, 1, 2, 0, 4, 6, 5, 0,
	2, 0, 2, 4, 5, 4, 5, 1, 5, 6,
	5, 0, 3, 0, 1, 0, 1, 1, 3, 2,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 5, 4, 1, 3, 3, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 1,
	1, 1, 1, 7, 9, 7, 9, 2, 1, 7,
	9, 7, 9, 8, 5, 0, 1, 0, 1, 1,
	1, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 3, 1, 3, 5, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 2, 1,
	2, 2, 1, 1, 2, 2, 2, 3, 3, 2,
	2, 1, 5, 6, 4, 1, 1, 1, 5, 1,
	2, 0, 1, 1, 2, 5, 0, 1, 1, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 2, 2, 0, 3, 0, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	3, 5, 2, 2, 2, 2, 1, 1, 2, 5,
	6, 6, 6, 1, 1, 1, 1, 1, 4, 4,
	4, 0, 2, 0, 1, 1, 2, 4, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 1, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 5, 0, 1, 3, 0,
	1, 0, 2, 0, 1, 6, 8, 6, 5, 5,
	6, 6, 6, 6, 5, 6, 6, 6, 6, 6,
	6, 6, 6, 1, 1, 1, 4, 4, 6, 8,
	6, 4, 5, 4, 4, 4, 3, 4, 6, 6,
	7, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 8,
	4, 2, 3, 2, 4, 2, 2, 4, 6, 2,
	2, 4, 6, 4, 2, 0, 1, 2, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 1, 3, 0, 1, 1, 3, 3,
	3, 3, 3, 2, 1, 1, 3, 4, 3, 4,
	3, 4, 3, 4, 3, 4, 1, 3, 4, 4,
	5, 4, 5, 3, 4, 5, 6, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 1, 1,
	2, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 2,
	4, 4, 1, 2, 3, 5, 1, 1, 3, 0,
	1, 0, 3, 0, 3, 3, 0, 3, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -519, -527, -2, -5, 590, -1, -4, -102, -76,
	-7, -104, -105, -8, -100, -9, -10, -12, -80, -95,
	-97, -99, -98, -39, -11, -94, -71, -72, -82, -88,
	-91, -92, -93, -106, -101, -103, -144, -107, 583, -77,
	-78, -79, -30, -29, -28, -27, -127, -132, 589, 442,
	14, 491, -13, -14, -480, -15, 261, -293, -294, -295,
	-297, -528, -40, -41, -42, -50, -51, -52, -53, -54,
	-64, -65, -66, -43, -44, -45, -48, -46, -57, -56,
	-58, -59, -60, -61, -62, -63, -47, -130, -131, -67,
	-49, -69, -68, -74, -70, -75, -129, -134, 236, -73,
	76, -83, -84, -85, -86, -87, -89, -90, 368, 374,
	431, 582, 61, -145, -147, 593, 158, 159, 161, 162,
	-31, -32, -33, -34, -35, -36, -38, -37, 232, 16,
	524, -16, -19, -17, -20, -18, -25, -26, -24, -21,
	-23, -128, -22, -133, 256, 255, 38, 322, 323, 324,
	372, 254, 233, 15, 31, 42, 348, -146, 82, 234,
	-148, 12, 595, -6, -3, -2, -114, -118, -122, -125,
	-126, -123, -124, -4, -102, 116, 246, 584, -290, 364,
	585, 587, 586, 85, 93, -283, -285, 368, 374, 582,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 494, 569, 570, 571,
	572, 346, 347, 521, 273, 297, 399, 303, 310, 158,
	177, 171, 199, 191, 166, 277, 315, 278, 92, 161,
	477, 106, 454, 428, 164, 292, 294, 296, 299, 298,
	300, 302, 279, 349, 187, 182, 291, 275, 180, 280,
	40, 281, 204, 282, 283, 526, 450, 345, 456, 307,
	426, 181, 451, 295, 453, 212, 216, 468, 469, 175,
	176, 458, 471, 203, 206, 207, 208, 209, 210, 211,
	253, 43, 523, 265, 472, 214, 202, 198, 480, 311,
	309, 201, 174, 197, 276, 65, 218, 217, 219, 422,
	423, 424, 425, 284, 285, 362, 467, 194, 183, 350,
	167, 23, 475, 260, 455, 375, 286, 304, 312, 213,
	215, 267, 272, 525, 430, 271, 308, 473, 179, 264,
	293, 259, 476, 168, 377, 287, 162, 301, 470, 479,
	64, 390, 173, 165, 250, 159, 269, 274, 13, 288,
	289, 290, 314, 313, 305, 195, 266, 200, 185, 172,
	196, 160, 268, 478, 391, 580, 348, 409, 193, 190,
	270, 243, 474, 457, 163, 413, 392, 188, 316, 576,
	577, 578, 363, 344, 317, 318, 186, 257, 448, 449,
	319, 321, 419, 337, 393, 429, 400, 394, 225, 325,
	460, 462, 205, 579, 326, 327, 328, 452, 329, 330,
	331, 332, 367, 56, 58, 94, 96, -367, -365, -290,
	582, 374, 368, 348, -187, -290, 594, -154, 39, -200,
	-290, -154, -73, -14, -13, -146, -147, -200, 240, -298,
	24, 426, -81, 427, 236, 82, -290, -9, -93, -8,
	-100, -71, -144, 431, -296, -290, 322, 322, -296, 240,
	-290, 271, 407, -417, 246, -371, -344, 272, -370, -346,
	-373, -347, 32, 232, 234, 233, 268, 16, 372, 242,
	14, 12, 373, 254, 25, 26, 28, 15, 374, 376,
	29, 377, 380, 381, 382, 42, 385, 386, 261, 85,
	93, 88, 279, -186, -290, -322, -316, 113, 262, -318,
	-311, -312, -314, -459, -453, -309, 82, 140, 141, 148,
	114, -313, -401, 36, 116, 533, 492, -266, -267, -268,
	-269, -270, -290, -454, -452, 88, 97, 100, 103, 104,
	102, 101, 152, 184, 99, 89, 153, -147, 85, -475,
	541, -284, 562, 569, 570, 571, 572, 561, 61, -424,
	-432, 239, -430, 151, 189, 257, 185, 14, 146, 419,
	186, 538, 558, 494, 542, 565, 535, 536, 530, 531,
	532, 534, 543, 545, 557, -433, 553, 563, 564, 551,
	566, 567, 568, 87, 86, 556, 555, 544, 539, 540,
	546, 529, 537, 547, 548, 554, 559, 560, 356, 106,
	357, 358, 484, 349, 359, 246, 426, 70, 360, 361,
	362, 363, 364, 491, 365, 71, 366, 355, 261, 409,
	367, 188, 205, 496, 495, 497, 488, 485, 483, 486,
	487, 489, 490, 549, 550, 552, -108, -109, 574, -163,
	-164, -259, 11, 6, 7, 8, 9, -517, 428, 525,
	163, 160, -358, 163, 112, 168, 167, -358, 325, 267,
	369, -137, 243, 346, 409, 329, 94, 271, -338, -336,
	-419, 319, 315, 241, -138, 251, 250, 107, 484, 239,
	383, 109, 310, 56, 58, -491, -492, 229, 230, 231,
	-482, 517, -481, -290, 358, 96, 27, 240, 369, 267,
	462, 460, 461, 463, 464, 465, 466, -55, -434, -416,
	457, 456, -302, 449, 455, 447, 459, 450, 347, 331,
	330, 232, 591, 518, -280, 393, 429, 481, 482, 370,
	430, 468, 470, 451, 106, 192, 189, 243, 240, 346,
	484, 409, 94, 329, -491, 160, 468, 470, 271, 407,
	41, -364, 419, -363, -365, 469, 480, 86, 87, 467,
	-280, 106, 448, 448, -164, -259, -163, -145, -147, -103,
	-480, 241, 346, 409, 271, 242, 240, 243, 484, 239,
	322, 369, 267, 329, 94, -418, -488, 32, -425, 226,
	227, 228, 33, 34, -1, 120, 595, -316, -316, -6,
	596, -6, -316, -290, -290, 155, -206, -210, -207, -209,
	-208, -212, -211, 189, 190, 151, 193, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 206, 207, 208, 209,
	210, 211, 204, 31, 205, 257, 185, 186, 187, 188,
	212, 171, 191, 522, 220, 172, 221, 173, 222, 174,
	223, 175, 176, 224, 177, 180, 181, 182, 183, 179,
	154, 82, 154, 88, -170, 263, -200, 154, -170, -164,
	-163, -164, -200, -271, -290, 428, 123, -81, -81, 427,
	-483, -484, -485, -487, 236, 427, 426, 154, 279, 17,
	-296, -296, 80, -200, -346, 271, -371, -344, 36, 79,
	155, 244, 155, 79, 82, 370, 346, 409, 371, 484,
	240, 383, 243, 271, 384, 346, 409, 240, 243, 484,
	271, 346, 240, 243, 409, 271, 384, 447, 448, 243,
	27, 375, 378, 379, 448, -438, 480, 155, 112, 109,
	110, 111, -316, 130, -329, 123, 124, 125, 126, 127,
	128, 129, 137, 136, 147, 140, 141, 142, 143, 144,
	145, 146, 138, 139, 133, 113, 131, 135, 132, 115,
	-147, -316, -322, 61, -314, -314, -314, -314, -401, -320,
	-316, 82, 82, 154, 101, 88, -316, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, -431,
	82, 82, -326, -327, 82, 82, -309, -271, 82, 88,
	88, 82, 82, 82, 88, -327, -327, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, -164, 155, 82,
	-110, 39, -166, 22, -148, -147, 21, 32, 33, 32,
	33, 32, 33, 32, 33, 97, 473, 524, 166, 167,
	168, -185, -290, -187, -178, -290, 243, -138, -334, 246,
	-334, -334, -334, -334, -334, 242, -334, 240, 240, 240,
	-334, 491, 123, 123, 59, -493, 170, 155, -482, -169,
	82, -301, 131, 135, -301, 24, 269, 269, 269, -301,
	309, -529, -530, 17, 133, -299, -530, -299, -299, -301,
	-531, 242, 458, 43, 270, 269, -165, -166, -165, 452,
	448, -388, 453, 454, -303, -530, -302, -301, -301, -302,
	-301, -301, -301, 240, 243, 484, 329, 592, -529, -529,
	31, 31, -417, -200, -417, 518, -281, -290, -417, -417,
	-417, -494, 245, -524, -523, 471, -526, 473, 160, -365,
	160, -365, -346, 271, 271, 155, 123, 24, -366, 123,
	134, -365, -365, -366, -366, -221, 41, -289, 151, -290,
	88, -221, 41, -521, -520, -200, -165, -148, -147, 83,
	83, 83, -417, -417, -417, -417, -417, -419, -417, -417,
	-417, -296, -178, -187, 246, -417, -417, -149, -150, 142,
	-316, -290, -149, -3, -116, -115, 117, 118, 120, 585,
	364, 584, 588, 582, -365, 41, -412, 391, 390, -406,
	-408, 82, -407, 82, -407, -407, -407, -407, -407, -407,
	-407, -407, -407, 82, 82, -409, 82, -409, -409, -406,
	-410, 82, -410, -411, 82, -411, -410, -290, -321, -322,
	-290, 39, -427, 61, -144, 82, 31, 82, -290, -428,
	61, -144, 82, 31, -165, -110, -166, 154, 97, 88,
	-81, 83, 155, -486, 103, 104, -489, 203, 195, -290,
	-96, 88, -7, -8, -9, -10, -39, -71, -144, -455,
	-453, 82, 32, 418, 79, 17, -372, 240, 484, 369,
	267, 243, 346, -370, -353, -350, -348, -289, -346, -349,
	-348, -375, -271, 448, -111, 432, 321, -316, -316, -316,
	-316, -316, 102, 113, 344, 103, 104, -311, -330, 32,
	317, 318, -312, -312, -312, -312, -312, -312, -312, -312,
	-312, -312, -312, -312, -319, -328, -401, 82, 133, 131,
	135, 132, 115, -314, -314, -312, -312, 83, 155, -479,
	-478, 117, -316, -316, -290, -476, -477, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 360, 355,
	361, 359, 349, 367, 362, 363, 188, 515, 516, 509,
	510, 511, 512, 513, 514, -321, -321, -316, -476, -321,
	-265, 33, 32, -322, -322, -322, 83, -316, -490, 342,
	341, 343, -167, -290, -321, 83, 83, 83, 97, -322,
	-322, -321, -312, -321, -477, -265, -265, -322, -322, -265,
	-265, -265, -265, 142, -265, -265, -265, -265, -265, -265,
	-265, -265, 83, 83, 83, -165, -109, -436, -435, -316,
	41, 575, -110, -316, -162, -161, -316, -518, 88, 474,
	475, 164, 167, 166, 35, 82, 82, 154, -334, -200,
	113, -496, -290, -354, -351, -348, -290, -290, -344, -290,
	-290, -334, -334, -334, -200, -232, 53, 54, 55, -348,
	-139, 56, 57, -494, -481, 35, -168, -290, -255, 18,
	-314, -314, -348, 271, -529, -301, -301, -282, -281, -303,
	-298, -303, -303, -255, -530, -301, -301, -303, -299, -255,
	-290, 448, -255, -255, -388, -300, -290, -300, -334, -281,
	-282, -282, -200, -243, -244, 237, 353, 354, 235, 233,
	11, 234, -252, 310, -335, 492, -227, -228, 77, 42,
	-230, 395, 388, 273, 277, 92, 278, 428, 279, 242,
	281, 282, 283, 298, 300, 253, 284, 285, 286, 419,
	287, 159, 299, 288, 289, 290, 371, -222, 6, 332,
	41, 51, 52, 441, 440, 527, 524, 274, -496, -496,
	31, 31, -354, -290, -290, -157, -152, -156, -153, -158,
	-258, -260, -155, 82, -200, -147, -290, 155, 472, 474,
	475, -524, -366, -524, -366, 32, 418, -369, 418, 32,
	-344, -363, 468, 470, -359, 88, 419, -349, -368, 79,
	151, -435, -366, -366, -368, -368, 150, 155, -522, 473,
	474, 229, -110, -202, -200, -496, -353, -344, -290, -417,
	-202, -290, -290, 82, 36, -290, -290, -254, 155, -253,
	17, -291, -290, 35, 88, 154, -254, -117, -115, 119,
	-316, -6, 584, -316, -6, -6, -316, -6, -316, -415,
	392, 97, 97, -273, 88, -273, 97, 97, 97, 83,
	88, -357, 79, -429, -323, -474, 574, -172, 83, -167,
	-472, -473, -167, -171, -290, -429, -172, 83, -472, -110,
	-110, -290, 24, -81, -484, 154, 155, -168, -372, -352,
	-349, -374, 142, -290, -360, 155, 524, 599, 86, 244,
	-510, -509, 410, 83, 155, -439, 245, 491, 88, 597,
	225, 102, 344, 103, 104, -401, -322, -319, -314, -314,
	-312, -312, -317, 258, -317, 112, -316, -315, -478, 119,
	-316, 35, 155, 80, 154, 83, 83, 17, 17, 83,
	-316, 83, 83, 83, 83, 17, 17, -316, 83, 154,
	83, 83, 83, 83, 80, 83, 155, 83, 155, -322,
	-316, 83, 83, -316, -316, -316, -322, 83, -316, -316,
	-316, -316, -316, -316, -316, -316, -382, 443, -382, -382,
	155, 83, 88, 155, 23, 155, -159, 37, 38, 165,
	168, 168, 167, -186, -188, -189, -190, -191, -192, 133,
	156, 157, -179, -180, -181, -182, -206, -271, 190, 193,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 206,
	207, 208, 209, 210, 211, 204, 205, 257, 185, 186,
	187, 188, 212, 171, 191, 172, 173, 174, 175, 176,
	177, 180, 181, 182, 183, 179, -290, -200, -169, 36,
	-499, 396, -511, 155, 41, -509, 484, -135, 321, -337,
	80, -142, 17, -200, -200, -200, -213, 35, 17, -151,
	-201, -290, 82, 83, 155, -316, -345, 80, -290, -282,
	-255, -255, -200, -290, -255, -255, -301, -303, -303, -299,
	154, -281, -169, 155, -199, -287, -196, -198, 248, -306,
	-197, 251, -468, 249, 247, 107, 252, 306, 108, 242,
	-287, -287, 248, -231, 244, 35, -287, -246, 242, 306,
	249, 21, -245, 242, 108, -290, 248, 252, 247, -286,
	123, -280, 150, 244, 43, 371, -286, 528, -286, -286,
	-286, -286, -286, -286, -286, 280, 280, -286, -286, -286,
	-286, -286, -286, -286, -286, -286, -286, -286, 160, -286,
	-286, -286, -286, -286, -286, 82, 275, 276, -500, 396,
	31, 352, 352, -511, 31, -143, 346, 31, -261, -262,
	-263, -264, 68, 72, 74, 69, 70, 71, 75, 31,
	155, -288, -292, 35, -290, 88, -288, -147, -152, -157,
	-288, 82, -523, -525, 476, 473, 479, -368, -368, 244,
	82, 123, -368, -368, 41, -289, -520, 480, 474, -177,
	24, 155, 79, -202, -179, -187, -255, -150, -152, -290,
	88, -290, 142, -255, 120, -6, 118, -121, -120, -119,
	121, 582, 588, 120, 120, 120, 83, 83, 83, 155,
	83, 83, 83, 155, 83, 155, -442, 453, 40, 155,
	82, 83, 155, 61, 155, 123, 83, 155, 83, 61,
	-177, 154, 428, -290, -453, 83, -374, 155, 244, 154,
	154, -350, 374, -289, -352, 21, 524, -271, 39, -277,
	-276, 88, 597, 83, -317, -317, 112, -314, -311, 83,
	120, -316, 118, -204, -206, 390, 391, -205, -211, 151,
	189, 257, 188, 187, 185, 390, 391, -221, -290, -316,
	-316, 83, -316, -316, 17, -290, -221, -312, -316, -164,
	83, -381, -382, -381, 83, 83, 83, 83, -381, 83,
	83, 83, 83, 83, 83, 83, 83, 82, -435, -442,
	-316, -316, -161, -160, 44, 168, 382, 83, 155, -271,
	83, 155, -206, -169, 35, -502, 455, 398, 408, -286,
	-308, -307, 348, 42, -422, 419, 404, 405, -351, 271,
	-290, -508, 95, 123, 79, 336, 337, 338, 339, -332,
	-333, -331, -335, -496, 82, 82, 82, -402, 326, -206,
	-200, -151, -290, 17, 155, -495, 154, -1, -290, -344,
	-301, -255, -530, -255, -301, -301, -303, -290, 35, -244,
	-203, -271, -197, -467, -468, -334, -290, 108, -467, 108,
	82, -203, -271, -271, -247, -300, -271, -290, -290, -290,
	-250, -249, -271, -290, -290, -290, 108, 108, -226, 41,
	48, 49, 50, -286, -286, 192, -229, 41, 418, 420,
	421, 97, 97, 97, 97, 88, 88, 88, -286, -286,
	97, 88, -292, 88, -469, 167, 45, 46, 97, 97,
	97, 97, 41, 88, -233, 41, 291, 295, 292, 293,
	294, 88, 97, 41, 97, 41, 97, 41, -290, 82,
	-470, -471, 88, -502, -286, 352, -365, 123, -308, -507,
	321, -136, 92, 32, -173, 237, 234, -496, -356, -355,
	-271, -156, -156, -156, -156, 68, 68, 68, 73, 68,
	73, 68, -263, -356, -158, -169, -292, 83, -516, -515,
	-514, -512, 76, 245, 77, -321, 473, 477, 478, -352,
	-304, 88, -359, 15, -200, -200, -421, 301, 302, 83,
	-257, 19, 154, -257, 116, -6, -117, -119, -316, -6,
	-316, 584, 364, 585, 88, 97, 97, -450, 438, 433,
	435, 108, -323, -437, -436, 61, -144, -167, -429, -473,
	-435, -290, 61, -144, -429, -290, 97, 17, -349, -344,
	142, 142, -290, 375, -360, 88, 397, 88, 240, 598,
	155, 123, -277, -311, -316, 83, -214, 176, 175, -214,
	83, -407, -407, -406, -409, -406, -214, -214, 83, 83,
	24, 83, 83, 83, -316, 83, 83, 155, -426, 493,
	-381, -381, -381, -381, -381, -381, -381, -381, -381, -381,
	-381, -381, -381, -325, -324, 263, -450, 45, 46, 88,
	88, -190, -206, 238, -181, 41, 35, -144, -503, 92,
	-497, 88, -290, -504, 92, 399, 153, 350, 41, 400,
	401, 416, 345, 97, 97, 406, -498, -290, -143, -506,
	52, 123, 88, -200, -331, -280, 150, 282, 329, -193,
	-194, -195, -203, -196, -198, -193, -193, -403, 328, 21,
	97, 141, -170, 80, 154, -152, -201, -290, 142, 83,
	-255, -290, -255, -255, -301, -144, -248, 45, 47, -206,
	-465, -290, -463, -465, -290, -463, -463, -334, -316, -248,
	-203, 244, 31, 234, -251, 334, 335, -361, 307, 113,
	-361, 155, -159, -290, -221, -221, 31, 88, 88, -202,
	83, 155, 123, -503, -497, 123, -366, 88, -504, -508,
	123, 88, 155, -173, -173, -255, 155, 123, -175, -174,
	79, 80, -176, 79, -174, 68, 68, -255, -514, -513,
	24, -468, -468, -468, 83, 83, -256, 20, 21, 142,
	-256, 120, 118, 120, 120, -290, 83, 83, -413, 576,
	-446, -448, 433, 21, 21, 15, 83, -429, -429, -344,
	-360, 419, -200, -276, 88, 598, -316, 83, -316, 83,
	88, -164, 21, -413, -183, -206, -309, -144, -140, 524,
	88, -501, 410, 88, 88, 97, 41, 97, 153, 402,
	-423, -136, -505, 92, 123, 597, 82, -286, -286, -286,
	-290, 83, 155, 83, 83, -404, 262, 97, 141, 97,
	141, 97, -288, -152, -290, -255, -495, 154, -255, -255,
	-271, -218, -217, -215, 102, 113, 41, 388, -216, 92,
	150, 296, 299, 298, 274, 297, -242, -305, 79, 394,
	334, 335, -335, 247, 107, 108, 376, -306, 82, 82,
	80, 316, 82, 82, -465, 83, -248, -271, 41, -251,
	41, 307, -249, 150, -221, 83, -471, 88, -501, 88,
	-368, -506, 88, -496, -164, -355, -435, -316, 82, -316,
	82, 68, 11, 19, -316, -322, 246, -6, 585, 364,
	-235, 577, 88, 21, 88, -444, 88, -356, -113, -440,
	-388, 83, 83, -381, -384, -383, -387, 439, 308, 446,
	-322, -235, 523, -140, -141, 60, 480, 21, 524, 349,
	41, 97, 41, 403, 88, 103, 104, -278, -279, 88,
	-339, -341, -271, 82, -221, -223, -289, 151, 88, -219,
	-220, -252, -335, -195, -112, -111, -219, -405, 159, 97,
	141, 97, 97, -255, -255, -215, 102, -312, 88, -223,
	-224, 41, 295, 291, 123, 123, -225, 41, 275, 276,
	-234, 82, 306, 15, 192, 108, 108, -200, -339, -339,
	-466, 336, 337, 338, 340, 339, -466, -339, -339, 82,
	-362, -361, -312, -286, 150, -505, -165, -168, -464, -290,
	247, 21, 21, -290, -290, -274, 578, 97, 88, 435,
	-414, 579, -449, 438, -443, -441, 433, 434, 435, 436,
	83, -386, 115, 402, 406, -310, -313, 97, 100, 184,
	153, -274, -184, -290, 306, 88, 397, 88, 349, 598,
	155, 123, 83, 155, -406, -316, -376, 263, 155, -252,
	-280, -113, -376, -420, 167, 327, 524, 97, 141, 97,
	-164, 88, 88, 97, 82, -430, 31, -340, 82, 83,
	83, 83, 83, -339, -221, -286, 83, 83, 155, 82,
	21, 88, -451, 245, -447, -448, 437, -441, 21, 435,
	21, 21, -385, -386, 406, -310, -313, 574, 444, 444,
	444, 35, 375, 419, -279, 88, -342, -341, -159, 83,
	-377, 315, 21, -252, -286, -377, 327, 97, 141, 97,
	-165, 83, -316, -326, -286, -237, -236, 520, -339, -342,
	80, -342, 80, -342, 80, -342, 80, 83, -221, -290,
	247, -275, -290, -444, -458, 82, 97, -446, -445, -447,
	21, -444, 21, -444, -444, 112, 445, 445, 445, 88,
	-343, 253, 92, 524, 334, 335, -159, 21, -378, 308,
	309, -379, -392, 311, -221, 97, 83, -290, -241, -239,
	-240, 79, 451, 304, 305, 83, -466, -466, -466, -466,
	-242, 83, 155, -462, 31, 83, -457, -456, -272, -452,
	-290, 438, 439, 88, -444, -385, -286, 88, 333, -271,
	82, -390, 312, 82, -388, 82, -388, 108, 337, -361,
	-240, 79, -239, 79, 16, 15, -342, -342, -342, -342,
	-290, -461, -460, -459, 83, 155, 154, 97, -290, -375,
	-380, 313, 97, -312, 82, -312, 82, -389, 310, 82,
	-238, 301, 302, 31, 167, -238, 155, 123, -456, -290,
	83, -394, 82, 21, 83, -375, 83, -375, 82, 123,
	-312, 102, 41, 303, -460, 41, -316, 154, -395, -393,
	263, -379, 83, 83, 83, -375, 97, 83, -290, 83,
	155, -290, -391, 314, 83, -393, -396, 61, 97, -400,
	-397, 82, -252, 265, 133, -400, -252, -399, -398, 313,
	266, 82, 83, 155, -290, 262, 82, -322, -398, -397,
	-322, 83, 83,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 260,
	261, 262, 818, 819, 820, 821, 822, 823, 0, 0,
	0, 0, 592, 593, 0, 562, 0, 0, 0, 0,
	0, 0, 453, 454, 455, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 351, 352, 353, 354, 355, 356, 357, 0, 285,
	281, 206, 207, 208, 209, 210, 292, 293, 430, 0,
	0, 0, 0, 673, -2, 53, 274, 0, 265, 265,
	824, 825, 826, 827, 828, 829, 830, 831, -2, 605,
	0, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 340, 341, 342, 336, 337, 339,
	338, -2, 0, 605, 0, 0, 0, 693, 0, 0,
	710, 732, 23, 0, 7, 9, 10, 11, 12, 13,
	14, 15, 16, 17, 18, 0, 0, 19, 0, 19,
	0, 0, 0, 1168, 1169, 1170, 1171, -2, 1661, 1639,
	1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830,
	1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840,
	1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850,
	1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860,
	1861, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682,
	1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702,
	1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722,
	1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 0, 258, 256,
	1639, 1661, 1727, 1760, 0, 836, 0, 651, 0, 656,
	1122, 651, 286, 594, 595, 693, 693, 560, 0, 322,
	0, 1652, 326, 0, 0, 0, 557, 316, 317, 318,
	319, 320, 321, 0, 0, 817, 0, 0, 312, 0,
	280, 1718, 0, 0, 0, 0, 0, 0, 150, 942,
	152, 944, 156, 163, 0, 0, 168, 169, 172, 173,
	174, 175, 176, 0, 180, 0, 182, 185, 0, 187,
	188, 0, 191, 192, 193, 0, 203, 204, 205, 945,
	946, 947, -2, 81, 834, 1573, 1457, 0, 1464, 1465,
	1476, 1487, 1246, 1247, 1248, 1249, 0, 0, 0, 0,
	0, 1256, 1257, 0, 1273, 1825, 0, 1263, 1264, 1265,
	1266, 1267, 90, 102, 103, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 0, 1517, 1518, 1519, 1430, 1233, 1168, 0,
	1833, 0, 1853, 1858, 1859, 1860, 1861, 1852, 0, 0,
	1415, 0, 1405, 0, 0, -2, -2, 0, 0, 1786,
	-2, 1830, 1849, 1857, 1834, 1856, 1827, 1828, 1822, 1823,
	1824, 1826, 1835, 1837, 1848, 0, 1844, 1854, 1855, 0,
	0, 0, 0, 104, 105, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1421, -2,
	1423, 1424, 1426, -2, 1428, 1429, -2, 1432, 1433, 1434,
	-2, -2, 1437, 1438, 1439, 1440, 1441, 1442, 1445, -2,
	-2, -2, -2, 1417, 1418, 1419, 1420, 1409, 1410, 1411,
	1412, 1413, 1414, -2, -2, -2, 693, 768, 0, -2,
	0, 0, 0, 715, 718, 721, 724, 0, 54, 55,
	275, 276, 264, 266, 0, 270, 0, 263, 0, 0,
	0, 0, 974, 974, 974, 974, 974, 974, 0, 974,
	0, 0, 0, 974, 864, 949, 950, 951, 972, 973,
	1020, 0, 0, 0, 0, 610, 606, 607, 608, 609,
	681, 0, 683, 686, 537, 537, 484, 0, 0, 0,
	537, 0, 498, 490, 0, 0, 0, 537, 0, 0,
	688, 688, 0, 540, 547, 537, 537, -2, 537, 537,
	537, 0, 0, 504, 505, 506, 490, 490, 509, 510,
	511, 522, 523, 548, 1597, 0, 0, 430, 0, 430,
	0, 430, 430, 430, 612, 1755, 1659, 1732, 1718, 0,
	0, 231, 1786, 236, 0, 1660, 1681, 0, 0, 1699,
	0, -2, 0, 302, 688, 0, 694, 0, 693, 0,
	0, 430, 430, 430, 430, 430, 1019, 430, 430, 430,
	0, 0, 0, 430, 430, 0, 0, 733, 734, 729,
	730, 731, 735, 736, 5, 6, 19, 0, 0, 0,
	0, 0, 0, 60, 59, 0, 1574, 1592, 1522, 1523,
	1524, 1579, 1526, 1583, 1583, 1583, 1583, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1583, 1583, 1583, 1583,
	1583, 1583, 0, 0, 1572, 1546, 1581, 1581, 1581, 1579,
	1576, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1586, 1586, 1589, 1589, 1586,
	0, 1455, 0, 0, 0, 0, 655, 0, 0, 688,
	-2, 0, 561, 323, 1172, 0, 0, 327, 328, 0,
	0, 343, 0, 346, 331, 332, 333, 0, 130, 0,
	314, 315, 0, 0, 282, 0, 0, 0, 431, 0,
	0, 0, 0, 0, 0, 160, 157, 164, 167, 177,
	184, 0, 196, 198, 201, 158, 165, 170, 171, 178,
	199, 159, 161, 162, 166, 200, 202, 179, 183, 197,
	181, 186, 189, 190, 195, 0, 131, 0, 0, 0,
	0, 0, 1463, 0, 0, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 1457, 0, 0, 1252, 1253, 1254, 1255, 1258, 0,
	1274, 0, 0, 0, 1516, 1520, 0, 1455, 1455, 0,
	1455, 1451, 0, 0, 0, 0, 0, 0, 1455, 1391,
	0, 0, 1393, 1406, 0, 0, 1395, 1396, 0, 1399,
	1400, 1455, 0, 1455, 1404, 1387, 1388, 0, 1451, 1451,
	0, 0, 1451, 1451, 1451, 1451, 1451, 1451, 1451, 1451,
	1451, 1451, 1451, 1451, 0, 0, 0, 688, 0, 0,
	676, 0, 657, 0, 712, 714, 0, 716, 717, 719,
	720, 722, 723, 725, 726, 56, 0, 0, 268, 0,
	273, 0, 833, 0, 0, 849, 974, 865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 974, 974, 974,
	0, 866, 0, 0, 0, 612, 611, 0, 682, 0,
	0, 741, 0, 0, 483, 0, 490, 537, 537, 496,
	497, 492, 491, 543, 544, 540, 0, 540, 540, 741,
	0, 516, 517, 518, 537, 537, 524, 689, 525, 526,
	540, 0, 545, 546, 741, 0, 0, 741, 741, 0,
	534, 535, 536, 0, 0, 974, 0, 553, 492, 492,
	1598, 1599, 0, 983, 0, 0, 0, 556, 0, 0,
	0, 0, 613, 211, 214, 0, 217, 0, 1755, 0,
	1755, 0, 224, 0, 0, 0, 0, 0, 0, 254,
	255, 0, 0, 0, 0, 245, 248, 1116, 1117, 939,
	940, 249, 250, 294, 295, 0, 657, 711, 713, 707,
	708, 709, 0, 0, 0, 0, 0, 430, 0, 0,
	0, 588, 0, 590, 0, 0, 0, 749, 743, 745,
	812, 90, 749, 8, 77, 74, 0, 19, 0, 0,
	19, 19, 0, 19, 259, 0, 1595, 1593, 1594, 1525,
	1580, 0, 1551, 0, 1552, 1553, 1554, 1564, 1565, 1566,
	1567, 1568, 1569, 0, 0, 1547, 0, 1548, 1549, 1550,
	1541, 0, 1542, 1543, 0, 1544, 1545, 257, 0, 1456,
	837, 0, 630, 643, 625, 0, 632, 0, 1123, 614,
	643, 616, 0, 632, 657, 679, 657, 0, 324, 0,
	329, 0, 0, 345, 347, 348, 349, 334, 335, 558,
	310, 311, 303, 304, 305, 306, 307, 308, 309, 313,
	100, 0, 283, 284, 0, 0, 0, 144, 145, 146,
	147, 148, 149, 151, 135, 579, 581, 931, 943, 0,
	934, 0, 154, 194, 127, 0, 0, 1458, 1459, 1460,
	1461, 1462, 1466, 0, 1468, 1470, 1472, 1474, 0, 1492,
	-2, -2, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1477, 1490, 1491, 0, 0, 0,
	0, 0, 0, 1488, 1488, 1483, 0, 1250, 0, 1271,
	1275, 0, 0, 0, 91, 1450, 1358, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 0, 0, 1457, 0, 0,
	0, 1452, 1453, 0, 0, 0, 1346, 0, 0, 1352,
	1353, 1354, 0, 638, 0, 1416, 1392, 1407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 767, 769, 0, 647, 649,
	650, 0, 677, 690, 695, 696, 699, 52, 57, 277,
	278, 0, 0, 272, 0, -2, 851, 0, 0, 686,
	0, 0, 880, 428, 925, 0, 0, 0, 941, 964,
	970, 0, 0, 0, 998, 867, 872, 873, 874, 868,
	869, 875, 876, 0, 684, 0, 0, 781, 482, 0,
	538, 539, 487, 1718, 492, 741, 741, 499, 493, 500,
	542, 501, 502, 503, 0, 741, 741, 537, 540, 527,
	541, 540, 530, 531, 0, 549, 554, 550, 0, 552,
	507, 508, 686, 359, 360, 401, 401, 401, 384, 401,
	0, 0, 372, 1600, 0, 0, 0, 0, 381, 1600,
	0, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 0, 0,
	1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600,
	1600, 0, 1600, 1600, 1600, 1600, 1600, 1102, 1600, 0,
	984, 391, 392, 393, 394, 399, 400, 0, 425, 0,
	0, 0, 428, 0, 914, 754, 0, 755, 756, 752,
	783, 807, 807, 0, 807, 787, 1122, 0, 0, 222,
	223, 212, 0, 213, 0, 225, 226, 0, 228, 229,
	230, 237, 1659, 1732, 232, 234, 0, 0, 238, 251,
	252, 253, 0, 0, 243, 244, 0, 0, 297, 298,
	300, 0, 705, 576, 1120, 577, 578, 582, 0, 0,
	585, 586, 587, 851, 0, 919, 920, 741, 0, 750,
	0, 746, 813, 0, 815, 0, 741, 0, 75, 19,
	0, 68, 65, 0, 0, 0, 0, 0, 1575, 1521,
	1596, 0, 0, 0, 1577, 0, 0, 0, 0, 58,
	659, 621, 0, 624, 640, 0, 644, 0, 0, 636,
	629, 633, 0, 0, 653, 615, 0, 0, 620, 705,
	680, 1173, 0, 330, 344, 0, 0, 0, 0, 138,
	928, 0, 139, 143, 133, 0, 0, 0, 933, 0,
	930, 935, 0, 153, 0, 0, 128, 129, 989, 994,
	0, 1467, 1469, 1471, 1473, 1475, 0, 1478, 1488, 1488,
	1484, 0, 1479, 0, 1481, 0, 1458, 0, 1276, 0,
	0, 0, 0, 0, 0, 1336, 1337, 0, 0, 1341,
	0, 1343, 1344, 1345, 1347, 0, 0, 0, 1351, 0,
	1390, 1408, 1394, 1397, 0, 1401, 0, 1403, 0, 693,
	0, 1313, 1313, 0, 0, 0, 0, 1313, 0, 0,
	0, 0, 0, 0, 0, 0, 1268, 0, 1269, 1270,
	0, 770, 659, 0, 0, 0, 702, 700, 701, 279,
	267, 269, 0, 0, 0, 839, 840, 842, 0, 845,
	846, 847, 0, 852, 853, 855, 856, 0, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1644, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 850, 686, 0, 975,
	887, 1600, 432, 0, 0, 927, 0, 903, 0, 0,
	0, -2, 0, 0, 0, 0, 1000, 0, 0, 0,
	599, 603, 23, 687, 0, 742, 485, 0, 486, 537,
	494, 495, 741, 1122, 519, 520, 741, 537, 537, 540,
	0, 551, 0, 983, 362, 0, 1131, 1132, 402, 0,
	1138, 1147, 974, 1203, 0, 1147, 0, 0, 1149, 1150,
	0, 0, 0, 0, 385, 386, 0, 371, 0, 0,
	0, 0, 370, 0, 0, 412, 0, 0, 0, 0,
	1601, 1600, 1600, 0, 379, 380, 0, 383, 0, 0,
	0, 0, 0, 0, 0, 1600, 1600, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1093, 0,
	0, 0, 0, 0, 0, 0, 1108, 1109, 887, 1600,
	0, 0, 0, 432, 901, 910, 0, 0, 0, 0,
	0, 0, 774, 0, 0, 773, 0, 0, 0, 0,
	0, 686, 808, 0, 810, 811, 785, -2, 0, 754,
	790, 1455, 215, 216, 0, 0, 221, 239, 241, 0,
	0, 0, 240, 242, 246, 247, 296, 299, 301, 675,
	0, 0, 0, 1021, 0, 591, 739, 744, 751, 814,
	816, 91, 747, 739, 0, 78, 19, 77, 69, 70,
	0, 19, 0, 0, 0, 0, 1585, 1584, 1570, 0,
	1571, 1582, 1587, 0, 1590, 0, 663, 0, 0, 643,
	645, 0, 0, 643, 0, 0, 652, 0, 0, 643,
	678, 0, 0, 559, 101, 350, 0, 0, 0, 0,
	0, 580, 0, 932, 135, 0, 0, 155, 0, 0,
	992, 0, 994, 1454, 1480, 1482, 0, 1489, 1485, 1251,
	1259, 1272, 0, 0, 1278, 1290, 1290, 0, 1281, 1583,
	1583, 1284, 1579, 1581, 1579, 1290, 1290, 0, 92, 0,
	0, 1342, 0, 0, 0, 639, 0, 0, 0, 1311,
	1313, 1318, 1314, 1319, 1313, 1313, 1313, 1313, 1324, 1313,
	1313, 1313, 1313, 1313, 1313, 1313, 1313, 1309, 648, 663,
	691, 692, 697, 698, 0, 271, 0, 0, 844, 0,
	0, 0, 857, 0, 0, 891, 888, 889, 890, 0,
	922, 433, 434, 435, 436, 0, 0, 0, 926, 0,
	914, 896, 0, 0, 0, 965, 966, 967, 968, 969,
	-2, 978, 0, 0, 1124, 1124, 1124, 1008, 0, 999,
	651, 0, -2, 0, 0, 601, 0, 0, 782, 488,
	741, 512, 0, 528, 741, 741, 537, 555, 0, 361,
	403, 0, 1137, 1162, 1148, 1162, 1204, 1162, 1162, 974,
	0, 403, 0, 0, 373, 409, 0, 0, 0, 0,
	369, 406, 699, 410, 411, 413, 0, 415, 375, 387,
	388, 389, 390, 0, 0, 0, 382, 395, 396, 397,
	398, 1070, 1071, 1072, 1075, 1076, 1077, 1078, 0, 0,
	1081, 1082, 1083, 1084, 1085, 1159, 1160, 1161, 1086, 1087,
	1088, 1089, 1090, 1091, 1092, 1110, 1111, 1112, 1113, 1114,
	1115, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 0,
	0, 1105, 0, 891, 0, 0, 0, 0, 922, 903,
	0, 913, 0, 915, 916, 0, 0, 622, 741, 289,
	0, 777, 771, 0, 760, 775, 776, 763, 0, 765,
	0, 761, 762, 741, 753, 784, 809, 786, 789, 791,
	792, 798, 0, 0, 0, 0, 218, 219, 220, 227,
	0, 452, 233, 706, 1121, 583, 584, 1022, 1023, 589,
	737, 0, 0, 737, 73, 76, 0, 71, 0, 0,
	0, 0, 63, 61, 1578, 0, 0, 665, 115, 0,
	0, 0, 641, 0, 646, 643, 628, 637, 627, 634,
	635, 654, 643, 619, 618, 1174, 325, 0, 929, 135,
	140, 141, 142, 136, 134, 936, 0, 938, 0, 990,
	994, 0, 0, 1486, 1277, 1260, 1279, 1291, 1292, 1280,
	1261, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1262, 1338,
	0, 1340, 1348, 1349, 0, 1398, 1402, 0, 0, 0,
	1317, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329,
	1330, 1331, 1332, 693, 1310, 0, 665, 703, 704, 832,
	835, 841, 843, 0, 854, 0, 0, 870, 863, 0,
	0, 882, 883, 893, 0, 0, 0, 438, 439, 0,
	0, 0, 451, 447, 448, 449, 429, 921, 910, 899,
	0, 0, 909, 0, 979, 1600, 1600, 1600, 0, 0,
	1125, 1126, 1128, 1129, 1130, 0, 0, 1011, 0, 0,
	1002, 0, 807, 0, 0, 741, 600, 603, 604, 685,
	489, 741, 532, 529, 741, 358, 374, 404, 0, -2,
	0, 1163, 0, 1151, 1163, 0, 0, 1162, 0, 363,
	403, 0, 0, 0, 416, 419, 420, 417, 1199, 0,
	418, 0, 408, 414, 1073, 1074, 0, 1079, 1080, 0,
	1104, 0, 0, 421, 0, 0, 0, 422, 427, 896,
	0, 911, 0, 917, 918, 693, 0, 0, 757, 778,
	0, 0, 758, 0, 759, 764, 766, 288, 793, 0,
	0, 795, 796, 797, 788, 235, 727, 0, 0, 748,
	728, 0, 19, 0, 0, 66, 1588, 1591, 667, 0,
	664, 116, 0, 0, 0, 0, 642, 626, 617, 137,
	132, 937, 118, 993, 995, 991, 0, 1350, 0, 1313,
	1312, 1306, 0, 667, 0, 860, 858, 870, 862, 877,
	892, 881, 0, 923, 924, 0, 440, 441, 0, 444,
	450, 894, 895, 0, 0, 907, 0, 0, 0, 0,
	971, -2, 0, 0, -2, 1014, 0, 1009, 0, 1001,
	0, 1004, 741, 741, -2, 597, 602, 0, 513, 533,
	405, 1164, -2, 1177, 1179, 0, 984, 1182, 1183, 0,
	0, 0, 0, 0, 0, 1225, 1191, 0, 0, 1195,
	1196, 1197, 0, 0, 1504, 1505, 0, 1202, 0, 0,
	0, 0, 0, 0, 0, 1145, 364, 365, 0, 367,
	368, 1200, 407, 1600, 377, 1103, 1106, 1107, 426, 423,
	424, 899, 902, 623, 688, 290, 291, 779, 0, 772,
	802, 799, 0, 0, 738, 740, 67, 72, 0, 0,
	669, 0, 666, 0, 660, 662, 126, 631, 88, 109,
	0, 1339, 1389, 1316, 0, 1307, 0, 1301, 1302, 1303,
	1308, 669, 0, 861, 0, 878, 879, 0, 0, 437,
	442, 0, 445, 446, 900, 897, 898, 0, 905, 0,
	0, 960, 1579, 0, 980, 981, 1118, 1119, 982, 1024,
	-2, 1067, 0, 1127, 986, 118, 1024, 1005, 0, 1012,
	0, 1010, 1003, 693, 598, 1178, 1180, 1181, 1184, 1185,
	1186, 1230, 1231, 1232, 0, 0, 1189, 1227, 1228, 1229,
	1190, 0, 0, 0, 0, 1502, 1503, 1223, 0, 0,
	1152, 1154, 1155, 1156, 1157, 1158, 1153, 0, 0, 0,
	1144, 1146, 366, 0, 1600, 912, 287, 0, 0, 803,
	805, 800, 801, 62, 64, 79, 0, 668, 117, 0,
	80, 0, 106, 0, 119, 120, 0, 0, 0, 0,
	1315, 1304, 0, 0, 0, 0, 0, 1506, 1507, 1508,
	0, 658, 0, 859, 0, 884, 0, 886, 443, 904,
	907, 0, 953, 0, 699, 0, 1026, 0, 983, 1069,
	1600, 988, 1026, 997, 0, 1007, 0, 1016, 0, 1013,
	688, 1187, 1188, 0, 0, 1405, 1600, 1218, 0, 953,
	953, 953, 953, 0, 376, 0, 780, 794, 0, 0,
	0, 89, 93, 0, 115, 112, 0, 121, 0, 0,
	0, 0, 0, 1293, 0, 0, 0, 1297, 1298, 1299,
	1300, 0, 871, 885, 906, 908, 952, 961, 962, 699,
	985, 0, 1063, 1068, 0, 987, 1006, 1015, 0, 1018,
	596, 1226, 0, 1194, 0, 1206, 1219, 0, 0, 1133,
	0, 1135, 0, 1139, 0, 1141, 0, 0, 378, 804,
	806, 0, 671, 661, 82, 0, 0, 110, 111, 113,
	0, 122, 0, 124, 125, 0, 1294, 1295, 1296, 848,
	954, 1600, 0, 0, 958, 959, 963, 0, 1051, 0,
	0, 1057, 0, 1064, 1073, 1017, 1192, 1198, 1205, 1207,
	1208, 0, 1220, 1221, 1222, 1224, 953, 953, 953, 953,
	1143, 670, 0, 996, 0, 94, 0, 96, 98, 99,
	1165, 107, 108, 114, 123, 1305, 0, 956, 0, 1027,
	0, 1029, 0, 0, 0, 0, 0, 1061, 0, 1193,
	1209, 0, 1210, 0, 0, 0, 1134, 1136, 1140, 1142,
	672, 83, 84, 0, 95, 0, 0, 955, 957, 0,
	1031, 0, 1052, 0, 0, 0, 0, 0, 0, 0,
	1211, 1213, 1214, 0, 0, 1212, 0, 0, 97, 1166,
	1028, 1025, 0, 1063, 1053, 0, 1055, 0, 0, 0,
	0, 1215, 1217, 1216, 85, 86, 87, 0, 0, 1033,
	0, 1049, 1054, 1056, 1058, 0, 1062, 1060, 1167, 1032,
	0, 1045, 1030, 0, 1059, 1034, -2, 0, 1050, 1035,
	-2, 0, 1043, 0, 0, 1036, 1044, 0, 1039, 0,
	0, 0, 1038, 0, -2, 1046, 0, 0, 1040, -2,
	0, 1048, 1047,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 114, 3, 3, 3, 145, 137, 3,
	82, 83, 142, 140, 155, 141, 154, 143, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 596, 595,
	124, 123, 125, 3, 599, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 147, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 597, 136, 598, 148,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
	115, 116, 117, 118, 119, 120, 121, 122, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 138, 139,
	144, 146, 149, 150, 151, 152, 153, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:742
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:749
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:755
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:763
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:769
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:773
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:788
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:792
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:798
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:803
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:807
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:839
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:846
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:866
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:872
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:879
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:887
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:893
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:902
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:912
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:920
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:928
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:936
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:946
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:954
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:964
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:971
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:980
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:990
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:994
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1000
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1004
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1010
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1019
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1029
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1033
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1039
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1048
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1052
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1058
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1079
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1092
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1099
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1103
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1109
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1113
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1119
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1126
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1134
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1138
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1152
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1156
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1160
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1165
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1169
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1173
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1179
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1188
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1199
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1203
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1209
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1213
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1219
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1223
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1229
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1253
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1272
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1276
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1280
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1285
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1289
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1296
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1304
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1311
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1316
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1323
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1328
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1332
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1356
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1360
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1366
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1372
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1390
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1407
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1430
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1434
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1438
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1443
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1447
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1453
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1466
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1477
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1490
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1494
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1504
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1517
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1530
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1536
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1542
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1549
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1557
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1566
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1570
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1574
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1578
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1582
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1586
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1593
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1597
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1603
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1610
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1619
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1623
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1629
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1633
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1637
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1641
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1645
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1649
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1653
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1657
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1661
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1665
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1669
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1673
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1677
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1681
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1685
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1693
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1697
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1705
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1709
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1721
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1725
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1729
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1741
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1745
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1749
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1753
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1757
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1769
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1773
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1785
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1789
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1793
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1797
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1801
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1805
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1813
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1817
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1821
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1825
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1838
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1845
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1852
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1862
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1866
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1872
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1879
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1887
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1891
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1895
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1899
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1905
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1909
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1915
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1922
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1929
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1938
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1968
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1972
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1976
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1982
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1988
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1992
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1999
		{
			yyVAL.str = yyDollar[3].str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2005
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2009
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2015
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2023
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2032
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2041
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2049
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2057
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2080
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2103
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2110
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2117
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2125
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2132
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2139
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2148
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2152
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2156
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2162
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2166
		{
			yyVAL.str = yyDollar[1].str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2172
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2176
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2182
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2186
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2197
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2203
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2208
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2212
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2216
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2220
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2224
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2228
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2232
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2236
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2240
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2246
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2250
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2254
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2258
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2263
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2268
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2274
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2281
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2287
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2294
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2301
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2311
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2318
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2329
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2340
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2344
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2350
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2360
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2366
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2370
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2376
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2382
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2386
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2390
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2394
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2400
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2412
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2418
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2422
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2428
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2432
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2438
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2444
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2455
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2461
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2465
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2469
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2473
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2477
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2481
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2489
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2497
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2507
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2548
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2552
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2558
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2564
		{
			yyVAL.str = yyDollar[1].str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2569
		{
			yyVAL.str = "true"
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2570
		{
			yyVAL.str = "false"
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2571
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2576
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2592
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2603
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2612
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2616
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2622
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2629
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2638
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2648
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2657
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2667
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2677
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2686
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2694
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2698
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2702
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2706
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2710
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2719
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2725
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2729
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2733
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2737
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2741
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2745
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2749
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2753
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2758
		{
			yyVAL.str = ""
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2789
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2793
		{
			yyVAL.str = string("COLUMN")
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2798
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2804
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2810
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2819
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2823
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2829
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2836
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2844
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2851
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2858
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2865
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2872
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2879
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2887
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2894
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2901
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2910
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2914
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2921
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2933
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2941
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2949
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2962
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2968
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2979
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2990
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2994
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2999
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3003
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3008
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3012
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3028
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3032
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3036
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3040
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3044
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3048
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3052
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3056
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3060
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3064
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3068
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3072
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3076
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3080
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3084
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3088
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3094
		{
			yyVAL.item = nil
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3099
		{
			yyVAL.item = nil
		}
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3139
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3145
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3153
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3157
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3161
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3170
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3174
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3180
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3185
		{
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3189
		{
		}
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3194
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3204
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3214
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3222
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3228
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3234
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3240
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3246
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3252
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3258
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3267
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3271
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3275
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3279
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3283
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3287
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3291
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3295
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3301
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3308
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3318
		{
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3320
		{
		}
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3329
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3339
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3348
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3352
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3356
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3362
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3368
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3374
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3380
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3389
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3399
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3411
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3415
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3421
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3433
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3447
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3453
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3460
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3465
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3469
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3473
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3478
		{
			yyVAL.str = ""
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3482
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3488
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3501
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3505
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3511
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3516
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3520
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3524
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3530
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3536
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3540
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3546
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3552
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3556
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3560
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3566
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3570
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3594
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3603
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3612
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3621
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3625
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3631
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3640
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3649
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3659
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3665
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3671
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3675
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3681
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3687
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3696
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3703
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3714
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3719
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3726
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3742
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3755
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3766
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3770
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3776
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3781
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3788
		{
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3790
		{
		}
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3793
		{
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3802
		{
		}
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3806
		{
		}
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3811
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3820
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3827
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3833
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3841
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3848
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3855
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3875
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3885
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3889
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3895
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3902
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3908
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3916
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3923
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3930
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3949
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3953
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3958
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3962
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3966
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3972
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3981
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3985
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3991
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3995
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4001
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4005
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4011
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4016
		{
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4020
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4027
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4031
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4038
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4043
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4047
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4053
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4057
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4063
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4067
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4072
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4076
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4089
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4096
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4103
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4121
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4140
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4146
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4153
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4157
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4170
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4174
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4179
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4183
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4190
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4195
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4202
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4208
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4212
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4216
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4220
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4224
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4228
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4234
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4241
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4250
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4254
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4260
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4268
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4272
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4277
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4281
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4287
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4291
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4295
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4300
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4304
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4310
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4316
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4320
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4326
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4331
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4335
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4339
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4344
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4348
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4352
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4357
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4361
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4369
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4373
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4377
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4391
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4395
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4405
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4415
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4425
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4437
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4445
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4453
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4462
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4470
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4478
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4486
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4494
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4502
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4510
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4518
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4526
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4536
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4547
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4561
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4565
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4569
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4574
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4578
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4582
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4591
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4595
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4600
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4604
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4613
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4619
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4623
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4629
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4633
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4638
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4642
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4647
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4655
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4661
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4669
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4677
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4687
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4693
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4702
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4711
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4720
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4730
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4734
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4744
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4748
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4752
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4756
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4762
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4772
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4776
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4782
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4788
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4792
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4798
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4804
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4808
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4812
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4818
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4822
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4828
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4832
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4838
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4842
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4848
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4852
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4862
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4875
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4881
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4887
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4900
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4911
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4918
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4922
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4928
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4938
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4942
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4946
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4951
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4955
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4959
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4963
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4968
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4972
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4976
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4980
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4984
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4989
		{
			yyVAL.str = ""
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4993
		{
			yyVAL.str = yyDollar[1].str
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4997
		{
			yyVAL.str = yyDollar[2].str
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5003
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5009
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5013
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5017
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5021
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5025
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5031
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 832:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5065
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5075
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5081
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 835:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5087
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5097
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5102
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5108
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5115
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5119
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5125
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5131
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5136
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5140
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5144
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5148
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5155
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5167
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5172
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5178
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5185
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5189
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5195
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5201
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5205
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5209
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5215
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5221
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5227
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5236
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5247
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5259
		{
			yyVAL.str = yyDollar[1].str
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5263
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5269
		{
			yyVAL.str = "OR REPLACE"
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5273
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5277
		{
			yyVAL.str = "DEFINER = "
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5281
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5286
		{
			yyVAL.str = ""
		}
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5290
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5304
		{
			yyVAL.str = ""
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5312
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5318
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5328
		{
			yyVAL.str = yyDollar[1].str
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5332
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5338
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5345
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5351
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5359
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5365
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5372
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5379
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5387
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5393
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5402
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5414
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5426
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5438
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5444
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5451
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5459
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5465
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5473
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5479
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5487
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5493
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5502
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5506
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5511
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5515
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5522
		{
			yyVAL.str = yyDollar[3].str
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5527
		{
			yyVAL.str = ""
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5531
		{
			yyVAL.str = yyDollar[2].str
		}
	case 912:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5537
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5551
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5561
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5565
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5571
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5577
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5583
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5592
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5601
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5610
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5615
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5621
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5629
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5735
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5739
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5745
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5755
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5759
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5765
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5775
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5779
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5783
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5788
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5792
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5798
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5805
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5811
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5820
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5827
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5836
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5840
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5846
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5860
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5864
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5868
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5873
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5877
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5881
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5885
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5891
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5910
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5914
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5936
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5940
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5944
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5948
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5952
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5958
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5962
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5968
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5973
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5978
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5982
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5986
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5990
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5994
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6000
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6011
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6015
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6025
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6029
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6034
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6038
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6044
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6048
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6054
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6058
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6062
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6067
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6071
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6077
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6089
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6098
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6111
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6118
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6128
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6136
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6147
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6151
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6156
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6160
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6167
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6178
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6191
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6205
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6209
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6213
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6220
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6227
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6234
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6241
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6245
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6249
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6253
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6257
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6264
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6271
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6275
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6282
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6289
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6293
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6300
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6307
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6314
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6321
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6325
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6330
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6334
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6338
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6343
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6347
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6357
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6361
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6368
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6375
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6379
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6388
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6392
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6398
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6402
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6408
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6417
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6427
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6431
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6437
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6441
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6447
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6454
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6463
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6467
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6472
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6476
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6481
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6485
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6490
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6494
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6504
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6508
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6519
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6527
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6535
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6543
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6554
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6563
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6573
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6583
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6587
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6592
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6596
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6601
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6605
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6611
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6615
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6619
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6625
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6629
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6633
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6637
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6641
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6645
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6649
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6654
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6658
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6662
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6666
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6670
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6674
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6678
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6682
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6686
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6690
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6694
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6698
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6702
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6706
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6710
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6714
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6718
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6722
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6726
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6730
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6734
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6738
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6742
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6746
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6750
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6754
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6758
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6762
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6768
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6772
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6778
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6784
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6788
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6794
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6798
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6802
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6806
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6810
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6814
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6828
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6832
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6841
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6846
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6852
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6859
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6863
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6869
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6873
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6877
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6883
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6887
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6893
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6902
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6911
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6934
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6959
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6973
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6979
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6988
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6997
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7006
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7015
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7025
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7033
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7039
		{
			yyVAL.str = ""
		}
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7043
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7053
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7059
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7065
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7084
		{
			yyVAL.str = ""
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7088
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7094
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7100
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7104
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7108
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7114
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7118
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7122
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7126
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7132
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7136
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7140
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7145
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7149
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7155
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7159
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7165
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7169
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7173
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7177
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7181
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7185
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7190
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7194
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7198
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7202
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7206
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7210
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7214
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7218
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7222
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7226
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7239
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7243
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7247
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7251
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7257
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7261
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7266
		{
			yyVAL.str = ""
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7270
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7276
		{
			yyVAL.str = ""
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7280
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1205:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7286
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7298
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7305
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7312
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7319
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7326
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7335
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7341
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7347
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7351
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7355
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7359
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7363
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7368
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7375
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7379
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7383
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7388
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7392
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7397
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7401
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7417
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7423
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7427
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7431
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7435
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7439
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7443
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7447
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7451
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7455
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7459
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7463
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7467
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7471
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7477
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7481
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7485
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7489
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7493
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7497
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7501
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7505
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7509
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7513
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7517
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7521
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7526
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7534
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7539
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7543
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7552
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7556
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7560
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7564
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7568
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7574
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7582
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7590
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7599
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7603
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7608
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7612
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7618
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7622
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7628
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7637
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7649
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7666
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7683
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7696
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7709
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7721
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7735
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7750
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7765
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7782
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7797
		{
		}
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7804
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7808
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7812
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7818
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7822
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7826
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7830
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7836
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7840
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7844
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7850
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7858
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7868
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7872
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7879
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7884
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7888
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7893
		{
			yyVAL.str = ","
		}
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7897
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1313:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7902
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7909
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7935
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7946
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7956
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7965
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7974
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7984
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7994
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8004
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8014
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8024
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8034
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8044
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8054
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8064
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8074
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8084
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8094
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8111
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8119
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8127
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8135
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8143
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8153
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8161
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8170
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8178
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8186
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8194
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8202
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8213
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8223
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8235
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8246
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8268
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8304
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8316
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8328
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8339
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8347
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8354
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8361
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8373
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8381
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8391
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8401
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8409
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8420
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8429
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8438
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8446
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8456
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8464
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8474
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8478
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8484
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8488
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8507
		{
		}
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8509
		{
		}
	case 1450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8550
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8561
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8565
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8569
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8575
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8580
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8584
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8590
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8594
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8601
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8605
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8609
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8617
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8621
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8625
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8629
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8635
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8639
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8643
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8647
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8651
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8655
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8659
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8663
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8667
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8671
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8679
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8683
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8687
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8691
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8695
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8699
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8703
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8707
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8711
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8715
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8721
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8725
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8731
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8735
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8742
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8746
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8750
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8756
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8760
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8764
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8768
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8772
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8776
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8780
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8786
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8790
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8794
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8798
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8804
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8817
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8822
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8828
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8832
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8845
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8850
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8854
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8858
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8862
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8866
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8873
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8877
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8891
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8895
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8902
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8913
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8918
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8924
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8936
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8948
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8960
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8973
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8986
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8999
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9012
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9025
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9038
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9051
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9064
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9077
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9090
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9105
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9132
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9174
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9210
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9246
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9263
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9275
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9295
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9315
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9335
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9351
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9364
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9377
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9390
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9403
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9415
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9427
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9439
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9451
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9463
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9475
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9487
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9499
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9511
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9524
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9537
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9550
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9563
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9576
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9589
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9602
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9615
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9630
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9638
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9647
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9657
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9680
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9685
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9691
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9698
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9702
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9707
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9711
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9717
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9723
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9730
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9737
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9746
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9753
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9760
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9769
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9773
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9777
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9783
		{
		}
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9785
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9795
		{
			yyVAL.str = ""
		}
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9799
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
