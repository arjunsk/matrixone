// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const VECF32 = 57530
const VECF64 = 57531
const GEOMETRY = 57532
const POINT = 57533
const LINESTRING = 57534
const POLYGON = 57535
const GEOMETRYCOLLECTION = 57536
const MULTIPOINT = 57537
const MULTILINESTRING = 57538
const MULTIPOLYGON = 57539
const INT1 = 57540
const INT2 = 57541
const INT3 = 57542
const INT4 = 57543
const INT8 = 57544
const S3OPTION = 57545
const STAGEOPTION = 57546
const SQL_SMALL_RESULT = 57547
const SQL_BIG_RESULT = 57548
const SQL_BUFFER_RESULT = 57549
const LOW_PRIORITY = 57550
const HIGH_PRIORITY = 57551
const DELAYED = 57552
const CREATE = 57553
const ALTER = 57554
const DROP = 57555
const RENAME = 57556
const ANALYZE = 57557
const ADD = 57558
const RETURNS = 57559
const SCHEMA = 57560
const TABLE = 57561
const SEQUENCE = 57562
const INDEX = 57563
const VIEW = 57564
const TO = 57565
const IGNORE = 57566
const IF = 57567
const PRIMARY = 57568
const COLUMN = 57569
const CONSTRAINT = 57570
const SPATIAL = 57571
const FULLTEXT = 57572
const FOREIGN = 57573
const KEY_BLOCK_SIZE = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const MAXVALUE = 57583
const PARTITION = 57584
const REORGANIZE = 57585
const LESS = 57586
const THAN = 57587
const PROCEDURE = 57588
const TRIGGER = 57589
const STATUS = 57590
const VARIABLES = 57591
const ROLE = 57592
const PROXY = 57593
const AVG_ROW_LENGTH = 57594
const STORAGE = 57595
const DISK = 57596
const MEMORY = 57597
const CHECKSUM = 57598
const COMPRESSION = 57599
const DATA = 57600
const DIRECTORY = 57601
const DELAY_KEY_WRITE = 57602
const ENCRYPTION = 57603
const ENGINE = 57604
const MAX_ROWS = 57605
const MIN_ROWS = 57606
const PACK_KEYS = 57607
const ROW_FORMAT = 57608
const STATS_AUTO_RECALC = 57609
const STATS_PERSISTENT = 57610
const STATS_SAMPLE_PAGES = 57611
const DYNAMIC = 57612
const COMPRESSED = 57613
const REDUNDANT = 57614
const COMPACT = 57615
const FIXED = 57616
const COLUMN_FORMAT = 57617
const AUTO_RANDOM = 57618
const ENGINE_ATTRIBUTE = 57619
const SECONDARY_ENGINE_ATTRIBUTE = 57620
const INSERT_METHOD = 57621
const RESTRICT = 57622
const CASCADE = 57623
const ACTION = 57624
const PARTIAL = 57625
const SIMPLE = 57626
const CHECK = 57627
const ENFORCED = 57628
const RANGE = 57629
const LIST = 57630
const ALGORITHM = 57631
const LINEAR = 57632
const PARTITIONS = 57633
const SUBPARTITION = 57634
const SUBPARTITIONS = 57635
const CLUSTER = 57636
const TYPE = 57637
const ANY = 57638
const SOME = 57639
const EXTERNAL = 57640
const LOCALFILE = 57641
const URL = 57642
const PREPARE = 57643
const DEALLOCATE = 57644
const RESET = 57645
const EXTENSION = 57646
const INCREMENT = 57647
const CYCLE = 57648
const MINVALUE = 57649
const PUBLICATION = 57650
const SUBSCRIPTIONS = 57651
const PUBLICATIONS = 57652
const PROPERTIES = 57653
const PARSER = 57654
const VISIBLE = 57655
const INVISIBLE = 57656
const BTREE = 57657
const HASH = 57658
const RTREE = 57659
const BSI = 57660
const IVFFLAT = 57661
const ZONEMAP = 57662
const LEADING = 57663
const BOTH = 57664
const TRAILING = 57665
const UNKNOWN = 57666
const LISTS = 57667
const OP_TYPE = 57668
const REINDEX = 57669
const EXPIRE = 57670
const ACCOUNT = 57671
const ACCOUNTS = 57672
const UNLOCK = 57673
const DAY = 57674
const NEVER = 57675
const PUMP = 57676
const MYSQL_COMPATIBILITY_MODE = 57677
const MODIFY = 57678
const CHANGE = 57679
const SECOND = 57680
const ASCII = 57681
const COALESCE = 57682
const COLLATION = 57683
const HOUR = 57684
const MICROSECOND = 57685
const MINUTE = 57686
const MONTH = 57687
const QUARTER = 57688
const REPEAT = 57689
const REVERSE = 57690
const ROW_COUNT = 57691
const WEEK = 57692
const REVOKE = 57693
const FUNCTION = 57694
const PRIVILEGES = 57695
const TABLESPACE = 57696
const EXECUTE = 57697
const SUPER = 57698
const GRANT = 57699
const OPTION = 57700
const REFERENCES = 57701
const REPLICATION = 57702
const SLAVE = 57703
const CLIENT = 57704
const USAGE = 57705
const RELOAD = 57706
const FILE = 57707
const TEMPORARY = 57708
const ROUTINE = 57709
const EVENT = 57710
const SHUTDOWN = 57711
const NULLX = 57712
const AUTO_INCREMENT = 57713
const APPROXNUM = 57714
const SIGNED = 57715
const UNSIGNED = 57716
const ZEROFILL = 57717
const ENGINES = 57718
const LOW_CARDINALITY = 57719
const AUTOEXTEND_SIZE = 57720
const ADMIN_NAME = 57721
const RANDOM = 57722
const SUSPEND = 57723
const ATTRIBUTE = 57724
const HISTORY = 57725
const REUSE = 57726
const CURRENT = 57727
const OPTIONAL = 57728
const FAILED_LOGIN_ATTEMPTS = 57729
const PASSWORD_LOCK_TIME = 57730
const UNBOUNDED = 57731
const SECONDARY = 57732
const RESTRICTED = 57733
const USER = 57734
const IDENTIFIED = 57735
const CIPHER = 57736
const ISSUER = 57737
const X509 = 57738
const SUBJECT = 57739
const SAN = 57740
const REQUIRE = 57741
const SSL = 57742
const NONE = 57743
const PASSWORD = 57744
const SHARED = 57745
const EXCLUSIVE = 57746
const MAX_QUERIES_PER_HOUR = 57747
const MAX_UPDATES_PER_HOUR = 57748
const MAX_CONNECTIONS_PER_HOUR = 57749
const MAX_USER_CONNECTIONS = 57750
const FORMAT = 57751
const VERBOSE = 57752
const CONNECTION = 57753
const TRIGGERS = 57754
const PROFILES = 57755
const LOAD = 57756
const INLINE = 57757
const INFILE = 57758
const TERMINATED = 57759
const OPTIONALLY = 57760
const ENCLOSED = 57761
const ESCAPED = 57762
const STARTING = 57763
const LINES = 57764
const ROWS = 57765
const IMPORT = 57766
const DISCARD = 57767
const MODUMP = 57768
const OVER = 57769
const PRECEDING = 57770
const FOLLOWING = 57771
const GROUPS = 57772
const DATABASES = 57773
const TABLES = 57774
const SEQUENCES = 57775
const EXTENDED = 57776
const FULL = 57777
const PROCESSLIST = 57778
const FIELDS = 57779
const COLUMNS = 57780
const OPEN = 57781
const ERRORS = 57782
const WARNINGS = 57783
const INDEXES = 57784
const SCHEMAS = 57785
const NODE = 57786
const LOCKS = 57787
const ROLES = 57788
const TABLE_NUMBER = 57789
const COLUMN_NUMBER = 57790
const TABLE_VALUES = 57791
const TABLE_SIZE = 57792
const NAMES = 57793
const GLOBAL = 57794
const PERSIST = 57795
const SESSION = 57796
const ISOLATION = 57797
const LEVEL = 57798
const READ = 57799
const WRITE = 57800
const ONLY = 57801
const REPEATABLE = 57802
const COMMITTED = 57803
const UNCOMMITTED = 57804
const SERIALIZABLE = 57805
const LOCAL = 57806
const EVENTS = 57807
const PLUGINS = 57808
const CURRENT_TIMESTAMP = 57809
const DATABASE = 57810
const CURRENT_TIME = 57811
const LOCALTIME = 57812
const LOCALTIMESTAMP = 57813
const UTC_DATE = 57814
const UTC_TIME = 57815
const UTC_TIMESTAMP = 57816
const REPLACE = 57817
const CONVERT = 57818
const SEPARATOR = 57819
const TIMESTAMPDIFF = 57820
const CURRENT_DATE = 57821
const CURRENT_USER = 57822
const CURRENT_ROLE = 57823
const SECOND_MICROSECOND = 57824
const MINUTE_MICROSECOND = 57825
const MINUTE_SECOND = 57826
const HOUR_MICROSECOND = 57827
const HOUR_SECOND = 57828
const HOUR_MINUTE = 57829
const DAY_MICROSECOND = 57830
const DAY_SECOND = 57831
const DAY_MINUTE = 57832
const DAY_HOUR = 57833
const YEAR_MONTH = 57834
const SQL_TSI_HOUR = 57835
const SQL_TSI_DAY = 57836
const SQL_TSI_WEEK = 57837
const SQL_TSI_MONTH = 57838
const SQL_TSI_QUARTER = 57839
const SQL_TSI_YEAR = 57840
const SQL_TSI_SECOND = 57841
const SQL_TSI_MINUTE = 57842
const RECURSIVE = 57843
const CONFIG = 57844
const DRAINER = 57845
const SOURCE = 57846
const STREAM = 57847
const HEADERS = 57848
const CONNECTOR = 57849
const CONNECTORS = 57850
const DAEMON = 57851
const PAUSE = 57852
const CANCEL = 57853
const TASK = 57854
const RESUME = 57855
const MATCH = 57856
const AGAINST = 57857
const BOOLEAN = 57858
const LANGUAGE = 57859
const WITH = 57860
const QUERY = 57861
const EXPANSION = 57862
const WITHOUT = 57863
const VALIDATION = 57864
const ADDDATE = 57865
const BIT_AND = 57866
const BIT_OR = 57867
const BIT_XOR = 57868
const CAST = 57869
const COUNT = 57870
const APPROX_COUNT = 57871
const APPROX_COUNT_DISTINCT = 57872
const APPROX_PERCENTILE = 57873
const CURDATE = 57874
const CURTIME = 57875
const DATE_ADD = 57876
const DATE_SUB = 57877
const EXTRACT = 57878
const GROUP_CONCAT = 57879
const MAX = 57880
const MID = 57881
const MIN = 57882
const NOW = 57883
const POSITION = 57884
const SESSION_USER = 57885
const STD = 57886
const STDDEV = 57887
const MEDIAN = 57888
const CLUSTER_CENTERS = 57889
const SPHERICAL_KMEANS = 57890
const STDDEV_POP = 57891
const STDDEV_SAMP = 57892
const SUBDATE = 57893
const SUBSTR = 57894
const SUBSTRING = 57895
const SUM = 57896
const SYSDATE = 57897
const SYSTEM_USER = 57898
const TRANSLATE = 57899
const TRIM = 57900
const VARIANCE = 57901
const VAR_POP = 57902
const VAR_SAMP = 57903
const AVG = 57904
const RANK = 57905
const ROW_NUMBER = 57906
const DENSE_RANK = 57907
const BIT_CAST = 57908
const NEXTVAL = 57909
const SETVAL = 57910
const CURRVAL = 57911
const LASTVAL = 57912
const ARROW = 57913
const ROW = 57914
const OUTFILE = 57915
const HEADER = 57916
const MAX_FILE_SIZE = 57917
const FORCE_QUOTE = 57918
const PARALLEL = 57919
const UNUSED = 57920
const BINDINGS = 57921
const DO = 57922
const DECLARE = 57923
const LOOP = 57924
const WHILE = 57925
const LEAVE = 57926
const ITERATE = 57927
const UNTIL = 57928
const CALL = 57929
const PREV = 57930
const SLIDING = 57931
const FILL = 57932
const SPBEGIN = 57933
const BACKEND = 57934
const SERVERS = 57935
const HANDLER = 57936
const KILL = 57937
const BACKUP = 57938
const FILESYSTEM = 57939
const QUERY_RESULT = 57940

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"STAGEOPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"IVFFLAT",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"LISTS",
	"OP_TYPE",
	"REINDEX",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"CONNECTORS",
	"DAEMON",
	"PAUSE",
	"CANCEL",
	"TASK",
	"RESUME",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"CLUSTER_CENTERS",
	"SPHERICAL_KMEANS",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"PREV",
	"SLIDING",
	"FILL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"HANDLER",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10744

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 117,
	11, 691,
	21, 691,
	-2, 684,
	-1, 137,
	236, 1072,
	238, 981,
	-2, 1029,
	-1, 161,
	42, 520,
	238, 520,
	265, 527,
	266, 527,
	459, 520,
	-2, 553,
	-1, 200,
	619, 1800,
	-2, 436,
	-1, 553,
	317, 133,
	432, 133,
	433, 133,
	-2, 1705,
	-1, 617,
	81, 1497,
	-2, 1855,
	-1, 618,
	81, 1515,
	-2, 1826,
	-1, 622,
	81, 1516,
	-2, 1854,
	-1, 649,
	81, 1427,
	-2, 1927,
	-1, 650,
	81, 1428,
	-2, 1926,
	-1, 651,
	81, 1429,
	-2, 1916,
	-1, 652,
	81, 1888,
	-2, 1909,
	-1, 653,
	81, 1889,
	-2, 1910,
	-1, 654,
	81, 1890,
	-2, 1918,
	-1, 655,
	81, 1891,
	-2, 1898,
	-1, 656,
	81, 1892,
	-2, 1907,
	-1, 657,
	81, 1893,
	-2, 1919,
	-1, 658,
	81, 1894,
	-2, 1920,
	-1, 659,
	81, 1895,
	-2, 1925,
	-1, 660,
	81, 1896,
	-2, 1930,
	-1, 661,
	81, 1897,
	-2, 1931,
	-1, 663,
	81, 1494,
	-2, 1691,
	-1, 667,
	81, 1499,
	-2, 1706,
	-1, 670,
	81, 1503,
	-2, 1724,
	-1, 674,
	81, 1507,
	-2, 1769,
	-1, 675,
	81, 1508,
	-2, 1850,
	-1, 683,
	81, 1518,
	-2, 1835,
	-1, 684,
	81, 1519,
	-2, 1880,
	-1, 685,
	81, 1520,
	-2, 1845,
	-1, 686,
	81, 1521,
	-2, 1870,
	-1, 697,
	81, 1405,
	-2, 1921,
	-1, 698,
	81, 1406,
	-2, 1922,
	-1, 699,
	81, 1407,
	-2, 1923,
	-1, 783,
	454, 553,
	455, 553,
	-2, 521,
	-1, 829,
	122, 1691,
	133, 1691,
	153, 1691,
	-2, 1665,
	-1, 938,
	21, 718,
	-2, 667,
	-1, 1039,
	11, 691,
	21, 691,
	-2, 1299,
	-1, 1113,
	21, 718,
	-2, 667,
	-1, 1424,
	81, 1565,
	-2, 1852,
	-1, 1425,
	81, 1566,
	-2, 1853,
	-1, 1565,
	82, 867,
	-2, 873,
	-1, 1969,
	105, 1019,
	149, 1019,
	188, 1019,
	191, 1019,
	278, 1019,
	-2, 1012,
	-1, 2110,
	11, 691,
	21, 691,
	-2, 811,
	-1, 2142,
	82, 1651,
	154, 1651,
	-2, 1837,
	-1, 2143,
	82, 1651,
	154, 1651,
	-2, 1836,
	-1, 2144,
	82, 1627,
	154, 1627,
	-2, 1823,
	-1, 2145,
	82, 1628,
	154, 1628,
	-2, 1828,
	-1, 2146,
	82, 1629,
	154, 1629,
	-2, 1757,
	-1, 2147,
	82, 1630,
	154, 1630,
	-2, 1751,
	-1, 2148,
	82, 1631,
	154, 1631,
	-2, 1681,
	-1, 2149,
	82, 1632,
	154, 1632,
	-2, 1825,
	-1, 2150,
	82, 1633,
	154, 1633,
	-2, 1755,
	-1, 2151,
	82, 1634,
	154, 1634,
	-2, 1750,
	-1, 2152,
	82, 1635,
	154, 1635,
	-2, 1738,
	-1, 2153,
	82, 1651,
	154, 1651,
	-2, 1739,
	-1, 2154,
	82, 1651,
	154, 1651,
	-2, 1740,
	-1, 2156,
	82, 1640,
	154, 1640,
	-2, 1870,
	-1, 2157,
	82, 1618,
	154, 1618,
	-2, 1855,
	-1, 2158,
	82, 1649,
	154, 1649,
	-2, 1826,
	-1, 2159,
	82, 1649,
	154, 1649,
	-2, 1854,
	-1, 2160,
	82, 1649,
	154, 1649,
	-2, 1707,
	-1, 2161,
	82, 1647,
	154, 1647,
	-2, 1845,
	-1, 2162,
	82, 1644,
	154, 1644,
	-2, 1729,
	-1, 2163,
	81, 1599,
	82, 1599,
	154, 1599,
	390, 1599,
	391, 1599,
	392, 1599,
	-2, 1680,
	-1, 2164,
	81, 1600,
	82, 1600,
	154, 1600,
	390, 1600,
	391, 1600,
	392, 1600,
	-2, 1682,
	-1, 2165,
	81, 1603,
	82, 1603,
	154, 1603,
	390, 1603,
	391, 1603,
	392, 1603,
	-2, 1827,
	-1, 2166,
	81, 1605,
	82, 1605,
	154, 1605,
	390, 1605,
	391, 1605,
	392, 1605,
	-2, 1809,
	-1, 2167,
	81, 1607,
	82, 1607,
	154, 1607,
	390, 1607,
	391, 1607,
	392, 1607,
	-2, 1756,
	-1, 2168,
	81, 1609,
	82, 1609,
	154, 1609,
	390, 1609,
	391, 1609,
	392, 1609,
	-2, 1734,
	-1, 2169,
	81, 1610,
	82, 1610,
	154, 1610,
	390, 1610,
	391, 1610,
	392, 1610,
	-2, 1735,
	-1, 2170,
	81, 1612,
	82, 1612,
	154, 1612,
	390, 1612,
	391, 1612,
	392, 1612,
	-2, 1679,
	-1, 2171,
	82, 1654,
	154, 1654,
	390, 1654,
	391, 1654,
	392, 1654,
	-2, 1712,
	-1, 2172,
	82, 1654,
	154, 1654,
	390, 1654,
	391, 1654,
	392, 1654,
	-2, 1725,
	-1, 2173,
	82, 1657,
	154, 1657,
	390, 1657,
	391, 1657,
	392, 1657,
	-2, 1708,
	-1, 2174,
	82, 1657,
	154, 1657,
	390, 1657,
	391, 1657,
	392, 1657,
	-2, 1772,
	-1, 2175,
	82, 1654,
	154, 1654,
	390, 1654,
	391, 1654,
	392, 1654,
	-2, 1793,
	-1, 2360,
	105, 1019,
	149, 1019,
	188, 1019,
	191, 1019,
	278, 1019,
	-2, 1013,
	-1, 2373,
	79, 612,
	154, 612,
	-2, 1185,
	-1, 2724,
	191, 1019,
	302, 1267,
	-2, 1239,
	-1, 2876,
	105, 1019,
	149, 1019,
	188, 1019,
	191, 1019,
	-2, 1128,
	-1, 2878,
	105, 1019,
	149, 1019,
	188, 1019,
	191, 1019,
	-2, 1128,
	-1, 2888,
	79, 612,
	154, 612,
	-2, 1186,
	-1, 2896,
	191, 1019,
	302, 1267,
	-2, 1240,
	-1, 3032,
	105, 1019,
	149, 1019,
	188, 1019,
	191, 1019,
	-2, 1129,
	-1, 3421,
	82, 1090,
	154, 1090,
	-2, 1019,
	-1, 3425,
	82, 1090,
	154, 1090,
	-2, 1019,
	-1, 3439,
	82, 1094,
	154, 1094,
	-2, 1019,
	-1, 3444,
	82, 1095,
	154, 1095,
	-2, 1019,
}

const yyPrivate = 57344

const yyLast = 39913

var yyAct = [...]int{
	584, 1646, 3425, 3424, 3433, 3404, 191, 1404, 562, 3288,
	564, 3352, 586, 3374, 557, 3296, 3314, 3297, 2743, 3216,
	572, 2973, 3201, 2910, 2225, 3192, 3220, 1193, 1254, 2979,
	2809, 3073, 1400, 1072, 3020, 3019, 1340, 3111, 3100, 3017,
	466, 2810, 614, 3148, 1330, 2977, 2330, 939, 828, 2968,
	476, 3202, 481, 481, 2846, 3204, 566, 1598, 481, 497,
	506, 2863, 2376, 506, 3024, 2011, 2897, 3031, 2996, 1407,
	2696, 2656, 3038, 2807, 3034, 2493, 1735, 2492, 2852, 2494,
	2416, 2728, 2685, 2476, 2739, 2879, 2486, 2654, 517, 176,
	1838, 2721, 2555, 2138, 1700, 2795, 1708, 1460, 2515, 2775,
	1803, 2350, 2666, 2014, 511, 2489, 2669, 2727, 2664, 1732,
	2657, 932, 2140, 1979, 555, 2702, 2104, 1247, 1750, 2598,
	2088, 2361, 1946, 2395, 2208, 1937, 1823, 1319, 561, 1834,
	2528, 1545, 1936, 1804, 2191, 1812, 1777, 2538, 1168, 2042,
	759, 1811, 1326, 1334, 1728, 1833, 1703, 2093, 480, 480,
	1339, 556, 1701, 2339, 488, 1331, 2105, 1166, 2397, 55,
	2334, 2012, 1628, 1638, 2368, 466, 1978, 187, 8, 186,
	7, 6, 2136, 884, 1398, 2260, 1575, 1868, 1835, 1293,
	1233, 565, 1263, 1960, 2659, 116, 1356, 475, 554, 2658,
	1845, 191, 1389, 191, 822, 875, 876, 2291, 1454, 573,
	1438, 1810, 2292, 869, 870, 1807, 1182, 26, 874, 1403,
	791, 1610, 1793, 15, 1609, 1300, 563, 2112, 13, 2007,
	1232, 1767, 36, 950, 821, 14, 490, 35, 1397, 1194,
	1230, 701, 758, 32, 465, 1461, 1574, 1202, 493, 556,
	1286, 23, 520, 16, 177, 1292, 519, 10, 736, 167,
	1178, 1073, 505, 756, 173, 741, 1111, 1842, 3142, 2320,
	872, 1145, 2866, 1852, 2248, 2802, 502, 2320, 2320, 778,
	2197, 2195, 498, 2194, 2192, 1558, 1307, 500, 1303, 867,
	871, 503, 873, 868, 501, 175, 868, 1130, 3359, 868,
	477, 1203, 499, 2313, 2311, 1215, 1552, 1126, 2900, 1305,
	1008, 1009, 1010, 1007, 2966, 486, 2551, 1008, 1009, 1010,
	1007, 2549, 1782, 3107, 3101, 509, 2969, 2808, 1820, 1067,
	3206, 1806, 702, 2624, 174, 51, 163, 138, 837, 2050,
	3006, 713, 2331, 2315, 1131, 971, 2912, 2997, 2234, 1971,
	3128, 3239, 1273, 8, 3159, 7, 2329, 866, 174, 2903,
	2242, 1272, 1271, 840, 834, 1839, 838, 3279, 174, 2898,
	174, 174, 174, 174, 2920, 2921, 174, 839, 1569, 2622,
	2899, 515, 174, 51, 163, 138, 1354, 516, 1347, 1850,
	1158, 1964, 3130, 174, 51, 163, 138, 749, 3160, 750,
	703, 2118, 1140, 168, 2117, 1132, 836, 2119, 692, 1374,
	691, 693, 694, 704, 695, 696, 1351, 2904, 1344, 2570,
	2563, 115, 2130, 1005, 115, 2131, 1390, 168, 1211, 1394,
	2521, 1212, 2522, 2523, 1234, 731, 1236, 1353, 1712, 1346,
	168, 168, 168, 1190, 1745, 168, 1713, 1714, 744, 714,
	740, 168, 2209, 1393, 986, 1559, 1560, 987, 1600, 3335,
	800, 1198, 168, 1624, 2336, 1197, 1200, 1201, 979, 3333,
	1406, 981, 1200, 1201, 2337, 1003, 3300, 3301, 831, 830,
	998, 3209, 3270, 3208, 3269, 989, 3207, 3268, 3209, 2989,
	481, 3208, 3207, 1927, 3272, 3318, 3319, 3109, 2556, 982,
	481, 943, 3112, 3113, 3114, 3115, 2811, 3194, 2811, 3197,
	3194, 2919, 2557, 2015, 2558, 3104, 953, 1214, 506, 506,
	1410, 481, 2335, 2229, 944, 3276, 1854, 3213, 856, 2824,
	2853, 2432, 1139, 2860, 1719, 1846, 1395, 810, 2908, 1385,
	1729, 1723, 2082, 2670, 1306, 1304, 2680, 1958, 3136, 2316,
	137, 3011, 172, 2323, 2342, 747, 2922, 1790, 3274, 1392,
	2905, 2909, 2907, 2906, 984, 2967, 2678, 2588, 832, 1313,
	1312, 2586, 161, 1001, 1002, 1000, 2048, 746, 975, 739,
	2239, 833, 974, 1011, 2550, 2480, 934, 878, 743, 742,
	2085, 2084, 1040, 953, 550, 3139, 941, 552, 2914, 2915,
	1049, 3008, 551, 977, 936, 725, 3281, 3282, 2089, 732,
	2742, 2937, 3328, 966, 1041, 980, 983, 962, 3277, 3278,
	2694, 2675, 2676, 1056, 942, 2988, 943, 985, 3299, 2740,
	2741, 2703, 2990, 2674, 2934, 1409, 1408, 2677, 3231, 1188,
	1851, 976, 3226, 3164, 2922, 2369, 508, 507, 748, 1857,
	1859, 1860, 3337, 738, 2485, 1966, 2901, 737, 1224, 3156,
	2314, 514, 2913, 724, 2927, 3124, 837, 730, 3125, 3290,
	851, 846, 841, 845, 849, 1391, 3221, 1213, 3418, 3332,
	806, 804, 1076, 805, 1142, 1141, 3434, 1177, 728, 996,
	997, 1129, 834, 1743, 1744, 3365, 3286, 3287, 854, 3290,
	3372, 2745, 844, 988, 1416, 1419, 1420, 2938, 3212, 3064,
	955, 954, 502, 502, 749, 1417, 750, 978, 498, 498,
	3398, 3127, 2059, 500, 500, 747, 1840, 503, 503, 1840,
	501, 501, 3141, 2827, 836, 1137, 476, 837, 499, 499,
	3377, 2592, 2319, 946, 947, 2672, 1840, 3053, 2058, 1077,
	2980, 729, 3126, 852, 938, 3429, 957, 2348, 1109, 1243,
	855, 1114, 1242, 834, 964, 963, 2017, 2460, 759, 811,
	959, 960, 868, 2079, 2080, 3405, 2880, 868, 868, 1175,
	868, 842, 1192, 1191, 1047, 868, 868, 955, 954, 1174,
	807, 2918, 1173, 3158, 3435, 1043, 1044, 1045, 1046, 2193,
	3165, 504, 1841, 1853, 853, 836, 1308, 3059, 948, 3149,
	2331, 3280, 504, 3441, 3131, 1196, 3157, 481, 1199, 1226,
	2354, 2356, 2357, 2358, 2355, 466, 466, 745, 1869, 2133,
	933, 2641, 1200, 1201, 466, 466, 2010, 702, 1258, 1258,
	2964, 481, 1200, 1201, 843, 2736, 1146, 2312, 515, 169,
	170, 2671, 171, 809, 2814, 3007, 2681, 139, 3137, 2917,
	1189, 2341, 52, 506, 1287, 476, 735, 1260, 1296, 1296,
	1256, 1256, 1730, 52, 3191, 2243, 3378, 2589, 3338, 191,
	1231, 139, 1295, 1295, 3428, 1085, 1086, 937, 466, 1858,
	1265, 139, 2744, 139, 139, 139, 139, 2235, 1143, 139,
	833, 3273, 965, 2016, 2122, 139, 971, 2046, 2018, 2433,
	1171, 2434, 2435, 1222, 3012, 1176, 139, 2345, 2346, 1843,
	850, 1720, 1186, 1138, 2740, 2741, 1386, 1151, 1722, 808,
	1205, 1206, 2344, 1208, 1209, 1210, 2027, 1264, 1314, 1338,
	2591, 1341, 1156, 2673, 1418, 1155, 1349, 3074, 3075, 3076,
	3079, 3078, 3077, 1252, 1253, 991, 2020, 847, 992, 848,
	2517, 2519, 2019, 2840, 1154, 748, 510, 1372, 3066, 1115,
	1113, 3120, 2533, 2534, 2737, 3203, 753, 754, 755, 1855,
	1856, 1258, 2430, 1258, 943, 1163, 994, 2322, 1184, 1185,
	3440, 1940, 970, 1144, 3055, 1355, 2600, 2599, 3054, 2451,
	2452, 1147, 1148, 1149, 1150, 1135, 1152, 3375, 3376, 1942,
	1941, 1157, 1133, 1134, 2461, 2463, 2464, 2465, 2462, 1238,
	1240, 1165, 1562, 1317, 1563, 1320, 1321, 1939, 1250, 1251,
	1225, 1411, 1412, 1413, 1414, 1415, 1322, 1323, 3060, 3061,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1288, 1561, 1216, 1217, 1449, 1450, 1328, 1329,
	1204, 716, 2071, 1207, 1459, 990, 751, 717, 3039, 1241,
	2708, 1179, 1183, 1183, 1183, 1456, 1457, 1458, 1508, 2030,
	1336, 2815, 1309, 1492, 3380, 2010, 2033, 2021, 1367, 1368,
	1333, 1502, 1006, 1337, 1387, 1179, 1179, 486, 1266, 2772,
	971, 1517, 837, 995, 2211, 1279, 837, 1405, 1949, 1498,
	1499, 1500, 1402, 1601, 1297, 1285, 2768, 801, 2843, 2826,
	1930, 2450, 1514, 1298, 3447, 1515, 2518, 2374, 993, 3446,
	1901, 1950, 1951, 1900, 1601, 2234, 3437, 1547, 943, 1525,
	1526, 2747, 2026, 2032, 2645, 2375, 2024, 1543, 2643, 2103,
	1287, 720, 1421, 1383, 2536, 2325, 1572, 2317, 1258, 1577,
	1578, 2692, 1580, 1581, 481, 1345, 502, 1493, 481, 1352,
	969, 1258, 498, 801, 2738, 759, 1380, 500, 1599, 1358,
	1371, 503, 1377, 1258, 501, 2031, 3419, 1376, 1370, 1226,
	1399, 1381, 499, 1995, 497, 3414, 1006, 1363, 3408, 1546,
	803, 1006, 719, 802, 2224, 1006, 722, 721, 3438, 2216,
	1379, 3407, 1378, 1507, 1623, 2133, 1375, 2045, 1490, 1491,
	1619, 1494, 1629, 1629, 1401, 1226, 1396, 1226, 1226, 1509,
	812, 481, 481, 1571, 1572, 1572, 3385, 3354, 1258, 1697,
	1698, 1710, 1516, 1440, 1518, 2102, 3308, 1627, 3302, 1579,
	2103, 940, 859, 864, 865, 466, 803, 1258, 1848, 802,
	1582, 1554, 1447, 1448, 1586, 2375, 3124, 3415, 1880, 3125,
	1848, 2772, 1547, 706, 707, 708, 709, 1547, 1547, 1008,
	1009, 1010, 1007, 1848, 3119, 481, 1572, 1258, 3249, 1755,
	2693, 481, 481, 481, 1760, 1761, 940, 1008, 1009, 1010,
	1007, 1765, 1766, 1746, 1962, 3184, 1772, 1648, 1848, 3355,
	1549, 1692, 1693, 191, 1839, 1770, 191, 191, 3309, 191,
	3145, 1388, 3127, 1607, 1608, 1994, 1780, 1635, 1636, 1783,
	1711, 2005, 1786, 1519, 1935, 1788, 1008, 1009, 1010, 1007,
	1617, 1618, 1724, 1879, 706, 707, 708, 709, 968, 1269,
	3183, 3178, 1544, 3126, 1550, 1905, 1830, 1508, 1508, 1814,
	3145, 1741, 1164, 1752, 1508, 1508, 1716, 1576, 1718, 2103,
	1452, 1825, 1738, 1739, 1244, 3402, 1754, 3185, 1736, 1737,
	1591, 1751, 2620, 3177, 1824, 1630, 1731, 1751, 1751, 1751,
	1566, 3176, 1604, 1819, 1006, 1599, 1602, 1603, 3356, 1258,
	1837, 2891, 1781, 1595, 1616, 1784, 1785, 1596, 1787, 1757,
	1758, 1759, 1567, 1568, 3175, 1570, 1621, 2859, 1961, 711,
	1612, 3144, 1983, 3145, 969, 3000, 1583, 1584, 1585, 2709,
	1611, 2540, 1613, 1614, 1606, 2377, 1632, 2237, 3089, 1110,
	2236, 1633, 1634, 861, 862, 863, 1620, 1576, 2228, 2942,
	2872, 2000, 1831, 1768, 2756, 3145, 1896, 1881, 1699, 971,
	1829, 1775, 1815, 3145, 1866, 1867, 1220, 1221, 1715, 1223,
	1717, 1227, 1228, 1229, 1696, 1179, 1763, 1872, 2512, 1725,
	1876, 1360, 2017, 2020, 2298, 1631, 3145, 1053, 1862, 1183,
	711, 2713, 1809, 3145, 956, 935, 1399, 3001, 930, 1809,
	928, 1183, 2290, 1274, 1275, 1276, 1277, 1278, 2250, 1280,
	1281, 1282, 1283, 1284, 2232, 1753, 837, 1290, 1291, 2940,
	1887, 2133, 2873, 837, 1740, 1778, 2757, 1023, 1894, 1776,
	1022, 1021, 1031, 1032, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1023, 834, 2220, 1497, 1496, 2218, 1908, 1795, 834,
	2103, 2583, 1913, 1914, 1915, 1821, 1006, 1918, 1919, 1920,
	1921, 1922, 1923, 1924, 1925, 3227, 1818, 1906, 1907, 1816,
	1909, 2213, 3120, 3394, 1006, 555, 3121, 1916, 481, 481,
	1006, 481, 502, 2206, 836, 2204, 1983, 2202, 498, 3040,
	1832, 836, 3381, 500, 481, 481, 481, 503, 2043, 1828,
	501, 1169, 2883, 2881, 2200, 1170, 1980, 3143, 499, 3228,
	1982, 837, 1180, 1827, 2021, 2214, 1987, 1226, 2219, 2016,
	2010, 2015, 1931, 2013, 2018, 718, 1984, 1455, 2192, 1497,
	1496, 3116, 1861, 3041, 3057, 1246, 1870, 834, 1912, 1911,
	1899, 1890, 1226, 2214, 2800, 1615, 2884, 2882, 1889, 1888,
	1847, 3056, 1440, 1863, 1531, 2207, 2038, 2205, 1364, 2201,
	3013, 1622, 1874, 2114, 1625, 1626, 2865, 2257, 2704, 1248,
	1864, 1865, 587, 597, 1953, 1954, 2201, 1956, 2019, 836,
	1249, 588, 1983, 596, 589, 593, 592, 590, 591, 2186,
	1972, 1973, 1974, 2773, 1930, 2267, 1021, 1031, 1032, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 1023, 2044, 2766, 2761,
	1006, 1006, 1006, 1006, 2758, 2687, 2107, 2107, 1710, 2107,
	1006, 1006, 1848, 927, 923, 924, 925, 926, 1181, 2272,
	1365, 2271, 2270, 2268, 1245, 935, 594, 466, 466, 1524,
	1446, 1547, 2482, 1547, 2705, 943, 2352, 1932, 1779, 723,
	2321, 1258, 481, 1926, 1928, 1929, 1443, 1445, 1442, 2247,
	1444, 1547, 1547, 1943, 2217, 2124, 1160, 481, 595, 1996,
	2542, 1159, 945, 943, 2176, 476, 1455, 1963, 1875, 1296,
	1301, 1710, 1779, 2128, 2181, 1573, 2183, 3267, 2706, 1007,
	191, 1010, 1007, 1295, 1008, 1009, 1010, 1007, 2269, 3069,
	3068, 1076, 1301, 2049, 2004, 2051, 2052, 2053, 2054, 2055,
	2056, 2057, 2111, 2559, 2060, 2061, 2062, 2063, 2064, 2065,
	2066, 2067, 2068, 2069, 2070, 2422, 2072, 2073, 2074, 2075,
	2076, 1988, 2077, 2109, 2009, 2113, 2120, 2421, 2121, 2008,
	2230, 1955, 2403, 1837, 1999, 2401, 3014, 3015, 1264, 3048,
	1258, 1512, 1258, 2001, 1258, 3009, 2125, 2126, 3423, 943,
	3397, 1055, 3411, 1751, 1991, 1513, 3366, 2249, 1077, 1997,
	2022, 2023, 1998, 2028, 1054, 2180, 3361, 837, 3360, 2187,
	1008, 1009, 1010, 1007, 2240, 2135, 1008, 1009, 1010, 1007,
	2086, 1258, 2276, 3292, 3258, 3229, 2141, 2803, 2857, 3293,
	2258, 3384, 2115, 834, 2472, 2470, 3180, 2283, 3168, 2277,
	2278, 3010, 1258, 1008, 1009, 1010, 1007, 2280, 2281, 2275,
	2282, 3396, 2285, 1256, 2196, 1008, 1009, 1010, 1007, 1183,
	2286, 1238, 1240, 3161, 2129, 2273, 2274, 2468, 3102, 3043,
	2284, 1756, 3042, 2132, 1256, 836, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1023, 2858, 1547, 2885, 2351, 2179, 943,
	2471, 2469, 2177, 943, 2287, 2288, 481, 1008, 1009, 1010,
	1007, 2457, 1258, 2856, 2679, 2349, 2801, 1008, 1009, 1010,
	1007, 1572, 2244, 2579, 2554, 2553, 2259, 2455, 2373, 1008,
	1009, 1010, 1007, 2467, 2379, 1878, 2246, 2454, 2188, 2241,
	2261, 2261, 1026, 1027, 1028, 1029, 1030, 1023, 2453, 2445,
	2255, 2389, 1008, 1009, 1010, 1007, 2222, 2309, 943, 2383,
	2384, 2233, 2231, 2439, 2238, 2438, 2400, 2456, 1008, 1009,
	1010, 1007, 2437, 943, 943, 943, 1629, 1302, 2436, 943,
	2318, 2411, 2412, 2413, 2414, 943, 1934, 2418, 2419, 1798,
	2420, 1797, 2251, 2252, 2362, 1796, 1792, 1892, 2363, 1399,
	1791, 1749, 2332, 2266, 2264, 3219, 1989, 1990, 1748, 1008,
	1009, 1010, 1007, 2107, 1747, 1361, 1992, 1993, 1128, 2613,
	2864, 2487, 2326, 2992, 2371, 2380, 2141, 2473, 2665, 3327,
	1648, 1008, 1009, 1010, 1007, 466, 2254, 1884, 3326, 2370,
	1572, 943, 1710, 1710, 1710, 1710, 3323, 2974, 2338, 1008,
	1009, 1010, 1007, 943, 1710, 3320, 3215, 2107, 3018, 2293,
	2294, 2328, 3200, 1891, 2333, 2299, 2391, 2398, 2394, 3189,
	3172, 2398, 3167, 1258, 3236, 2327, 3166, 2381, 2612, 2226,
	2227, 3140, 3138, 2405, 481, 481, 2386, 2387, 2347, 1008,
	1009, 1010, 1007, 3103, 2372, 3050, 3027, 2406, 2407, 8,
	2972, 7, 2410, 2378, 1008, 1009, 1010, 1007, 2417, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1012, 2390, 2970, 2393,
	2949, 1576, 2946, 2396, 2944, 2477, 2402, 2855, 2508, 1008,
	1009, 1010, 1007, 550, 2428, 2429, 552, 2854, 2409, 191,
	2851, 551, 2834, 2832, 191, 2767, 2763, 2754, 2443, 2444,
	2753, 1008, 1009, 1010, 1007, 2688, 2649, 2546, 2648, 2548,
	2647, 1938, 2593, 2590, 2495, 1508, 2178, 1508, 2552, 2447,
	2569, 2526, 2479, 2466, 2458, 2185, 2495, 1547, 2448, 2578,
	2530, 2531, 1547, 2446, 2442, 1258, 2441, 2388, 2585, 1824,
	2483, 2440, 2478, 2223, 2496, 2497, 2498, 2499, 1800, 2507,
	2509, 648, 647, 3232, 2537, 1794, 3436, 1557, 2982, 1877,
	1556, 1362, 2510, 2511, 2981, 2520, 1084, 1080, 2524, 2527,
	1079, 1321, 2931, 931, 2596, 715, 2399, 3117, 2543, 2481,
	3004, 1322, 1323, 2547, 1008, 1009, 1010, 1007, 2993, 1546,
	1008, 1009, 1010, 1007, 2568, 2878, 2877, 2617, 1008, 1009,
	1010, 1007, 1328, 1329, 1031, 1032, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1023, 2829, 2606, 2566, 2608, 1336, 2876,
	2842, 2838, 2572, 2541, 2582, 2545, 2544, 2833, 1333, 2831,
	943, 1337, 2587, 1008, 1009, 1010, 1007, 2816, 2806, 2668,
	1008, 1009, 1010, 1007, 2562, 2560, 2805, 2791, 2574, 2683,
	2565, 2575, 2790, 2573, 481, 2714, 1481, 2652, 2567, 2616,
	1495, 2642, 2618, 2615, 2581, 2697, 943, 943, 943, 174,
	2611, 163, 138, 837, 2603, 1710, 1980, 2602, 2712, 2597,
	837, 2594, 2595, 2601, 2535, 1008, 1009, 1010, 1007, 1008,
	1009, 1010, 1007, 2609, 2610, 2604, 2605, 2324, 2726, 2203,
	2729, 2199, 2729, 2729, 2198, 1917, 1910, 943, 1904, 1902,
	1898, 2691, 1897, 1895, 2607, 2644, 1886, 1883, 1882, 2733,
	1799, 1542, 2749, 1541, 1540, 599, 117, 1511, 1510, 1258,
	1258, 117, 1501, 2746, 1270, 2362, 2564, 2614, 168, 2651,
	2382, 1268, 2748, 2571, 3393, 2385, 2646, 3387, 2650, 3373,
	2689, 3370, 174, 2699, 2700, 2701, 3368, 2750, 2751, 3257,
	1074, 1256, 1256, 1008, 1009, 1010, 1007, 3186, 3174, 2710,
	2684, 3169, 1316, 3083, 3067, 481, 3063, 2957, 2955, 2725,
	2668, 487, 2690, 2707, 117, 2307, 2929, 2625, 2626, 2711,
	2928, 1572, 1572, 2627, 2628, 2629, 2630, 2734, 2631, 2632,
	2633, 2634, 2635, 2636, 2637, 2638, 2719, 2925, 2724, 2730,
	2731, 1008, 1009, 1010, 1007, 3248, 2306, 2735, 1477, 1161,
	2305, 168, 2924, 2867, 1474, 2662, 2661, 2718, 1476, 1473,
	1475, 1479, 1480, 1327, 1318, 1332, 1478, 943, 3343, 2304,
	1335, 2276, 1008, 1009, 1010, 1007, 1008, 1009, 1010, 1007,
	2804, 2303, 837, 1022, 1021, 1031, 1032, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1023, 1008, 1009, 1010, 1007, 1324,
	1167, 1751, 1903, 2474, 2404, 3246, 2302, 1008, 1009, 1010,
	1007, 2301, 2760, 2367, 3244, 3412, 2765, 2759, 2366, 2365,
	2764, 2364, 481, 2755, 835, 2308, 2769, 2770, 2780, 2762,
	2212, 117, 1008, 1009, 1010, 1007, 2123, 1008, 1009, 1010,
	1007, 2078, 1981, 2784, 1952, 2720, 117, 1933, 117, 1441,
	168, 2787, 2788, 2789, 2300, 1762, 1565, 1553, 2828, 1384,
	2793, 1348, 1325, 1127, 1112, 2830, 1108, 2799, 1022, 1021,
	1031, 1032, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1023,
	1008, 1009, 1010, 1007, 1107, 1106, 1105, 1104, 2837, 3391,
	2141, 1103, 2847, 943, 2817, 2732, 1102, 2819, 1101, 2822,
	2297, 2818, 1100, 2823, 1099, 3422, 2296, 1098, 1097, 1484,
	1485, 1486, 1487, 1488, 1489, 1482, 1483, 2835, 2825, 1096,
	1095, 1094, 1093, 1092, 1091, 2871, 1008, 1009, 1010, 1007,
	2295, 3389, 1008, 1009, 1010, 1007, 1090, 1089, 2107, 1710,
	2888, 1088, 1022, 1021, 1031, 1032, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1023, 943, 1087, 1008, 1009, 1010, 1007,
	1083, 1082, 1081, 2726, 1078, 1071, 1070, 943, 1068, 1067,
	1066, 1065, 1064, 2839, 1063, 1062, 1061, 1060, 943, 1059,
	2849, 1058, 1057, 1258, 1022, 1021, 1031, 1032, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1023, 1052, 1051, 1050, 1572,
	973, 2862, 929, 943, 3242, 2890, 2926, 1547, 2776, 2777,
	2289, 2941, 1986, 1968, 961, 1256, 3341, 3298, 1547, 2779,
	2923, 2954, 2353, 2134, 2956, 1802, 972, 2959, 2506, 2916,
	2099, 2100, 191, 2887, 2960, 2893, 1008, 1009, 1010, 1007,
	2782, 2962, 2504, 837, 2930, 943, 2502, 2505, 2781, 2951,
	837, 2503, 2935, 837, 2886, 2501, 2500, 2932, 2939, 2279,
	2715, 2868, 2869, 2870, 2963, 2716, 2717, 2874, 2875, 2945,
	2221, 2943, 2215, 102, 943, 478, 2950, 2894, 2948, 2686,
	2953, 2961, 2952, 2958, 2047, 1008, 1009, 1010, 1007, 2577,
	2933, 1593, 1594, 1588, 1589, 1590, 2820, 2821, 943, 1258,
	1258, 2417, 2947, 2991, 2697, 2722, 2841, 2723, 3033, 2936,
	3033, 2794, 1684, 2844, 2256, 54, 2850, 1310, 2210, 2998,
	2975, 2965, 53, 2976, 2226, 2227, 2495, 3023, 482, 483,
	2245, 1256, 3025, 1357, 1342, 1258, 1959, 1451, 1764, 3049,
	1008, 1009, 1010, 1007, 967, 2999, 2663, 2660, 2653, 3005,
	117, 117, 835, 481, 2392, 943, 943, 2003, 1976, 943,
	943, 3029, 3030, 1008, 1009, 1010, 1007, 3025, 2495, 1597,
	1564, 484, 2771, 3086, 3028, 3311, 3037, 3036, 485, 3171,
	3085, 2890, 2752, 2995, 1497, 1496, 1599, 2783, 3094, 3080,
	3071, 3072, 2923, 3047, 3081, 3082, 3046, 3098, 3099, 3051,
	2087, 2916, 2083, 2424, 1123, 1124, 1695, 2090, 1219, 3091,
	2425, 2426, 2427, 1121, 1122, 1119, 1120, 3002, 3003, 1218,
	999, 3021, 2786, 1039, 2095, 2098, 2099, 2100, 2096, 2529,
	2097, 2101, 2847, 1117, 1118, 1826, 1172, 1153, 3123, 1195,
	3090, 3388, 3284, 3092, 2095, 2098, 2099, 2100, 2096, 3070,
	2097, 2101, 3264, 3262, 3222, 3199, 3105, 3198, 3196, 2983,
	3187, 2984, 3097, 3096, 3151, 2971, 2836, 3147, 2813, 3118,
	2619, 2812, 2797, 3122, 2034, 1359, 2796, 2539, 3021, 3021,
	1601, 3135, 3021, 3021, 3345, 3344, 3132, 2580, 1970, 3133,
	3134, 1885, 958, 3344, 3345, 3065, 3146, 706, 707, 708,
	709, 2792, 940, 940, 178, 3, 1187, 3087, 62, 2,
	3088, 3154, 3153, 3152, 943, 3357, 3358, 1, 2310, 1258,
	1551, 1125, 3162, 1022, 1021, 1031, 1032, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1023, 710, 705, 1235, 3170, 2116,
	1742, 1262, 1555, 712, 2513, 2514, 2785, 3181, 2516, 3179,
	1844, 1256, 2484, 2081, 1957, 2682, 1162, 752, 1503, 3211,
	1116, 1369, 858, 952, 1366, 951, 949, 1453, 601, 1805,
	3205, 2475, 1056, 2449, 3188, 3093, 943, 3310, 3195, 3351,
	3256, 3193, 3223, 3313, 1382, 585, 3190, 3108, 3260, 2889,
	3110, 2978, 1849, 1004, 2561, 774, 639, 2892, 612, 1069,
	1350, 3218, 1343, 2623, 2621, 943, 860, 611, 2861, 2343,
	3217, 3225, 3214, 1258, 3233, 2532, 3251, 3254, 3155, 857,
	3230, 775, 1789, 3106, 1311, 3241, 3243, 3245, 3247, 1315,
	2002, 3163, 762, 3432, 3234, 3421, 3403, 3021, 3386, 3255,
	3240, 3250, 3289, 3417, 3331, 1256, 3371, 2987, 3263, 3261,
	3265, 3266, 2985, 3259, 2986, 1258, 3364, 3285, 521, 3182,
	1721, 464, 819, 3084, 1801, 522, 3294, 1985, 3275, 3173,
	733, 1967, 734, 726, 3283, 2360, 2359, 1422, 1013, 1439,
	2639, 2640, 1048, 3291, 560, 1873, 2340, 1256, 3317, 1267,
	2911, 2525, 61, 487, 60, 59, 58, 1771, 199, 3021,
	3316, 761, 603, 3307, 3303, 198, 3304, 3016, 3305, 3253,
	3306, 801, 3315, 583, 582, 943, 3321, 581, 3205, 580,
	3322, 579, 3224, 2094, 117, 2092, 2091, 1705, 3021, 1704,
	1769, 2695, 2415, 2408, 2029, 2035, 1637, 3295, 3237, 3238,
	3350, 3235, 3339, 3342, 3340, 3062, 3334, 3336, 2459, 1587,
	2025, 1654, 3353, 3346, 3347, 3348, 3349, 2431, 1651, 3362,
	1650, 943, 2423, 3058, 3052, 3044, 3045, 1681, 3363, 2845,
	3032, 2895, 3367, 2896, 3369, 1008, 1009, 1010, 1007, 2902,
	1975, 883, 1481, 879, 881, 882, 3317, 3383, 117, 3379,
	880, 2265, 117, 2006, 803, 2655, 1948, 802, 3316, 943,
	1947, 943, 3382, 1945, 117, 1944, 3390, 1136, 3392, 3210,
	3271, 2994, 3395, 2139, 117, 2137, 2778, 2774, 1813, 1822,
	2576, 3353, 3399, 1706, 943, 1702, 3401, 1969, 3406, 3129,
	1592, 3410, 727, 3413, 787, 1965, 3416, 99, 3329, 152,
	48, 89, 763, 88, 98, 150, 3324, 3325, 47, 183,
	182, 3420, 185, 3427, 1481, 184, 181, 3431, 2189, 3430,
	2190, 180, 1299, 179, 3035, 3439, 700, 38, 37, 765,
	33, 3427, 3444, 3443, 12, 11, 3431, 34, 21, 1520,
	1521, 1522, 1523, 22, 1405, 1527, 1528, 1529, 1530, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 20, 1373, 19,
	25, 31, 30, 3442, 110, 109, 29, 108, 3445, 107,
	106, 105, 104, 28, 18, 42, 41, 40, 9, 97,
	95, 27, 1405, 96, 1405, 93, 94, 92, 90, 73,
	72, 71, 786, 785, 86, 85, 84, 83, 82, 81,
	79, 80, 773, 70, 1477, 69, 68, 1405, 67, 66,
	1474, 91, 77, 784, 1476, 1473, 1475, 1479, 1480, 1034,
	87, 1038, 1478, 78, 760, 76, 75, 74, 65, 64,
	63, 136, 135, 134, 133, 764, 796, 1035, 1037, 1033,
	2253, 1036, 1022, 1021, 1031, 1032, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1023, 132, 130, 131, 129, 128, 792,
	127, 126, 125, 124, 1022, 1021, 1031, 1032, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1023, 1477, 1871, 43, 44,
	45, 46, 1474, 146, 145, 147, 1476, 1473, 1475, 1479,
	1480, 149, 151, 148, 1478, 793, 797, 153, 143, 141,
	144, 1022, 1021, 1031, 1032, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1023, 142, 781, 140, 779, 783, 800, 56,
	100, 17, 780, 777, 776, 24, 782, 767, 768, 766,
	769, 770, 771, 772, 4, 798, 0, 799, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 794, 795,
	0, 0, 0, 0, 1462, 1463, 1464, 1465, 1466, 1467,
	1468, 1469, 1470, 1471, 1472, 1484, 1485, 1486, 1487, 1488,
	1489, 1482, 1483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 790, 0, 0, 0, 0,
	0, 789, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 117, 117, 0, 117, 0, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1484, 1485, 1486,
	1487, 1488, 1489, 1482, 1483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 835, 619, 0, 0, 0, 0, 0, 835,
	0, 0, 353, 0, 0, 788, 0, 0, 0, 0,
	117, 0, 0, 0, 0, 574, 0, 0, 0, 293,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 458, 0, 459, 0, 0,
	610, 0, 463, 384, 337, 0, 0, 0, 0, 671,
	679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 567, 0, 0, 600, 648, 647, 587, 597, 0,
	0, 268, 197, 460, 0, 461, 588, 0, 596, 589,
	593, 592, 590, 591, 0, 663, 0, 1039, 0, 0,
	0, 0, 558, 571, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 568,
	569, 0, 0, 0, 0, 620, 0, 570, 0, 0,
	615, 594, 598, 0, 0, 0, 0, 258, 389, 406,
	269, 380, 419, 274, 387, 264, 352, 376, 0, 0,
	260, 404, 386, 334, 312, 313, 259, 0, 371, 291,
	304, 288, 350, 595, 618, 622, 287, 685, 616, 414,
	262, 0, 413, 349, 400, 405, 335, 329, 261, 402,
	333, 328, 316, 295, 686, 317, 318, 308, 361, 327,
	362, 309, 339, 338, 340, 0, 0, 0, 0, 0,
	442, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 613, 0, 0, 0, 416,
	0, 0, 669, 0, 0, 0, 388, 0, 0, 319,
	0, 0, 0, 617, 0, 374, 355, 682, 559, 0,
	372, 325, 401, 363, 407, 390, 415, 368, 364, 253,
	391, 290, 336, 265, 267, 285, 292, 294, 296, 297,
	345, 346, 358, 379, 392, 393, 394, 289, 275, 373,
	276, 306, 277, 254, 281, 280, 282, 381, 283, 256,
	359, 398, 0, 302, 369, 332, 257, 331, 360, 397,
	396, 266, 423, 429, 430, 0, 0, 435, 0, 0,
	0, 444, 449, 450, 451, 453, 454, 455, 456, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 1505, 1504,
	1506, 428, 320, 321, 322, 300, 250, 251, 473, 667,
	351, 0, 0, 0, 0, 681, 662, 664, 665, 668,
	672, 673, 674, 675, 676, 678, 680, 684, 472, 0,
	0, 0, 0, 2110, 469, 357, 0, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 409, 421, 438, 441, 0, 0, 0, 0, 255,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 621,
	0, 0, 341, 342, 343, 344, 670, 0, 273, 439,
	367, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 0, 433,
	434, 299, 305, 452, 307, 272, 356, 301, 418, 314,
	0, 445, 0, 446, 0, 0, 0, 0, 348, 310,
	311, 382, 315, 326, 370, 417, 354, 375, 270, 408,
	383, 330, 0, 0, 692, 666, 691, 693, 694, 690,
	695, 696, 677, 578, 0, 625, 688, 687, 689, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 248, 278, 279, 284, 470, 467, 399,
	471, 0, 252, 0, 324, 0, 365, 298, 0, 0,
	655, 632, 633, 634, 576, 635, 629, 630, 631, 656,
	623, 652, 653, 602, 626, 636, 651, 637, 654, 657,
	658, 697, 698, 643, 627, 220, 699, 640, 659, 650,
	649, 638, 624, 660, 661, 609, 604, 641, 642, 628,
	644, 645, 646, 577, 605, 606, 607, 608, 0, 0,
	0, 424, 425, 426, 448, 410, 0, 468, 174, 51,
	163, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 462, 0, 164, 0, 0, 0,
	0, 0, 0, 156, 0, 0, 0, 165, 0, 0,
	174, 51, 163, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 115, 117, 164, 0,
	0, 0, 0, 1682, 0, 156, 0, 0, 1644, 165,
	0, 103, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 0,
	0, 0, 0, 0, 0, 0, 0, 1684, 1653, 0,
	0, 0, 0, 103, 0, 0, 0, 1685, 1686, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1659, 0,
	0, 0, 0, 120, 121, 0, 122, 123, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1709, 1709, 1709,
	1709, 0, 0, 0, 0, 0, 0, 0, 0, 1709,
	0, 0, 0, 0, 0, 120, 121, 0, 122, 123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 532, 531, 538, 528, 0, 0,
	0, 0, 0, 0, 0, 1675, 535, 536, 0, 537,
	541, 0, 0, 523, 137, 162, 172, 0, 101, 0,
	0, 0, 0, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 155, 154, 0,
	0, 0, 0, 57, 0, 0, 137, 162, 172, 0,
	101, 0, 0, 0, 117, 0, 0, 0, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 155,
	154, 0, 0, 0, 0, 57, 1643, 1645, 1642, 117,
	1639, 0, 0, 0, 0, 1663, 117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 0, 157, 158, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1657, 1691, 0, 0,
	1658, 1660, 1662, 0, 1664, 1665, 1666, 1670, 1671, 1672,
	1674, 1677, 1678, 1679, 166, 0, 157, 158, 159, 0,
	0, 1667, 1676, 1668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1647, 111, 0, 0, 0, 160, 0,
	112, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 0, 1683, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 0, 0, 0,
	160, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	1640, 1641, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 526, 525, 0, 0, 0, 0, 113, 1680, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 50,
	0, 0, 534, 0, 0, 1656, 0, 0, 0, 549,
	1709, 0, 1655, 0, 0, 0, 527, 0, 0, 113,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 50, 0, 0, 0, 0, 1673, 0, 0, 0,
	0, 0, 0, 0, 0, 1661, 0, 0, 52, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1688, 1687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 0, 0, 169, 170, 0, 171, 0, 0, 0,
	0, 139, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1649, 0, 0, 0, 0, 169, 170, 0, 171, 0,
	0, 0, 0, 139, 529, 533, 539, 0, 540, 542,
	0, 0, 543, 544, 545, 0, 0, 547, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1690, 114, 39, 1689, 0, 0, 0, 0,
	49, 0, 0, 0, 5, 0, 0, 0, 118, 119,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 39, 0, 0, 0,
	0, 0, 49, 0, 0, 0, 0, 0, 0, 0,
	118, 119, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 574, 0, 0,
	0, 293, 1548, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 458, 0, 459,
	0, 0, 610, 0, 463, 384, 337, 0, 0, 117,
	0, 671, 679, 0, 0, 0, 117, 0, 0, 117,
	1733, 0, 0, 567, 0, 0, 600, 648, 647, 587,
	597, 0, 0, 268, 197, 460, 0, 461, 588, 0,
	596, 589, 593, 592, 590, 591, 0, 663, 0, 0,
	0, 0, 0, 0, 558, 571, 0, 575, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 568, 569, 0, 0, 0, 0, 620, 0, 570,
	0, 0, 1734, 594, 598, 0, 0, 0, 0, 258,
	389, 406, 269, 380, 419, 274, 387, 264, 352, 376,
	0, 0, 260, 404, 386, 334, 312, 313, 259, 0,
	371, 291, 304, 288, 350, 595, 618, 622, 287, 685,
	616, 414, 262, 0, 413, 349, 400, 405, 335, 329,
	261, 402, 333, 328, 316, 295, 686, 317, 318, 308,
	361, 327, 362, 309, 339, 338, 340, 117, 0, 0,
	0, 0, 442, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 613, 0, 0,
	0, 416, 0, 0, 669, 0, 0, 0, 388, 0,
	0, 319, 0, 0, 0, 617, 0, 374, 355, 682,
	559, 0, 372, 325, 401, 363, 407, 390, 415, 368,
	364, 253, 391, 290, 336, 265, 267, 285, 292, 294,
	296, 297, 345, 346, 358, 379, 392, 393, 394, 289,
	275, 373, 276, 306, 277, 254, 281, 280, 282, 381,
	283, 256, 359, 398, 0, 302, 369, 332, 257, 331,
	360, 397, 396, 266, 423, 429, 430, 0, 0, 435,
	0, 0, 0, 444, 449, 450, 451, 453, 454, 455,
	456, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 428, 320, 321, 322, 300, 250, 251,
	473, 667, 351, 0, 0, 0, 0, 681, 662, 664,
	665, 668, 672, 673, 674, 675, 676, 678, 680, 684,
	472, 0, 0, 0, 0, 0, 469, 357, 0, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 409, 421, 438, 441, 0, 0, 0,
	0, 255, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 621, 0, 0, 341, 342, 343, 344, 670, 0,
	273, 439, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 299, 305, 452, 307, 272, 356, 301,
	418, 314, 0, 445, 0, 446, 0, 0, 0, 0,
	348, 310, 311, 382, 315, 326, 370, 417, 354, 375,
	270, 408, 383, 330, 0, 0, 692, 666, 691, 693,
	694, 690, 695, 696, 677, 578, 0, 625, 688, 687,
	689, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 0, 248, 278, 279, 284, 470,
	467, 399, 471, 0, 252, 0, 324, 0, 365, 298,
	0, 0, 655, 632, 633, 634, 576, 635, 629, 630,
	631, 656, 623, 652, 653, 602, 626, 636, 651, 637,
	654, 657, 658, 697, 698, 643, 627, 220, 699, 640,
	659, 650, 649, 638, 624, 660, 661, 609, 604, 641,
	642, 628, 644, 645, 646, 577, 605, 606, 607, 608,
	174, 619, 0, 424, 425, 426, 448, 410, 0, 468,
	353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 574, 0, 474, 462, 293, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 458, 0, 459, 0, 0, 1042, 0,
	463, 384, 337, 0, 0, 0, 0, 671, 679, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 567,
	0, 0, 600, 648, 647, 587, 597, 0, 0, 268,
	197, 460, 0, 461, 588, 0, 596, 589, 593, 592,
	590, 591, 0, 663, 0, 0, 0, 0, 0, 0,
	558, 571, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 568, 569, 0,
	0, 0, 0, 620, 0, 570, 0, 0, 615, 594,
	598, 0, 0, 0, 0, 258, 389, 406, 269, 380,
	419, 274, 387, 264, 352, 376, 0, 0, 260, 404,
	386, 334, 312, 313, 259, 0, 371, 291, 304, 288,
	350, 595, 618, 622, 287, 685, 616, 414, 262, 0,
	413, 349, 400, 405, 335, 329, 261, 402, 333, 328,
	316, 295, 686, 317, 318, 308, 361, 327, 362, 309,
	339, 338, 340, 0, 0, 0, 0, 0, 442, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 613, 0, 0, 0, 416, 0, 0,
	669, 0, 0, 0, 388, 0, 0, 319, 0, 0,
	0, 617, 0, 374, 355, 682, 559, 0, 372, 325,
	401, 363, 407, 390, 415, 368, 364, 253, 391, 290,
	336, 265, 267, 285, 292, 294, 296, 297, 345, 346,
	358, 379, 392, 393, 394, 289, 275, 373, 276, 306,
	277, 254, 281, 280, 282, 381, 283, 256, 359, 398,
	0, 302, 369, 332, 257, 331, 360, 397, 396, 266,
	423, 429, 430, 0, 0, 435, 0, 0, 0, 444,
	449, 450, 451, 453, 454, 455, 456, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 428,
	320, 321, 322, 300, 250, 251, 473, 667, 351, 0,
	0, 0, 0, 681, 662, 664, 665, 668, 672, 673,
	674, 675, 676, 678, 680, 684, 472, 0, 0, 0,
	0, 0, 469, 357, 0, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 409,
	421, 438, 441, 0, 0, 0, 0, 255, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 621, 0, 0,
	341, 342, 343, 344, 670, 0, 273, 439, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 299,
	305, 452, 307, 272, 356, 301, 418, 314, 0, 445,
	0, 446, 0, 0, 0, 0, 348, 310, 311, 382,
	315, 326, 370, 417, 354, 375, 270, 408, 383, 330,
	0, 0, 692, 666, 691, 693, 694, 690, 695, 696,
	677, 578, 0, 625, 688, 687, 689, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	0, 248, 278, 279, 284, 470, 467, 399, 471, 0,
	252, 0, 324, 139, 365, 298, 0, 0, 655, 632,
	633, 634, 576, 635, 629, 630, 631, 656, 623, 652,
	653, 602, 626, 636, 651, 637, 654, 657, 658, 697,
	698, 643, 627, 220, 699, 640, 659, 650, 649, 638,
	624, 660, 661, 609, 604, 641, 642, 628, 644, 645,
	646, 577, 605, 606, 607, 608, 0, 619, 0, 424,
	425, 426, 448, 410, 0, 468, 353, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 574,
	0, 474, 462, 293, 3400, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 458,
	0, 459, 0, 0, 610, 0, 463, 384, 337, 0,
	0, 0, 0, 671, 679, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 567, 0, 0, 600, 648,
	647, 587, 597, 0, 0, 268, 197, 460, 0, 461,
	588, 0, 596, 589, 593, 592, 590, 591, 0, 663,
	0, 0, 0, 0, 0, 0, 558, 571, 0, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 568, 569, 0, 0, 0, 0, 620,
	0, 570, 0, 0, 615, 594, 598, 0, 0, 0,
	0, 258, 389, 406, 269, 380, 419, 274, 387, 264,
	352, 376, 0, 0, 260, 404, 386, 334, 312, 313,
	259, 0, 371, 291, 304, 288, 350, 595, 618, 622,
	287, 685, 616, 414, 262, 0, 413, 349, 400, 405,
	335, 329, 261, 402, 333, 328, 316, 295, 686, 317,
	318, 308, 361, 327, 362, 309, 339, 338, 340, 0,
	0, 0, 0, 0, 442, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 613,
	0, 0, 0, 416, 0, 0, 669, 0, 0, 0,
	388, 0, 0, 319, 0, 0, 0, 617, 0, 374,
	355, 682, 559, 0, 372, 325, 401, 363, 407, 390,
	415, 368, 364, 253, 391, 290, 336, 265, 267, 285,
	292, 294, 296, 297, 345, 346, 358, 379, 392, 393,
	394, 289, 275, 373, 276, 306, 277, 254, 281, 280,
	282, 381, 283, 256, 359, 398, 0, 302, 369, 332,
	257, 331, 360, 397, 396, 266, 423, 429, 430, 0,
	0, 435, 0, 0, 0, 444, 449, 450, 451, 453,
	454, 455, 456, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 428, 320, 321, 322, 300,
	250, 251, 473, 667, 351, 0, 0, 0, 0, 681,
	662, 664, 665, 668, 672, 673, 674, 675, 676, 678,
	680, 684, 472, 0, 0, 0, 0, 0, 469, 357,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 409, 421, 438, 441, 0,
	0, 0, 0, 255, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 621, 0, 0, 341, 342, 343, 344,
	670, 0, 273, 439, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 299, 305, 452, 307, 272,
	356, 301, 418, 314, 0, 445, 0, 446, 0, 0,
	0, 0, 348, 310, 311, 382, 315, 326, 370, 417,
	354, 375, 270, 408, 383, 330, 0, 0, 692, 666,
	691, 693, 694, 690, 695, 696, 677, 578, 0, 625,
	688, 687, 689, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 0, 248, 278, 279,
	284, 470, 467, 399, 471, 0, 252, 0, 324, 0,
	365, 298, 0, 0, 655, 632, 633, 634, 576, 635,
	629, 630, 631, 656, 623, 652, 653, 602, 626, 636,
	651, 637, 654, 657, 658, 697, 698, 643, 627, 220,
	699, 640, 659, 650, 649, 638, 624, 660, 661, 609,
	604, 641, 642, 628, 644, 645, 646, 577, 605, 606,
	607, 608, 0, 619, 0, 424, 425, 426, 448, 410,
	0, 468, 353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 574, 0, 474, 462, 293,
	1548, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 458, 0, 459, 0, 0,
	610, 0, 463, 384, 337, 0, 0, 0, 0, 671,
	679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 567, 0, 0, 600, 648, 647, 587, 597, 0,
	0, 268, 197, 460, 0, 461, 588, 0, 596, 589,
	593, 592, 590, 591, 0, 663, 0, 0, 0, 0,
	0, 0, 558, 571, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 568,
	569, 0, 0, 0, 0, 620, 0, 570, 0, 0,
	615, 594, 598, 0, 0, 0, 0, 258, 389, 406,
	269, 380, 419, 274, 387, 264, 352, 376, 0, 0,
	260, 404, 386, 334, 312, 313, 259, 0, 371, 291,
	304, 288, 350, 595, 618, 622, 287, 685, 616, 414,
	262, 0, 413, 349, 400, 405, 335, 329, 261, 402,
	333, 328, 316, 295, 686, 317, 318, 308, 361, 327,
	362, 309, 339, 338, 340, 0, 0, 0, 0, 0,
	442, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 613, 0, 0, 0, 416,
	0, 0, 669, 0, 0, 0, 388, 0, 0, 319,
	0, 0, 0, 617, 0, 374, 355, 682, 559, 0,
	372, 325, 401, 363, 407, 390, 415, 368, 364, 253,
	391, 290, 336, 265, 267, 285, 292, 294, 296, 297,
	345, 346, 358, 379, 392, 393, 394, 289, 275, 373,
	276, 306, 277, 254, 281, 280, 282, 381, 283, 256,
	359, 398, 0, 302, 369, 332, 257, 331, 360, 397,
	396, 266, 423, 429, 430, 0, 0, 435, 0, 0,
	0, 444, 449, 450, 451, 453, 454, 455, 456, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 428, 320, 321, 322, 300, 250, 251, 473, 667,
	351, 0, 0, 0, 0, 681, 662, 664, 665, 668,
	672, 673, 674, 675, 676, 678, 680, 684, 472, 0,
	0, 0, 0, 0, 469, 357, 0, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 409, 421, 438, 441, 0, 0, 0, 0, 255,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 621,
	0, 0, 341, 342, 343, 344, 670, 0, 273, 439,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 299, 305, 452, 307, 272, 356, 301, 418, 314,
	0, 445, 0, 446, 0, 0, 0, 0, 348, 310,
	311, 382, 315, 326, 370, 417, 354, 375, 270, 408,
	383, 330, 0, 0, 692, 666, 691, 693, 694, 690,
	695, 696, 677, 578, 0, 625, 688, 687, 689, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 248, 278, 279, 284, 470, 467, 399,
	471, 0, 252, 0, 324, 0, 365, 298, 0, 0,
	655, 632, 633, 634, 576, 635, 629, 630, 631, 656,
	623, 652, 653, 602, 626, 636, 651, 637, 654, 657,
	658, 697, 698, 643, 627, 220, 699, 640, 659, 650,
	649, 638, 624, 660, 661, 609, 604, 641, 642, 628,
	644, 645, 646, 577, 605, 606, 607, 608, 0, 619,
	0, 424, 425, 426, 448, 410, 0, 468, 353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 574, 0, 474, 462, 293, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 458, 0, 459, 0, 0, 610, 0, 463, 384,
	337, 0, 0, 0, 0, 671, 679, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 567, 0, 0,
	600, 648, 647, 587, 597, 0, 0, 268, 197, 460,
	0, 461, 588, 0, 596, 589, 593, 592, 590, 591,
	0, 663, 0, 0, 0, 0, 0, 0, 558, 571,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 569, 1294, 0, 0,
	0, 620, 0, 570, 0, 0, 615, 594, 598, 0,
	0, 0, 0, 258, 389, 406, 269, 380, 419, 274,
	387, 264, 352, 376, 0, 0, 260, 404, 386, 334,
	312, 313, 259, 0, 371, 291, 304, 288, 350, 595,
	618, 622, 287, 685, 616, 414, 262, 0, 413, 349,
	400, 405, 335, 329, 261, 402, 333, 328, 316, 295,
	686, 317, 318, 308, 361, 327, 362, 309, 339, 338,
	340, 0, 0, 0, 0, 0, 442, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 613, 0, 0, 0, 416, 0, 0, 669, 0,
	0, 0, 388, 0, 0, 319, 0, 0, 0, 617,
	0, 374, 355, 682, 559, 0, 372, 325, 401, 363,
	407, 390, 415, 368, 364, 253, 391, 290, 336, 265,
	267, 285, 292, 294, 296, 297, 345, 346, 358, 379,
	392, 393, 394, 289, 275, 373, 276, 306, 277, 254,
	281, 280, 282, 381, 283, 256, 359, 398, 0, 302,
	369, 332, 257, 331, 360, 397, 396, 266, 423, 429,
	430, 0, 0, 435, 0, 0, 0, 444, 449, 450,
	451, 453, 454, 455, 456, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 428, 320, 321,
	322, 300, 250, 251, 473, 667, 351, 0, 0, 0,
	0, 681, 662, 664, 665, 668, 672, 673, 674, 675,
	676, 678, 680, 684, 472, 0, 0, 0, 0, 0,
	469, 357, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 409, 421, 438,
	441, 0, 0, 0, 0, 255, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 621, 0, 0, 341, 342,
	343, 344, 670, 0, 273, 439, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 299, 305, 452,
	307, 272, 356, 301, 418, 314, 0, 445, 0, 446,
	0, 0, 0, 0, 348, 310, 311, 382, 315, 326,
	370, 417, 354, 375, 270, 408, 383, 330, 0, 0,
	692, 666, 691, 693, 694, 690, 695, 696, 677, 578,
	0, 625, 688, 687, 689, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 0, 248,
	278, 279, 284, 470, 467, 399, 471, 0, 252, 0,
	324, 0, 365, 298, 0, 0, 655, 632, 633, 634,
	576, 635, 629, 630, 631, 656, 623, 652, 653, 602,
	626, 636, 651, 637, 654, 657, 658, 697, 698, 643,
	627, 220, 699, 640, 659, 650, 649, 638, 624, 660,
	661, 609, 604, 641, 642, 628, 644, 645, 646, 577,
	605, 606, 607, 608, 0, 0, 0, 424, 425, 426,
	448, 410, 619, 468, 0, 1893, 0, 0, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 0, 0, 474,
	462, 0, 0, 0, 574, 0, 0, 0, 293, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 458, 0, 459, 0, 0, 610,
	0, 463, 384, 337, 0, 0, 0, 0, 671, 679,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	567, 0, 0, 600, 648, 647, 587, 597, 0, 0,
	268, 197, 460, 0, 461, 588, 0, 596, 589, 593,
	592, 590, 591, 0, 663, 0, 0, 0, 0, 0,
	0, 558, 571, 0, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 568, 569,
	0, 0, 0, 0, 620, 0, 570, 0, 0, 615,
	594, 598, 0, 0, 0, 0, 258, 389, 406, 269,
	380, 419, 274, 387, 264, 352, 376, 0, 0, 260,
	404, 386, 334, 312, 313, 259, 0, 371, 291, 304,
	288, 350, 595, 618, 622, 287, 685, 616, 414, 262,
	0, 413, 349, 400, 405, 335, 329, 261, 402, 333,
	328, 316, 295, 686, 317, 318, 308, 361, 327, 362,
	309, 339, 338, 340, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 613, 0, 0, 0, 416, 0,
	0, 669, 0, 0, 0, 388, 0, 0, 319, 0,
	0, 0, 617, 0, 374, 355, 682, 559, 0, 372,
	325, 401, 363, 407, 390, 415, 368, 364, 253, 391,
	290, 336, 265, 267, 285, 292, 294, 296, 297, 345,
	346, 358, 379, 392, 393, 394, 289, 275, 373, 276,
	306, 277, 254, 281, 280, 282, 381, 283, 256, 359,
	398, 0, 302, 369, 332, 257, 331, 360, 397, 396,
	266, 423, 429, 430, 0, 0, 435, 0, 0, 0,
	444, 449, 450, 451, 453, 454, 455, 456, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	428, 320, 321, 322, 300, 250, 251, 473, 667, 351,
	0, 0, 0, 0, 681, 662, 664, 665, 668, 672,
	673, 674, 675, 676, 678, 680, 684, 472, 0, 0,
	0, 0, 0, 469, 357, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	409, 421, 438, 441, 0, 0, 0, 0, 255, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 621, 0,
	0, 341, 342, 343, 344, 670, 0, 273, 439, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 692, 666, 691, 693, 694, 690, 695,
	696, 677, 578, 0, 625, 688, 687, 689, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 470, 467, 399, 471,
	0, 252, 0, 324, 0, 365, 298, 0, 0, 655,
	632, 633, 634, 576, 635, 629, 630, 631, 656, 623,
	652, 653, 602, 626, 636, 651, 637, 654, 657, 658,
	697, 698, 643, 627, 220, 699, 640, 659, 650, 649,
	638, 624, 660, 661, 609, 604, 641, 642, 628, 644,
	645, 646, 577, 605, 606, 607, 608, 0, 619, 0,
	424, 425, 426, 448, 410, 0, 468, 353, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	574, 0, 474, 462, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	458, 0, 459, 0, 0, 610, 0, 463, 384, 337,
	0, 0, 0, 0, 671, 679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 567, 0, 0, 600,
	648, 647, 587, 597, 0, 0, 268, 197, 460, 0,
	461, 588, 0, 596, 589, 593, 592, 590, 591, 0,
	663, 0, 0, 0, 0, 0, 0, 558, 571, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 568, 569, 0, 0, 0, 0,
	620, 0, 570, 0, 0, 615, 594, 598, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 595, 618,
	622, 287, 685, 616, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 686,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	613, 0, 0, 0, 416, 0, 0, 669, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 617, 0,
	374, 355, 682, 559, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 667, 351, 0, 0, 0, 0,
	681, 662, 664, 665, 668, 672, 673, 674, 675, 676,
	678, 680, 684, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 621, 0, 0, 341, 342, 343,
	344, 670, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 692,
	666, 691, 693, 694, 690, 695, 696, 677, 578, 0,
	625, 688, 687, 689, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 655, 632, 633, 634, 576,
	635, 629, 630, 631, 656, 623, 652, 653, 602, 626,
	636, 651, 637, 654, 657, 658, 697, 698, 643, 627,
	220, 699, 640, 659, 650, 649, 638, 624, 660, 661,
	609, 604, 641, 642, 628, 644, 645, 646, 577, 605,
	606, 607, 608, 0, 619, 0, 424, 425, 426, 448,
	410, 0, 468, 353, 0, 0, 0, 0, 0, 0,
	0, 0, 1423, 0, 0, 0, 574, 0, 474, 462,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 458, 0, 459, 0,
	0, 610, 0, 463, 384, 337, 0, 0, 0, 0,
	671, 679, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 567, 0, 0, 600, 648, 647, 587, 597,
	0, 0, 268, 197, 460, 0, 461, 588, 0, 596,
	589, 593, 592, 590, 591, 0, 663, 0, 0, 0,
	0, 0, 0, 0, 571, 0, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 569, 0, 0, 0, 0, 620, 0, 570, 0,
	0, 615, 594, 598, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 595, 618, 622, 287, 685, 616,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 686, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 613, 0, 0, 0,
	416, 0, 0, 669, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 617, 0, 374, 355, 682, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 1424, 1425, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	667, 351, 0, 0, 0, 0, 681, 662, 664, 665,
	668, 672, 673, 674, 675, 676, 678, 680, 684, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	621, 0, 0, 341, 342, 343, 344, 670, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 692, 666, 691, 693, 694,
	690, 695, 696, 677, 578, 0, 625, 688, 687, 689,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 655, 632, 633, 634, 576, 635, 629, 630, 631,
	656, 623, 652, 653, 602, 626, 636, 651, 637, 654,
	657, 658, 697, 698, 643, 627, 220, 699, 640, 659,
	650, 649, 638, 624, 660, 661, 609, 604, 641, 642,
	628, 644, 645, 646, 577, 605, 606, 607, 608, 0,
	619, 0, 424, 425, 426, 448, 410, 0, 468, 353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 574, 0, 474, 462, 293, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 458, 0, 459, 0, 0, 610, 0, 463,
	384, 337, 0, 0, 0, 0, 671, 679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 648, 647, 587, 597, 0, 0, 268, 197,
	460, 0, 461, 588, 0, 596, 589, 593, 592, 590,
	591, 0, 663, 0, 0, 0, 0, 0, 0, 558,
	571, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 568, 569, 0, 0,
	0, 0, 620, 0, 570, 0, 0, 615, 594, 598,
	0, 0, 0, 0, 258, 389, 406, 269, 380, 419,
	274, 387, 264, 352, 376, 0, 0, 260, 404, 386,
	334, 312, 313, 259, 0, 371, 291, 304, 288, 350,
	595, 618, 622, 287, 685, 616, 414, 262, 0, 413,
	349, 400, 405, 335, 329, 261, 402, 333, 328, 316,
	295, 686, 317, 318, 308, 361, 327, 362, 309, 339,
	338, 340, 0, 0, 0, 0, 0, 442, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 613, 0, 0, 0, 416, 0, 0, 669,
	0, 0, 0, 388, 0, 0, 319, 0, 0, 0,
	617, 0, 374, 355, 682, 559, 0, 372, 325, 401,
	363, 407, 390, 415, 368, 364, 253, 391, 290, 336,
	265, 267, 285, 292, 294, 296, 297, 345, 346, 358,
	379, 392, 393, 394, 289, 275, 373, 276, 306, 277,
	254, 281, 280, 282, 381, 283, 256, 359, 398, 0,
	302, 369, 332, 257, 331, 360, 397, 396, 266, 423,
	429, 430, 0, 0, 435, 0, 0, 0, 444, 449,
	450, 451, 453, 454, 455, 456, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 428, 320,
	321, 322, 300, 250, 251, 473, 667, 351, 0, 0,
	0, 0, 681, 662, 664, 665, 668, 672, 673, 674,
	675, 676, 678, 680, 684, 472, 0, 0, 0, 0,
	0, 469, 357, 0, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 409, 421,
	438, 441, 0, 0, 0, 0, 255, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 621, 0, 0, 341,
	342, 343, 344, 670, 0, 273, 439, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 299, 305,
	452, 307, 272, 356, 301, 418, 314, 0, 445, 0,
	446, 0, 0, 0, 0, 348, 310, 311, 382, 315,
	326, 370, 417, 354, 375, 270, 408, 383, 330, 0,
	0, 692, 666, 691, 693, 694, 690, 695, 696, 677,
	578, 0, 625, 688, 687, 689, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 0,
	248, 278, 279, 284, 470, 467, 399, 471, 0, 252,
	0, 324, 0, 365, 298, 0, 0, 655, 632, 633,
	634, 576, 635, 629, 630, 631, 656, 623, 652, 653,
	602, 626, 636, 651, 637, 654, 657, 658, 697, 698,
	643, 627, 220, 699, 640, 659, 650, 649, 638, 624,
	660, 661, 609, 604, 641, 642, 628, 644, 645, 646,
	577, 605, 606, 607, 608, 0, 619, 0, 424, 425,
	426, 448, 410, 0, 468, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 574, 0,
	474, 462, 293, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 458, 0,
	459, 0, 0, 610, 0, 463, 384, 337, 0, 0,
	0, 0, 671, 679, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 567, 0, 0, 600, 648, 647,
	587, 597, 0, 0, 268, 197, 460, 0, 461, 588,
	0, 596, 589, 593, 592, 590, 591, 0, 663, 0,
	0, 0, 0, 0, 0, 0, 571, 0, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 568, 569, 0, 0, 0, 0, 620, 0,
	570, 0, 0, 615, 594, 598, 0, 0, 0, 0,
	258, 389, 406, 269, 380, 419, 274, 387, 264, 352,
	376, 0, 0, 260, 404, 386, 334, 312, 313, 259,
	0, 371, 291, 304, 288, 350, 595, 618, 622, 287,
	685, 616, 414, 262, 0, 413, 349, 400, 405, 335,
	329, 261, 402, 333, 328, 316, 295, 686, 317, 318,
	308, 361, 327, 362, 309, 339, 338, 340, 0, 0,
	0, 0, 0, 442, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 613, 0,
	0, 0, 416, 0, 0, 669, 0, 0, 0, 388,
	0, 0, 319, 0, 0, 0, 617, 0, 374, 355,
	682, 0, 0, 372, 325, 401, 363, 407, 390, 415,
	368, 364, 253, 391, 290, 336, 265, 267, 285, 292,
	294, 296, 297, 345, 346, 358, 379, 392, 393, 394,
	289, 275, 373, 276, 306, 277, 254, 281, 280, 282,
	381, 283, 256, 359, 398, 0, 302, 369, 332, 257,
	331, 360, 397, 396, 266, 423, 429, 430, 0, 0,
	435, 0, 0, 0, 444, 449, 450, 451, 453, 454,
	455, 456, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 428, 320, 321, 322, 300, 250,
	251, 473, 667, 351, 0, 0, 0, 0, 681, 662,
	664, 665, 668, 672, 673, 674, 675, 676, 678, 680,
	684, 472, 0, 0, 0, 0, 0, 469, 357, 0,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 409, 421, 438, 441, 0, 0,
	0, 0, 255, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 621, 0, 0, 341, 342, 343, 344, 670,
	0, 273, 439, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 299, 305, 452, 307, 272, 356,
	301, 418, 314, 0, 445, 0, 446, 0, 0, 0,
	0, 348, 310, 311, 382, 315, 326, 370, 417, 354,
	375, 270, 408, 383, 330, 0, 0, 692, 666, 691,
	693, 694, 690, 695, 696, 677, 578, 0, 625, 688,
	687, 689, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 248, 278, 279, 284,
	470, 467, 399, 471, 0, 252, 0, 324, 0, 365,
	298, 0, 0, 655, 632, 633, 634, 576, 635, 629,
	630, 631, 656, 623, 652, 653, 602, 626, 636, 651,
	637, 654, 657, 658, 697, 698, 643, 627, 220, 699,
	640, 659, 650, 649, 638, 624, 660, 661, 609, 604,
	641, 642, 628, 644, 645, 646, 577, 605, 606, 607,
	608, 0, 0, 0, 424, 425, 426, 448, 410, 0,
	468, 174, 51, 163, 138, 0, 0, 0, 0, 0,
	0, 353, 0, 0, 0, 0, 474, 462, 0, 164,
	0, 0, 0, 0, 0, 0, 156, 0, 293, 0,
	165, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 458, 0, 459, 0, 0, 115,
	0, 463, 384, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	168, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 460, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 389, 406, 269,
	380, 419, 274, 387, 264, 352, 376, 0, 0, 260,
	404, 386, 334, 312, 313, 259, 0, 371, 291, 304,
	288, 350, 0, 403, 431, 287, 422, 0, 414, 262,
	0, 413, 349, 400, 405, 335, 329, 261, 402, 333,
	328, 316, 295, 447, 317, 318, 308, 361, 327, 362,
	309, 339, 338, 340, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 0, 0, 137, 162, 172,
	0, 101, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 189, 0, 0, 0, 388, 0, 0, 319, 161,
	155, 154, 432, 0, 374, 355, 57, 0, 0, 372,
	325, 401, 363, 407, 390, 415, 368, 364, 253, 391,
	290, 336, 265, 267, 285, 292, 294, 296, 297, 345,
	346, 358, 379, 392, 393, 394, 289, 275, 373, 276,
	306, 277, 254, 281, 280, 282, 381, 283, 256, 359,
	398, 0, 302, 369, 332, 257, 331, 360, 397, 396,
	266, 423, 429, 430, 0, 0, 435, 157, 158, 159,
	444, 449, 450, 451, 453, 454, 455, 456, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	428, 320, 321, 322, 300, 250, 251, 411, 286, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 427, 192, 0, 0, 457, 200, 0, 0,
	0, 160, 0, 201, 357, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	409, 421, 438, 441, 0, 0, 0, 0, 255, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 436, 0,
	0, 341, 342, 343, 344, 303, 0, 273, 439, 367,
	113, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 50, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 52, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 366, 263, 399, 377,
	0, 252, 0, 324, 139, 365, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 0, 353, 0,
	424, 425, 426, 448, 410, 0, 202, 39, 190, 193,
	195, 194, 0, 49, 0, 293, 0, 5, 323, 0,
	0, 118, 203, 462, 0, 0, 0, 0, 0, 0,
	0, 458, 0, 459, 0, 0, 0, 0, 463, 384,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1075, 0, 0,
	196, 0, 0, 587, 597, 0, 0, 268, 197, 460,
	0, 461, 588, 0, 596, 589, 593, 592, 590, 591,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 594, 0, 0,
	0, 0, 0, 258, 389, 406, 269, 380, 419, 274,
	387, 264, 352, 376, 0, 0, 260, 404, 386, 334,
	312, 313, 259, 0, 371, 291, 304, 288, 350, 595,
	403, 431, 287, 422, 0, 414, 262, 0, 413, 349,
	400, 405, 335, 329, 261, 402, 333, 328, 316, 295,
	447, 317, 318, 308, 361, 327, 362, 309, 339, 338,
	340, 0, 0, 0, 0, 0, 442, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 319, 0, 0, 0, 432,
	0, 374, 355, 0, 0, 0, 372, 325, 401, 363,
	407, 390, 415, 368, 364, 253, 391, 290, 336, 265,
	267, 285, 292, 294, 296, 297, 345, 346, 358, 379,
	392, 393, 394, 289, 275, 373, 276, 306, 277, 254,
	281, 280, 282, 381, 283, 256, 359, 398, 0, 302,
	369, 332, 257, 331, 360, 397, 396, 266, 423, 429,
	430, 0, 0, 435, 0, 0, 0, 444, 449, 450,
	451, 453, 454, 455, 456, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 428, 320, 321,
	322, 300, 250, 251, 473, 286, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 427,
	0, 0, 0, 457, 472, 0, 0, 0, 0, 0,
	469, 357, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 409, 421, 438,
	441, 0, 0, 0, 0, 255, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 436, 0, 0, 341, 342,
	343, 344, 303, 0, 273, 439, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 299, 305, 452,
	307, 272, 356, 301, 418, 314, 0, 445, 0, 446,
	0, 0, 0, 0, 348, 310, 311, 382, 315, 326,
	370, 417, 354, 375, 270, 408, 383, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 0, 248,
	278, 279, 284, 470, 467, 399, 471, 0, 252, 0,
	324, 0, 365, 298, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 0, 249,
	244, 245, 246, 247, 0, 0, 0, 424, 425, 426,
	448, 410, 0, 468, 174, 51, 163, 138, 0, 0,
	0, 0, 0, 0, 353, 491, 0, 0, 0, 474,
	462, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 458, 0, 459,
	0, 0, 0, 0, 463, 384, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 496, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 268, 197, 460, 0, 461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	389, 406, 269, 380, 419, 274, 387, 264, 352, 376,
	0, 0, 260, 404, 386, 334, 312, 313, 259, 0,
	371, 291, 304, 288, 350, 0, 403, 431, 287, 422,
	0, 414, 262, 0, 413, 349, 400, 405, 335, 329,
	261, 402, 333, 328, 316, 295, 447, 317, 318, 308,
	361, 327, 362, 309, 339, 338, 340, 0, 0, 0,
	0, 0, 442, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 319, 0, 0, 0, 432, 0, 374, 355, 0,
	0, 0, 372, 325, 401, 363, 407, 390, 415, 368,
	364, 253, 391, 290, 336, 265, 267, 285, 292, 294,
	296, 297, 345, 346, 358, 379, 392, 393, 394, 289,
	275, 373, 276, 306, 277, 254, 281, 280, 282, 381,
	283, 256, 359, 398, 0, 302, 369, 332, 257, 331,
	360, 397, 396, 266, 423, 429, 430, 0, 0, 435,
	0, 0, 0, 444, 449, 450, 451, 453, 454, 455,
	456, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 428, 320, 321, 322, 300, 250, 251,
	473, 286, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 427, 0, 0, 0, 457,
	472, 0, 0, 0, 0, 0, 469, 357, 0, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 409, 421, 438, 441, 0, 0, 0,
	0, 255, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 436, 0, 0, 341, 342, 343, 344, 492, 494,
	273, 439, 367, 504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 299, 305, 452, 307, 272, 356, 301,
	418, 314, 0, 445, 0, 446, 0, 0, 0, 0,
	348, 310, 311, 382, 315, 326, 370, 417, 354, 375,
	270, 408, 383, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 0, 248, 278, 279, 284, 470,
	467, 399, 471, 0, 252, 0, 324, 139, 365, 298,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 219, 220, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 353, 249, 244, 245, 246, 247,
	0, 0, 901, 424, 425, 426, 448, 410, 0, 468,
	0, 293, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 462, 458, 0, 459,
	0, 0, 0, 0, 463, 384, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 268, 197, 460, 0, 461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 887, 0, 0, 0, 0, 0, 0, 258,
	389, 406, 269, 380, 419, 274, 387, 264, 352, 376,
	0, 0, 2163, 2165, 2166, 2167, 2168, 2169, 2170, 0,
	2175, 2171, 2172, 2173, 2174, 0, 2158, 2159, 2160, 2161,
	885, 2142, 2164, 0, 2143, 349, 2144, 2145, 2146, 2147,
	2148, 2149, 2150, 2151, 2152, 2155, 2156, 2153, 2154, 2162,
	361, 327, 362, 309, 339, 338, 340, 912, 914, 916,
	918, 921, 442, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 319, 0, 0, 0, 2157, 0, 374, 355, 0,
	0, 0, 372, 325, 401, 363, 407, 390, 415, 368,
	364, 253, 391, 290, 336, 265, 267, 285, 292, 294,
	296, 297, 345, 346, 358, 379, 392, 393, 394, 289,
	275, 373, 276, 306, 277, 254, 281, 280, 282, 381,
	283, 256, 359, 398, 0, 302, 369, 332, 257, 331,
	360, 397, 396, 266, 423, 429, 430, 0, 0, 435,
	0, 0, 0, 444, 449, 450, 451, 453, 454, 455,
	456, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 428, 320, 321, 322, 300, 250, 251,
	473, 286, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 427, 0, 0, 0, 457,
	472, 0, 0, 0, 0, 0, 469, 357, 0, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 409, 421, 438, 441, 0, 0, 0,
	0, 255, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 436, 0, 0, 341, 342, 343, 344, 303, 0,
	273, 439, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 299, 305, 452, 307, 272, 356, 301,
	418, 314, 0, 445, 0, 446, 0, 0, 0, 0,
	348, 310, 311, 382, 315, 326, 370, 417, 354, 375,
	270, 408, 383, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 0, 248, 278, 279, 284, 470,
	467, 399, 471, 0, 252, 911, 324, 0, 365, 298,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 219, 220, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 353, 249, 244, 245, 246, 247,
	0, 0, 0, 424, 425, 426, 448, 410, 0, 468,
	0, 293, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 462, 458, 0, 459,
	0, 0, 0, 0, 463, 384, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 268, 197, 460, 0, 461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 2017, 2020,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	389, 406, 269, 380, 419, 274, 387, 264, 352, 376,
	0, 0, 260, 404, 386, 334, 312, 313, 259, 0,
	371, 291, 304, 288, 350, 0, 403, 431, 287, 422,
	0, 414, 262, 0, 413, 349, 400, 405, 335, 329,
	261, 402, 333, 328, 316, 295, 447, 317, 318, 308,
	361, 327, 362, 309, 339, 338, 340, 0, 0, 0,
	0, 0, 442, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2021, 416, 0, 0, 0, 2016, 0, 2015, 388, 2013,
	2018, 319, 0, 0, 0, 432, 0, 374, 355, 0,
	0, 0, 372, 325, 401, 363, 407, 390, 415, 368,
	364, 253, 391, 290, 336, 265, 267, 285, 292, 294,
	296, 297, 345, 346, 358, 379, 392, 393, 394, 289,
	275, 373, 276, 306, 277, 254, 281, 280, 282, 381,
	283, 256, 359, 398, 2019, 302, 369, 332, 257, 331,
	360, 397, 396, 266, 423, 429, 430, 0, 0, 435,
	0, 0, 0, 444, 449, 450, 451, 453, 454, 455,
	456, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 428, 320, 321, 322, 300, 250, 251,
	473, 286, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 427, 0, 0, 0, 457,
	472, 0, 0, 0, 0, 0, 469, 357, 0, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 409, 421, 438, 441, 0, 0, 0,
	0, 255, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 436, 0, 0, 341, 342, 343, 344, 303, 0,
	273, 439, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 299, 305, 452, 307, 272, 356, 301,
	418, 314, 0, 445, 0, 446, 0, 0, 0, 0,
	348, 310, 311, 382, 315, 326, 370, 417, 354, 375,
	270, 408, 383, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 0, 248, 278, 279, 284, 470,
	467, 399, 471, 0, 252, 0, 324, 0, 365, 298,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 219, 220, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 0, 249, 244, 245, 246, 247,
	353, 0, 0, 424, 425, 426, 448, 410, 0, 468,
	0, 0, 1773, 0, 0, 0, 0, 293, 0, 0,
	323, 0, 0, 0, 0, 474, 462, 0, 0, 0,
	0, 0, 0, 458, 0, 459, 0, 0, 0, 0,
	463, 384, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 1774, 0, 0, 0, 268,
	197, 460, 0, 461, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 1008, 1009, 1010, 1007,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 389, 406, 269, 380,
	419, 274, 387, 264, 352, 376, 0, 0, 260, 404,
	386, 334, 312, 313, 259, 0, 371, 291, 304, 288,
	350, 0, 403, 431, 287, 422, 0, 414, 262, 0,
	413, 349, 400, 405, 335, 329, 261, 402, 333, 328,
	316, 295, 447, 317, 318, 308, 361, 327, 362, 309,
	339, 338, 340, 0, 0, 0, 0, 0, 442, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 319, 0, 0,
	0, 432, 0, 374, 355, 0, 0, 0, 372, 325,
	401, 363, 407, 390, 415, 368, 364, 253, 391, 290,
	336, 265, 267, 285, 292, 294, 296, 297, 345, 346,
	358, 379, 392, 393, 394, 289, 275, 373, 276, 306,
	277, 254, 281, 280, 282, 381, 283, 256, 359, 398,
	0, 302, 369, 332, 257, 331, 360, 397, 396, 266,
	423, 429, 430, 0, 0, 435, 0, 0, 0, 444,
	449, 450, 451, 453, 454, 455, 456, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 428,
	320, 321, 322, 300, 250, 251, 473, 286, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 427, 0, 0, 0, 457, 472, 0, 0, 0,
	0, 0, 469, 357, 0, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 409,
	421, 438, 441, 0, 0, 0, 0, 255, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 436, 0, 0,
	341, 342, 343, 344, 303, 0, 273, 439, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 299,
	305, 452, 307, 272, 356, 301, 418, 314, 0, 445,
	0, 446, 0, 0, 0, 0, 348, 310, 311, 382,
	315, 326, 370, 417, 354, 375, 270, 408, 383, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	0, 248, 278, 279, 284, 470, 467, 399, 471, 0,
	252, 0, 324, 0, 365, 298, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 219, 220, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	353, 249, 244, 245, 246, 247, 0, 0, 0, 424,
	425, 426, 448, 410, 0, 468, 0, 293, 818, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 462, 458, 0, 459, 0, 0, 0, 0,
	463, 384, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 825, 826, 0, 0, 0, 0, 268,
	197, 460, 0, 461, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 389, 813, 269, 380,
	419, 274, 387, 264, 352, 376, 0, 0, 260, 404,
	386, 334, 312, 313, 259, 0, 371, 291, 304, 288,
	350, 0, 403, 431, 287, 422, 803, 414, 262, 802,
	413, 349, 400, 405, 335, 329, 261, 402, 333, 328,
	316, 295, 447, 317, 318, 308, 361, 327, 362, 309,
	339, 338, 340, 0, 0, 0, 0, 0, 442, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 319, 0, 0,
	0, 432, 0, 374, 355, 0, 0, 0, 372, 325,
	401, 363, 407, 390, 415, 816, 364, 253, 391, 290,
	336, 265, 267, 285, 292, 294, 296, 297, 345, 346,
	358, 379, 392, 393, 394, 289, 275, 373, 276, 306,
	277, 254, 281, 280, 282, 381, 283, 256, 359, 398,
	0, 302, 369, 332, 257, 331, 360, 397, 396, 266,
	423, 429, 430, 0, 0, 435, 0, 0, 0, 444,
	449, 450, 451, 453, 454, 455, 456, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 428,
	320, 321, 322, 300, 250, 251, 473, 286, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 427, 0, 0, 0, 457, 472, 0, 0, 0,
	0, 0, 469, 357, 0, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 409,
	421, 438, 441, 0, 0, 0, 0, 255, 440, 0,
	0, 0, 0, 0, 0, 817, 0, 412, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 820, 0, 0,
	341, 342, 343, 344, 303, 0, 273, 439, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 299,
	305, 452, 307, 272, 356, 301, 418, 314, 0, 445,
	0, 446, 0, 0, 0, 0, 827, 814, 823, 815,
	315, 326, 370, 417, 354, 375, 270, 408, 383, 824,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	0, 248, 278, 279, 284, 470, 467, 399, 471, 0,
	252, 0, 324, 0, 365, 298, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 219, 220, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	353, 249, 244, 245, 246, 247, 0, 0, 0, 424,
	425, 426, 448, 410, 0, 468, 0, 293, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 462, 458, 0, 459, 0, 0, 0, 0,
	463, 384, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 268,
	197, 460, 0, 461, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 389, 406, 269, 380,
	419, 274, 387, 264, 352, 376, 0, 0, 260, 404,
	386, 334, 312, 313, 259, 0, 371, 291, 304, 288,
	350, 0, 403, 431, 287, 422, 0, 414, 262, 0,
	413, 349, 400, 405, 335, 329, 261, 402, 333, 328,
	316, 295, 447, 317, 318, 308, 361, 327, 362, 309,
	339, 338, 340, 0, 0, 0, 0, 0, 442, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2036, 416, 0, 0,
	0, 2041, 2039, 0, 388, 0, 2040, 319, 0, 0,
	0, 432, 0, 374, 355, 0, 0, 0, 372, 325,
	401, 363, 407, 390, 415, 368, 364, 253, 391, 290,
	336, 265, 267, 285, 292, 294, 296, 297, 345, 346,
	358, 379, 392, 393, 394, 289, 275, 373, 276, 306,
	277, 254, 281, 280, 282, 381, 283, 256, 359, 398,
	0, 302, 369, 332, 257, 331, 360, 397, 396, 266,
	423, 429, 430, 0, 0, 435, 0, 0, 0, 444,
	449, 450, 451, 453, 454, 455, 456, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 428,
	320, 321, 322, 300, 250, 251, 473, 286, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 427, 0, 0, 0, 457, 472, 0, 0, 0,
	0, 0, 469, 357, 0, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 409,
	421, 438, 441, 0, 0, 0, 0, 255, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 436, 0, 0,
	341, 342, 343, 344, 303, 0, 273, 439, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 299,
	305, 452, 307, 272, 356, 301, 418, 314, 0, 445,
	0, 446, 0, 0, 0, 0, 348, 310, 311, 382,
	315, 326, 370, 417, 354, 375, 270, 408, 383, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	0, 248, 278, 279, 284, 470, 467, 399, 471, 0,
	252, 0, 324, 0, 365, 298, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 219, 220, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 174, 0,
	0, 249, 244, 245, 246, 247, 0, 0, 353, 424,
	425, 426, 448, 410, 0, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 0, 0, 323, 0,
	0, 474, 462, 0, 0, 0, 0, 0, 0, 0,
	0, 458, 0, 459, 0, 0, 115, 0, 463, 384,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 1817, 0,
	196, 0, 0, 0, 0, 0, 0, 268, 197, 460,
	0, 461, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 389, 406, 269, 380, 419, 274,
	387, 264, 352, 376, 0, 0, 260, 404, 386, 334,
	312, 313, 259, 0, 371, 291, 304, 288, 350, 0,
	403, 431, 287, 422, 0, 414, 262, 0, 413, 349,
	400, 405, 335, 329, 261, 402, 333, 328, 316, 295,
	447, 317, 318, 308, 361, 327, 362, 309, 339, 338,
	340, 0, 0, 0, 0, 0, 442, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 319, 0, 0, 0, 432,
	0, 374, 355, 0, 0, 0, 372, 325, 401, 363,
	407, 390, 415, 368, 364, 253, 391, 290, 336, 265,
	267, 285, 292, 294, 296, 297, 345, 346, 358, 379,
	392, 393, 394, 289, 275, 373, 276, 306, 277, 254,
	281, 280, 282, 381, 283, 256, 359, 398, 0, 302,
	369, 332, 257, 331, 360, 397, 396, 266, 423, 429,
	430, 0, 0, 435, 0, 0, 0, 444, 449, 450,
	451, 453, 454, 455, 456, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 428, 320, 321,
	322, 300, 250, 251, 473, 286, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 427,
	0, 0, 0, 457, 472, 0, 0, 0, 0, 0,
	469, 357, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 409, 421, 438,
	441, 0, 0, 0, 0, 255, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 436, 0, 0, 341, 342,
	343, 344, 303, 0, 273, 439, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 299, 305, 452,
	307, 272, 356, 301, 418, 314, 0, 445, 0, 446,
	0, 0, 0, 0, 348, 310, 311, 382, 315, 326,
	370, 417, 354, 375, 270, 408, 383, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 0, 248,
	278, 279, 284, 470, 467, 399, 471, 0, 252, 0,
	324, 139, 365, 298, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 174, 0, 0, 249,
	244, 245, 246, 247, 0, 0, 353, 424, 425, 426,
	448, 410, 0, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 0, 0, 323, 0, 0, 474,
	462, 0, 0, 0, 0, 0, 0, 0, 0, 458,
	0, 459, 0, 0, 115, 0, 463, 384, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 168, 1808, 0, 196, 0,
	0, 0, 0, 0, 0, 268, 197, 460, 0, 461,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 389, 406, 269, 380, 419, 274, 387, 264,
	352, 376, 0, 0, 260, 404, 386, 334, 312, 313,
	259, 0, 371, 291, 304, 288, 350, 0, 403, 431,
	287, 422, 0, 414, 262, 0, 413, 349, 400, 405,
	335, 329, 261, 402, 333, 328, 316, 295, 447, 317,
	318, 308, 361, 327, 362, 309, 339, 338, 340, 0,
	0, 0, 0, 0, 442, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	388, 0, 0, 319, 0, 0, 0, 432, 0, 374,
	355, 0, 0, 0, 372, 325, 401, 363, 407, 390,
	415, 368, 364, 253, 391, 290, 336, 265, 267, 285,
	292, 294, 296, 297, 345, 346, 358, 379, 392, 393,
	394, 289, 275, 373, 276, 306, 277, 254, 281, 280,
	282, 381, 283, 256, 359, 398, 0, 302, 369, 332,
	257, 331, 360, 397, 396, 266, 423, 429, 430, 0,
	0, 435, 0, 0, 0, 444, 449, 450, 451, 453,
	454, 455, 456, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 428, 320, 321, 322, 300,
	250, 251, 473, 286, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 427, 0, 0,
	0, 457, 472, 0, 0, 0, 0, 0, 469, 357,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 409, 421, 438, 441, 0,
	0, 0, 0, 255, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 412, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 436, 0, 0, 341, 342, 343, 344,
	303, 0, 273, 439, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 299, 305, 452, 307, 272,
	356, 301, 418, 314, 0, 445, 0, 446, 0, 0,
	0, 0, 348, 310, 311, 382, 315, 326, 370, 417,
	354, 375, 270, 408, 383, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 0, 248, 278, 279,
	284, 470, 467, 399, 471, 0, 252, 0, 324, 139,
	365, 298, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 219, 220,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 174, 0, 0, 249, 244, 245,
	246, 247, 0, 0, 353, 424, 425, 426, 448, 410,
	0, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 0, 323, 0, 0, 474, 462, 0,
	0, 0, 0, 0, 0, 0, 0, 458, 0, 459,
	0, 0, 115, 0, 463, 384, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1707, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 268, 197, 460, 0, 461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	389, 406, 269, 380, 419, 274, 387, 264, 352, 376,
	0, 0, 260, 404, 386, 334, 312, 313, 259, 0,
	371, 291, 304, 288, 350, 0, 403, 431, 287, 422,
	0, 414, 262, 0, 413, 349, 400, 405, 335, 329,
	261, 402, 333, 328, 316, 295, 447, 317, 318, 308,
	361, 327, 362, 309, 339, 338, 340, 0, 0, 0,
	0, 0, 442, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 319, 0, 0, 0, 432, 0, 374, 355, 0,
	0, 0, 372, 325, 401, 363, 407, 390, 415, 368,
	364, 253, 391, 290, 336, 265, 267, 285, 292, 294,
	296, 297, 345, 346, 358, 379, 392, 393, 394, 289,
	275, 373, 276, 306, 277, 254, 281, 280, 282, 381,
	283, 256, 359, 398, 0, 302, 369, 332, 257, 331,
	360, 397, 396, 266, 423, 429, 430, 0, 0, 435,
	0, 0, 0, 444, 449, 450, 451, 453, 454, 455,
	456, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 428, 320, 321, 322, 300, 250, 251,
	473, 286, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 427, 0, 0, 0, 457,
	472, 0, 0, 0, 0, 0, 469, 357, 0, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 409, 421, 438, 441, 0, 0, 0,
	0, 255, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 436, 0, 0, 341, 342, 343, 344, 303, 0,
	273, 439, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 299, 305, 452, 307, 272, 356, 301,
	418, 314, 0, 445, 0, 446, 0, 0, 0, 0,
	348, 310, 311, 382, 315, 326, 370, 417, 354, 375,
	270, 408, 383, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 0, 248, 278, 279, 284, 470,
	467, 399, 471, 0, 252, 0, 324, 139, 365, 298,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 219, 220, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 353, 249, 244, 245, 246, 247,
	0, 0, 0, 424, 425, 426, 448, 410, 0, 468,
	0, 293, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 462, 458, 0, 459,
	0, 0, 0, 0, 463, 384, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 825, 826, 0,
	0, 0, 0, 268, 197, 460, 0, 461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	389, 406, 269, 380, 419, 274, 387, 264, 352, 376,
	0, 0, 260, 404, 386, 334, 312, 313, 259, 0,
	371, 291, 304, 288, 350, 0, 403, 431, 287, 422,
	803, 414, 262, 802, 413, 349, 400, 405, 335, 329,
	261, 402, 333, 328, 316, 295, 447, 317, 318, 308,
	361, 327, 362, 309, 339, 338, 340, 0, 0, 0,
	0, 0, 442, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 319, 0, 0, 0, 432, 0, 374, 355, 0,
	0, 0, 372, 325, 401, 363, 407, 390, 415, 368,
	364, 253, 391, 290, 336, 265, 267, 285, 292, 294,
	296, 297, 345, 346, 358, 379, 392, 393, 394, 289,
	275, 373, 276, 306, 277, 254, 281, 280, 282, 381,
	283, 256, 359, 398, 0, 302, 369, 332, 257, 331,
	360, 397, 396, 266, 423, 429, 430, 0, 0, 435,
	0, 0, 0, 444, 449, 450, 451, 453, 454, 455,
	456, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 428, 320, 321, 322, 300, 250, 251,
	473, 286, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 427, 0, 0, 0, 457,
	472, 0, 0, 0, 0, 0, 469, 357, 0, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 409, 421, 438, 441, 0, 0, 0,
	0, 255, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 436, 0, 0, 341, 342, 343, 344, 303, 0,
	273, 439, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 299, 305, 452, 307, 272, 356, 301,
	418, 314, 0, 445, 0, 446, 0, 0, 0, 0,
	827, 1726, 823, 1727, 315, 326, 370, 417, 354, 375,
	270, 408, 383, 824, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 0, 248, 278, 279, 284, 470,
	467, 399, 471, 0, 252, 0, 324, 0, 365, 298,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 219, 220, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 0, 249, 244, 245, 246, 247,
	0, 353, 0, 424, 425, 426, 448, 410, 0, 468,
	2488, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 323, 0, 0, 0, 474, 462, 0, 0, 0,
	0, 0, 0, 0, 458, 0, 459, 0, 0, 0,
	0, 463, 384, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 460, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 389, 406, 269,
	380, 419, 274, 387, 264, 352, 376, 0, 0, 260,
	404, 386, 334, 312, 313, 259, 0, 371, 291, 304,
	288, 350, 0, 403, 431, 287, 422, 0, 414, 262,
	0, 413, 349, 400, 405, 335, 329, 261, 402, 333,
	328, 316, 295, 447, 317, 318, 308, 361, 327, 362,
	309, 339, 338, 340, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 2491,
	0, 0, 2490, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 319, 0,
	0, 0, 432, 0, 374, 355, 0, 0, 0, 372,
	325, 401, 363, 407, 390, 415, 368, 364, 253, 391,
	290, 336, 265, 267, 285, 292, 294, 296, 297, 345,
	346, 358, 379, 392, 393, 394, 289, 275, 373, 276,
	306, 277, 254, 281, 280, 282, 381, 283, 256, 359,
	398, 0, 302, 369, 332, 257, 331, 360, 397, 396,
	266, 423, 429, 430, 0, 0, 435, 0, 0, 0,
	444, 449, 450, 451, 453, 454, 455, 456, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	428, 320, 321, 322, 300, 250, 251, 473, 286, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 427, 0, 0, 0, 457, 472, 0, 0,
	0, 0, 0, 469, 357, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	409, 421, 438, 441, 0, 0, 0, 0, 255, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 436, 0,
	0, 341, 342, 343, 344, 303, 0, 273, 439, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 470, 467, 399, 471,
	0, 252, 0, 324, 0, 365, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 353, 249, 244, 245, 246, 247, 0, 0, 0,
	424, 425, 426, 448, 410, 0, 468, 0, 293, 1261,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 462, 458, 0, 459, 0, 0, 0,
	0, 463, 384, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 1259, 0, 0, 0,
	268, 197, 460, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1257,
	0, 0, 0, 0, 0, 0, 258, 389, 406, 269,
	380, 419, 274, 387, 264, 352, 376, 0, 0, 260,
	404, 386, 334, 312, 313, 259, 0, 371, 291, 304,
	288, 350, 0, 403, 431, 287, 422, 0, 414, 262,
	0, 413, 349, 400, 405, 335, 329, 261, 402, 333,
	328, 316, 295, 447, 317, 318, 308, 361, 327, 362,
	309, 339, 338, 340, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 319, 0,
	0, 0, 432, 0, 374, 355, 0, 0, 0, 372,
	325, 401, 363, 407, 390, 415, 368, 364, 253, 391,
	290, 336, 265, 267, 285, 292, 294, 296, 297, 345,
	346, 358, 379, 392, 393, 394, 289, 275, 373, 276,
	306, 277, 254, 281, 280, 282, 381, 283, 256, 359,
	398, 0, 302, 369, 332, 257, 331, 360, 397, 396,
	266, 423, 429, 430, 0, 0, 435, 0, 0, 0,
	444, 449, 450, 451, 453, 454, 455, 456, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	428, 320, 321, 322, 300, 250, 251, 473, 286, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 427, 0, 0, 0, 457, 472, 0, 0,
	0, 0, 0, 469, 357, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	409, 421, 438, 441, 0, 0, 0, 0, 255, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 436, 0,
	0, 341, 342, 343, 344, 303, 0, 273, 439, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 470, 467, 399, 471,
	0, 252, 0, 324, 0, 365, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 353, 249, 244, 245, 246, 247, 0, 0, 0,
	424, 425, 426, 448, 410, 0, 468, 0, 293, 1255,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 462, 458, 0, 459, 0, 0, 0,
	0, 463, 384, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 1259, 0, 0, 0,
	268, 197, 460, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1257,
	0, 0, 0, 0, 0, 0, 258, 389, 406, 269,
	380, 419, 274, 387, 264, 352, 376, 0, 0, 260,
	404, 386, 334, 312, 313, 259, 0, 371, 291, 304,
	288, 350, 0, 403, 431, 287, 422, 0, 414, 262,
	0, 413, 349, 400, 405, 335, 329, 261, 402, 333,
	328, 316, 295, 447, 317, 318, 308, 361, 327, 362,
	309, 339, 338, 340, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 319, 0,
	0, 0, 432, 0, 374, 355, 0, 0, 0, 372,
	325, 401, 363, 407, 390, 415, 368, 364, 253, 391,
	290, 336, 265, 267, 285, 292, 294, 296, 297, 345,
	346, 358, 379, 392, 393, 394, 289, 275, 373, 276,
	306, 277, 254, 281, 280, 282, 381, 283, 256, 359,
	398, 0, 302, 369, 332, 257, 331, 360, 397, 396,
	266, 423, 429, 430, 0, 0, 435, 0, 0, 0,
	444, 449, 450, 451, 453, 454, 455, 456, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	428, 320, 321, 322, 300, 250, 251, 473, 286, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 427, 0, 0, 0, 457, 472, 0, 0,
	0, 0, 0, 469, 357, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	409, 421, 438, 441, 0, 0, 0, 0, 255, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 436, 0,
	0, 341, 342, 343, 344, 303, 0, 273, 439, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 470, 467, 399, 471,
	0, 252, 0, 324, 0, 365, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 353, 249, 244, 245, 246, 247, 0, 0, 0,
	424, 425, 426, 448, 410, 0, 468, 0, 293, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 462, 458, 0, 459, 0, 0, 0,
	0, 463, 384, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3312, 0, 196, 648, 0, 0, 0, 0, 0,
	268, 197, 460, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 389, 406, 269,
	380, 419, 274, 387, 264, 352, 376, 0, 0, 260,
	404, 386, 334, 312, 313, 259, 0, 371, 291, 304,
	288, 350, 0, 403, 431, 287, 422, 0, 414, 262,
	0, 413, 349, 400, 405, 335, 329, 261, 402, 333,
	328, 316, 295, 447, 317, 318, 308, 361, 327, 362,
	309, 339, 338, 340, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 319, 0,
	0, 0, 432, 0, 374, 355, 0, 0, 0, 372,
	325, 401, 363, 407, 390, 415, 368, 364, 253, 391,
	290, 336, 265, 267, 285, 292, 294, 296, 297, 345,
	346, 358, 379, 392, 393, 394, 289, 275, 373, 276,
	306, 277, 254, 281, 280, 282, 381, 283, 256, 359,
	398, 0, 302, 369, 332, 257, 331, 360, 397, 396,
	266, 423, 429, 430, 0, 0, 435, 0, 0, 0,
	444, 449, 450, 451, 453, 454, 455, 456, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	428, 320, 321, 322, 300, 250, 251, 473, 286, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 427, 0, 0, 0, 457, 472, 0, 0,
	0, 0, 0, 469, 357, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	409, 421, 438, 441, 0, 0, 0, 0, 255, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 436, 0,
	0, 341, 342, 343, 344, 303, 0, 273, 439, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 470, 467, 399, 471,
	0, 252, 0, 324, 0, 365, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 353, 249, 244, 245, 246, 247, 0, 0, 0,
	424, 425, 426, 448, 410, 0, 468, 0, 293, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 462, 458, 0, 459, 0, 0, 0,
	0, 463, 384, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 1259, 0, 0, 0,
	268, 197, 460, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1257,
	0, 0, 0, 0, 0, 0, 258, 389, 406, 269,
	380, 419, 274, 387, 264, 352, 376, 0, 0, 260,
	404, 386, 334, 312, 313, 259, 0, 371, 291, 304,
	288, 350, 0, 403, 431, 287, 422, 0, 414, 262,
	0, 413, 349, 400, 405, 335, 329, 261, 402, 333,
	328, 316, 295, 447, 317, 318, 308, 361, 327, 362,
	309, 339, 338, 340, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 319, 0,
	0, 0, 432, 0, 374, 355, 0, 0, 0, 372,
	325, 401, 363, 407, 390, 415, 368, 364, 253, 391,
	290, 336, 265, 267, 285, 292, 294, 296, 297, 345,
	346, 358, 379, 392, 393, 394, 289, 275, 373, 276,
	306, 277, 254, 281, 280, 282, 381, 283, 256, 359,
	398, 0, 302, 369, 332, 257, 331, 360, 397, 396,
	266, 423, 429, 430, 0, 0, 435, 0, 0, 0,
	444, 449, 450, 451, 453, 454, 455, 456, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	428, 320, 321, 322, 300, 250, 251, 473, 286, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 427, 0, 0, 0, 457, 472, 0, 0,
	0, 0, 0, 469, 357, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	409, 421, 438, 441, 0, 0, 0, 0, 255, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 436, 0,
	0, 341, 342, 343, 344, 303, 0, 273, 439, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 470, 467, 399, 471,
	0, 252, 0, 324, 0, 365, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 353, 249, 244, 245, 246, 247, 0, 0, 0,
	424, 425, 426, 448, 410, 0, 468, 0, 293, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 462, 458, 0, 459, 0, 0, 0,
	0, 463, 384, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 1259, 0, 0, 0,
	268, 197, 460, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3026,
	0, 0, 0, 0, 0, 0, 258, 389, 406, 269,
	380, 419, 274, 387, 264, 352, 376, 0, 0, 260,
	404, 386, 334, 312, 313, 259, 0, 371, 291, 304,
	288, 350, 0, 403, 431, 287, 422, 0, 414, 262,
	0, 413, 349, 400, 405, 335, 329, 261, 402, 333,
	328, 316, 295, 447, 317, 318, 308, 361, 327, 362,
	309, 339, 338, 340, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 319, 0,
	0, 0, 432, 0, 374, 355, 0, 0, 0, 372,
	325, 401, 363, 407, 390, 415, 368, 364, 253, 391,
	290, 336, 265, 267, 285, 292, 294, 296, 297, 345,
	346, 358, 379, 392, 393, 394, 289, 275, 373, 276,
	306, 277, 254, 281, 280, 282, 381, 283, 256, 359,
	398, 0, 302, 369, 332, 257, 331, 360, 397, 396,
	266, 423, 429, 430, 0, 0, 435, 0, 0, 0,
	444, 449, 450, 451, 453, 454, 455, 456, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	428, 320, 321, 322, 300, 250, 251, 473, 286, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 427, 0, 0, 0, 457, 472, 0, 0,
	0, 0, 0, 469, 357, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	409, 421, 438, 441, 0, 0, 0, 0, 255, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 436, 0,
	0, 341, 342, 343, 344, 303, 0, 273, 439, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 470, 467, 399, 471,
	0, 252, 0, 324, 0, 365, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 353, 0, 0,
	424, 425, 426, 448, 410, 0, 468, 0, 0, 2106,
	0, 0, 0, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 474, 462, 0, 0, 0, 0, 0, 0,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 2108, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 353, 249, 244,
	245, 246, 247, 0, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 293, 2127, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 462,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 1259, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 353, 249, 244,
	245, 246, 247, 0, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 462,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3409, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 353, 249, 244,
	245, 246, 247, 0, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 462,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	648, 0, 0, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 353, 249, 244,
	245, 246, 247, 0, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 462,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3330, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 353, 249, 244,
	245, 246, 247, 0, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 462,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 3252, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 353, 249, 244,
	245, 246, 247, 0, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 462,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3022, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 353, 249, 244,
	245, 246, 247, 0, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 462,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 2848, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 353, 249, 244,
	245, 246, 247, 0, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 462,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 3095, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 353, 249, 244,
	245, 246, 247, 0, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 462,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 2698, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 353, 249, 244,
	245, 246, 247, 0, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 462,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 353, 249, 244,
	245, 246, 247, 0, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 462,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1707, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 353, 249, 244,
	245, 246, 247, 0, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 462,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2798, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 353, 249, 244,
	245, 246, 247, 0, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 462,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 2667, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 353, 249, 244,
	245, 246, 247, 0, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 462,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 353, 249, 244,
	245, 246, 247, 0, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 462,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 1259, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 353, 249, 244,
	245, 246, 247, 0, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 462,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 2108, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 353, 249, 244,
	245, 246, 247, 0, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 462,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 353, 249, 244,
	245, 246, 247, 0, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 462,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 353, 249, 244,
	245, 246, 247, 0, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 462,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 2182, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 1977, 249, 244,
	245, 246, 247, 353, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 474, 462,
	0, 0, 0, 0, 0, 0, 458, 0, 459, 0,
	0, 0, 0, 463, 384, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 460, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 0, 403, 431, 287, 422, 0,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 447, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 432, 0, 374, 355, 0, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	286, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 427, 0, 0, 0, 457, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	436, 0, 0, 341, 342, 343, 344, 303, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 353, 249, 244, 245, 246, 247, 0,
	0, 1694, 424, 425, 426, 448, 410, 0, 468, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 462, 458, 0, 459, 0,
	0, 0, 0, 463, 384, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 460, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 0, 403, 431, 287, 422, 0,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 447, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 432, 0, 374, 355, 0, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	286, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 427, 0, 0, 0, 457, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	436, 0, 0, 341, 342, 343, 344, 303, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 353, 249, 244, 245, 246, 247, 0,
	0, 0, 424, 425, 426, 448, 410, 0, 468, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 462, 458, 0, 459, 0,
	0, 0, 0, 463, 384, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 1259, 0,
	0, 0, 268, 197, 460, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 0, 403, 431, 287, 422, 0,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 447, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 432, 0, 374, 355, 0, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 1605, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	286, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 427, 0, 0, 0, 457, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	436, 0, 0, 341, 342, 343, 344, 303, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 353, 249, 244, 245, 246, 247, 0,
	0, 0, 424, 425, 426, 448, 410, 0, 468, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 462, 458, 0, 459, 0,
	0, 0, 0, 463, 384, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 460, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 0, 403, 431, 287, 422, 0,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 447, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 1289, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 432, 0, 374, 355, 0, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	286, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 427, 0, 0, 0, 457, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	436, 0, 0, 341, 342, 343, 344, 303, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 353, 249, 244, 245, 246, 247, 0,
	0, 0, 424, 425, 426, 448, 410, 0, 468, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 462, 458, 0, 459, 0,
	0, 0, 0, 463, 384, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 460, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 0, 403, 431, 287, 422, 0,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 447, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 432, 0, 374, 355, 0, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	286, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 427, 0, 0, 0, 457, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	436, 0, 0, 341, 342, 343, 344, 303, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 757,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 353, 249, 244, 245, 246, 247, 0,
	0, 0, 424, 425, 426, 448, 410, 0, 468, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 462, 458, 0, 459, 0,
	0, 0, 0, 463, 384, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 460, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 0, 403, 431, 287, 422, 0,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 447, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 432, 0, 374, 355, 0, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 512, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	286, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 427, 0, 0, 0, 457, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 513, 0,
	412, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	436, 0, 0, 341, 342, 343, 344, 303, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 353, 249, 244, 245, 246, 247, 0,
	0, 0, 424, 425, 426, 448, 410, 0, 468, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 462, 458, 0, 459, 0,
	0, 0, 0, 463, 384, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 460, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 0, 403, 431, 287, 422, 0,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 447, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 489, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 432, 0, 374, 355, 0, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	286, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 427, 0, 0, 0, 457, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	436, 0, 0, 341, 342, 343, 344, 303, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 353, 249, 244, 245, 246, 247, 0,
	0, 0, 424, 425, 426, 448, 410, 0, 468, 479,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 462, 458, 0, 459, 0,
	0, 0, 0, 463, 384, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 460, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 0, 403, 431, 287, 422, 0,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 447, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 432, 0, 374, 355, 0, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	286, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 427, 0, 0, 0, 457, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	436, 0, 0, 341, 342, 343, 344, 303, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 353, 249, 244, 245, 246, 247, 0,
	0, 0, 424, 425, 426, 448, 410, 0, 468, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 462, 458, 0, 459, 0,
	0, 0, 0, 463, 384, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 460, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 0, 403, 431, 287, 422, 0,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 447, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 432, 0, 374, 355, 0, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	286, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 427, 0, 0, 0, 457, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	436, 0, 0, 341, 342, 343, 344, 303, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 353, 249, 244, 245, 246, 247, 0,
	0, 0, 424, 425, 426, 448, 410, 0, 468, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 462, 458, 0, 459, 0,
	0, 0, 0, 463, 384, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 460, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 389,
	1239, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 0, 403, 431, 287, 422, 0,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 447, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 432, 0, 374, 355, 0, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	286, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 427, 0, 0, 0, 457, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	436, 0, 0, 341, 342, 343, 344, 303, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 353, 249, 244, 245, 246, 247, 0,
	0, 0, 424, 425, 426, 448, 410, 0, 468, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 462, 458, 0, 459, 0,
	0, 0, 0, 463, 384, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 460, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 389,
	1237, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 0, 403, 431, 287, 422, 0,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 447, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 432, 0, 374, 355, 0, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	286, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 427, 0, 0, 0, 457, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	436, 0, 0, 341, 342, 343, 344, 303, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 353, 249, 244, 245, 246, 247, 0,
	0, 0, 424, 425, 426, 448, 410, 0, 468, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 462, 458, 0, 459, 0,
	0, 0, 0, 463, 384, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 460, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 0, 403, 431, 287, 422, 0,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 447, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 432, 0, 374, 355, 0, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 553, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	286, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 427, 0, 0, 0, 457, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	436, 0, 0, 341, 342, 343, 344, 303, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 901, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 901, 0, 0, 249, 244, 245, 246, 247, 0,
	0, 0, 424, 425, 426, 448, 410, 0, 468, 0,
	0, 0, 0, 887, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 462, 0, 0, 0, 0,
	0, 0, 0, 909, 913, 915, 917, 919, 920, 922,
	0, 927, 923, 924, 925, 926, 0, 904, 905, 906,
	907, 885, 886, 910, 0, 888, 0, 889, 890, 891,
	892, 893, 894, 895, 896, 897, 900, 902, 898, 899,
	908, 0, 0, 0, 0, 901, 0, 0, 912, 914,
	916, 918, 921, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 887, 0, 0, 0, 877, 903, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 909, 913, 915, 917, 919, 920, 922, 0, 927,
	923, 924, 925, 926, 0, 904, 905, 906, 907, 885,
	886, 910, 0, 888, 0, 889, 890, 891, 892, 893,
	894, 895, 896, 897, 900, 902, 898, 899, 908, 0,
	0, 0, 0, 0, 0, 0, 912, 914, 916, 918,
	921, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1682, 887, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 903, 909, 913, 915, 917, 919,
	920, 922, 0, 927, 923, 924, 925, 926, 1684, 904,
	905, 906, 907, 885, 886, 910, 0, 888, 0, 889,
	890, 891, 892, 893, 894, 895, 896, 897, 900, 902,
	898, 899, 908, 2262, 2263, 1682, 0, 0, 0, 0,
	912, 914, 916, 918, 921, 0, 0, 0, 0, 3426,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1659,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1684,
	0, 0, 0, 0, 0, 0, 0, 0, 903, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1659, 0, 0, 0, 0, 0, 1675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1684, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 911, 0, 0, 0,
	0, 0, 0, 3150, 0, 0, 0, 1675, 1659, 0,
	0, 0, 0, 0, 0, 0, 0, 532, 531, 538,
	528, 0, 0, 0, 0, 0, 1663, 0, 0, 535,
	536, 0, 537, 541, 0, 0, 523, 1669, 0, 0,
	0, 0, 0, 0, 0, 0, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1657, 1691, 0,
	0, 1658, 1660, 1662, 0, 1664, 1665, 1666, 1670, 1671,
	1672, 1674, 1677, 1678, 1679, 1675, 0, 0, 0, 0,
	0, 0, 1667, 1676, 1668, 0, 0, 1663, 0, 550,
	0, 0, 552, 0, 911, 0, 0, 551, 1669, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1683, 0, 1657, 1691,
	0, 0, 1658, 1660, 1662, 0, 1664, 1665, 1666, 1670,
	1671, 1672, 1674, 1677, 1678, 1679, 0, 0, 0, 0,
	0, 0, 0, 1667, 1676, 1668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1663, 0, 0, 0, 1680,
	0, 0, 0, 0, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1656, 1683, 911, 0,
	0, 0, 0, 1655, 0, 0, 1657, 1691, 0, 0,
	1658, 1660, 1662, 0, 1664, 1665, 1666, 1670, 1671, 1672,
	1674, 1677, 1678, 1679, 0, 0, 0, 1673, 0, 0,
	0, 1667, 1676, 1668, 0, 0, 1661, 0, 0, 0,
	1680, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 524, 526, 525, 0, 1656, 532, 531,
	538, 528, 0, 530, 1655, 1683, 0, 0, 0, 0,
	535, 536, 0, 537, 541, 534, 0, 523, 0, 0,
	0, 0, 549, 0, 0, 0, 0, 546, 1673, 527,
	0, 0, 0, 518, 0, 0, 0, 1661, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1680, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1656, 0, 0, 0, 0,
	550, 0, 1655, 552, 0, 0, 0, 0, 551, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1673, 0, 0, 0,
	0, 0, 0, 0, 0, 1661, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 533, 539,
	0, 540, 542, 0, 0, 543, 544, 545, 0, 0,
	547, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 524, 526, 525, 0, 0, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 534, 0, 0, 0,
	0, 0, 0, 549, 0, 0, 0, 0, 0, 0,
	527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 529, 533,
	539, 0, 540, 542, 0, 0, 543, 544, 545, 0,
	0, 547, 548,
}

var yyPact = [...]int{
	4346, -1000, -1000, -1000, -331, 10789, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 36631,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 36631,
	-325, 36071, 36071, -1000, -1000, 2357, -1000, 35511, 11942, 36631,
	319, 318, 36631, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 720, -1000, 34951, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 596, 39305, 38311, 8475, -267, -1000, 1328, -97, 2188,
	889, 898, 1030, 1030, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 332, 741, 34391,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3176, 434, 741, 14188, 20, 19, 1328, 354, -170,
	-159, -173, 425, -1000, 1211, 4378, 160, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8475, 8475,
	10789, -359, 10789, 8475, 36631, 36631, -1000, -1000, -1000, -1000,
	596, 39305, 8475, 2188, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -159, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -170, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -173, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 19, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 38861, -1000, 1337, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2691, 1335, 2186, 561, 36631,
	-1000, 1332, 561, -1000, -1000, -1000, 1328, 3061, -1000, 36631,
	36631, 86, 1640, -1000, 360, 371, 351, 1331, -1000, -1000,
	-1000, -1000, -1000, -1000, 471, 3046, -1000, 36631, 36631, 2705,
	36631, -1000, 2099, 487, 39526, 2879, 1260, 742, 2718, -1000,
	-1000, 2689, -1000, 202, 222, 208, 709, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 231, -1000, 2964, -1000, -1000, 190,
	-1000, -1000, 185, -1000, -1000, -1000, 16, -1000, -1000, -1000,
	-1000, -1000, -1000, -68, -1000, -1000, 928, 1762, 8475, -1000,
	2037, -1000, 3417, -1000, -1000, -1000, -1000, 5588, 10203, 10203,
	10203, 10203, -1000, -1000, 2539, 8475, 2687, 2686, 2685, -1000,
	-1000, -1000, -1000, -1000, 1324, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1764, -1000, -1000, -1000, 9627, -1000,
	2671, 2670, 2668, 2666, 2665, 2664, 2663, 2661, 2660, 2659,
	2658, 2657, 2655, 2654, 2379, 11356, 2653, 2183, 2180, 2651,
	2650, 2649, 2179, 2379, 2379, 2644, 2630, 2626, 2625, 2613,
	2612, 2611, 2610, 2609, 2608, 2597, 2596, 2593, 2591, 2587,
	2585, 2580, 2576, 2575, 2574, 2573, 2555, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1275, -1000, 2553, 3062, 2440, -1000, 2972, 2954, 2952, 2943,
	-309, 2552, 1972, -1000, -1000, 67, -1000, -140, -1000, -1000,
	837, -1000, 828, -1000, 36631, 36631, 153, 649, 594, 594,
	594, 594, 594, 679, 594, 2984, 718, 699, 696, 594,
	-112, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1639, 1634,
	2461, 806, -1000, -1000, -1000, -1000, 1198, 36631, -1000, 2489,
	1461, 1461, 2983, 517, 514, 504, 1461, 372, -1000, 1586,
	1586, 1586, 1586, 1461, 391, 507, 2988, 2988, 2, 1586,
	-2, 1461, 1461, -2, 1461, 1461, 1461, 182, -315, -1000,
	-1000, -1000, -1000, 1586, 1586, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2959, 2948, 596, 596, 36631, 129, 36631, 596,
	596, 596, 629, -48, 37751, 37191, 2099, 485, 482, 1210,
	1602, -1000, 1537, 36631, 36631, 1537, 1537, 18699, 18139, -1000,
	36631, -1000, 3062, 2440, 2359, 1257, 2352, 2440, -177, -178,
	-187, 596, 596, 596, 596, 596, 162, 596, 596, 596,
	596, 596, 36631, 36631, 33831, 596, 596, 7316, 7316, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 10789, 1676,
	1910, 159, -65, -327, 199, -1000, -1000, 36631, 2847, 169,
	-1000, -1000, -1000, 2391, -1000, 2453, 2453, 2453, 2453, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2453, 2453,
	2488, 2551, -1000, -1000, 2452, 2452, 2452, 2391, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2454, 2454, 2459, 2459, 2454, 36631, 8475,
	36631, 2866, 348, 2550, -1000, 36631, 346, 3062, 2865, 2988,
	3025, -1000, -1000, 1318, 1969, 2174, -1000, -1000, 360, 1566,
	-1000, 976, -1000, -1000, -1000, -1000, 36631, -68, 312, -1000,
	-1000, 2166, 2548, -1000, 498, 1006, 1295, -1000, 180, 4542,
	29345, 2099, 29345, 36631, -1000, -1000, -1000, -1000, -1000, -1000,
	11, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 193, -1000, 8475, 8475, 8475, 8475,
	8475, -1000, 593, 9051, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 10203, 10203, 10203, 10203, 10203, 10203, 10203, 10203, 10203,
	10203, 10203, 10203, 2538, 1616, 10203, 10203, 10203, 10203, 1257,
	2825, 1206, 238, -1000, -1000, -1000, -1000, -1000, 1501, 1762,
	8475, 8475, 8475, 36631, -1000, -1000, 3237, 8475, 8475, 3165,
	8475, 2923, 8475, 8475, 8475, 2350, 3760, 36631, 8475, -1000,
	2346, 2345, -1000, -1000, 1759, 8475, -1000, -1000, 8475, -1000,
	-1000, 8475, 10203, 8475, -1000, -1000, -1000, 2169, 2923, 2923,
	2923, 1588, 8475, 8475, 2923, 2923, 2923, 1503, 2923, 2923,
	2923, 2923, 2923, 2923, 2923, 2923, 2342, 2341, 2339, 2988,
	-267, -1000, 6740, 2865, 2988, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -311, 2546, 36631, 2173, 2170,
	-342, -30, 880, 846, 849, -1000, 2906, -1000, 2545, 36631,
	594, 594, -154, 594, -1000, 36631, 1663, 29345, 36631, 36631,
	2099, 36631, 36631, 36631, 594, 594, 594, 36631, -1000, 2811,
	29345, 2806, 629, -1000, 36631, 1198, 2905, 36631, 3033, 10203,
	10203, -1000, 33271, 1586, 1461, 1461, -1000, -1000, 36631, -1000,
	-1000, -1000, 1586, 36631, 1586, 1586, 3033, 1586, -1000, -1000,
	-1000, 1461, 1461, -1000, -1000, 8475, -1000, -1000, 1586, 1586,
	-1000, -1000, 3033, 36631, 4, 3033, 3033, 8, -1000, -1000,
	-1000, 36631, 36631, 594, 36631, -1000, 36631, 36631, -1000, -1000,
	36631, 36631, 4407, 36631, 32711, 2946, -1000, 29345, 36631, 36631,
	27105, -1000, 1166, -1000, -45, -1000, -39, -48, 1537, -48,
	1537, -1000, 493, 500, 17012, 443, 29345, 5012, -1000, -1000,
	1537, 1537, 5012, 5012, 1365, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1197, -1000, 209, 2988, -1000, -1000, -1000, -1000,
	-1000, 1968, 1962, 1955, 36631, 36631, 29345, 2099, 36631, 596,
	36631, 36631, 36631, 36631, 36631, -1000, 2544, 1313, -1000, 2873,
	36631, 36631, 1289, -1000, -1000, 13628, 1298, 1289, -1000, 1654,
	-1000, 8475, 10789, -287, 8475, 10789, 10789, 8475, 10789, -1000,
	8475, 155, -1000, -1000, -1000, -1000, 1954, -1000, 1950, -1000,
	-1000, -1000, -1000, -1000, 2168, 2168, -1000, 1949, -1000, -1000,
	-1000, -1000, 1945, -1000, -1000, 1943, -1000, -1000, -1000, 2338,
	928, -1000, 2161, 2717, -268, -1000, 15884, 36631, 36631, -1000,
	-1000, -268, -1000, 15316, 36631, 2988, -1000, -272, 2865, 8475,
	36631, -1000, 2982, -1000, 360, 274, -1000, -1000, -1000, -1000,
	-1000, -1000, 1297, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1192, -1000, 36631, -1000, -1000, 180, 29345, 30465,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 201, -1000, -1000,
	172, -1000, 669, 115, 1558, -1000, -1000, 138, 176, 90,
	749, 1762, -1000, 1671, 1671, 1668, -1000, 538, -1000, -1000,
	-1000, -1000, 2539, -1000, -1000, -1000, 2167, 1550, -1000, 1851,
	1851, 1371, 1371, 1371, 1371, 1371, 1797, 1797, -1000, -1000,
	-1000, 5588, 2538, 10203, 10203, 10203, 10203, 564, 564, 1385,
	3476, -1000, 8475, 1650, -1000, 8475, 2225, 1951, 1179, 1294,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2336, 2335, 2071, 3045, 2334, 8475, -1000, -1000, 1557, 1556,
	1549, -1000, 2031, 7899, -1000, -1000, -1000, 2331, 1293, 2330,
	-1000, -1000, -1000, 2328, 1548, 1041, 2327, 2418, 2326, 1191,
	8475, 8475, 8475, 8475, 2324, 1547, 1546, 8475, 8475, 8475,
	8475, 2323, 8475, 8475, 8475, 8475, 8475, 8475, 8475, 8475,
	39, 39, 39, -1000, -1000, 1530, -1000, 1762, -1000, -1000,
	2865, -1000, 2536, 1940, 1170, -1000, -1000, -1000, 2124, -1000,
	-1000, 853, 814, 833, 36631, 966, 2533, 36631, 36631, 594,
	36631, 141, -1000, 2871, 1254, -1000, 115, -104, 328, 936,
	2704, 3042, -196, 36631, 36631, 36631, 2894, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 32151, -1000, 2531, 1518, -1000,
	-1000, 8475, -1000, -1000, 2703, 36631, 36631, 3033, 3033, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1586, 3033, 3033, 1161,
	1461, 1586, -1000, -1000, 1586, -1000, -1000, 1586, -1000, 1288,
	-1000, 36631, -1000, -1000, -1000, 2893, 2489, 1167, -1000, 1366,
	582, 582, 892, 831, 3024, 14748, -1000, 1466, 1058, 657,
	2812, 195, -1000, 1466, -210, 1466, 1466, 1466, 1466, 1466,
	1466, 1466, 462, 436, 1466, 1466, 1466, 1466, 1466, 1466,
	1466, 1466, 1466, 1466, 1466, 893, 1466, 1466, 1466, 1466,
	1466, -1000, 1466, 2530, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 492, 136, 2942, 229, 228, 1254, 2940, 252, 2947,
	1205, -1000, -1000, -1000, -1000, 20945, 20945, 16452, 20945, -1000,
	1572, -48, -83, -1000, -1000, 1166, 5012, 1166, 5012, -1000,
	-1000, 654, -1000, -1000, 936, -1000, 36631, 36631, -1000, -1000,
	2525, 1633, -1000, -1000, 11356, -1000, 5012, 5012, -1000, -1000,
	21505, 36631, -1000, -69, -1000, -60, 2865, -1000, -1000, -1000,
	1051, -1000, -1000, 1150, 936, 2715, 36631, 1051, 1051, 1051,
	-1000, -1000, 12502, 36631, 36631, -1000, -1000, 3033, 7316, -1000,
	27105, -1000, -1000, 31585, -1000, 31025, 3033, 1560, -1000, 10789,
	1871, 154, -1000, 192, -330, 152, 1795, 151, 1762, -1000,
	-1000, 2322, 2319, 1512, -1000, 1495, 2317, 1493, 1491, -1000,
	-12, -1000, 2849, 940, -1000, 2519, -1000, 1479, 2782, -1000,
	1045, -1000, 1632, 1454, -1000, 940, 1451, 2780, 1045, 2865,
	2156, -1000, 1040, -1000, 2093, 1285, 85, -1000, -1000, 36631,
	2166, 1422, 30465, 971, -1000, 647, 1277, 1274, -1000, 29345,
	196, 29345, -1000, 29345, -1000, -1000, 330, -1000, 36631, 2862,
	-1000, -1000, -1000, 2124, 1627, -353, 36631, -1000, -1000, -1000,
	-1000, -1000, 1416, -1000, 564, 564, 1385, 3439, -1000, 10203,
	-1000, 10203, 2802, 1538, -1000, 8475, 1859, 38763, 38763, 1535,
	19819, 36631, -1000, -1000, 8475, 8475, -1000, 2747, -1000, -1000,
	-1000, -1000, 8475, 8475, 1894, -1000, 36631, -1000, -1000, -1000,
	-1000, 19819, -1000, 10203, -1000, 8475, 1230, 1230, 2698, 1410,
	39, 39, 39, 2618, 2594, 2588, 1392, 39, 2542, 2499,
	2494, 2469, 2457, 2438, 2434, 2403, -1000, 2514, -1000, -1000,
	6740, -1000, -1000, 232, 993, 1934, 114, -1000, 1618, -1000,
	-1000, -1000, 810, 161, 2315, 991, -1000, -1000, 36631, -1000,
	-1000, -1000, 12502, 2489, 265, 36631, 2489, 56, 1466, -1000,
	503, 29345, 480, -1000, 36631, 1853, 1614, 2714, 478, 2842,
	36631, 2510, 2508, 2507, 2502, 313, 38945, 36631, 1101, -1000,
	1272, 4378, -1000, 36631, 1762, -1000, 2099, -1000, 1461, -1000,
	-1000, 3033, -1000, -1000, 8475, 8475, 3033, 1461, 1461, 1586,
	36631, -1000, 313, 38945, 2890, 4407, -1000, 36631, -1000, -1000,
	-1000, 650, -1000, 839, 594, 36631, 1728, 839, 1725, 2493,
	-1000, -1000, 36631, 36631, 36631, 36631, -1000, -1000, 36631, -1000,
	36631, 36631, 36631, 36631, 36631, -1000, 36631, 36631, -1000, 36631,
	1720, 1708, 2933, -1000, 1466, 1466, 781, -1000, -1000, 481,
	-1000, 1932, 1926, 1919, 1917, 2154, 2149, 2147, 1466, 1466,
	1903, 2146, 29905, 2141, 945, 1902, 1891, 1881, 1921, 2137,
	717, -1000, 2136, 1887, 1855, 1854, 36631, 2492, 2088, -1000,
	-1000, 56, 1466, 223, 36631, 1610, 503, 327, 1980, 17579,
	36631, 27105, 27105, 27105, 27105, -1000, 2759, 2758, -1000, 2749,
	2745, 2731, 36631, 27105, 2489, -1000, 29905, -1000, -1000, -1000,
	1257, 1386, 2927, 875, 8475, -1000, -1000, -54, -56, -1000,
	-1000, -1000, 29345, 2134, 443, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2976, 36631, 36631, 665, 2302, 990, -1000, -1000,
	-1000, 38945, 2453, 2453, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2453, 2453, 2488, -1000, -1000, 2452, 2452,
	2452, 2391, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2454, 2454, 2459, 2459, 2454, -1000, -1000, 3029, -1000,
	985, -1000, -1000, 1268, -1000, 3029, 1645, -333, 10789, 1620,
	1498, -1000, 8475, 10789, 8475, -288, 210, -294, -1000, -1000,
	-1000, 2131, -1000, -1000, -1000, 1879, -1000, 1878, 49, 68,
	1696, -268, 6740, 350, 36631, -268, 36631, 6740, -1000, 36631,
	349, -268, 2976, -12, 8475, 2816, -1000, -1000, 36631, 1877,
	-1000, -1000, -1000, 3041, 29345, 2099, 1400, 28785, -1000, 186,
	-1000, 184, 470, 2126, -1000, 694, 113, 2125, 2124, -1000,
	-1000, -1000, -1000, 10203, -1000, -1000, -1000, -1000, 1762, 8475,
	2297, -1000, 812, 812, 2295, 2292, -1000, 2453, 2453, -1000,
	2391, 2452, 2391, 812, 812, 2288, -1000, 2046, 2355, -1000,
	2281, 2277, 8475, -1000, 2280, 2958, 1218, -125, -242, 39,
	39, -1000, -1000, -1000, -1000, 39, 39, 39, 39, -1000,
	39, 39, 39, 39, 39, 39, 39, 39, 562, -1000,
	2279, 984, -1000, -1000, -1000, -1000, -1000, 3165, 980, -1000,
	2124, 2123, -1000, 2121, 2119, 966, 38945, 2275, 2884, 13062,
	2883, 2445, 2444, 2882, 1987, -1000, -1000, -1000, 28225, 442,
	-1000, -1000, -1000, 583, 211, 1868, 440, -1000, 36631, 252,
	2798, 1583, 2118, 36631, -1000, -1000, -1000, -1000, -1000, -1000,
	2842, -1000, 1002, 285, 25985, 13062, 13062, 13062, 297, 1638,
	-1000, 561, 981, 1266, 27105, 36631, -1000, 26545, 2273, -1000,
	936, 3033, -1000, 1762, 1762, -1000, 3033, 3033, 1461, -1000,
	297, -1000, 336, -1000, 2831, 38945, -1000, 36631, -1000, 36631,
	-1000, 36631, 36631, 594, 8475, 2831, 36631, 595, -1000, -1000,
	934, 289, 264, 579, 579, 977, -1000, 2858, -1000, -1000,
	-1000, 36631, -1000, -1000, -1000, -1000, -1000, -1000, 19819, 19819,
	2922, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2113, 2110, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 36631, 1362, -1000, 1582, 1987, 28225,
	1577, 1537, 2109, 442, 1853, 1576, -1000, 2108, -1000, 952,
	36631, 36631, -1000, 1107, -1000, 1561, 2700, 2711, 2700, -1000,
	-1000, -1000, -1000, 2751, -1000, 2743, -1000, -1000, 1107, -1000,
	-1000, -1000, -1000, -1000, 875, -1000, 2969, 839, 839, 839,
	2270, -1000, -1000, -1000, 971, 2265, -1000, -1000, -1000, 3057,
	-1000, -1000, -1000, -1000, -1000, -1000, 12502, 2841, 3027, 3022,
	27665, 3027, -1000, -333, 1515, -1000, 1849, 146, 1768, 36631,
	-1000, -1000, -1000, 2264, 2256, -274, 64, 3021, 3018, 830,
	-1000, 2255, 956, -268, -1000, -1000, 940, -1000, -1000, -1000,
	-268, -1000, 940, -1000, 49, -1000, -1000, 2822, -1000, -1000,
	2099, -1000, 181, -1000, -1000, -1000, -1000, -1000, -1000, 100,
	-1000, 36631, -1000, 955, 105, -1000, 1762, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 8475, -1000, -1000, -1000, 2232, -1000, -1000,
	8475, 2247, 2106, 2245, 2105, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3062,
	-1000, 3016, -1000, 8475, 2239, 3165, -1000, -1000, -1000, -1000,
	-1000, -1000, 719, 336, 2238, 954, -1000, -1000, -1000, -1000,
	336, 24865, 13062, 336, -1000, 2103, 110, -1000, -1000, -1000,
	2100, 2090, 1867, -1000, -1000, 1848, 1255, 121, -1000, -1000,
	-1000, -1000, -1000, -1000, 1980, 1979, 1534, -355, -1000, 2442,
	-1000, 1466, 1466, 1466, 36631, 1358, -1000, 1466, 1466, 2237,
	2214, 2213, 508, 1497, 1496, -1000, 1850, 20945, 27105, 26545,
	1086, -1000, 1238, -1000, -1000, -1000, -1000, -1000, 3033, 508,
	-1000, -1000, -1000, 36631, 258, 2441, -1000, 2426, 2697, 342,
	2409, 2405, 36631, 2190, -1000, 2831, 36631, 584, 2839, -1000,
	-1000, -1000, 259, -1000, -1000, 394, -1000, 36631, -1000, -1000,
	1360, -1000, 19819, -1000, -1000, 1357, -1000, 2088, 2087, -1000,
	110, 2085, 5012, -1000, -1000, 2798, 2083, -1000, 36631, 952,
	952, 3062, 36631, 6740, -1000, -1000, 8475, 2397, -1000, 8475,
	-1000, -1000, -1000, -1000, -1000, 2396, 2786, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1575, -1000, 8475, 8475, -1000, -1000,
	588, 10789, -296, 191, -1000, -1000, -1000, -276, 2081, -1000,
	-1000, 3015, 2063, 2010, 36631, -1000, -1000, 940, 940, -274,
	-1000, -1000, 936, -1000, -1000, 8, 465, -1000, 2182, -1000,
	2176, 39, -1000, 39, -1000, 175, 8475, 1991, -1000, 2206,
	38945, -198, -203, 13062, -1000, 1333, -1000, 1466, 1466, 2198,
	-198, -1000, -1000, 310, -1000, -1000, 242, -1000, -1000, 1805,
	501, -1000, -1000, -1000, 1528, 1734, 2021, 24305, 19819, 20379,
	2059, -1000, -1000, 25985, 1575, 1575, 39217, 193, 39217, 900,
	1483, -1000, 1836, -1000, 1833, -1000, 3033, 1086, 1238, -1000,
	-1000, 1340, -1000, 900, -1000, -1000, 258, -1000, -1000, 1738,
	10203, -1000, -1000, 2058, 20379, 697, 1519, 1502, 757, 2395,
	-1000, 397, 3051, -1000, -1000, -1000, 767, 2393, -1000, 1683,
	1682, -1000, 36631, -1000, 24305, 24305, 605, 605, 24305, 24305,
	2392, 579, -1000, -1000, 10203, -1000, -1000, 1466, -1000, -1000,
	1466, 1279, -1000, -1000, -1000, -1000, -1000, -1000, 1979, -1000,
	-1000, 2988, -1000, -1000, 1762, 36631, 1762, 25425, -1000, 3013,
	3012, -1000, 1762, 928, -1000, -333, 36631, 36631, -279, 1832,
	-1000, 2056, 69, -1000, -1000, 935, -276, -281, 48, 58,
	1499, -1000, -1000, -1000, -1000, 2195, -1000, 1160, -1000, -1000,
	-1000, 928, -1000, -1000, -194, -1000, -1000, 323, -1000, -1000,
	-1000, 24865, 1575, 1575, -203, -1000, 451, 2045, -1000, -1000,
	236, -1000, -1000, 2044, -1000, -1000, 104, -1000, 1475, 1329,
	-1000, 2391, 8475, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 540, 39149, -1000, 1058, -1000, 8, 540, 483, 248,
	-1000, 1827, -1000, -1000, 3062, -1000, 467, -1000, -1000, 1385,
	-1000, -1000, -1000, -1000, -1000, -1000, 2039, 2035, -1000, -1000,
	-1000, -1000, -1000, 1802, 2390, -86, 2919, 2033, -1000, -1000,
	2387, 1322, 1299, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1291, 1259, 24305, -1000, -1000, 1385, 1800, 19819, 1466,
	-1000, -1000, 1258, 1213, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2386, -1000, -1000, 3010, -279, -1000, 2032, 623, 62,
	58, -1000, 3008, 63, 3007, 3005, 2025, -1000, -1000, 559,
	-269, 37, 36, 33, -1000, -1000, -1000, 8475, 36631, 396,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 98, -1000, -1000,
	-1000, -1000, 2021, 2019, -1000, 24305, 2858, 1973, 355, 3004,
	39217, -1000, 1466, -1000, 355, -1000, 309, -1000, 1459, -1000,
	1789, -1000, 2988, -1000, 305, -1000, -1000, -1000, 2171, 8475,
	2379, 1466, 2042, -190, 24305, 2695, 2505, 2496, 2436, 1196,
	-1000, -1000, 19819, -1000, -1000, 23745, 36631, 2010, -1000, -1000,
	2378, 1788, 64, 59, 3003, -1000, 2010, 3002, 2010, 2010,
	-1000, 1666, -1000, 31, 28, 26, -1000, -1000, -1000, -1000,
	450, -1000, 173, -1000, -1000, -1000, 266, -1000, -1000, 2858,
	-1000, 2992, 382, -1000, 19819, -1000, -1000, -1000, 1787, -1000,
	-1000, -1000, -1000, 1807, -1000, 36631, -1000, 2709, -1000, 166,
	1156, 266, 605, 266, 605, 266, 605, 266, 605, 170,
	-1000, -1000, -1000, 1154, -1000, -1000, 2915, 19259, 46, -1000,
	-1000, -1000, 2018, -1000, 2010, -1000, -1000, 559, -1000, -1000,
	-1000, 2009, -1000, -1000, -1000, -1000, 1466, 1466, 2001, 1992,
	273, -1000, -1000, -1000, 23185, 361, 378, 368, -1000, 535,
	-1000, -1000, -1000, 579, -1000, -1000, 2708, 2460, 3040, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 36631,
	-1000, 36631, -1000, 1145, -1000, -1000, -1000, 1235, -1000, -1000,
	-1000, -1000, -1000, -323, 1772, 1770, -1000, -1000, 36631, -1000,
	36631, 376, 1760, 10203, 2375, 10203, 2370, 384, 2368, -1000,
	-1000, 3050, -1000, 3048, 700, 700, 266, 266, 266, 266,
	-1000, 920, -1000, 1460, -1000, 22625, 36631, -1000, -1000, 1804,
	-1000, -1000, -1000, 1144, 2366, 2991, -1000, 2619, 36631, 2577,
	36631, 2363, 1441, 10203, -1000, -1000, -1000, 1810, 411, -1000,
	36631, 6164, -1000, 1212, -1000, -1000, -1000, 506, 352, -1000,
	1119, -1000, 1106, 22065, 1756, 2503, -1000, -1000, -1000, -1000,
	-1000, 1762, 36631, 1103, -1000, 36631, 358, -1000, -1000, -1000,
	1094, -1000, -1000, -1000, -1000, 506, 2615, -1000, 1752, -1000,
	-1000, 39088, 613, -1000, -1000, 39088, 367, -1000, 522, 2175,
	-1000, -1000, 1044, -1000, 36631, 722, 8475, -1000, 367, 39217,
	-1000, 8475, 1037, -1000, 39217, 1032, -1000, -1000,
}

var yyPgo = [...]int{
	0, 171, 3074, 244, 169, 3644, 89, 247, 218, 213,
	243, 3635, 3631, 3630, 2892, 2885, 3629, 3625, 3623, 3610,
	3609, 3608, 3607, 3603, 3602, 3601, 3595, 3594, 3593, 3591,
	3590, 3589, 3588, 3573, 3572, 3571, 3570, 3568, 3567, 3566,
	3565, 3564, 3544, 3543, 3542, 3541, 241, 3540, 3539, 3538,
	3537, 3536, 3535, 3533, 3530, 3522, 3521, 3519, 3518, 3516,
	3515, 3513, 3512, 3511, 3510, 3509, 3508, 3507, 3506, 3505,
	3504, 3501, 3500, 3499, 3498, 3497, 3496, 3495, 3493, 207,
	3491, 2843, 3490, 3489, 3488, 3487, 3486, 3485, 3484, 238,
	3483, 3482, 3481, 3480, 3479, 3477, 3476, 3475, 3474, 3472,
	3471, 233, 3470, 3469, 3468, 3467, 3453, 3448, 225, 3447,
	167, 227, 3445, 3444, 3440, 3438, 3437, 3436, 231, 186,
	69, 3434, 45, 3433, 215, 3432, 136, 3431, 134, 3430,
	3428, 3426, 3425, 3422, 3420, 3419, 3418, 3415, 3414, 3413,
	3411, 3410, 3409, 3407, 3405, 86, 3402, 255, 3400, 68,
	3399, 3397, 120, 222, 185, 249, 2425, 254, 245, 179,
	166, 94, 3395, 2845, 3393, 152, 217, 146, 24, 3390,
	126, 3389, 256, 47, 27, 229, 135, 57, 157, 111,
	3388, 205, 105, 99, 3387, 3386, 130, 240, 172, 3385,
	93, 3383, 3381, 3380, 3379, 3377, 188, 187, 3375, 3373,
	122, 3370, 3366, 87, 3365, 71, 189, 161, 184, 3363,
	96, 113, 118, 110, 175, 3361, 112, 3360, 3355, 3354,
	3353, 173, 3351, 3350, 119, 66, 3349, 3343, 3341, 67,
	3340, 46, 3339, 28, 3337, 64, 3334, 3333, 3332, 3330,
	3328, 3327, 3321, 3320, 3319, 3318, 3315, 49, 3309, 3308,
	13, 15, 17, 3307, 23, 3306, 163, 3305, 3304, 3303,
	91, 80, 3302, 84, 1, 54, 70, 3301, 3300, 221,
	448, 95, 137, 3299, 403, 3297, 3296, 3295, 147, 3293,
	2360, 3291, 3289, 3287, 3284, 3283, 123, 3282, 212, 38,
	3279, 125, 132, 3277, 39, 48, 211, 214, 3275, 3272,
	3268, 139, 219, 116, 32, 0, 3267, 156, 3266, 3265,
	3264, 252, 3262, 226, 206, 162, 138, 269, 237, 3261,
	3260, 65, 3256, 153, 56, 55, 128, 8, 20, 216,
	3255, 14, 177, 3254, 200, 3252, 150, 36, 133, 3251,
	3250, 33, 251, 3249, 3248, 3247, 121, 3246, 3245, 261,
	74, 3243, 3242, 3241, 3240, 35, 3239, 34, 19, 3238,
	88, 3237, 242, 3235, 209, 129, 174, 176, 145, 228,
	236, 79, 75, 3234, 1615, 144, 90, 18, 3233, 224,
	3232, 194, 117, 3231, 109, 3230, 246, 377, 192, 3228,
	178, 7, 43, 26, 3227, 9, 3226, 197, 202, 3224,
	3222, 22, 51, 3217, 29, 3216, 3214, 3213, 3212, 5,
	3208, 3206, 3205, 2, 4, 3203, 3, 199, 164, 115,
	85, 72, 3201, 3200, 44, 127, 3199, 142, 155, 143,
	3194, 73, 3193, 3192, 3191, 651, 3189, 248, 3188, 3185,
	3179, 3178, 3177, 3176, 3174, 3173, 3172, 3170, 100, 42,
	3169, 3168, 3166, 3165, 76, 131, 3164, 3163, 3162, 3161,
	37, 124, 3160, 21, 3158, 30, 25, 41, 3157, 92,
	3156, 12, 181, 3155, 3154, 16, 3153, 3150, 10, 11,
	3149, 3147, 107, 3145, 81, 31, 158, 103, 3143, 3141,
	83, 201, 141, 3139, 3138, 97, 235, 198, 3137, 159,
	232, 253, 3136, 223, 3135, 3134, 3133, 3132, 3131, 3128,
	1056, 3127, 3126, 230, 62, 77, 102, 3125, 3124, 3123,
	78, 160, 108, 106, 61, 82, 3122, 101, 190, 3120,
	183, 3118, 3116, 98, 3115, 3114, 3113, 3112, 182, 3111,
	3110, 180, 220, 3109, 3107, 390, 3106, 3105, 3091, 3090,
	3088, 3087, 3086, 3085, 3079, 3078, 250, 291, 3076,
}

//line mysql_sql.y:10744
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) alterTypeOptionUnion() *tree.TypeOption {
	v, _ := st.union.(*tree.TypeOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionUnion() *tree.ConnectorOption {
	v, _ := st.union.(*tree.ConnectorOption)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) connectorOptionsUnion() []*tree.ConnectorOption {
	v, _ := st.union.([]*tree.ConnectorOption)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) cycleOptionUnion() *tree.CycleOption {
	v, _ := st.union.(*tree.CycleOption)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fillModeUnion() tree.FillMode {
	v, _ := st.union.(tree.FillMode)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) timeFillUnion() *tree.Fill {
	v, _ := st.union.(*tree.Fill)
	return v
}

func (st *yySymType) timeIntervalUnion() *tree.Interval {
	v, _ := st.union.(*tree.Interval)
	return v
}

func (st *yySymType) timeSlidingUnion() *tree.Sliding {
	v, _ := st.union.(*tree.Sliding)
	return v
}

func (st *yySymType) timeWindowUnion() *tree.TimeWindow {
	v, _ := st.union.(*tree.TimeWindow)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 551, 554, 554, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 116, 116, 115, 536, 536, 536, 537,
	537, 112, 133, 132, 135, 135, 134, 134, 131, 131,
	127, 130, 130, 129, 129, 128, 123, 125, 125, 124,
	126, 126, 113, 101, 114, 481, 481, 480, 480, 479,
	479, 432, 432, 478, 478, 478, 477, 477, 477, 476,
	476, 475, 475, 474, 474, 472, 472, 473, 471, 470,
	470, 470, 468, 468, 468, 464, 464, 466, 465, 465,
	467, 459, 459, 462, 462, 460, 460, 460, 460, 463,
	458, 458, 458, 457, 457, 100, 100, 100, 376, 376,
	99, 99, 390, 390, 390, 390, 390, 388, 388, 388,
	388, 388, 388, 387, 387, 386, 386, 391, 391, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 90,
	90, 90, 90, 90, 95, 95, 95, 542, 542, 541,
	541, 543, 543, 543, 543, 544, 544, 93, 93, 93,
	94, 385, 385, 385, 91, 92, 92, 375, 375, 380,
	380, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 384, 384, 384, 382, 382, 381,
	381, 383, 383, 84, 84, 84, 87, 86, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 85, 85, 85,
	85, 85, 85, 80, 80, 80, 80, 80, 79, 79,
	81, 81, 372, 372, 371, 96, 96, 97, 539, 539,
	538, 540, 540, 540, 540, 98, 104, 104, 104, 104,
	104, 104, 104, 103, 103, 106, 106, 105, 107, 89,
	89, 89, 89, 89, 89, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 506, 506, 506, 508, 508, 309,
	310, 555, 312, 308, 308, 308, 502, 502, 503, 504,
	505, 505, 505, 102, 11, 11, 11, 11, 11, 11,
	11, 11, 13, 78, 83, 255, 255, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 243,
	243, 243, 238, 238, 238, 238, 239, 239, 240, 240,
	241, 241, 241, 241, 242, 242, 302, 302, 260, 260,
	260, 262, 262, 261, 259, 257, 257, 257, 257, 257,
	257, 258, 258, 258, 258, 263, 263, 76, 82, 82,
	82, 519, 519, 77, 530, 530, 435, 435, 323, 323,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 440, 441, 319, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 53,
	56, 52, 52, 52, 361, 361, 51, 556, 556, 297,
	297, 64, 63, 55, 65, 66, 67, 68, 69, 70,
	50, 62, 62, 62, 62, 62, 62, 62, 62, 73,
	453, 453, 558, 558, 558, 71, 72, 434, 434, 434,
	61, 60, 59, 58, 57, 57, 49, 49, 48, 48,
	54, 139, 140, 316, 316, 316, 318, 318, 314, 557,
	557, 404, 404, 317, 317, 47, 47, 47, 47, 74,
	315, 315, 296, 313, 313, 313, 12, 12, 10, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 25, 26, 28, 369, 369, 366, 27,
	19, 18, 18, 22, 21, 17, 17, 20, 23, 24,
	24, 9, 9, 9, 9, 14, 14, 15, 160, 160,
	211, 211, 514, 514, 510, 510, 511, 511, 511, 512,
	512, 513, 513, 108, 447, 447, 447, 447, 447, 447,
	8, 182, 182, 446, 446, 446, 446, 446, 446, 373,
	373, 373, 491, 491, 491, 492, 181, 181, 176, 176,
	448, 448, 338, 493, 493, 456, 456, 455, 455, 454,
	454, 179, 179, 180, 180, 163, 163, 119, 119, 461,
	461, 461, 461, 469, 469, 431, 431, 247, 247, 289,
	289, 290, 290, 153, 153, 154, 154, 154, 154, 154,
	154, 545, 545, 546, 547, 548, 548, 549, 549, 549,
	550, 550, 550, 550, 550, 499, 499, 501, 501, 500,
	178, 178, 174, 174, 175, 175, 175, 173, 173, 172,
	171, 171, 170, 168, 168, 168, 169, 169, 169, 186,
	186, 156, 156, 156, 155, 155, 155, 155, 155, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 157, 157, 507, 507, 507, 436, 436, 436, 443,
	443, 271, 271, 272, 272, 270, 270, 158, 158, 159,
	159, 159, 159, 269, 269, 268, 161, 161, 167, 166,
	166, 162, 162, 162, 162, 279, 279, 278, 278, 278,
	278, 111, 117, 117, 118, 185, 185, 277, 276, 276,
	276, 184, 184, 183, 183, 177, 177, 165, 165, 165,
	165, 275, 164, 273, 535, 535, 534, 534, 533, 531,
	531, 531, 532, 532, 532, 532, 483, 483, 483, 483,
	483, 303, 303, 303, 307, 307, 306, 306, 306, 306,
	306, 311, 7, 7, 7, 7, 7, 7, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 38, 195, 196, 39, 197, 197, 198, 198, 199,
	199, 200, 201, 202, 202, 202, 202, 37, 187, 187,
	188, 188, 189, 189, 190, 191, 191, 191, 194, 192,
	193, 193, 553, 553, 552, 36, 36, 29, 146, 146,
	147, 147, 147, 149, 149, 244, 244, 244, 148, 148,
	150, 150, 150, 515, 518, 516, 516, 520, 520, 520,
	521, 521, 521, 521, 522, 522, 30, 136, 141, 525,
	525, 525, 524, 524, 526, 526, 527, 527, 293, 293,
	294, 294, 144, 145, 145, 143, 138, 152, 152, 152,
	152, 152, 137, 142, 517, 523, 523, 523, 370, 370,
	367, 368, 368, 365, 364, 364, 364, 529, 529, 528,
	528, 528, 304, 304, 31, 360, 360, 362, 363, 363,
	363, 354, 354, 354, 354, 35, 358, 358, 359, 359,
	359, 359, 359, 359, 359, 355, 355, 357, 357, 353,
	353, 353, 353, 353, 353, 34, 151, 151, 352, 352,
	349, 349, 347, 347, 348, 348, 346, 346, 346, 350,
	350, 42, 75, 43, 44, 45, 41, 41, 41, 351,
	351, 33, 33, 33, 121, 120, 120, 120, 120, 120,
	292, 292, 291, 291, 122, 40, 223, 223, 423, 423,
	418, 418, 418, 418, 418, 438, 438, 438, 419, 419,
	419, 420, 420, 420, 422, 422, 422, 421, 421, 421,
	421, 421, 437, 437, 439, 439, 439, 392, 392, 393,
	393, 393, 396, 396, 410, 410, 411, 411, 409, 409,
	416, 416, 415, 415, 414, 414, 413, 413, 412, 412,
	412, 412, 407, 407, 406, 406, 394, 394, 394, 394,
	394, 395, 395, 395, 405, 405, 408, 408, 267, 267,
	266, 266, 231, 231, 232, 232, 265, 265, 229, 229,
	230, 230, 230, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 489, 489,
	490, 234, 234, 245, 245, 245, 245, 245, 245, 233,
	233, 235, 235, 212, 212, 210, 210, 203, 203, 204,
	204, 205, 205, 205, 209, 209, 208, 208, 208, 208,
	206, 206, 207, 207, 207, 207, 207, 207, 378, 378,
	486, 486, 487, 487, 482, 482, 482, 485, 485, 485,
	485, 485, 485, 488, 488, 488, 484, 484, 213, 287,
	287, 287, 305, 305, 305, 305, 286, 286, 286, 228,
	228, 227, 227, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 377, 377, 320, 320, 321,
	321, 254, 253, 253, 253, 253, 253, 251, 252, 250,
	250, 250, 250, 250, 249, 249, 248, 248, 248, 356,
	356, 246, 246, 237, 237, 237, 236, 236, 236, 417,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 285, 285, 285, 330, 330,
	335, 335, 498, 498, 497, 214, 214, 214, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 224, 224, 224,
	401, 401, 401, 401, 402, 402, 402, 402, 403, 403,
	403, 399, 399, 400, 400, 339, 340, 340, 444, 444,
	445, 445, 397, 397, 398, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 452, 452, 452, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 509, 509, 509, 494, 494, 494,
	495, 495, 495, 495, 495, 495, 495, 495, 495, 495,
	495, 495, 496, 496, 496, 496, 496, 496, 496, 496,
	496, 496, 496, 496, 496, 496, 496, 496, 496, 283,
	283, 283, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 341, 341, 342,
	342, 449, 449, 449, 449, 449, 449, 450, 450, 451,
	451, 451, 451, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 328, 280, 280, 280, 343, 336, 336, 337,
	337, 331, 331, 331, 331, 331, 331, 331, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 326,
	326, 326, 326, 326, 326, 326, 326, 326, 326, 326,
	332, 332, 334, 334, 345, 345, 345, 344, 344, 344,
	344, 344, 344, 344, 226, 226, 226, 226, 325, 325,
	325, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 216, 216, 216, 216, 220, 220, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 221, 221, 221, 221, 221, 219, 219,
	219, 219, 219, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 109, 110, 110, 218, 288, 288, 424, 424, 427,
	427, 425, 425, 426, 428, 428, 428, 429, 429, 429,
	430, 430, 430, 433, 433, 295, 295, 295, 301, 301,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 10, 7, 4, 1, 3, 2, 4, 5,
	5, 6, 5, 5, 3, 2, 2, 1, 3, 4,
	3, 7, 5, 8, 2, 2, 1, 3, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	2, 1, 3, 2, 1, 2, 2, 1, 2, 3,
	2, 3, 6, 3, 3, 1, 1, 7, 7, 8,
	8, 0, 4, 7, 0, 3, 0, 2, 0, 1,
	1, 1, 1, 4, 2, 2, 3, 3, 4, 5,
	3, 4, 4, 2, 2, 2, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 2, 5, 5, 0, 2, 7, 0, 1, 0,
	1, 5, 5, 3, 3, 2, 4, 4, 4, 4,
	4, 1, 1, 1, 3, 3, 1, 1, 1, 6,
	0, 1, 1, 1, 1, 5, 5, 0, 1, 1,
	3, 3, 3, 4, 6, 7, 4, 4, 7, 8,
	3, 3, 3, 0, 2, 2, 0, 2, 2, 1,
	1, 1, 1, 0, 1, 4, 4, 5, 4, 3,
	1, 3, 1, 1, 3, 5, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 4, 1, 3, 1, 4,
	6, 6, 4, 4, 4, 4, 4, 3, 6, 3,
	5, 1, 1, 2, 2, 11, 8, 9, 1, 3,
	2, 4, 0, 2, 0, 1, 1, 1, 1, 0,
	1, 0, 1, 4, 2, 1, 5, 4, 4, 2,
	5, 1, 3, 2, 1, 5, 4, 4, 2, 0,
	5, 4, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 6, 4, 5, 7, 4,
	5, 0, 1, 3, 8, 0, 6, 0, 4, 6,
	1, 1, 1, 1, 1, 2, 3, 1, 3, 6,
	0, 3, 0, 1, 2, 4, 4, 0, 1, 3,
	1, 3, 3, 0, 1, 1, 0, 2, 2, 0,
	2, 3, 3, 3, 1, 3, 3, 3, 3, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 7, 7, 1, 1, 1, 0, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 2, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 4, 4, 3, 2, 2, 2, 3, 2,
	3, 4, 1, 3, 4, 0, 2, 1, 1, 2,
	2, 0, 1, 2, 4, 1, 3, 1, 3, 2,
	3, 1, 4, 3, 0, 1, 1, 2, 5, 2,
	2, 2, 0, 2, 3, 3, 0, 1, 3, 1,
	3, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 7, 1, 1, 7, 1, 3, 0, 1, 1,
	3, 1, 3, 0, 1, 1, 1, 14, 1, 3,
	0, 1, 1, 3, 1, 1, 2, 4, 1, 1,
	1, 1, 0, 1, 2, 9, 9, 7, 1, 2,
	3, 3, 3, 0, 4, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 4, 1, 1, 3, 4, 3,
	0, 1, 1, 1, 0, 2, 7, 8, 8, 0,
	3, 3, 0, 3, 0, 3, 0, 5, 1, 3,
	0, 3, 3, 0, 2, 9, 6, 0, 2, 2,
	3, 3, 4, 4, 1, 0, 2, 2, 1, 3,
	2, 1, 3, 2, 1, 3, 2, 0, 1, 3,
	4, 3, 1, 1, 4, 1, 3, 1, 1, 1,
	1, 0, 1, 1, 1, 11, 0, 2, 3, 3,
	2, 2, 3, 1, 1, 1, 3, 3, 4, 0,
	2, 2, 2, 2, 2, 6, 0, 4, 1, 1,
	0, 3, 0, 1, 1, 2, 4, 4, 4, 0,
	1, 8, 2, 4, 4, 4, 9, 10, 8, 0,
	2, 11, 9, 11, 2, 2, 8, 4, 5, 3,
	1, 3, 0, 3, 5, 10, 0, 2, 0, 2,
	0, 3, 2, 4, 3, 0, 2, 1, 0, 2,
	3, 0, 2, 3, 0, 2, 1, 0, 3, 2,
	4, 3, 0, 1, 0, 1, 1, 0, 6, 0,
	3, 5, 0, 4, 0, 3, 1, 3, 4, 5,
	0, 3, 1, 3, 2, 3, 1, 2, 0, 4,
	6, 5, 0, 2, 0, 2, 4, 5, 4, 5,
	1, 5, 6, 5, 0, 3, 0, 1, 1, 3,
	3, 3, 0, 4, 1, 3, 3, 3, 0, 1,
	1, 3, 2, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 5, 4, 1, 3,
	3, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 0, 1, 1,
	3, 1, 1, 1, 1, 1, 7, 9, 7, 9,
	2, 1, 7, 9, 7, 9, 8, 5, 0, 1,
	0, 1, 1, 1, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 3, 1,
	3, 5, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 2, 1, 2, 2, 1, 1, 2, 2,
	2, 3, 3, 2, 2, 1, 5, 6, 4, 1,
	1, 1, 5, 4, 1, 1, 2, 0, 1, 1,
	2, 5, 0, 1, 1, 2, 2, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 2, 2, 2, 0,
	3, 0, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 3, 5, 2, 2,
	2, 2, 1, 1, 2, 5, 6, 6, 6, 6,
	1, 1, 1, 1, 1, 4, 4, 4, 0, 2,
	0, 1, 1, 2, 4, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 2, 2, 2, 0, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 5, 0, 1, 3, 0, 1, 0, 2,
	0, 2, 0, 1, 6, 8, 8, 6, 6, 5,
	5, 5, 6, 6, 6, 6, 5, 6, 6, 6,
	6, 6, 6, 6, 6, 1, 1, 1, 4, 4,
	6, 8, 6, 4, 5, 4, 4, 4, 3, 4,
	6, 6, 7, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 8, 4, 2, 3, 2, 4, 2, 2, 4,
	6, 2, 2, 4, 6, 4, 2, 0, 1, 2,
	3, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 1, 3, 0, 1, 1,
	3, 3, 3, 3, 3, 2, 1, 1, 3, 4,
	3, 4, 3, 4, 3, 4, 3, 4, 1, 3,
	4, 4, 5, 4, 5, 3, 4, 5, 6, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	1, 1, 2, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 4, 4,
	1, 2, 3, 5, 1, 1, 3, 0, 1, 0,
	3, 0, 3, 3, 0, 3, 5, 0, 3, 5,
	0, 1, 1, 0, 1, 1, 2, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -551, -554, -2, -5, 608, -1, -4, -110, -84,
	-7, -112, -113, -8, -108, -9, -10, -12, -88, -103,
	-105, -107, -106, -46, -11, -102, -79, -80, -90, -96,
	-99, -100, -101, -114, -109, -111, -153, -115, -116, 598,
	-85, -86, -87, -32, -31, -30, -29, -136, -141, 604,
	443, 13, 492, -14, -15, -499, -16, 257, -308, -309,
	-310, -312, -555, -47, -48, -49, -57, -58, -59, -60,
	-61, -71, -72, -73, -50, -51, -52, -55, -53, -64,
	-63, -65, -66, -67, -68, -69, -70, -54, -139, -140,
	-74, -56, -75, -77, -76, -82, -78, -83, -138, -143,
	-13, 232, -81, 75, -91, -92, -93, -94, -95, -97,
	-98, 368, 374, 431, 597, 60, -154, -156, 612, 613,
	157, 158, 160, 161, -33, -34, -35, -36, -37, -38,
	-40, -39, -41, -42, -43, -44, -45, 228, 15, 535,
	-17, -20, -18, -21, -19, -27, -28, -26, -23, -25,
	-137, -24, -142, -22, 252, 251, 37, 318, 319, 320,
	372, 250, 229, 14, 30, 41, 348, -155, 81, 527,
	528, 530, 230, -157, 12, 616, -6, -3, -2, -123,
	-127, -131, -134, -135, -132, -133, -4, -110, 115, 242,
	599, -305, 364, 600, 602, 601, 84, 92, -298, -300,
	368, 374, 597, 613, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 564,
	565, 555, 556, 557, 558, 559, 560, 561, 562, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 495, 584, 585, 586, 587, 523, 583,
	346, 347, 532, 269, 293, 399, 299, 306, 157, 176,
	170, 198, 190, 528, 165, 273, 311, 274, 91, 160,
	478, 105, 455, 428, 163, 288, 290, 292, 524, 525,
	295, 294, 296, 298, 526, 275, 349, 186, 181, 287,
	271, 179, 276, 39, 277, 203, 278, 279, 537, 451,
	345, 457, 303, 426, 180, 452, 291, 454, 207, 211,
	469, 470, 174, 175, 459, 472, 202, 205, 206, 249,
	342, 343, 344, 42, 534, 261, 473, 209, 201, 197,
	481, 307, 305, 200, 173, 196, 272, 64, 213, 212,
	214, 422, 423, 424, 425, 280, 281, 362, 468, 193,
	182, 350, 166, 22, 476, 256, 456, 375, 282, 300,
	308, 208, 210, 263, 268, 536, 527, 430, 267, 304,
	474, 178, 260, 289, 255, 477, 167, 530, 377, 283,
	161, 297, 471, 480, 63, 390, 172, 164, 246, 158,
	265, 270, 284, 285, 286, 521, 310, 309, 301, 529,
	194, 262, 199, 184, 171, 195, 159, 264, 479, 391,
	595, 348, 409, 192, 189, 266, 239, 475, 458, 162,
	413, 392, 187, 312, 591, 592, 593, 363, 341, 313,
	314, 185, 253, 449, 450, 317, 419, 333, 393, 429,
	400, 394, 220, 221, 321, 461, 463, 204, 594, 322,
	323, 324, 453, 325, 326, 327, 328, 367, 55, 57,
	93, 95, 614, 62, -383, -381, -305, 528, 597, 374,
	527, 530, 368, 348, 613, -197, -305, 615, -163, 38,
	-210, -305, -163, -81, -15, -14, -155, -156, -210, 236,
	-313, 23, 426, -89, 427, 232, 81, -305, -9, -101,
	-8, -108, -79, -153, 431, -311, -305, 318, 318, -311,
	236, -305, 267, 407, -435, 242, -387, -360, 268, -386,
	-362, -389, -363, 31, 228, 230, 229, 264, 15, 372,
	238, 13, 12, 373, 250, 24, 25, 27, 14, 374,
	376, 28, 377, 380, 381, 382, 41, 385, 386, 257,
	84, 92, 87, 275, -196, -305, -337, -331, 112, 258,
	-333, -326, -327, -329, -478, -472, -324, 81, 139, 140,
	147, 113, -328, -417, 35, 115, 544, 583, 493, -281,
	-282, -283, -284, -285, -305, -473, -471, 87, 96, 99,
	102, 103, 101, 100, 151, 183, 98, 88, 152, -156,
	84, -494, 553, -299, 576, 584, 585, 586, 587, 575,
	60, -442, -451, 235, -449, 150, 188, 253, 184, 13,
	145, 419, 185, 550, 572, 495, 554, 564, 579, 546,
	547, 548, 541, 542, 543, 545, 555, 557, 571, -452,
	567, 577, 578, 563, 580, 581, 582, 86, 85, 570,
	569, 556, 551, 552, 558, 540, 549, 559, 560, 568,
	573, 574, 356, 105, 357, 358, 485, 349, 359, 242,
	426, 69, 360, 361, 362, 363, 364, 492, 365, 70,
	366, 355, 257, 409, 367, 187, 204, 497, 496, 498,
	489, 486, 484, 487, 488, 490, 491, 561, 562, 566,
	-117, -118, 589, -545, -274, -546, 6, 7, 8, 9,
	-547, 152, -536, 428, 536, 87, 162, 159, -374, 162,
	111, 167, 166, -374, 321, 263, -351, -146, 346, 409,
	325, 93, 267, -354, -352, 524, -437, 315, 311, 237,
	108, -147, 247, 246, 106, 485, 235, 383, 306, 55,
	57, -510, -511, 225, 226, 227, -501, 518, -500, -305,
	358, 95, 26, 236, 369, 263, 463, 461, 462, 464,
	465, 466, 467, -62, -453, -434, 458, 457, -317, 450,
	456, 448, 460, 451, 347, 327, 326, 228, 609, 525,
	519, -295, 393, 429, 482, 483, 370, 430, 469, 471,
	452, 105, 191, 188, 237, 239, 236, 346, 485, 409,
	93, 325, -510, 159, 469, 471, 267, 407, 40, -380,
	419, -379, -381, 470, 481, 85, 86, 468, -295, 105,
	449, 449, -545, -274, -154, -156, -111, -499, 526, 526,
	526, 237, 346, 409, 267, 238, 236, 522, 524, 239,
	485, 235, 318, 369, 263, 325, 93, -436, -507, 31,
	-443, 222, 223, 224, 32, 33, -1, 119, 616, -331,
	-331, -6, 619, -6, -331, -305, -305, 154, -216, -220,
	-217, -219, -218, -222, -221, 188, 189, 150, 192, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 205, 206,
	203, 30, 204, 253, 184, 185, 186, 187, 207, 170,
	190, 533, 215, 171, 216, 172, 217, 173, 218, 174,
	175, 219, 176, 179, 180, 181, 182, 178, 153, 81,
	153, 87, -179, 259, -210, 153, -179, -545, -172, -173,
	11, -210, -286, -305, 428, 122, -89, -89, 427, -502,
	-503, -504, -506, 232, 427, 426, 153, 275, 16, -311,
	-311, 79, -210, -362, 267, -387, -360, 35, 78, 154,
	240, 154, 78, 81, 370, 346, 409, 371, 485, 236,
	383, 239, 267, 384, 346, 409, 236, 239, 485, 267,
	346, 236, 239, 409, 267, 384, 448, 449, 239, 26,
	375, 378, 379, 449, -457, 481, 154, 111, 108, 109,
	110, -331, 129, -344, 122, 123, 124, 125, 126, 127,
	128, 136, 135, 146, 139, 140, 141, 142, 143, 144,
	145, 137, 138, 132, 112, 130, 134, 131, 114, -156,
	-331, -337, 60, -329, -329, -329, -329, -417, -335, -331,
	81, 81, 81, 153, 100, 87, -331, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, -450,
	81, 81, -341, -342, 81, 81, -324, -286, 81, 87,
	87, 81, 81, 81, 87, -342, -342, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, -173,
	154, -172, 81, -172, -173, -157, -156, 31, 32, 31,
	32, 31, 32, 31, 32, -548, 606, 81, 96, 614,
	220, 474, 535, 165, 166, 167, -195, -305, -197, 369,
	239, 522, 521, 239, -147, -349, 242, -349, -349, -349,
	-349, 238, -349, 23, 236, 236, 236, -349, 492, 122,
	122, 58, -512, 169, 154, -501, -178, 81, -316, 130,
	134, -316, 23, 265, 265, 265, -316, 305, -556, -557,
	16, 132, -314, -557, -314, -314, -316, -558, 238, 459,
	42, 266, 265, -174, -175, 21, -174, 453, 449, -404,
	454, 455, -318, -557, -317, -316, -316, -317, -316, -316,
	-316, 236, 239, 485, 325, 610, -556, -556, 30, 30,
	-435, -435, -210, -435, 519, -296, -305, -435, -435, -435,
	-513, 241, -542, -541, 472, -544, 474, 159, -381, 159,
	-381, -362, 267, 267, 154, 122, 23, -382, 122, 133,
	-381, -381, -382, -382, -233, 40, -304, 150, -305, 87,
	-233, 40, -539, -538, -210, -173, -157, -156, 82, 82,
	82, 529, 529, 529, -435, -435, -435, -435, -435, -437,
	-435, -435, -435, -435, -435, -311, -187, -305, -197, 242,
	-435, -435, -158, -159, 141, -331, -305, -158, -3, -125,
	-124, 116, 117, 119, 600, 364, 599, 603, 597, -381,
	40, -430, 391, 390, -424, -426, 81, -425, 81, -425,
	-425, -425, -425, -425, 81, 81, -427, 81, -427, -427,
	-424, -428, 81, -428, -429, 81, -429, -428, -305, -336,
	-337, -305, 38, -446, 60, -153, 81, 30, 81, -305,
	-447, 60, -153, 81, 30, -173, -119, 38, -175, 20,
	153, 96, 87, -89, 82, 154, -505, 102, 103, -508,
	202, 194, -305, -104, 87, -7, -8, -9, -10, -46,
	-79, -153, -474, -472, 81, 31, 418, 78, 16, -388,
	236, 485, 369, 263, 239, 346, -386, -369, -366, -364,
	-304, -362, -365, -364, -391, -286, 449, -120, 433, 432,
	317, -331, -331, -331, -331, -331, 101, 112, 341, 102,
	103, -326, -345, 31, 313, 314, -327, -327, -327, -327,
	-327, -327, -327, -327, -327, -327, -327, -327, -334, -343,
	-417, 81, 132, 130, 134, 131, 114, -329, -329, -327,
	-327, 82, 154, -498, -497, 116, -331, -331, -331, -305,
	-495, -496, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 360, 355, 361, 359, 349, 367, 362,
	363, 187, 516, 517, 510, 511, 512, 513, 514, 515,
	-336, -336, -331, -495, -336, -280, 32, 31, -337, -337,
	-337, 82, -331, -509, 339, 338, 340, -176, -305, -336,
	82, 82, 82, 96, -337, -337, -336, -327, -336, -496,
	-280, -280, -280, -280, 141, -337, -337, -280, -280, -280,
	-280, 141, -280, -280, -280, -280, -280, -280, -280, -280,
	82, 82, 82, -174, -118, -455, -454, -331, 40, -119,
	-175, -549, 607, 81, -286, -537, 87, 87, 617, 475,
	476, 163, 166, 165, 34, 81, -187, -349, -349, 522,
	-349, -515, -305, 112, -370, -367, -364, -305, -305, -360,
	-305, -305, -210, -349, -349, -349, -210, -244, 52, 53,
	54, -364, -148, 55, 56, -513, -500, 34, -177, -305,
	-270, 17, -329, -329, -364, 267, -556, -316, -316, -297,
	-296, -318, -313, -318, -318, -270, -314, -316, -316, -331,
	-318, -314, -270, -305, 449, -270, -270, -404, -315, -305,
	-315, -349, -296, -297, -297, -210, -210, -255, -256, 233,
	353, 354, 231, 229, 11, 230, -264, 306, -350, 493,
	-239, -240, 76, 41, -242, 395, 388, 269, 273, 91,
	274, 428, 275, 238, 277, 278, 279, 294, 296, 249,
	280, 281, 282, 419, 283, 158, 295, 284, 285, 286,
	371, -234, 6, 328, 40, 50, 51, 442, 441, 538,
	535, 270, -515, -515, 30, 30, -370, -305, -305, -166,
	-161, -165, -162, -167, -273, -275, -164, 81, -210, -156,
	-305, 154, 473, 475, 476, -542, -382, -542, -382, 31,
	418, -385, 418, 31, -360, -379, 469, 471, -375, 87,
	419, -365, -384, 78, 150, -454, -382, -382, -384, -384,
	149, 154, -540, 474, 475, 225, -174, 96, 96, 96,
	-212, -210, -515, -369, -360, -305, -435, -212, -212, -212,
	-305, -305, 81, 153, 35, -305, -305, -269, 154, -268,
	16, -306, -305, 34, 87, 153, -269, -126, -124, 118,
	-331, -6, 599, -331, -6, -6, -331, -6, -331, -433,
	392, 96, 96, -288, 87, -288, 96, 96, 96, 82,
	87, -373, 78, -448, -338, -493, 589, -181, 82, -176,
	-491, -492, -176, -180, -305, -448, -181, 82, -491, -174,
	590, -119, -171, -170, -331, -305, 23, -89, -503, 153,
	154, -177, -388, -368, -365, -390, 141, -305, -376, 154,
	535, 620, 85, 240, -529, -528, 410, 82, 154, -458,
	241, 492, 87, 617, 426, 220, 221, 101, 341, 102,
	103, -417, -337, -334, -329, -329, -327, -327, -332, 254,
	-332, 111, -331, -330, -497, 118, -331, 34, 34, 154,
	79, 153, 82, 82, 16, 16, 82, -331, 82, 82,
	82, 82, 16, 16, -331, 82, 153, 82, 82, 82,
	82, 79, 82, 154, 82, 154, -337, -337, -331, -337,
	82, 82, 82, -331, -331, -331, -337, 82, -331, -331,
	-331, -331, -331, -331, -331, -331, -398, 444, -398, -398,
	154, 82, -119, 81, 96, 154, -292, -291, 87, 164,
	167, 167, 166, -196, -198, -199, -200, -201, -202, 132,
	155, 156, 81, -210, -210, -349, -210, -518, 396, 35,
	-530, 154, 40, -528, 485, -144, 317, -353, 79, -151,
	16, 535, -210, -210, -210, -223, 34, 16, -160, -211,
	-305, 81, 82, 154, -331, -361, 79, -305, -297, -270,
	-270, -318, -270, -270, 154, 22, -316, -318, -318, -314,
	153, -296, -423, 34, -178, 154, -209, -302, -206, -208,
	244, -321, -207, 247, -487, 245, 243, 106, 248, 302,
	107, 238, -302, -302, 244, -243, 240, 34, -302, -258,
	238, 344, 302, 245, 20, -257, 238, 107, -305, 244,
	248, 243, -301, 122, -295, 149, 240, 42, 371, -301,
	539, -301, -301, -301, -301, -301, -301, -301, 276, 276,
	-301, -301, -301, -301, -301, -301, -301, -301, -301, -301,
	-301, 159, -301, -301, -301, -301, -301, -301, 81, 271,
	272, -519, 396, 30, 352, 352, -530, 30, -152, 346,
	30, -276, -277, -278, -279, 67, 71, 73, 68, 69,
	70, 74, 30, 154, -303, -307, 34, -305, 87, -303,
	-156, -161, -166, -303, 81, -541, -543, 477, 474, 480,
	-384, -384, 240, 81, 122, -384, -384, 40, -304, -538,
	481, 475, -119, 154, 78, -212, -188, -189, -190, -191,
	-216, -286, 189, 192, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 205, 206, 203, 204, 253, 184, 185,
	186, 187, 207, 170, 190, 171, 172, 173, 174, 175,
	176, 179, 180, 181, 182, 178, -305, -197, -270, -159,
	-161, -305, 87, -305, 141, -270, 119, -6, 117, -130,
	-129, -128, 120, 597, 603, 119, 119, 119, 82, 82,
	82, 154, 82, 82, 82, 154, 82, 154, -461, 454,
	39, 154, 81, 82, 154, 60, 154, 122, 82, 154,
	82, 60, -119, 87, 154, -168, 36, 37, 153, 428,
	-305, -472, 82, -390, 154, 240, 153, 153, -366, 374,
	-304, -368, 20, 535, -286, 38, -292, 122, 617, -305,
	82, -332, -332, 111, -329, -326, 82, 119, -331, 117,
	-214, -216, 390, 391, -214, -215, -221, 150, 188, 253,
	187, 186, 184, 390, 391, -233, -305, -331, -331, 82,
	-331, -331, 16, -305, -233, -327, -331, -173, -173, 82,
	82, -397, -398, -397, -397, 82, 82, 82, 82, -397,
	82, 82, 82, 82, 82, 82, 82, 82, 81, -454,
	-550, 62, 605, 61, 418, 101, 307, 154, 96, 618,
	154, 122, 167, 382, 82, 154, -286, -188, -178, 81,
	-231, 535, -210, -178, -521, 456, 398, 408, -301, -323,
	-322, 348, 41, -440, 419, 404, 405, -367, 267, -305,
	-527, 94, 122, 78, 332, 336, 333, 334, 335, -347,
	-348, -346, -350, -515, 81, 81, 81, 81, -418, 322,
	-216, -210, -160, -305, 16, 154, -514, 153, -1, -305,
	-360, -316, -270, -331, -331, -270, -316, -316, -318, -305,
	-418, -216, 34, -256, -213, -286, -207, -486, -487, -349,
	-305, 107, -486, 107, 81, -213, -286, -286, -259, -315,
	-286, -305, -305, -305, -305, -262, -261, -286, -305, -305,
	-305, 107, 107, -238, 40, 47, 48, 49, -301, -301,
	191, -241, 40, 418, 420, 421, 96, 96, 96, 96,
	87, 87, 87, -301, -301, 96, 87, -307, 87, -488,
	166, 44, 45, 96, 96, 96, 96, 40, 87, -245,
	40, 287, 291, 288, 289, 290, 87, 96, 40, 96,
	40, 96, 40, -305, 81, -489, -490, 87, -521, -301,
	352, -381, 122, -323, -526, 317, -145, 91, 31, -182,
	233, 230, -515, -372, -371, -286, -165, -165, -165, -165,
	67, 67, 67, 72, 67, 72, 67, -278, -372, -167,
	-178, -307, 82, -535, -534, -533, -531, 75, 241, 76,
	-336, 474, 478, 479, -368, -319, 87, -375, -186, 23,
	-210, -210, -439, 297, 298, 82, 154, -216, -272, 18,
	153, -272, 115, -6, -126, -128, -331, -6, -331, 599,
	364, 600, 87, 96, 96, -469, 439, 434, 436, 107,
	-338, -456, -455, 60, -153, -176, -448, -492, -454, -305,
	60, -153, -448, -186, -461, -170, -169, 43, -305, 96,
	16, -365, -360, 141, 141, -305, 375, -376, 87, 397,
	87, 236, 618, 87, -292, -326, -331, 82, -224, 175,
	174, -224, 82, 82, -425, -425, -424, -427, -424, -224,
	-224, 82, 82, 23, 82, 82, 82, -331, 82, 82,
	154, -444, 494, -445, 565, -397, -397, -397, -397, -397,
	-397, -397, -397, -397, -397, -397, -397, -397, -397, -340,
	-339, 259, 82, 154, -495, 154, -291, 87, 87, 87,
	-200, -216, 82, 34, -203, -204, -205, -213, -206, -208,
	34, 81, 81, 34, -522, 91, -516, 87, -305, -523,
	91, 399, 152, 350, 40, 400, 401, 416, 345, 96,
	96, 406, -517, -305, -152, -525, 51, 122, 87, -210,
	-346, -295, 149, 278, 325, -267, -266, -305, 87, -203,
	-203, -203, -419, 324, 20, 96, 140, -179, 79, 153,
	-161, -211, -305, 141, 82, -270, -270, -270, -316, -419,
	-153, -260, 44, 46, -216, -484, -305, -482, -484, -305,
	-482, -482, -349, -331, -260, -213, 240, 30, 230, -263,
	330, 331, 336, -377, 303, 112, -377, 154, -168, -305,
	-233, -233, 30, 87, 87, -212, 82, 154, 122, -522,
	-516, 122, -382, 87, -523, -527, 122, 87, 154, -182,
	-182, -270, 154, 122, -184, -183, 78, 79, -185, 78,
	-183, 67, 67, -270, -533, -532, 23, -487, -487, -487,
	82, 82, 14, -190, 40, -271, 19, 20, 141, -271,
	119, 117, 119, 119, -305, 82, 82, -431, 591, -465,
	-467, 434, 20, 20, 14, 241, 82, -448, -448, -469,
	44, 45, -360, -376, 419, -210, 154, 618, -331, 82,
	-331, 82, 87, 82, 87, -173, 20, -331, 82, -495,
	234, -153, 82, 154, -153, -232, -265, -305, 87, -203,
	-153, 87, -520, 410, 87, 87, 96, 40, 96, 152,
	402, -441, -145, -524, 91, 122, 617, 81, -301, -301,
	-301, -305, 82, 154, -301, -301, 82, 82, 82, -420,
	258, 96, 140, 96, 140, 96, -303, -161, -305, -270,
	-514, 153, -270, -420, -286, -228, -227, -225, 101, 112,
	40, 388, -226, 91, 149, 292, 295, 294, 270, 293,
	-254, -320, 78, 394, 330, 331, -350, 591, 523, 243,
	106, 107, 376, -321, 81, 81, 79, 312, 81, 81,
	-484, 82, -260, -286, 40, -263, 40, 342, 303, -261,
	149, -233, 82, -490, 87, -520, 87, -384, -525, 87,
	-515, -173, -371, -454, -331, 81, -331, 81, 67, 11,
	18, -324, -331, -337, 242, -6, 600, 364, -247, 592,
	87, 20, 87, -463, 87, -372, -431, -122, -459, -404,
	275, 82, 82, -397, -397, -400, -399, -403, 440, 304,
	447, -337, 82, 82, -192, -216, -149, 535, -231, -205,
	82, 154, -301, -301, 82, -149, 20, 535, 349, 40,
	96, 40, 403, 122, 102, 103, -293, -294, 87, -355,
	-357, -286, 81, -233, -235, -304, 150, 87, -266, -324,
	-324, -229, -230, -264, -350, -121, -120, -229, -421, 158,
	96, 140, 96, 96, -270, -270, -421, -225, 101, -327,
	87, -235, -236, 40, 291, 287, 122, 122, -237, 40,
	271, 272, -246, 81, 302, 14, 191, 81, 107, 107,
	-210, -355, -355, -485, 332, 333, 334, 337, 336, 335,
	-485, -355, -355, 81, -378, -377, -327, -301, -301, 149,
	-524, -174, -177, -483, -305, 243, 20, 20, -305, -305,
	-289, 593, 96, 87, 436, -247, -432, 594, -468, 439,
	-462, -460, 434, 435, 436, 437, 122, 82, -402, 114,
	402, 406, -325, -328, 96, 99, 183, 152, 534, -150,
	59, 481, -265, -324, -324, -231, 87, 397, 87, 349,
	87, 618, 154, 122, 82, 154, -424, -331, -392, 259,
	154, -264, -295, -122, -392, -438, 166, 323, 535, 96,
	140, 96, -173, -422, 166, 323, 87, 87, 96, 81,
	-449, 30, 87, -356, 81, 82, 82, 82, 82, -355,
	96, -233, -301, 82, 82, 154, 81, 20, -289, 87,
	-470, 241, -466, -467, 438, -460, 20, 436, 20, 20,
	87, -401, -402, 406, -325, -328, 589, 445, 445, 445,
	-194, -305, 302, 419, -294, 87, -358, -357, -168, 82,
	-393, 311, 20, -264, -301, -393, 323, 96, 140, 96,
	-174, 323, 82, -331, -341, -301, 82, -249, -248, 531,
	-355, -358, 79, -358, 79, -358, 79, -358, 79, 82,
	-233, -305, 243, -290, -305, -463, -477, 81, 96, -465,
	-464, -466, 20, -463, 20, -463, -463, 111, 446, 446,
	446, -193, 34, 441, 375, -359, 249, 342, 343, 91,
	535, 330, 331, -168, 20, -394, 304, 305, -395, -408,
	307, -233, 96, 82, -305, -253, -251, -252, 78, 452,
	300, 301, 82, -485, -485, -485, -485, -254, 82, 154,
	-481, 30, 82, -476, -475, -287, -471, -305, 439, 440,
	87, -463, -401, 87, -301, -301, 87, 87, 329, -286,
	81, -406, 308, 81, -404, 81, -404, 107, 333, -377,
	-252, 78, -251, 78, 15, 14, -358, -358, -358, -358,
	-305, -480, -479, -478, 82, 154, 153, -553, -552, 611,
	96, 96, -305, -391, -396, 309, 96, -327, 81, -327,
	81, -405, 306, 81, -250, 297, 298, 30, 166, -250,
	154, 122, -475, -305, 87, 82, -410, 81, 20, 82,
	-391, 82, -391, 81, 122, -327, 101, 40, 299, -479,
	40, -331, 153, -411, -409, 259, -395, 82, 82, 82,
	-391, 96, 82, -305, 82, 154, -305, -407, 310, 82,
	-409, -412, 60, 96, -416, -413, 81, -264, 261, 132,
	-416, -264, -415, -414, 309, 262, 81, 82, 154, -305,
	258, 81, -337, -414, -413, -337, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 842, 843, 844, 845, 846, 847, 0,
	0, 0, 0, 601, 602, 0, 568, 0, 0, 0,
	0, 0, 0, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 288, 284, 209, 210, 211, 212, 213, 295,
	296, 436, 0, 0, 0, 0, 683, -2, 56, 0,
	277, 0, 268, 268, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, -2, 614, 0,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 343, 344, 345, 339, 340, 342,
	341, -2, 0, 614, 0, 0, 0, 691, 0, 0,
	0, 0, 0, 734, 756, 23, 0, 7, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 0, 0,
	19, 0, 19, 0, 0, 0, 1232, 1233, 1234, 1235,
	-2, 1733, 1711, 1885, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720,
	1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730,
	1731, 1732, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741,
	1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751,
	1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761,
	1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771,
	1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781,
	1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791,
	1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1801, 1802,
	1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812,
	1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822,
	1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832,
	1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842,
	1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852,
	1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862,
	1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872,
	1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882,
	1883, 1884, 1886, 1887, 0, 261, 259, 1683, 1711, 1733,
	1788, 1799, 1800, 1834, 1885, 0, 865, 0, 661, 0,
	666, 1185, 661, 289, 603, 604, 691, 717, 566, 0,
	325, 0, 1724, 329, 0, 0, 0, 563, 319, 320,
	321, 322, 323, 324, 0, 0, 841, 0, 0, 315,
	0, 283, 1790, 0, 0, 0, 0, 0, 0, 153,
	975, 155, 977, 159, 166, 0, 0, 171, 172, 175,
	176, 177, 178, 179, 0, 183, 0, 185, 188, 0,
	190, 191, 0, 194, 195, 196, 0, 206, 207, 208,
	978, 979, 980, -2, 84, 863, 1641, 1529, 0, 1536,
	1537, 1548, 1559, 1312, 1313, 1314, 1315, 0, 0, 0,
	0, 0, 1322, 1323, 0, 1340, 1902, 1943, 0, 1330,
	1331, 1332, 1333, 1334, 93, 105, 106, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 0, 1589, 1590, 1591, 1502, 1299,
	1232, 0, 1911, 0, 1933, 1938, 1939, 1940, 1941, 1932,
	0, 0, 1487, 0, 1477, 0, 0, -2, -2, 0,
	0, 1859, -2, 1908, 1929, 1937, 1912, 1913, 1936, 1904,
	1905, 1906, 1899, 1900, 1901, 1903, 1915, 1917, 1928, 0,
	1924, 1934, 1935, 0, 0, 0, 0, 107, 108, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1493, -2, 1495, 1496, 1498, -2, 1500, 1501,
	-2, 1504, 1505, 1506, -2, -2, 1509, 1510, 1511, 1512,
	1513, 1514, 1517, -2, -2, -2, -2, 1489, 1490, 1491,
	1492, 1481, 1482, 1483, 1484, 1485, 1486, -2, -2, -2,
	717, 792, 0, 717, 0, 692, 739, 742, 745, 748,
	695, 0, 0, 57, 58, 0, 278, 279, 267, 269,
	0, 273, 0, 266, 0, 0, 0, 0, 1010, 1010,
	1010, 1010, 1010, 0, 1010, 0, 0, 0, 0, 1010,
	0, 898, 982, 983, 984, 1008, 1009, 1073, 0, 0,
	0, 619, 615, 616, 617, 618, 705, 0, 707, 710,
	543, 543, 491, 0, 0, 0, 543, 0, 505, 497,
	0, 0, 0, 543, 0, 0, 712, 712, 0, 546,
	553, 543, 543, -2, 543, 543, 543, 0, 0, 1022,
	511, 512, 513, 497, 497, 516, 517, 518, 528, 529,
	554, 1665, 0, 0, 436, 436, 0, 436, 0, 436,
	436, 436, 621, 1829, 1731, 1805, 1790, 0, 0, 234,
	1859, 239, 0, 1732, 1752, 0, 0, 1770, 0, -2,
	0, 305, 717, 0, 0, 691, 0, 0, 0, 0,
	0, 436, 436, 436, 436, 436, 1072, 436, 436, 436,
	436, 436, 0, 0, 0, 436, 436, 0, 0, 757,
	758, 753, 754, 755, 759, 760, 5, 6, 19, 0,
	0, 0, 0, 0, 0, 63, 62, 0, 1642, 1660,
	1594, 1595, 1596, 1647, 1598, 1651, 1651, 1651, 1651, 1627,
	1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1651, 1651,
	0, 0, 1640, 1618, 1649, 1649, 1649, 1647, 1644, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1654, 1654, 1657, 1657, 1654, 0, 1527,
	0, 0, 0, 0, 665, 0, 0, 717, -2, 0,
	0, 567, 326, 1236, 0, 0, 330, 331, 0, 0,
	346, 0, 349, 334, 335, 336, 0, 133, 0, 317,
	318, 0, 0, 285, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 163, 160, 167, 170, 180, 187,
	0, 199, 201, 204, 161, 168, 173, 174, 181, 202,
	162, 164, 165, 169, 203, 205, 182, 186, 200, 184,
	189, 192, 193, 198, 0, 134, 0, 0, 0, 0,
	0, 1535, 0, 0, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	1529, 0, 0, 1318, 1319, 1320, 1321, 1324, 0, 1341,
	0, 0, 0, 0, 1588, 1592, 0, 1527, 1527, 0,
	1527, 1523, 0, 0, 0, 0, 0, 0, 1527, 1463,
	0, 0, 1465, 1478, 0, 0, 1467, 1468, 0, 1471,
	1472, 1527, 0, 1527, 1476, 1459, 1460, 0, 1523, 1523,
	1523, 1523, 0, 0, 1523, 1523, 1523, 1523, 1523, 1523,
	1523, 1523, 1523, 1523, 1523, 1523, 0, 0, 0, 712,
	0, 718, 0, -2, 0, 736, 738, 740, 741, 743,
	744, 746, 747, 749, 750, 697, 0, 0, 59, 0,
	0, 0, 0, 271, 0, 276, 0, 862, 0, 0,
	1010, 1010, 0, 1010, 899, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1010, 1010, 1010, 0, 1030, 0,
	0, 0, 621, 620, 0, 706, 0, 0, 765, 0,
	0, 490, 0, 497, 543, 543, 503, 504, 499, 498,
	549, 550, 546, 0, 546, 546, 765, 0, 522, 523,
	524, 543, 543, 530, 713, 0, 531, 532, 546, 0,
	551, 552, 765, 0, 0, 765, 765, 0, 540, 541,
	542, 0, 0, 1010, 0, 559, 499, 499, 1666, 1667,
	0, 0, 1019, 0, 0, 0, 562, 0, 0, 0,
	0, 622, 214, 217, 0, 220, 0, 1829, 0, 1829,
	0, 227, 0, 0, 0, 0, 0, 0, 257, 258,
	0, 0, 0, 0, 248, 251, 1179, 1180, 972, 973,
	252, 253, 297, 298, 0, 712, 735, 737, 731, 732,
	733, 0, 0, 0, 0, 0, 0, 0, 0, 436,
	0, 0, 0, 0, 0, 597, 0, 878, 599, 0,
	0, 0, 773, 767, 769, 836, 93, 773, 8, 80,
	77, 0, 19, 0, 0, 19, 19, 0, 19, 262,
	0, 1663, 1661, 1662, 1597, 1648, 0, 1623, 0, 1624,
	1625, 1626, 1636, 1637, 0, 0, 1619, 0, 1620, 1621,
	1622, 1613, 0, 1614, 1615, 0, 1616, 1617, 260, 0,
	1528, 866, 0, 639, 653, 634, 0, 642, 0, 1186,
	623, 653, 625, 0, 642, 712, 689, 0, 667, 0,
	0, 327, 0, 332, 0, 0, 348, 350, 351, 352,
	337, 338, 564, 313, 314, 306, 307, 308, 309, 310,
	311, 312, 316, 103, 0, 286, 287, 0, 0, 0,
	147, 148, 149, 150, 151, 152, 154, 138, 586, 588,
	964, 976, 0, 967, 0, 157, 197, 130, 0, 0,
	0, 1530, 1531, 1532, 1533, 1534, 1538, 0, 1540, 1542,
	1544, 1546, 0, 1564, -2, -2, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1549, 1562,
	1563, 0, 0, 0, 0, 0, 0, 1560, 1560, 1555,
	0, 1316, 0, 1338, 1342, 0, 0, 0, 0, 94,
	1522, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	0, 0, 1529, 0, 0, 0, 1524, 1525, 0, 0,
	0, 1418, 0, 0, 1424, 1425, 1426, 0, 648, 0,
	1488, 1464, 1479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 791, 793, 0, 657, 659, 660, 686,
	667, 693, 0, 0, 0, 55, 60, 53, 1042, 280,
	281, 0, 0, 275, 0, -2, 0, 0, 0, 1010,
	0, 0, 913, 0, 434, 958, 0, 0, 0, 974,
	999, 1006, 0, 0, 0, 0, 1046, 900, 905, 906,
	907, 901, 902, 908, 909, 0, 708, 0, 0, 805,
	489, 0, 544, 545, 494, 1790, 499, 765, 765, 506,
	500, 507, 548, 508, 509, 510, 546, 765, 765, 714,
	543, 546, 533, 547, 546, 536, 537, 0, 555, 560,
	556, 0, 558, 514, 515, 1048, 710, 364, 365, 406,
	406, 406, 389, 406, 0, 0, 377, 1668, 0, 0,
	0, 0, 386, 1668, 0, 1668, 1668, 1668, 1668, 1668,
	1668, 1668, 0, 0, 1668, 1668, 1668, 1668, 1668, 1668,
	1668, 1668, 1668, 1668, 1668, 0, 1668, 1668, 1668, 1668,
	1668, 1165, 1668, 0, 1020, 396, 397, 398, 399, 404,
	405, 0, 431, 0, 0, 0, 434, 0, 947, 778,
	0, 779, 780, 776, 807, 831, 831, 0, 831, 811,
	1185, 0, 0, 225, 226, 215, 0, 216, 0, 228,
	229, 0, 231, 232, 233, 240, 1731, 1805, 235, 237,
	0, 0, 241, 254, 255, 256, 0, 0, 246, 247,
	0, 0, 300, 301, 303, 0, 667, 1023, 1024, 1025,
	583, 1183, 584, 585, 589, 0, 0, 592, 593, 594,
	595, 596, 880, 0, 0, 952, 953, 765, 0, 774,
	0, 770, 837, 0, 839, 0, 765, 0, 78, 19,
	0, 71, 68, 0, 0, 0, 0, 0, 1643, 1593,
	1664, 0, 0, 0, 1645, 0, 0, 0, 0, 61,
	669, 630, 0, 633, 650, 0, 654, 0, 0, 646,
	638, 643, 0, 0, 663, 624, 0, 0, 629, 667,
	0, 690, 719, 720, 723, 1237, 0, 333, 347, 0,
	0, 0, 0, 141, 961, 0, 142, 146, 136, 0,
	0, 0, 966, 0, 963, 968, 0, 156, 0, 0,
	131, 132, 1035, 1042, 0, 0, 0, 1539, 1541, 1543,
	1545, 1547, 0, 1550, 1560, 1560, 1556, 0, 1551, 0,
	1553, 0, 1530, 0, 1343, 0, 0, 0, 0, 0,
	0, 0, 1408, 1409, 0, 0, 1413, 0, 1415, 1416,
	1417, 1419, 0, 0, 0, 1423, 0, 1462, 1480, 1466,
	1469, 0, 1473, 0, 1475, 0, 717, 717, 0, 0,
	1382, 1382, 1382, 0, 0, 0, 0, 1382, 0, 0,
	0, 0, 0, 0, 0, 0, 1335, 0, 1336, 1337,
	0, 794, 687, 0, 0, 0, 0, 1040, 0, 282,
	270, 272, 0, 0, 0, 868, 869, 871, 0, 874,
	875, 876, 880, 710, 1122, 0, 710, 920, 1668, 1011,
	438, 0, 0, 960, 0, 936, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 1050, 0, 0, 0, 608,
	612, 23, 711, 0, 766, 492, 0, 493, 543, 501,
	502, 765, 525, 526, 0, 0, 765, 543, 543, 546,
	0, 557, 1050, 0, 0, 1019, 367, 0, 1194, 1195,
	407, 0, 1201, 1210, 1010, 1269, 0, 1210, 0, 0,
	1212, 1213, 0, 0, 0, 0, 390, 391, 0, 376,
	0, 0, 0, 0, 0, 375, 0, 0, 417, 0,
	0, 0, 0, 1669, 1668, 1668, 0, 384, 385, 0,
	388, 0, 0, 0, 0, 0, 0, 0, 1668, 1668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1156, 0, 0, 0, 0, 0, 0, 0, 1171,
	1172, 920, 1668, 0, 0, 0, 438, 934, 943, 0,
	0, 0, 0, 0, 0, 798, 0, 0, 797, 0,
	0, 0, 0, 0, 710, 832, 0, 834, 835, 809,
	-2, 0, 778, 814, 1527, 218, 219, 0, 0, 224,
	242, 244, 0, 0, 0, 243, 245, 249, 250, 299,
	302, 304, 729, 0, 0, 1074, 0, 881, 882, 884,
	885, 0, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1716, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 879, 600, 763, 768,
	775, 838, 840, 94, 771, 763, 0, 81, 19, 80,
	72, 73, 0, 19, 0, 0, 0, 0, 1653, 1652,
	1638, 0, 1639, 1650, 1655, 0, 1658, 0, 673, 0,
	0, 653, 655, 0, 0, 653, 0, 0, 662, 0,
	0, 653, 729, 669, 0, 726, 724, 725, 0, 0,
	565, 104, 353, 0, 0, 0, 0, 0, 587, 0,
	965, 138, 0, 0, 158, 0, 0, 0, 1042, 1039,
	1526, 1552, 1554, 0, 1561, 1557, 1317, 1325, 1339, 0,
	0, 1345, 1357, 1357, 0, 0, 1348, 1651, 1651, 1351,
	1647, 1649, 1647, 1357, 1357, 0, 95, 0, 0, 1414,
	0, 0, 0, 649, 0, 0, 0, 1378, 1380, 1382,
	1382, 1389, 1383, 1390, 1391, 1382, 1382, 1382, 1382, 1396,
	1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1376, 658,
	0, 0, 700, 701, 702, 703, 704, 0, 0, 54,
	1042, 0, 274, 0, 0, 873, 0, 0, 0, 1187,
	0, 0, 0, 0, 924, 921, 922, 923, 0, 955,
	439, 440, 441, 442, 0, 0, 0, 959, 0, 947,
	929, 0, 0, 0, 1000, 1001, 1002, 1003, 1004, 1005,
	-2, 1014, 0, 0, 0, 1187, 1187, 1187, 1058, 0,
	1047, 661, 0, -2, 0, 0, 610, 0, 0, 806,
	495, 765, 519, 715, 716, 534, 765, 765, 543, 561,
	1058, 1049, 0, 366, 408, 0, 1200, 1226, 1211, 1226,
	1270, 1226, 1226, 1010, 0, 408, 0, 0, 378, 414,
	0, 0, 0, 0, 0, 374, 411, 723, 415, 416,
	418, 0, 420, 380, 392, 393, 394, 395, 0, 0,
	0, 387, 400, 401, 402, 403, 1133, 1134, 1135, 1138,
	1139, 1140, 1141, 0, 0, 1144, 1145, 1146, 1147, 1148,
	1223, 1224, 1225, 1149, 1150, 1151, 1152, 1153, 1154, 1155,
	1173, 1174, 1175, 1176, 1177, 1178, 1157, 1158, 1159, 1160,
	1161, 1162, 1163, 1164, 0, 0, 1168, 0, 924, 0,
	0, 0, 0, 955, 936, 0, 946, 0, 948, 949,
	0, 0, 631, 765, 292, 0, 801, 795, 0, 784,
	799, 800, 787, 0, 789, 0, 785, 786, 765, 777,
	808, 833, 810, 813, 815, 816, 822, 0, 0, 0,
	0, 221, 222, 223, 230, 0, 458, 236, 685, 0,
	1184, 590, 591, 1075, 1076, 598, 0, 886, 761, 0,
	0, 761, 76, 79, 0, 74, 0, 0, 0, 0,
	66, 64, 1646, 0, 0, 675, 118, 0, 0, 0,
	651, 0, 656, 653, 637, 647, 636, 644, 645, 664,
	653, 628, 627, 688, 673, 721, 722, 0, 1238, 328,
	0, 962, 138, 143, 144, 145, 139, 137, 969, 0,
	971, 0, 1037, 0, 0, 1558, 1344, 1326, 1346, 1358,
	1359, 1347, 1327, 1328, 1349, 1350, 1352, 1353, 1354, 1355,
	1356, 1329, 1410, 0, 1412, 1420, 1421, 0, 1470, 1474,
	0, 0, 0, 0, 0, 1387, 1388, 1392, 1393, 1394,
	1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 717,
	1377, 0, 698, 0, 0, 0, 1041, 1043, 861, 864,
	870, 872, 0, 0, 0, 1188, 1189, 1191, 1192, 1193,
	0, 0, 1187, 0, 897, 0, 0, 915, 916, 926,
	0, 0, 0, 444, 445, 0, 0, 0, 457, 453,
	454, 455, 435, 954, 943, 932, 0, 0, 942, 0,
	1015, 1668, 1668, 1668, 0, 0, 1118, 1668, 1668, 0,
	0, 0, 1061, 0, 0, 1052, 0, 831, 0, 0,
	765, 609, 612, 613, 709, 496, 538, 535, 765, 1061,
	363, 379, 409, 0, -2, 0, 1227, 0, 1214, 1227,
	0, 0, 1226, 0, 368, 408, 0, 0, 0, 421,
	425, 426, 0, 423, 1265, 0, 424, 0, 413, 419,
	1136, 1137, 0, 1142, 1143, 0, 1167, 0, 0, 427,
	0, 0, 0, 428, 433, 929, 0, 944, 0, 950,
	951, 717, 0, 0, 781, 802, 0, 0, 782, 0,
	783, 788, 790, 291, 817, 0, 0, 819, 820, 821,
	812, 238, 730, 883, 0, 751, 0, 0, 772, 752,
	0, 19, 0, 0, 69, 1656, 1659, 677, 0, 674,
	119, 0, 0, 0, 0, 641, 652, 635, 626, 675,
	727, 728, 140, 135, 970, 121, 0, 1038, 0, 1422,
	0, 1382, 1379, 1382, 1381, 1373, 0, 0, 696, 0,
	0, 903, 1122, 0, 1028, 0, 1124, 1668, 1668, 0,
	903, 925, 914, 0, 956, 957, 0, 446, 447, 0,
	450, 456, 927, 928, 0, 0, 940, 0, 0, 0,
	0, 1007, 1021, 0, 0, 0, -2, 0, -2, 1067,
	0, 1059, 0, 1051, 0, 1054, 765, 765, -2, 606,
	611, 0, 539, 1067, 410, 1228, -2, 1241, 1243, 0,
	1020, 1246, 1247, 0, 0, 0, 0, 0, 0, 1291,
	1255, 0, 0, 1259, 1260, 1261, 0, 0, 1264, 0,
	1576, 1577, 0, 1268, 0, 0, 0, 0, 0, 0,
	0, 1208, 369, 370, 0, 372, 373, 1668, 1266, 412,
	1668, 382, 1166, 1169, 1170, 432, 429, 430, 932, 935,
	632, 712, 293, 294, 803, 0, 796, 826, 823, 0,
	0, 887, 762, 764, 70, 75, 0, 0, 679, 0,
	676, 0, 670, 672, 129, 640, 677, 91, 112, 0,
	0, 1411, 1461, 1385, 1386, 0, 1374, 0, 1368, 1369,
	1370, 1375, 699, 694, 0, 889, 896, 910, 1026, 1190,
	1123, 0, 0, 0, 1122, 895, 0, 0, 443, 448,
	0, 451, 452, 0, 930, 931, 0, 938, 0, 0,
	995, 1647, 0, 1016, 1017, 1181, 1182, 1018, 1119, 1120,
	1121, 1077, -2, 1130, 0, 1032, 121, 1077, 1055, 0,
	1062, 0, 1060, 1053, 717, 607, 1064, 1242, 1244, 1245,
	1248, 1249, 1250, 1296, 1297, 1298, 0, 0, 1253, 1293,
	1294, 1295, 1254, 0, 0, 0, 0, 0, 1574, 1575,
	1289, 0, 0, 1215, 1217, 1218, 1219, 1220, 1221, 1222,
	1216, 0, 0, 0, 1207, 1209, 371, 0, 0, 1668,
	945, 290, 0, 0, 827, 829, 824, 825, 65, 67,
	82, 0, 678, 120, 0, 679, 83, 0, 109, 0,
	122, 123, 0, 0, 0, 0, 0, 1384, 1371, 0,
	0, 0, 0, 0, 1578, 1579, 1580, 0, 0, 0,
	911, 912, 1125, 1126, 1127, 1027, 917, 0, 919, 449,
	933, 937, 940, 0, 986, 0, 723, 0, 1079, 0,
	1019, 1132, 1668, 1034, 1079, 1045, 0, 1057, 0, 1069,
	0, 1063, 712, 362, 0, 1066, 1251, 1252, 0, 0,
	1477, 1668, 0, 1284, 0, 986, 986, 986, 986, 0,
	422, 381, 0, 804, 818, 0, 0, 0, 668, 92,
	96, 0, 118, 115, 0, 124, 0, 0, 0, 0,
	1036, 0, 1360, 0, 0, 0, 1364, 1365, 1366, 1367,
	0, 888, 0, 918, 939, 941, 985, 996, 997, 723,
	1031, 0, 1116, 1131, 0, 1033, 1056, 1068, 0, 1071,
	605, 1065, 1292, 0, 1258, 0, 1263, 1272, 1285, 0,
	0, 1196, 0, 1198, 0, 1202, 0, 1204, 0, 0,
	383, 828, 830, 0, 681, 671, 85, 0, 0, 113,
	114, 116, 0, 125, 0, 127, 128, 0, 1361, 1362,
	1363, 0, 890, 891, 904, 987, 1668, 1668, 0, 0,
	0, 993, 994, 998, 0, 1104, 0, 0, 1110, 0,
	1117, 1136, 1070, 1256, 1262, 1271, 1273, 1274, 0, 1286,
	1287, 1288, 1290, 986, 986, 986, 986, 1206, 680, 0,
	1044, 0, 97, 0, 99, 101, 102, 1229, 110, 111,
	117, 126, 1372, 892, 0, 0, 990, 991, 0, 1080,
	0, 1082, 0, 0, 0, 0, 0, 1114, 0, 1257,
	1275, 0, 1276, 0, 0, 0, 1197, 1199, 1203, 1205,
	682, 86, 87, 0, 98, 0, 0, 877, 893, 0,
	988, 989, 992, 0, 1084, 0, 1105, 0, 0, 0,
	0, 0, 0, 0, 1277, 1279, 1280, 0, 0, 1278,
	0, 0, 100, 1230, 894, 1081, 1078, 0, 1116, 1106,
	0, 1108, 0, 0, 0, 0, 1281, 1283, 1282, 88,
	89, 90, 0, 0, 1086, 0, 1102, 1107, 1109, 1111,
	0, 1115, 1113, 1231, 1085, 0, 1098, 1083, 0, 1112,
	1087, -2, 0, 1103, 1088, -2, 0, 1096, 0, 0,
	1089, 1097, 0, 1092, 0, 0, 0, 1091, 0, -2,
	1099, 0, 0, 1093, -2, 0, 1101, 1100,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 619, 616,
	123, 122, 124, 3, 620, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 617, 135, 618, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:784
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:791
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:797
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:805
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:811
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:815
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:830
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:834
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:840
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:845
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:849
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:881
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:889
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:897
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:907
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:927
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:933
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:940
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:948
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:954
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:963
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:973
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:981
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:989
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:997
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1007
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1015
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1025
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1032
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1041
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1051
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1055
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1061
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1065
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1071
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1080
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1090
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1094
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1100
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1109
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1113
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1119
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1140
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1153
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1160
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1164
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1170
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1174
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1180
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1187
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1195
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1199
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1213
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1217
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1221
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1226
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1230
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1234
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1240
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1249
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1260
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1264
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1270
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1274
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1280
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1284
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1290
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1314
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1333
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1337
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1341
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1346
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1350
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1357
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1365
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1372
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1377
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1384
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1393
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1417
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1421
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1427
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1433
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1451
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1468
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1491
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1495
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1499
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1504
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1508
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1514
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1527
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1538
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1551
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1555
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1565
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1578
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1591
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1597
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1603
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1610
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1618
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1627
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1631
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1635
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1639
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1643
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1647
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1654
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1658
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1664
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1671
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1680
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1684
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1690
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1694
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1698
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1702
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1706
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1710
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1714
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1718
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1722
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1726
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1730
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1734
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1738
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1742
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1746
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1750
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1754
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1758
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1762
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1766
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1770
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1774
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1778
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1782
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1786
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1790
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1794
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1798
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1802
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1806
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1810
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1814
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1818
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1822
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1826
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1830
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1834
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1838
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1842
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1846
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1850
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1854
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1858
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1862
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1866
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1870
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1874
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1878
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1882
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1886
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1899
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1906
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1913
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1923
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1927
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1933
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1940
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1948
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1952
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1956
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1960
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1966
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1970
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1976
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1983
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1990
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1999
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2029
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2033
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2037
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2043
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2049
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2053
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2060
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2066
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2070
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2076
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2084
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2093
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2102
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2110
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2118
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2141
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2164
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2171
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2178
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2186
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2193
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2200
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2209
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2213
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2217
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2223
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2227
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2233
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2237
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2243
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2247
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2258
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2264
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2269
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2273
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2277
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2281
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2285
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2289
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2293
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2297
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2301
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2307
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2311
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2315
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2319
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2324
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2329
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2335
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2342
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2348
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2355
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2362
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2372
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2379
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2390
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2401
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2405
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2411
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2421
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2427
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2431
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2437
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2443
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2447
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2451
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2455
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2461
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2473
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2479
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2483
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2489
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2493
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2499
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2505
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2516
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2522
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2526
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2530
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2534
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2538
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2542
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2550
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2558
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2568
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2609
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2613
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2619
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2625
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2630
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2631
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2632
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2637
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2654
		{
			yyLOCAL = &tree.AlterSequence{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].alterTypeOptionUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].cycleOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2670
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2681
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2690
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2694
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2700
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2707
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2716
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2726
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2735
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2745
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2755
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2764
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2772
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2776
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2780
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2784
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2788
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2797
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2803
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2807
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2811
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2815
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2819
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2823
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2827
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2831
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2836
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2867
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2871
		{
			yyVAL.str = string("COLUMN")
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2876
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2882
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2888
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2897
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2901
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2907
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2914
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2922
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2929
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2936
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2943
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2950
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2957
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2965
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2972
		{
			yyLOCAL = &tree.AlterOptionAlterReIndex{
				KeyType:       tree.INDEX_TYPE_IVFFLAT,
				AlgoParamList: int64(yyDollar[6].item.(int64)),
				Name:          tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2980
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2987
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2996
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:3000
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3007
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3019
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3027
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3035
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3048
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3054
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3065
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3076
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3080
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3085
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3089
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3094
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3098
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3114
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3118
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3122
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3126
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3130
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3134
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3138
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3142
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3146
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3150
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3154
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3158
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3162
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3166
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3170
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3174
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3180
		{
			yyVAL.item = nil
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3185
		{
			yyVAL.item = nil
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3226
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3232
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3240
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3244
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3248
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3257
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3261
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3267
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3272
		{
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3276
		{
		}
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3281
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3291
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3301
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3309
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3315
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3321
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3327
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3333
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3339
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3345
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3354
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3358
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3362
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3366
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3370
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3374
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3378
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3382
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3388
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: yyDollar[4].unresolvedObjectNameUnion(),
				DbName:    yyDollar[5].str,
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3397
		{
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3399
		{
		}
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3408
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3418
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3427
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3431
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3435
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3441
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3447
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3453
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3459
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3468
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3478
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3490
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3494
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3500
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3512
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3526
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3532
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3539
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3544
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3548
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3552
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3557
		{
			yyVAL.str = ""
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3561
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3567
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3580
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3584
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3590
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3595
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3599
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3603
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3609
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3615
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3619
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3625
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3631
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3635
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3639
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3645
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3649
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3674
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3683
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3692
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3701
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3705
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3711
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3720
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3729
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3739
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3743
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3749
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3755
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3761
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3765
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3771
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3777
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3786
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3793
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3804
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3809
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3816
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3832
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3845
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3856
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3860
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3866
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3871
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3878
		{
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3880
		{
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3883
		{
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3892
		{
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3896
		{
		}
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3901
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3910
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3917
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3923
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3931
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3938
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3945
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3965
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3975
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3979
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3985
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3992
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3998
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4006
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4013
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4020
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4039
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4043
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4047
		{
			yyLOCAL = []*tree.UpdateExpr{nil}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4052
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4056
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4060
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4066
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4075
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4079
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4085
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4089
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4095
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4099
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4105
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4110
		{
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4114
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4121
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4125
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4132
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4137
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4141
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4147
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4151
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4157
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4161
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4166
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4170
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4183
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4190
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4197
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4215
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4234
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4240
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4247
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4251
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4264
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4268
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4273
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4277
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4284
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4289
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4296
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4302
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4306
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4310
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4314
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), TimeWindow: yyDollar[3].timeWindowUnion(), OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Ep: yyDollar[6].exportParmUnion(), SelectLockInfo: yyDollar[7].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4318
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4322
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4327
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4331
		{
			yyLOCAL = yyDollar[1].timeWindowUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4337
		{
			yyLOCAL = &tree.TimeWindow{
				Interval: yyDollar[1].timeIntervalUnion(),
				Sliding:  yyDollar[2].timeSlidingUnion(),
				Fill:     yyDollar[3].timeFillUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.Interval
//line mysql_sql.y:4347
		{
			str := fmt.Sprintf("%v", yyDollar[5].item)
			v, errStr := util.GetInt64(yyDollar[5].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			yyLOCAL = &tree.Interval{
				Col:  yyDollar[3].unresolvedNameUnion(),
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Sliding
//line mysql_sql.y:4362
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Sliding
//line mysql_sql.y:4366
		{
			str := fmt.Sprintf("%v", yyDollar[3].item)
			v, errStr := util.GetInt64(yyDollar[3].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			yyLOCAL = &tree.Sliding{
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[5].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4380
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4384
		{
			yyLOCAL = &tree.Fill{
				Mode: yyDollar[3].fillModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4390
		{
			yyLOCAL = &tree.Fill{
				Mode: tree.FillValue,
				Val:  yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4399
		{
			yyLOCAL = tree.FillPrev
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4403
		{
			yyLOCAL = tree.FillNext
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4407
		{
			yyLOCAL = tree.FillNone
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4411
		{
			yyLOCAL = tree.FillNull
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4415
		{
			yyLOCAL = tree.FillLinear
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4421
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4428
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4437
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4441
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4447
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4455
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4459
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4464
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4468
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4474
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4478
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4482
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4487
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4491
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4497
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4503
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4507
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4513
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4518
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4522
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4526
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4531
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4535
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4539
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4544
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4548
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4556
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4560
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4564
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4578
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4582
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4592
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4602
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4612
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4624
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4632
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4640
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4649
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4657
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4665
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4673
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4681
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4689
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4697
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4705
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4713
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4723
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4734
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4748
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4752
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4756
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4761
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4765
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4769
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4778
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4782
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4791
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4796
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4800
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4806
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4810
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4816
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4820
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4825
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4829
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4834
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4842
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4848
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4856
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4864
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4874
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4880
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4889
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4898
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4907
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4917
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4921
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4931
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4935
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4939
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4943
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4949
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4959
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4963
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4969
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4975
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4979
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4985
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4991
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4995
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4999
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5005
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5009
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5015
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5019
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:5025
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:5029
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5035
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5039
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5049
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5062
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:5068
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5074
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:5087
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5098
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5105
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5109
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:5115
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5125
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5129
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5133
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5138
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5142
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5146
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5150
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5155
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5159
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5163
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5167
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5171
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5176
		{
			yyVAL.str = ""
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5180
		{
			yyVAL.str = yyDollar[1].str
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5184
		{
			yyVAL.str = yyDollar[2].str
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5190
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5196
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5200
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5204
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5208
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5212
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5218
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 861:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5257
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5267
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5273
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 864:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5279
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5289
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5294
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5300
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5307
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5311
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5317
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5323
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5328
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5332
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5336
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5340
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5347
		{
			if yyDollar[13].str == "" {
				yylex.Error("no function body error")
				return 1
			}
			if yyDollar[11].str == "python" && yyDollar[14].str == "" {
				yylex.Error("no handler error")
				return 1
			}

			yyLOCAL = &tree.CreateFunction{
				Replace:    yyDollar[2].streamOptionalUnion(),
				Name:       yyDollar[4].functionNameUnion(),
				Args:       yyDollar[6].funcArgsUnion(),
				ReturnType: yyDollar[9].funcReturnUnion(),
				Language:   yyDollar[11].str,
				Import:     yyDollar[12].boolValUnion(),
				Body:       yyDollar[13].str,
				Handler:    yyDollar[14].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5371
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5376
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5382
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5389
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5393
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5399
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5405
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5409
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5413
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5419
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5425
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5431
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5435
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5441
		{
			yyVAL.str = ""
		}
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5448
		{
			yyVAL.str = yyDollar[2].str
		}
	case 895:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5454
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5463
		{
			yyLOCAL = &tree.CreateView{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5475
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5487
		{
			yyVAL.str = yyDollar[1].str
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5491
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5497
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5501
		{
			yyVAL.str = "DEFINER = "
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5505
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5510
		{
			yyVAL.str = ""
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5514
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5528
		{
			yyVAL.str = ""
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5536
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 914:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5542
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5552
		{
			yyVAL.str = yyDollar[1].str
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5556
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5562
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5569
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5575
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5583
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5589
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5596
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5603
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5611
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5617
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5626
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5638
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5650
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5662
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5668
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5675
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5683
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5689
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5697
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5703
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5711
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5717
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5726
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5730
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5735
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5739
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5746
		{
			yyVAL.str = yyDollar[3].str
		}
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5751
		{
			yyVAL.str = ""
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5755
		{
			yyVAL.str = yyDollar[2].str
		}
	case 945:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5761
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5775
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5785
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5789
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5795
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5801
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5807
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5816
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5825
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5834
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5839
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5845
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5853
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5959
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5963
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5969
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5979
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5983
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5989
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5999
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:6003
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:6007
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6012
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6016
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6022
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6029
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6035
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6044
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6051
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:6060
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:6064
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:6070
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6084
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6088
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6092
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6097
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6101
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6105
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6109
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6115
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			} else {
				io = &tree.IndexOption{IType: tree.INDEX_TYPE_INVALID}
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6136
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6140
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				} else if opt2.AlgoParamList > 0 {
					opt1.AlgoParamList = opt2.AlgoParamList
				} else if len(opt2.AlgoParamVectorOpType) > 0 {
					opt1.AlgoParamVectorOpType = opt2.AlgoParamVectorOpType
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6166
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6170
		{
			yyLOCAL = &tree.IndexOption{AlgoParamList: int64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6174
		{
			yyLOCAL = &tree.IndexOption{AlgoParamVectorOpType: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6178
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6182
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6186
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6190
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6196
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6200
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6206
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6211
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6216
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6220
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6224
		{
			yyLOCAL = tree.INDEX_TYPE_IVFFLAT
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6228
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6232
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6236
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6242
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6253
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6257
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6267
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6271
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6276
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6280
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6286
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6290
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6296
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6300
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6304
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6309
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6313
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6319
		{
			yyLOCAL = &tree.CreateConnector{
				TableName: yyDollar[4].tableNameUnion(),
				Options:   yyDollar[7].connectorOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6328
		{
			yyLOCAL = &tree.ShowConnectors{}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6334
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.PauseDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6352
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.CancelDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6370
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.ResumeDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6388
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6399
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6410
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6421
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6425
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6431
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6443
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6452
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6465
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6472
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6482
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6492
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6500
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6509
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					StageName: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6519
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6523
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6528
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6532
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6539
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6550
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6563
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6577
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6581
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6585
		{
			yyLOCAL = &tree.TypeOption{
				Type: yyDollar[2].columnTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6591
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6595
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6602
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6609
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6616
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6623
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6627
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6631
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6635
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6639
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6646
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6653
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6657
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6664
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6671
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6675
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6681
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6687
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6691
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6698
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6705
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6712
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6719
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6723
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6728
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6732
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6736
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6741
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6745
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6755
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6759
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6766
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6773
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6777
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6786
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6790
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6796
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6800
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6806
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6815
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6825
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6829
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6835
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6839
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6845
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6852
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6861
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6865
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6870
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6874
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6879
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6883
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6888
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6892
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6902
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6906
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6917
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6925
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6933
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6941
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6952
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6961
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6971
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6981
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6985
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6990
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6994
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:7000
		{
			yyLOCAL = []*tree.ConnectorOption{yyDollar[1].connectorOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:7004
		{
			yyLOCAL = append(yyDollar[1].connectorOptionsUnion(), yyDollar[3].connectorOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:7010
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:7014
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7019
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7023
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7029
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7033
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7039
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7043
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7048
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7052
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7058
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7062
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7066
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7072
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7076
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7080
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7084
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7088
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7092
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7096
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7101
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7105
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7109
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7113
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7117
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7121
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7125
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7129
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7133
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7137
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7141
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7145
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7149
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7153
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7157
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7161
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7165
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7169
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7173
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7177
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7181
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7185
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7189
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7193
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7197
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7201
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7205
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7209
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7215
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7219
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:7225
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7231
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7235
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7241
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7245
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7249
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7253
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7257
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7261
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7275
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7279
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7288
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7293
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7299
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7306
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7310
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7316
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7320
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7324
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7330
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7334
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7340
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7349
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7358
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "ivfflat":
					keyTyp = tree.INDEX_TYPE_IVFFLAT
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invalid the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7389
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "ivfflat":
					keyTyp = tree.INDEX_TYPE_IVFFLAT
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invalid type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7422
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7436
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7442
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7451
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7460
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7469
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7478
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7488
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7496
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7502
		{
			yyVAL.str = ""
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7506
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7516
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7522
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7528
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7548
		{
			yyVAL.str = ""
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7552
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7558
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7564
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7568
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7572
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7578
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7582
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7586
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7590
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7596
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7600
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7604
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7613
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7619
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7623
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7629
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7633
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7637
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7641
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7645
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7649
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7654
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7658
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7662
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7666
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7670
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7674
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7678
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7682
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7686
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7690
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7703
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7707
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7711
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7715
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7719
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7723
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7729
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7733
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7738
		{
			yyVAL.str = ""
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7742
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7748
		{
			yyVAL.str = ""
		}
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7752
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7758
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7770
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7777
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7784
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7791
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7798
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7807
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7813
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7819
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7823
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7827
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7831
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7835
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7840
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7847
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7851
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7855
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7860
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7864
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7869
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7873
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7889
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7895
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7899
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7903
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7907
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7911
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7915
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7919
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7923
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7927
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7931
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7935
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7939
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7943
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7949
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7953
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7957
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7961
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7965
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7969
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7973
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7977
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7981
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7985
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7989
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7993
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7998
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8006
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8010
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8014
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8018
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8027
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8031
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8035
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8039
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8043
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8049
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8057
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8065
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8074
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8078
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8083
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8087
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:8093
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:8097
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:8103
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8112
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8124
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8141
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8158
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8171
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8184
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8196
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8210
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8225
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8240
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8257
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8272
		{
		}
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8279
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8283
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8287
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8293
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8297
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8301
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8305
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8311
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8315
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8319
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8325
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8333
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8343
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8347
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8354
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8359
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8363
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8368
		{
			yyVAL.str = ","
		}
	case 1379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8372
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1380:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8377
		{
			yyVAL.str = "1,vector_l2_ops"
		}
	case 1381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8381
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8386
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8393
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8419
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8430
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8441
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8451
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8461
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8471
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8480
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8489
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8499
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8509
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8519
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8529
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8539
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8549
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8559
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8569
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8579
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8589
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8599
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8609
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8628
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8636
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8644
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8652
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8660
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8670
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8678
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8687
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8695
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8703
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8711
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8719
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8730
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8740
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8752
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8763
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8785
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8821
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8833
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8845
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8856
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8864
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8871
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8878
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8890
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8898
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8908
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8918
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8926
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8937
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8946
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8955
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8963
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8973
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8981
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8991
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8995
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9001
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9005
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9024
		{
		}
	case 1488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:9026
		{
		}
	case 1522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9067
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9078
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9082
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9086
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:9092
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9097
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9101
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9107
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9111
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9118
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9122
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9126
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9134
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9138
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9142
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9146
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9152
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9156
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9160
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9164
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9168
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9172
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9176
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9180
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9184
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9188
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9196
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9200
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9204
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9208
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9212
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9216
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9220
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9224
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9228
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9232
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9238
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9242
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9248
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9252
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9259
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9263
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9267
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9273
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9277
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9281
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9285
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9289
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9293
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9297
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9303
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9307
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9311
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9315
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9321
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9334
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9339
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9345
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9349
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9362
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9367
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9371
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9375
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9379
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9383
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9390
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9394
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9408
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9412
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9419
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9430
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9435
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9441
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9453
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9465
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9477
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9490
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9503
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9516
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9529
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9542
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9555
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9568
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9581
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9594
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9607
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9622
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9649
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9691
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9727
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9763
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9780
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9792
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9812
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9832
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9852
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9868
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9881
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9894
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9907
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9920
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9932
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9944
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9956
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9968
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9980
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9992
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10004
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10016
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10028
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10041
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10054
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10067
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10080
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10095
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10103
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10112
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10122
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:10145
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:10150
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10156
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10163
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10167
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10172
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10176
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10182
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10188
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10195
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1656:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10202
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10211
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10218
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1659:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10225
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10234
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10238
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10242
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1663:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10248
		{
		}
	case 1664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10250
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1668:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10260
		{
			yyVAL.str = ""
		}
	case 1669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:10264
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
