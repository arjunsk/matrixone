// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const VECF32 = 57530
const VECF64 = 57531
const GEOMETRY = 57532
const POINT = 57533
const LINESTRING = 57534
const POLYGON = 57535
const GEOMETRYCOLLECTION = 57536
const MULTIPOINT = 57537
const MULTILINESTRING = 57538
const MULTIPOLYGON = 57539
const INT1 = 57540
const INT2 = 57541
const INT3 = 57542
const INT4 = 57543
const INT8 = 57544
const S3OPTION = 57545
const STAGEOPTION = 57546
const SQL_SMALL_RESULT = 57547
const SQL_BIG_RESULT = 57548
const SQL_BUFFER_RESULT = 57549
const LOW_PRIORITY = 57550
const HIGH_PRIORITY = 57551
const DELAYED = 57552
const CREATE = 57553
const ALTER = 57554
const DROP = 57555
const RENAME = 57556
const ANALYZE = 57557
const ADD = 57558
const RETURNS = 57559
const SCHEMA = 57560
const TABLE = 57561
const SEQUENCE = 57562
const INDEX = 57563
const VIEW = 57564
const TO = 57565
const IGNORE = 57566
const IF = 57567
const PRIMARY = 57568
const COLUMN = 57569
const CONSTRAINT = 57570
const SPATIAL = 57571
const FULLTEXT = 57572
const FOREIGN = 57573
const KEY_BLOCK_SIZE = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const MAXVALUE = 57583
const PARTITION = 57584
const REORGANIZE = 57585
const LESS = 57586
const THAN = 57587
const PROCEDURE = 57588
const TRIGGER = 57589
const STATUS = 57590
const VARIABLES = 57591
const ROLE = 57592
const PROXY = 57593
const AVG_ROW_LENGTH = 57594
const STORAGE = 57595
const DISK = 57596
const MEMORY = 57597
const CHECKSUM = 57598
const COMPRESSION = 57599
const DATA = 57600
const DIRECTORY = 57601
const DELAY_KEY_WRITE = 57602
const ENCRYPTION = 57603
const ENGINE = 57604
const MAX_ROWS = 57605
const MIN_ROWS = 57606
const PACK_KEYS = 57607
const ROW_FORMAT = 57608
const STATS_AUTO_RECALC = 57609
const STATS_PERSISTENT = 57610
const STATS_SAMPLE_PAGES = 57611
const DYNAMIC = 57612
const COMPRESSED = 57613
const REDUNDANT = 57614
const COMPACT = 57615
const FIXED = 57616
const COLUMN_FORMAT = 57617
const AUTO_RANDOM = 57618
const ENGINE_ATTRIBUTE = 57619
const SECONDARY_ENGINE_ATTRIBUTE = 57620
const INSERT_METHOD = 57621
const RESTRICT = 57622
const CASCADE = 57623
const ACTION = 57624
const PARTIAL = 57625
const SIMPLE = 57626
const CHECK = 57627
const ENFORCED = 57628
const RANGE = 57629
const LIST = 57630
const ALGORITHM = 57631
const LINEAR = 57632
const PARTITIONS = 57633
const SUBPARTITION = 57634
const SUBPARTITIONS = 57635
const CLUSTER = 57636
const TYPE = 57637
const ANY = 57638
const SOME = 57639
const EXTERNAL = 57640
const LOCALFILE = 57641
const URL = 57642
const PREPARE = 57643
const DEALLOCATE = 57644
const RESET = 57645
const EXTENSION = 57646
const INCREMENT = 57647
const CYCLE = 57648
const MINVALUE = 57649
const PUBLICATION = 57650
const SUBSCRIPTIONS = 57651
const PUBLICATIONS = 57652
const PROPERTIES = 57653
const PARSER = 57654
const VISIBLE = 57655
const INVISIBLE = 57656
const BTREE = 57657
const HASH = 57658
const RTREE = 57659
const BSI = 57660
const IVFFLAT = 57661
const ZONEMAP = 57662
const LEADING = 57663
const BOTH = 57664
const TRAILING = 57665
const UNKNOWN = 57666
const LISTS = 57667
const OP_TYPE = 57668
const REINDEX = 57669
const EXPIRE = 57670
const ACCOUNT = 57671
const ACCOUNTS = 57672
const UNLOCK = 57673
const DAY = 57674
const NEVER = 57675
const PUMP = 57676
const MYSQL_COMPATIBILITY_MODE = 57677
const MODIFY = 57678
const CHANGE = 57679
const SECOND = 57680
const ASCII = 57681
const COALESCE = 57682
const COLLATION = 57683
const HOUR = 57684
const MICROSECOND = 57685
const MINUTE = 57686
const MONTH = 57687
const QUARTER = 57688
const REPEAT = 57689
const REVERSE = 57690
const ROW_COUNT = 57691
const WEEK = 57692
const REVOKE = 57693
const FUNCTION = 57694
const PRIVILEGES = 57695
const TABLESPACE = 57696
const EXECUTE = 57697
const SUPER = 57698
const GRANT = 57699
const OPTION = 57700
const REFERENCES = 57701
const REPLICATION = 57702
const SLAVE = 57703
const CLIENT = 57704
const USAGE = 57705
const RELOAD = 57706
const FILE = 57707
const TEMPORARY = 57708
const ROUTINE = 57709
const EVENT = 57710
const SHUTDOWN = 57711
const NULLX = 57712
const AUTO_INCREMENT = 57713
const APPROXNUM = 57714
const SIGNED = 57715
const UNSIGNED = 57716
const ZEROFILL = 57717
const ENGINES = 57718
const LOW_CARDINALITY = 57719
const AUTOEXTEND_SIZE = 57720
const ADMIN_NAME = 57721
const RANDOM = 57722
const SUSPEND = 57723
const ATTRIBUTE = 57724
const HISTORY = 57725
const REUSE = 57726
const CURRENT = 57727
const OPTIONAL = 57728
const FAILED_LOGIN_ATTEMPTS = 57729
const PASSWORD_LOCK_TIME = 57730
const UNBOUNDED = 57731
const SECONDARY = 57732
const RESTRICTED = 57733
const USER = 57734
const IDENTIFIED = 57735
const CIPHER = 57736
const ISSUER = 57737
const X509 = 57738
const SUBJECT = 57739
const SAN = 57740
const REQUIRE = 57741
const SSL = 57742
const NONE = 57743
const PASSWORD = 57744
const SHARED = 57745
const EXCLUSIVE = 57746
const MAX_QUERIES_PER_HOUR = 57747
const MAX_UPDATES_PER_HOUR = 57748
const MAX_CONNECTIONS_PER_HOUR = 57749
const MAX_USER_CONNECTIONS = 57750
const FORMAT = 57751
const VERBOSE = 57752
const CONNECTION = 57753
const TRIGGERS = 57754
const PROFILES = 57755
const LOAD = 57756
const INLINE = 57757
const INFILE = 57758
const TERMINATED = 57759
const OPTIONALLY = 57760
const ENCLOSED = 57761
const ESCAPED = 57762
const STARTING = 57763
const LINES = 57764
const ROWS = 57765
const IMPORT = 57766
const DISCARD = 57767
const MODUMP = 57768
const OVER = 57769
const PRECEDING = 57770
const FOLLOWING = 57771
const GROUPS = 57772
const DATABASES = 57773
const TABLES = 57774
const SEQUENCES = 57775
const EXTENDED = 57776
const FULL = 57777
const PROCESSLIST = 57778
const FIELDS = 57779
const COLUMNS = 57780
const OPEN = 57781
const ERRORS = 57782
const WARNINGS = 57783
const INDEXES = 57784
const SCHEMAS = 57785
const NODE = 57786
const LOCKS = 57787
const ROLES = 57788
const TABLE_NUMBER = 57789
const COLUMN_NUMBER = 57790
const TABLE_VALUES = 57791
const TABLE_SIZE = 57792
const NAMES = 57793
const GLOBAL = 57794
const PERSIST = 57795
const SESSION = 57796
const ISOLATION = 57797
const LEVEL = 57798
const READ = 57799
const WRITE = 57800
const ONLY = 57801
const REPEATABLE = 57802
const COMMITTED = 57803
const UNCOMMITTED = 57804
const SERIALIZABLE = 57805
const LOCAL = 57806
const EVENTS = 57807
const PLUGINS = 57808
const CURRENT_TIMESTAMP = 57809
const DATABASE = 57810
const CURRENT_TIME = 57811
const LOCALTIME = 57812
const LOCALTIMESTAMP = 57813
const UTC_DATE = 57814
const UTC_TIME = 57815
const UTC_TIMESTAMP = 57816
const REPLACE = 57817
const CONVERT = 57818
const SEPARATOR = 57819
const TIMESTAMPDIFF = 57820
const CURRENT_DATE = 57821
const CURRENT_USER = 57822
const CURRENT_ROLE = 57823
const SECOND_MICROSECOND = 57824
const MINUTE_MICROSECOND = 57825
const MINUTE_SECOND = 57826
const HOUR_MICROSECOND = 57827
const HOUR_SECOND = 57828
const HOUR_MINUTE = 57829
const DAY_MICROSECOND = 57830
const DAY_SECOND = 57831
const DAY_MINUTE = 57832
const DAY_HOUR = 57833
const YEAR_MONTH = 57834
const SQL_TSI_HOUR = 57835
const SQL_TSI_DAY = 57836
const SQL_TSI_WEEK = 57837
const SQL_TSI_MONTH = 57838
const SQL_TSI_QUARTER = 57839
const SQL_TSI_YEAR = 57840
const SQL_TSI_SECOND = 57841
const SQL_TSI_MINUTE = 57842
const RECURSIVE = 57843
const CONFIG = 57844
const DRAINER = 57845
const SOURCE = 57846
const STREAM = 57847
const HEADERS = 57848
const CONNECTOR = 57849
const CONNECTORS = 57850
const DAEMON = 57851
const PAUSE = 57852
const CANCEL = 57853
const TASK = 57854
const RESUME = 57855
const MATCH = 57856
const AGAINST = 57857
const BOOLEAN = 57858
const LANGUAGE = 57859
const WITH = 57860
const QUERY = 57861
const EXPANSION = 57862
const WITHOUT = 57863
const VALIDATION = 57864
const ADDDATE = 57865
const BIT_AND = 57866
const BIT_OR = 57867
const BIT_XOR = 57868
const CAST = 57869
const COUNT = 57870
const APPROX_COUNT = 57871
const APPROX_COUNT_DISTINCT = 57872
const APPROX_PERCENTILE = 57873
const CURDATE = 57874
const CURTIME = 57875
const DATE_ADD = 57876
const DATE_SUB = 57877
const EXTRACT = 57878
const GROUP_CONCAT = 57879
const MAX = 57880
const MID = 57881
const MIN = 57882
const NOW = 57883
const POSITION = 57884
const SESSION_USER = 57885
const STD = 57886
const STDDEV = 57887
const MEDIAN = 57888
const CLUSTER_CENTERS = 57889
const SPHERICAL_KMEANS = 57890
const STDDEV_POP = 57891
const STDDEV_SAMP = 57892
const SUBDATE = 57893
const SUBSTR = 57894
const SUBSTRING = 57895
const SUM = 57896
const SYSDATE = 57897
const SYSTEM_USER = 57898
const TRANSLATE = 57899
const TRIM = 57900
const VARIANCE = 57901
const VAR_POP = 57902
const VAR_SAMP = 57903
const AVG = 57904
const RANK = 57905
const ROW_NUMBER = 57906
const DENSE_RANK = 57907
const BIT_CAST = 57908
const NEXTVAL = 57909
const SETVAL = 57910
const CURRVAL = 57911
const LASTVAL = 57912
const ARROW = 57913
const ROW = 57914
const OUTFILE = 57915
const HEADER = 57916
const MAX_FILE_SIZE = 57917
const FORCE_QUOTE = 57918
const PARALLEL = 57919
const UNUSED = 57920
const BINDINGS = 57921
const DO = 57922
const DECLARE = 57923
const LOOP = 57924
const WHILE = 57925
const LEAVE = 57926
const ITERATE = 57927
const UNTIL = 57928
const CALL = 57929
const PREV = 57930
const SLIDING = 57931
const FILL = 57932
const SPBEGIN = 57933
const BACKEND = 57934
const SERVERS = 57935
const HANDLER = 57936
const PERCENT = 57937
const SAMPLE = 57938
const KILL = 57939
const BACKUP = 57940
const FILESYSTEM = 57941
const QUERY_RESULT = 57942

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"STAGEOPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"IVFFLAT",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"LISTS",
	"OP_TYPE",
	"REINDEX",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"CONNECTORS",
	"DAEMON",
	"PAUSE",
	"CANCEL",
	"TASK",
	"RESUME",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"CLUSTER_CENTERS",
	"SPHERICAL_KMEANS",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"PREV",
	"SLIDING",
	"FILL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"HANDLER",
	"PERCENT",
	"SAMPLE",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10782

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 117,
	11, 691,
	21, 691,
	-2, 684,
	-1, 137,
	236, 1072,
	238, 981,
	-2, 1029,
	-1, 161,
	42, 520,
	238, 520,
	265, 527,
	266, 527,
	459, 520,
	-2, 553,
	-1, 200,
	621, 1804,
	-2, 436,
	-1, 553,
	317, 133,
	432, 133,
	433, 133,
	-2, 1709,
	-1, 618,
	81, 1501,
	-2, 1859,
	-1, 619,
	81, 1519,
	-2, 1830,
	-1, 623,
	81, 1520,
	-2, 1858,
	-1, 651,
	81, 1431,
	-2, 1931,
	-1, 652,
	81, 1432,
	-2, 1930,
	-1, 653,
	81, 1433,
	-2, 1920,
	-1, 654,
	81, 1892,
	-2, 1913,
	-1, 655,
	81, 1893,
	-2, 1914,
	-1, 656,
	81, 1894,
	-2, 1922,
	-1, 657,
	81, 1895,
	-2, 1902,
	-1, 658,
	81, 1896,
	-2, 1911,
	-1, 659,
	81, 1897,
	-2, 1923,
	-1, 660,
	81, 1898,
	-2, 1924,
	-1, 661,
	81, 1899,
	-2, 1929,
	-1, 662,
	81, 1900,
	-2, 1934,
	-1, 663,
	81, 1901,
	-2, 1935,
	-1, 665,
	81, 1498,
	-2, 1695,
	-1, 669,
	81, 1503,
	-2, 1710,
	-1, 672,
	81, 1507,
	-2, 1728,
	-1, 676,
	81, 1511,
	-2, 1773,
	-1, 677,
	81, 1512,
	-2, 1854,
	-1, 685,
	81, 1522,
	-2, 1839,
	-1, 686,
	81, 1523,
	-2, 1884,
	-1, 687,
	81, 1524,
	-2, 1849,
	-1, 688,
	81, 1525,
	-2, 1874,
	-1, 699,
	81, 1409,
	-2, 1925,
	-1, 700,
	81, 1410,
	-2, 1926,
	-1, 701,
	81, 1411,
	-2, 1927,
	-1, 785,
	454, 553,
	455, 553,
	-2, 521,
	-1, 831,
	122, 1695,
	133, 1695,
	153, 1695,
	-2, 1669,
	-1, 940,
	21, 718,
	-2, 667,
	-1, 1041,
	11, 691,
	21, 691,
	-2, 1299,
	-1, 1116,
	21, 718,
	-2, 667,
	-1, 1427,
	81, 1569,
	-2, 1856,
	-1, 1428,
	81, 1570,
	-2, 1857,
	-1, 1569,
	82, 867,
	-2, 873,
	-1, 1974,
	105, 1019,
	149, 1019,
	188, 1019,
	191, 1019,
	278, 1019,
	-2, 1012,
	-1, 2115,
	11, 691,
	21, 691,
	-2, 811,
	-1, 2147,
	82, 1655,
	154, 1655,
	-2, 1841,
	-1, 2148,
	82, 1655,
	154, 1655,
	-2, 1840,
	-1, 2149,
	82, 1631,
	154, 1631,
	-2, 1827,
	-1, 2150,
	82, 1632,
	154, 1632,
	-2, 1832,
	-1, 2151,
	82, 1633,
	154, 1633,
	-2, 1761,
	-1, 2152,
	82, 1634,
	154, 1634,
	-2, 1755,
	-1, 2153,
	82, 1635,
	154, 1635,
	-2, 1685,
	-1, 2154,
	82, 1636,
	154, 1636,
	-2, 1829,
	-1, 2155,
	82, 1637,
	154, 1637,
	-2, 1759,
	-1, 2156,
	82, 1638,
	154, 1638,
	-2, 1754,
	-1, 2157,
	82, 1639,
	154, 1639,
	-2, 1742,
	-1, 2158,
	82, 1655,
	154, 1655,
	-2, 1743,
	-1, 2159,
	82, 1655,
	154, 1655,
	-2, 1744,
	-1, 2161,
	82, 1644,
	154, 1644,
	-2, 1874,
	-1, 2162,
	82, 1622,
	154, 1622,
	-2, 1859,
	-1, 2163,
	82, 1653,
	154, 1653,
	-2, 1830,
	-1, 2164,
	82, 1653,
	154, 1653,
	-2, 1858,
	-1, 2165,
	82, 1653,
	154, 1653,
	-2, 1711,
	-1, 2166,
	82, 1651,
	154, 1651,
	-2, 1849,
	-1, 2167,
	82, 1648,
	154, 1648,
	-2, 1733,
	-1, 2168,
	81, 1603,
	82, 1603,
	154, 1603,
	390, 1603,
	391, 1603,
	392, 1603,
	-2, 1684,
	-1, 2169,
	81, 1604,
	82, 1604,
	154, 1604,
	390, 1604,
	391, 1604,
	392, 1604,
	-2, 1686,
	-1, 2170,
	81, 1607,
	82, 1607,
	154, 1607,
	390, 1607,
	391, 1607,
	392, 1607,
	-2, 1831,
	-1, 2171,
	81, 1609,
	82, 1609,
	154, 1609,
	390, 1609,
	391, 1609,
	392, 1609,
	-2, 1813,
	-1, 2172,
	81, 1611,
	82, 1611,
	154, 1611,
	390, 1611,
	391, 1611,
	392, 1611,
	-2, 1760,
	-1, 2173,
	81, 1613,
	82, 1613,
	154, 1613,
	390, 1613,
	391, 1613,
	392, 1613,
	-2, 1738,
	-1, 2174,
	81, 1614,
	82, 1614,
	154, 1614,
	390, 1614,
	391, 1614,
	392, 1614,
	-2, 1739,
	-1, 2175,
	81, 1616,
	82, 1616,
	154, 1616,
	390, 1616,
	391, 1616,
	392, 1616,
	-2, 1683,
	-1, 2176,
	82, 1658,
	154, 1658,
	390, 1658,
	391, 1658,
	392, 1658,
	-2, 1716,
	-1, 2177,
	82, 1658,
	154, 1658,
	390, 1658,
	391, 1658,
	392, 1658,
	-2, 1729,
	-1, 2178,
	82, 1661,
	154, 1661,
	390, 1661,
	391, 1661,
	392, 1661,
	-2, 1712,
	-1, 2179,
	82, 1661,
	154, 1661,
	390, 1661,
	391, 1661,
	392, 1661,
	-2, 1776,
	-1, 2180,
	82, 1658,
	154, 1658,
	390, 1658,
	391, 1658,
	392, 1658,
	-2, 1797,
	-1, 2367,
	105, 1019,
	149, 1019,
	188, 1019,
	191, 1019,
	278, 1019,
	-2, 1013,
	-1, 2380,
	79, 612,
	154, 612,
	-2, 1185,
	-1, 2734,
	191, 1019,
	302, 1267,
	-2, 1239,
	-1, 2889,
	105, 1019,
	149, 1019,
	188, 1019,
	191, 1019,
	-2, 1128,
	-1, 2891,
	105, 1019,
	149, 1019,
	188, 1019,
	191, 1019,
	-2, 1128,
	-1, 2901,
	79, 612,
	154, 612,
	-2, 1186,
	-1, 2909,
	191, 1019,
	302, 1267,
	-2, 1240,
	-1, 3045,
	105, 1019,
	149, 1019,
	188, 1019,
	191, 1019,
	-2, 1129,
	-1, 3434,
	82, 1090,
	154, 1090,
	-2, 1019,
	-1, 3438,
	82, 1090,
	154, 1090,
	-2, 1019,
	-1, 3452,
	82, 1094,
	154, 1094,
	-2, 1019,
	-1, 3457,
	82, 1095,
	154, 1095,
	-2, 1019,
}

const yyPrivate = 57344

const yyLast = 40633

var yyAct = [...]int{
	585, 1650, 3438, 3437, 3446, 3417, 191, 1343, 1407, 3301,
	564, 562, 3365, 3387, 557, 3309, 587, 3327, 3310, 2402,
	3229, 572, 2753, 2986, 3086, 3214, 2923, 2230, 2819, 1074,
	3205, 2992, 1403, 3233, 3032, 3033, 3030, 3124, 3113, 2820,
	466, 615, 2990, 3161, 1333, 1196, 566, 1257, 941, 2337,
	476, 830, 481, 481, 2859, 3215, 3217, 1602, 481, 497,
	506, 2981, 2876, 506, 3037, 2016, 2383, 2706, 2910, 1410,
	2666, 3044, 3051, 3009, 2817, 2501, 2500, 2695, 2865, 2423,
	1739, 3047, 2483, 2749, 2738, 2109, 2493, 2731, 2499, 2892,
	176, 2664, 1463, 517, 1704, 1842, 2562, 2805, 1807, 2143,
	2019, 2522, 2785, 2496, 511, 2357, 2674, 2679, 2676, 1148,
	1984, 1250, 2737, 2667, 555, 934, 2712, 2368, 2093, 1942,
	1951, 1754, 556, 1827, 1736, 1838, 1941, 2535, 1322, 2145,
	2213, 561, 1816, 1549, 2196, 1815, 1781, 1808, 2545, 2047,
	761, 1329, 1732, 2605, 1707, 1837, 2346, 1337, 2110, 2098,
	2404, 1169, 1705, 2017, 1334, 1632, 1642, 2375, 55, 2341,
	187, 8, 186, 7, 6, 466, 1406, 824, 1579, 1983,
	563, 886, 2141, 565, 2265, 1342, 475, 1872, 1401, 1296,
	1266, 2669, 1965, 2012, 1236, 116, 1839, 1457, 2668, 1849,
	554, 191, 1441, 191, 1171, 877, 878, 1614, 2297, 1797,
	2296, 1392, 952, 871, 872, 573, 1814, 465, 876, 26,
	556, 35, 1400, 793, 15, 1303, 1613, 1359, 13, 1811,
	823, 1771, 1185, 1235, 2117, 1578, 14, 490, 1233, 32,
	1205, 1197, 703, 760, 493, 1181, 1289, 1464, 519, 23,
	16, 177, 10, 1295, 173, 1604, 738, 758, 1114, 167,
	505, 1075, 520, 1846, 3155, 874, 743, 2327, 2879, 1856,
	2253, 2199, 2812, 2202, 2200, 2327, 2327, 1562, 502, 2197,
	1306, 780, 1310, 498, 869, 870, 870, 500, 175, 1133,
	477, 873, 2649, 875, 2651, 501, 3372, 870, 499, 1218,
	1206, 1556, 1129, 1308, 2913, 2320, 2318, 1010, 1011, 1012,
	1009, 2979, 2558, 2556, 1786, 486, 1010, 1011, 1012, 1009,
	3120, 3114, 2982, 509, 2818, 1824, 1069, 3219, 1810, 704,
	2631, 2055, 3019, 2247, 174, 715, 174, 839, 1134, 3172,
	2336, 973, 2925, 2338, 2239, 2322, 8, 3292, 7, 3010,
	868, 1976, 1357, 174, 3141, 2916, 174, 3252, 1276, 174,
	51, 163, 138, 1843, 836, 2911, 174, 36, 174, 1275,
	2933, 2934, 1274, 842, 1350, 840, 2912, 841, 174, 51,
	163, 138, 1354, 3173, 174, 51, 163, 138, 1573, 515,
	838, 516, 2629, 174, 1161, 1143, 705, 1969, 1854, 1135,
	858, 2577, 3143, 1356, 1347, 168, 1214, 2135, 1007, 1215,
	706, 1749, 2123, 2917, 2570, 2122, 115, 694, 2124, 693,
	695, 696, 168, 697, 698, 1349, 503, 2136, 168, 1237,
	751, 1239, 752, 2528, 1377, 168, 1716, 168, 812, 1393,
	1712, 115, 1397, 716, 2529, 2530, 2214, 168, 1717, 1718,
	1563, 1564, 1193, 168, 802, 981, 988, 2343, 983, 989,
	1203, 1204, 168, 1628, 2650, 1201, 1396, 2344, 733, 1200,
	1203, 1204, 3348, 1000, 3313, 3314, 1409, 1005, 833, 832,
	3002, 746, 3222, 742, 3222, 3283, 984, 991, 3221, 3282,
	481, 3221, 480, 480, 3220, 1217, 3220, 3281, 488, 1931,
	481, 945, 3285, 3331, 3332, 3289, 3122, 2932, 3207, 2020,
	3125, 3126, 3127, 3128, 2563, 2342, 3210, 3117, 506, 506,
	944, 481, 3346, 2821, 2564, 1142, 2565, 3207, 1413, 2821,
	2234, 946, 955, 1858, 2921, 1727, 3226, 2439, 1309, 1307,
	1723, 1388, 853, 848, 843, 847, 851, 2834, 1733, 1398,
	2866, 2323, 1850, 2873, 2087, 1794, 2918, 2922, 2920, 2919,
	1963, 2349, 749, 3024, 834, 977, 986, 2330, 2690, 2935,
	856, 3287, 1395, 2593, 846, 137, 1498, 172, 835, 1002,
	2688, 808, 806, 1013, 807, 1043, 3294, 3295, 550, 2244,
	979, 552, 1042, 3149, 2927, 2928, 551, 161, 3290, 3291,
	1051, 2053, 982, 985, 880, 2680, 1316, 1315, 938, 2595,
	748, 976, 741, 955, 1003, 1004, 3001, 2980, 968, 2557,
	2487, 745, 744, 3003, 1058, 854, 3312, 945, 978, 987,
	2090, 2089, 857, 3152, 3021, 2685, 2686, 2094, 727, 2950,
	2935, 2752, 734, 1412, 1411, 2684, 1079, 3341, 1191, 1855,
	2704, 2687, 2914, 844, 2947, 1216, 3137, 3244, 2926, 3138,
	1747, 1748, 2321, 2750, 2751, 839, 1227, 508, 3350, 3177,
	813, 3239, 3137, 1078, 3132, 3138, 855, 1145, 1144, 2713,
	2376, 750, 998, 999, 2492, 1132, 740, 3169, 1394, 507,
	739, 809, 836, 1861, 1863, 1864, 726, 1419, 1422, 1423,
	732, 1971, 2940, 2035, 980, 990, 3234, 3431, 1420, 2015,
	2038, 3447, 3140, 3378, 502, 502, 845, 3345, 838, 498,
	498, 730, 1844, 500, 500, 1844, 957, 956, 3140, 3303,
	3154, 501, 501, 2837, 499, 499, 839, 1140, 476, 948,
	949, 2599, 2326, 3139, 1844, 3385, 940, 1180, 2951, 1045,
	1046, 1047, 1048, 3225, 811, 2755, 3077, 2682, 749, 3139,
	2064, 1112, 3411, 836, 1117, 2063, 2993, 2037, 961, 962,
	761, 870, 870, 870, 751, 965, 752, 870, 3171, 870,
	3066, 1178, 959, 870, 731, 3299, 3300, 2931, 3303, 838,
	1049, 3293, 852, 950, 2338, 2355, 2198, 504, 2084, 2085,
	1845, 1857, 3390, 504, 1246, 1311, 1245, 957, 956, 2036,
	2138, 993, 1195, 1194, 994, 966, 1177, 1176, 3448, 481,
	3454, 1229, 1202, 3418, 3144, 3162, 3178, 466, 466, 849,
	810, 850, 935, 2648, 704, 1199, 466, 466, 3442, 2893,
	1261, 1261, 996, 481, 3170, 1203, 1204, 3020, 2248, 2319,
	2015, 1150, 1151, 1152, 1153, 2930, 1155, 139, 52, 139,
	747, 1160, 503, 503, 52, 506, 1290, 476, 2348, 1192,
	1299, 1299, 1259, 1259, 169, 170, 139, 171, 2691, 139,
	1734, 191, 139, 939, 1298, 1298, 1087, 1088, 1263, 139,
	466, 139, 3072, 1268, 3351, 1203, 1204, 835, 1873, 737,
	2977, 139, 1149, 3150, 2824, 515, 967, 139, 3204, 3286,
	2032, 1234, 2746, 2681, 1141, 2440, 139, 2441, 2442, 2596,
	936, 992, 1726, 2240, 2352, 2353, 3025, 1724, 1389, 973,
	943, 2127, 2051, 1862, 2022, 2524, 2526, 1421, 3391, 2351,
	1317, 1341, 1847, 1344, 2750, 2751, 2754, 1154, 1352, 1255,
	1256, 964, 2467, 2540, 2541, 2683, 2025, 2598, 1146, 997,
	1159, 1118, 3133, 1158, 1116, 1157, 3134, 3441, 1174, 1375,
	510, 2853, 2747, 1179, 755, 756, 757, 3079, 3133, 2437,
	1189, 1166, 3216, 1261, 995, 1261, 945, 2329, 1208, 1209,
	1945, 1211, 1212, 1213, 1241, 1243, 1147, 3453, 1358, 1859,
	1860, 2607, 2606, 1253, 1254, 1408, 1187, 1188, 3087, 3088,
	3089, 3092, 3091, 3090, 1138, 972, 1566, 1168, 1228, 2361,
	2363, 2364, 2365, 2362, 1567, 750, 1320, 3068, 1323, 1324,
	1944, 3067, 753, 1414, 1415, 1416, 1417, 1418, 1565, 1325,
	1326, 1219, 1220, 1291, 718, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1312, 2076, 1331,
	1332, 1452, 1453, 719, 1207, 3052, 1462, 1210, 3393, 3388,
	3389, 2021, 1182, 1186, 1186, 1186, 2023, 1459, 1460, 1461,
	1511, 1244, 1501, 1502, 1503, 1495, 1339, 2026, 722, 942,
	1269, 1336, 2107, 1505, 1340, 1517, 1182, 1182, 1518, 486,
	1008, 2525, 2381, 839, 1954, 1282, 1520, 839, 1136, 1137,
	1405, 942, 1528, 1529, 1300, 1288, 2031, 2458, 2459, 3460,
	2029, 3459, 1301, 3073, 3074, 1947, 1946, 1955, 1956, 1546,
	2024, 2825, 1905, 3450, 1774, 1904, 3432, 3427, 803, 721,
	1551, 945, 3421, 724, 723, 1605, 1391, 1386, 2782, 1402,
	861, 866, 867, 1290, 1605, 973, 2216, 1424, 2718, 1576,
	1558, 1261, 1581, 1582, 1496, 1584, 1585, 481, 1547, 2778,
	502, 481, 2748, 2856, 1261, 498, 1370, 1371, 761, 500,
	1383, 1603, 2702, 1361, 2836, 1380, 1261, 501, 1935, 1379,
	499, 1008, 1229, 1008, 2239, 1366, 814, 497, 3420, 2468,
	2470, 2471, 2472, 2469, 2757, 3451, 1550, 1008, 1852, 3428,
	1382, 1381, 1510, 1378, 1852, 3398, 2108, 1627, 1450, 1451,
	1399, 805, 2655, 1623, 804, 1633, 1633, 1390, 1229, 3367,
	1229, 1229, 1008, 2382, 481, 481, 1404, 1576, 1576, 2457,
	2382, 1261, 1701, 1702, 1714, 1493, 1494, 1575, 1497, 1225,
	1967, 1443, 1631, 2653, 1113, 2108, 1512, 1583, 466, 3321,
	1261, 3315, 3262, 1571, 1572, 2543, 1574, 3197, 1374, 1519,
	1852, 1521, 1772, 1267, 2332, 1551, 1373, 1587, 1588, 1589,
	1551, 1551, 2108, 1884, 973, 3196, 803, 1852, 481, 1576,
	1261, 2782, 1759, 2324, 481, 481, 481, 1764, 1765, 2022,
	2025, 3368, 1348, 971, 1769, 1770, 1355, 2000, 3191, 1776,
	970, 2703, 1010, 1011, 1012, 1009, 191, 1652, 503, 191,
	191, 2229, 191, 2221, 1750, 1696, 1697, 1580, 1384, 1784,
	2050, 3322, 1787, 3158, 3158, 1790, 1635, 1522, 1792, 3198,
	1595, 863, 864, 865, 1553, 2138, 1010, 1011, 1012, 1009,
	1728, 1843, 1608, 1606, 1607, 3190, 1548, 1988, 1883, 1554,
	1511, 1511, 1818, 1720, 1966, 1722, 1715, 1511, 1511, 805,
	2010, 3189, 804, 1940, 1829, 1740, 1741, 1756, 1934, 1909,
	3158, 1634, 1611, 1612, 1758, 1735, 971, 1828, 1834, 1570,
	1742, 1743, 2627, 1010, 1011, 1012, 1009, 3188, 1603, 1621,
	1622, 3157, 1261, 1841, 1599, 1745, 1785, 1580, 1167, 1788,
	1789, 1600, 1791, 3013, 1823, 1761, 1762, 1763, 2955, 1455,
	1247, 2885, 1610, 1620, 1616, 1636, 1615, 3158, 1617, 1618,
	3415, 2026, 2766, 3369, 2904, 1625, 2021, 2015, 2020, 1999,
	2018, 2023, 1624, 3158, 2719, 1619, 1637, 1638, 708, 709,
	710, 711, 2547, 2384, 2519, 1835, 1402, 708, 709, 710,
	711, 1626, 1866, 1819, 1629, 1630, 1700, 2303, 1703, 3158,
	1870, 1871, 2872, 3158, 1719, 2295, 1721, 1182, 1729, 2242,
	1876, 2255, 2237, 1880, 1025, 3014, 2225, 2223, 2241, 3102,
	2138, 1186, 1813, 2886, 2233, 2024, 2218, 2211, 2209, 1813,
	2207, 2205, 1757, 1186, 2767, 1024, 1023, 1033, 1034, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1025, 2005, 839, 1987,
	1900, 1936, 1885, 1891, 1907, 839, 2108, 1833, 1782, 1779,
	1767, 1898, 1780, 1272, 1916, 1363, 1915, 1903, 1799, 1008,
	1055, 1910, 1911, 1894, 1913, 836, 1893, 1008, 958, 937,
	1912, 1920, 836, 1008, 1988, 1917, 1918, 1919, 2219, 2224,
	1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 2219, 2212,
	2210, 838, 2206, 2206, 1822, 1892, 932, 1851, 838, 555,
	1367, 1832, 481, 481, 2119, 481, 1820, 502, 930, 1825,
	2953, 1988, 498, 1935, 713, 1744, 500, 1586, 481, 481,
	481, 1590, 1836, 713, 501, 3407, 1008, 499, 1008, 1008,
	1985, 3240, 1831, 839, 2723, 1008, 2590, 2197, 1008, 3053,
	1992, 1229, 1183, 1500, 1499, 2810, 720, 1868, 1869, 3394,
	1989, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1025, 1874,
	836, 1865, 1251, 2714, 3425, 1249, 1229, 1008, 1867, 1852,
	1500, 1499, 1368, 1252, 1878, 3241, 937, 2048, 2272, 3156,
	2043, 1443, 3129, 3054, 1639, 1640, 838, 1523, 1524, 1525,
	1526, 2896, 2894, 1530, 1531, 1532, 1533, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 3070, 929, 925, 926, 927,
	928, 3069, 2277, 1960, 2276, 2275, 2273, 1024, 1023, 1033,
	1034, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1025, 1172,
	3026, 2878, 2783, 1173, 2049, 2897, 2895, 2776, 1755, 2715,
	2112, 2112, 1714, 2112, 1755, 1755, 1755, 1028, 1029, 1030,
	1031, 1032, 1025, 1534, 2771, 503, 2768, 2697, 1184, 2489,
	2359, 466, 466, 2328, 1248, 1551, 2252, 1551, 2222, 945,
	725, 2129, 1930, 1932, 1933, 1261, 481, 1163, 1162, 947,
	1527, 2274, 2262, 2716, 2191, 1551, 1551, 1783, 1079, 1948,
	1458, 481, 1879, 1010, 1011, 1012, 1009, 945, 2181, 476,
	1968, 2549, 1937, 1299, 2813, 1714, 1458, 2133, 2186, 1304,
	2188, 1783, 1012, 1009, 191, 1078, 2146, 1298, 1010, 1011,
	1012, 1009, 2009, 1577, 3280, 1009, 2114, 2054, 2118, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 2116, 3082, 2065, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2001,
	2077, 2078, 2079, 2080, 2081, 2014, 2082, 1993, 2027, 2028,
	3081, 2033, 2013, 2006, 2235, 2566, 2429, 1841, 1010, 1011,
	1012, 1009, 2428, 2410, 1261, 2125, 1261, 2126, 1261, 2201,
	2408, 1996, 3061, 945, 2004, 3436, 2002, 1994, 1995, 2003,
	1057, 2254, 3027, 3028, 3410, 2130, 2131, 1997, 1998, 2185,
	839, 3022, 2249, 1056, 2192, 1449, 3424, 3379, 2245, 3374,
	3373, 3305, 2140, 2091, 3271, 1261, 2281, 3242, 2278, 2279,
	2870, 1446, 1448, 1445, 2263, 1447, 1515, 836, 1241, 1243,
	2120, 2288, 3193, 2282, 2283, 3181, 1261, 3306, 3174, 3115,
	1516, 2285, 2286, 1010, 1011, 1012, 1009, 1259, 2479, 2290,
	2358, 1304, 1186, 838, 2291, 3409, 2134, 3023, 588, 598,
	3056, 3055, 2280, 1010, 1011, 1012, 1009, 589, 1259, 597,
	590, 594, 593, 591, 592, 2182, 2871, 2898, 2477, 1414,
	1551, 2869, 2184, 2289, 945, 2689, 2586, 2561, 945, 2292,
	2293, 481, 1010, 1011, 1012, 1009, 2877, 1261, 2137, 2475,
	2356, 2811, 2560, 2333, 2478, 2462, 1576, 2146, 1010, 1011,
	1012, 1009, 2461, 2380, 2251, 2460, 1484, 2264, 2452, 2386,
	2446, 2445, 595, 2246, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1014, 1958, 1959, 2476, 1961, 2396, 2260, 2236, 2464,
	1402, 2266, 2266, 945, 2390, 2391, 2316, 2183, 1977, 1978,
	1979, 2407, 2243, 2238, 596, 2474, 2190, 2444, 945, 945,
	945, 1633, 2231, 2232, 945, 2443, 2418, 2419, 2420, 2421,
	945, 2227, 2425, 2426, 2259, 2427, 2256, 2257, 2413, 2414,
	2325, 1939, 1802, 2417, 1801, 2271, 2369, 2269, 1800, 2424,
	3232, 1796, 1795, 1753, 2370, 2463, 1752, 1751, 2112, 1024,
	1023, 1033, 1034, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
	1025, 1364, 2480, 1131, 2494, 2387, 1010, 1011, 1012, 1009,
	466, 2675, 1652, 3397, 3340, 1576, 945, 1714, 1714, 1714,
	1714, 3339, 3336, 2345, 1010, 1011, 1012, 1009, 945, 1714,
	2335, 2377, 2112, 2340, 2987, 2502, 2298, 2299, 3333, 2405,
	3228, 3031, 2304, 2405, 3213, 3202, 2401, 2502, 1261, 2406,
	2334, 3185, 3180, 1580, 550, 2354, 3179, 552, 2398, 481,
	481, 2412, 551, 2620, 3153, 3151, 3116, 8, 1480, 7,
	3063, 2385, 2379, 3040, 1477, 2985, 2983, 3249, 1479, 1476,
	1478, 1482, 1483, 2962, 2959, 2397, 1481, 2400, 2957, 2484,
	2403, 2868, 2867, 2409, 2864, 2844, 1267, 2842, 1010, 1011,
	1012, 1009, 2777, 2773, 2515, 3245, 2416, 2193, 2388, 2435,
	2436, 1755, 2764, 2763, 191, 2698, 2659, 2393, 2394, 191,
	2658, 2657, 2619, 2450, 2451, 1943, 1010, 1011, 1012, 1009,
	2600, 2597, 2553, 2559, 2555, 1305, 2454, 1882, 2533, 2473,
	1511, 2465, 1511, 2455, 2453, 2576, 2449, 2486, 1010, 1011,
	1012, 1009, 1551, 2448, 2585, 2395, 2447, 1551, 2490, 2228,
	1261, 1804, 2389, 2592, 1828, 1798, 2485, 2392, 1561, 2503,
	2504, 2505, 2506, 2516, 3005, 1896, 2514, 2488, 650, 649,
	2518, 2517, 1033, 1034, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1025, 2534, 2531, 1560, 1365, 2544, 1324, 1086, 2603,
	1010, 1011, 1012, 1009, 2550, 1082, 1081, 1325, 1326, 2554,
	933, 1010, 1011, 1012, 1009, 2527, 717, 3130, 1550, 3017,
	2287, 3006, 2624, 2575, 2891, 2890, 1331, 1332, 2889, 1487,
	1488, 1489, 1490, 1491, 1492, 1485, 1486, 2855, 2851, 2573,
	2613, 1895, 2615, 2849, 2848, 2579, 2847, 1339, 2843, 2548,
	2552, 2551, 1336, 2841, 2589, 1340, 2826, 945, 2816, 2815,
	2995, 2801, 2594, 2800, 2724, 2662, 2678, 1010, 1011, 1012,
	1009, 2569, 2572, 2582, 2567, 2580, 2693, 2574, 2652, 2581,
	2994, 481, 2625, 2618, 1881, 2588, 1010, 1011, 1012, 1009,
	2944, 2610, 2707, 945, 945, 945, 2609, 839, 2604, 2542,
	2601, 2331, 1714, 1985, 839, 2722, 1010, 1011, 1012, 1009,
	2602, 2339, 1010, 1011, 1012, 1009, 1010, 1011, 1012, 1009,
	2208, 2611, 2612, 2204, 2839, 2736, 2203, 2739, 1921, 2739,
	2739, 1914, 2608, 2378, 945, 1908, 1906, 2654, 2614, 1902,
	1901, 2701, 2616, 2617, 1899, 1890, 2743, 1887, 2623, 2759,
	1010, 1011, 1012, 1009, 1886, 1803, 1261, 1261, 1010, 1011,
	1012, 1009, 1545, 1544, 2756, 2622, 1543, 2656, 1514, 2369,
	1513, 2621, 2758, 2660, 1010, 1011, 1012, 1009, 1504, 174,
	1888, 163, 138, 2661, 2709, 2710, 2711, 174, 1259, 1259,
	1273, 1010, 1011, 1012, 1009, 2694, 2720, 1010, 1011, 1012,
	1009, 1271, 481, 2760, 2761, 2700, 3449, 2678, 3406, 2735,
	2312, 3400, 3386, 2721, 2717, 2632, 2633, 2311, 1576, 1576,
	2744, 2634, 2635, 2636, 2637, 3383, 2638, 2639, 2640, 2641,
	2642, 2643, 2644, 2645, 2729, 3381, 1010, 1011, 1012, 1009,
	2742, 2740, 2741, 1010, 1011, 1012, 1009, 2745, 168, 3270,
	1076, 3199, 2734, 2310, 3187, 3182, 168, 600, 117, 2309,
	1319, 3096, 3080, 117, 945, 2308, 3076, 2970, 2281, 2968,
	3261, 2307, 1010, 1011, 1012, 1009, 3259, 2814, 839, 1010,
	1011, 1012, 1009, 2146, 2942, 1010, 1011, 1012, 1009, 2537,
	2538, 1010, 1011, 1012, 1009, 2941, 2571, 1010, 1011, 1012,
	1009, 2938, 2937, 2578, 2880, 2672, 2671, 1036, 1330, 1040,
	2728, 1321, 2769, 487, 1335, 2770, 117, 2775, 2774, 481,
	2772, 2779, 2780, 2765, 2306, 1037, 1039, 1035, 2790, 1038,
	1024, 1023, 1033, 1034, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1025, 2305, 2794, 1338, 2797, 2798, 2799, 1327, 1170,
	1010, 1011, 1012, 1009, 2725, 2838, 2481, 2411, 2374, 2726,
	2727, 2373, 2840, 2803, 2372, 2371, 2809, 2313, 1010, 1011,
	1012, 1009, 2217, 2128, 2083, 1986, 514, 1023, 1033, 1034,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1025, 2850, 2827,
	2302, 1957, 2860, 945, 2301, 1938, 2828, 1444, 2829, 168,
	1766, 2832, 2300, 1569, 1557, 2833, 1387, 2792, 2294, 1351,
	1328, 1130, 1115, 1111, 1110, 2845, 1010, 1011, 1012, 1009,
	1010, 1011, 1012, 1009, 1109, 2884, 837, 1108, 1010, 1011,
	1012, 1009, 2284, 117, 1010, 1011, 1012, 1009, 2112, 1714,
	2901, 1107, 3435, 2261, 1106, 1105, 1104, 1103, 117, 1102,
	117, 1101, 1100, 1099, 945, 1098, 1097, 1096, 1010, 1011,
	1012, 1009, 1454, 2736, 1095, 1094, 2781, 945, 2852, 1010,
	1011, 1012, 1009, 2907, 1093, 1092, 1091, 2730, 945, 1090,
	1089, 2793, 1085, 1261, 2862, 1084, 2946, 1083, 1010, 1011,
	1012, 1009, 1080, 1073, 1072, 1070, 1069, 2424, 1068, 1576,
	1067, 2875, 1066, 945, 1065, 1064, 1063, 1551, 1062, 2903,
	1061, 2699, 1060, 1059, 1054, 1259, 1053, 1052, 1551, 975,
	2936, 2967, 2502, 2899, 2969, 931, 2786, 2787, 3257, 3255,
	2954, 2939, 191, 2900, 1991, 2976, 2929, 1973, 963, 2906,
	3356, 2975, 839, 3354, 3311, 945, 2789, 2943, 2360, 839,
	2964, 2948, 839, 2945, 2139, 1806, 974, 2952, 2791, 2508,
	2507, 2881, 2882, 2883, 2502, 2258, 2226, 2887, 2888, 2958,
	2956, 2974, 1164, 2961, 3004, 2220, 2696, 945, 2965, 2100,
	2103, 2104, 2105, 2101, 2966, 2102, 2106, 2963, 102, 1024,
	1023, 1033, 1034, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
	1025, 945, 1261, 1261, 2511, 2509, 2584, 2707, 54, 2512,
	2510, 3046, 2513, 3046, 2104, 2105, 2732, 2960, 2733, 2972,
	3034, 2988, 2978, 478, 2989, 3011, 2973, 2052, 2095, 1597,
	1598, 2949, 1755, 2804, 1259, 3038, 2830, 2831, 1261, 1592,
	1593, 1594, 1688, 2431, 483, 3062, 1313, 3012, 53, 3036,
	2432, 2433, 2434, 2215, 3042, 3043, 481, 3018, 945, 945,
	2231, 2232, 945, 945, 484, 2100, 2103, 2104, 2105, 2101,
	3038, 2102, 2106, 2250, 3041, 2971, 482, 3034, 3034, 3099,
	3049, 3034, 3034, 3050, 1360, 3093, 2902, 3098, 2903, 1603,
	1345, 3107, 3084, 3085, 2905, 2936, 3094, 3095, 3060, 3059,
	3111, 3112, 3064, 3008, 485, 1964, 1768, 969, 2673, 2670,
	2663, 2929, 2399, 2008, 1981, 1601, 1568, 1500, 1499, 3324,
	3015, 3016, 1126, 1127, 1124, 1125, 1122, 1123, 1120, 1121,
	3104, 3184, 2762, 2092, 2088, 2860, 1699, 1222, 1221, 1001,
	2796, 2854, 3136, 2536, 3103, 1830, 3105, 1175, 2857, 2835,
	1156, 2863, 117, 117, 837, 1198, 3401, 3297, 3277, 3275,
	3235, 3212, 2996, 3211, 2997, 3209, 3200, 3164, 3110, 3109,
	3160, 3118, 2984, 2846, 2823, 2822, 3131, 3135, 2807, 2039,
	1362, 2806, 3146, 3147, 2546, 1605, 2587, 3148, 1975, 3145,
	3358, 3357, 942, 1889, 960, 3357, 3358, 3078, 2802, 3159,
	708, 709, 710, 711, 1190, 942, 178, 3, 62, 2,
	3100, 3370, 3166, 3101, 3167, 3371, 1, 945, 2317, 3165,
	1555, 1128, 1261, 712, 707, 1041, 3175, 1238, 2121, 1746,
	1265, 1559, 714, 3404, 2520, 2521, 3034, 2795, 2523, 1848,
	3183, 2491, 2086, 1962, 2692, 1165, 754, 1506, 1372, 860,
	954, 3192, 1369, 953, 1259, 951, 1456, 602, 1809, 2482,
	2456, 3106, 3224, 3323, 3364, 3057, 3058, 3269, 3326, 3194,
	1385, 586, 3203, 3121, 3218, 1058, 3273, 3201, 3123, 945,
	2991, 3208, 3206, 1853, 1006, 3236, 1024, 1023, 1033, 1034,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1025, 3034, 2568,
	776, 640, 613, 1071, 1353, 1346, 2630, 3231, 945, 2628,
	862, 612, 3227, 2874, 3230, 2350, 1261, 3246, 2539, 3264,
	3267, 3238, 3168, 859, 777, 1793, 3119, 3034, 1314, 3254,
	3256, 3258, 3260, 3247, 1318, 2007, 3176, 3445, 3434, 3416,
	3399, 3243, 3253, 3302, 3268, 3430, 3344, 3384, 1259, 3000,
	2998, 2999, 3377, 3276, 3272, 3278, 3279, 3274, 1261, 3298,
	521, 1725, 3195, 3263, 1119, 464, 821, 3097, 1805, 3307,
	522, 1990, 3288, 3186, 735, 1972, 736, 728, 2367, 2366,
	3296, 1425, 1015, 1442, 2646, 2647, 1050, 560, 1877, 2347,
	1259, 3330, 2924, 2532, 61, 60, 764, 59, 58, 1775,
	3316, 199, 3317, 604, 3318, 3304, 3319, 3329, 198, 3320,
	3029, 3266, 3328, 584, 583, 582, 581, 580, 945, 579,
	2099, 3334, 3218, 2097, 2096, 3237, 3335, 1709, 1708, 1773,
	2705, 2422, 2415, 2034, 2040, 1641, 3308, 3342, 3250, 3251,
	3075, 2466, 1591, 3363, 3248, 2030, 3355, 1658, 3353, 3352,
	2438, 3347, 3349, 1655, 1654, 3366, 2430, 3359, 3360, 3361,
	3362, 3071, 3375, 3065, 945, 763, 1685, 2858, 3045, 2908,
	2909, 2915, 3376, 1980, 885, 803, 881, 883, 3380, 884,
	3382, 882, 2270, 1408, 2011, 2665, 3083, 1953, 1952, 3330,
	3396, 1950, 3392, 1270, 1949, 1139, 903, 487, 3223, 3284,
	3007, 2144, 945, 2142, 945, 3329, 3395, 2788, 2784, 1817,
	3403, 1826, 3405, 2583, 1010, 1011, 1012, 1009, 3408, 1710,
	1706, 1408, 1974, 1408, 3366, 3142, 3412, 945, 117, 3414,
	1596, 3419, 729, 1970, 99, 3423, 3426, 152, 48, 3429,
	89, 88, 98, 150, 47, 183, 1408, 182, 185, 3337,
	3338, 184, 181, 2194, 3433, 2195, 3440, 180, 805, 1302,
	3444, 804, 3443, 179, 3048, 702, 38, 37, 3452, 33,
	12, 11, 34, 21, 3440, 3457, 3456, 3455, 22, 3444,
	20, 1376, 3458, 1223, 1224, 19, 1226, 25, 1230, 1231,
	1232, 31, 117, 1484, 30, 110, 117, 109, 789, 29,
	108, 107, 106, 105, 104, 28, 765, 18, 117, 42,
	41, 40, 1484, 9, 97, 95, 889, 27, 117, 96,
	1277, 1278, 1279, 1280, 1281, 93, 1283, 1284, 1285, 1286,
	1287, 94, 92, 767, 1293, 1294, 911, 915, 917, 919,
	921, 922, 924, 90, 929, 925, 926, 927, 928, 3402,
	906, 907, 908, 909, 887, 888, 912, 73, 890, 72,
	891, 892, 893, 894, 895, 896, 897, 898, 899, 902,
	904, 900, 901, 910, 71, 86, 85, 84, 83, 82,
	81, 914, 916, 918, 920, 923, 79, 80, 2626, 775,
	70, 69, 68, 67, 66, 91, 788, 787, 77, 87,
	78, 76, 1024, 1023, 1033, 1034, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1025, 75, 74, 65, 786, 64, 905,
	63, 136, 135, 134, 133, 132, 130, 131, 762, 129,
	128, 127, 126, 125, 124, 43, 44, 45, 46, 766,
	798, 1024, 1023, 1033, 1034, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1025, 146, 145, 1480, 147, 149, 151, 148,
	153, 1477, 143, 794, 141, 1479, 1476, 1478, 1482, 1483,
	144, 142, 140, 1481, 1480, 56, 100, 1875, 17, 24,
	1477, 4, 0, 0, 1479, 1476, 1478, 1482, 1483, 0,
	0, 0, 1481, 0, 0, 0, 0, 0, 0, 795,
	799, 1024, 1023, 1033, 1034, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1025, 0, 0, 0, 0, 0, 783, 0,
	781, 785, 802, 0, 0, 0, 782, 779, 778, 0,
	784, 769, 770, 768, 771, 772, 773, 774, 0, 800,
	0, 801, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 796, 797, 0, 0, 2267, 2268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 792,
	0, 1713, 0, 0, 0, 791, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1487, 1488, 1489, 1490,
	1491, 1492, 1485, 1486, 1465, 1466, 1467, 1468, 1469, 1470,
	1471, 1472, 1473, 1474, 1475, 1487, 1488, 1489, 1490, 1491,
	1492, 1485, 1486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 0, 0, 117, 117, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 913,
	0, 0, 0, 0, 0, 0, 620, 837, 0, 0,
	0, 0, 0, 0, 837, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 574, 0,
	0, 0, 293, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 458, 0,
	459, 0, 0, 611, 0, 463, 384, 337, 0, 1760,
	0, 0, 673, 681, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 567, 0, 0, 601, 650, 649,
	588, 598, 0, 0, 268, 197, 460, 0, 461, 589,
	0, 597, 590, 594, 593, 591, 592, 0, 665, 0,
	0, 0, 1041, 0, 0, 558, 571, 0, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 568, 569, 0, 0, 0, 0, 621, 0,
	570, 0, 0, 616, 595, 599, 0, 0, 0, 0,
	258, 389, 406, 269, 380, 419, 274, 387, 264, 352,
	376, 0, 0, 260, 404, 386, 334, 312, 313, 259,
	0, 371, 291, 304, 288, 350, 596, 619, 623, 287,
	687, 617, 414, 262, 0, 413, 349, 400, 405, 335,
	329, 261, 402, 333, 328, 316, 295, 688, 317, 318,
	308, 361, 327, 362, 309, 339, 338, 340, 0, 0,
	0, 0, 0, 442, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 416, 0, 0, 671, 0, 0, 0, 388,
	0, 0, 319, 0, 0, 0, 618, 0, 374, 355,
	684, 559, 0, 372, 325, 401, 363, 407, 390, 415,
	368, 364, 253, 391, 290, 336, 265, 267, 285, 292,
	294, 296, 297, 345, 346, 358, 379, 392, 393, 394,
	289, 275, 373, 276, 306, 277, 254, 281, 280, 282,
	381, 283, 256, 359, 398, 0, 302, 369, 332, 257,
	331, 360, 397, 396, 266, 423, 429, 430, 0, 0,
	435, 0, 0, 0, 444, 449, 450, 451, 453, 454,
	455, 456, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 1508, 1507, 1509, 428, 320, 321, 322, 300, 250,
	251, 473, 669, 351, 0, 0, 0, 0, 683, 664,
	666, 667, 670, 674, 675, 676, 677, 678, 680, 682,
	686, 472, 0, 0, 0, 0, 0, 469, 357, 2115,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 409, 421, 438, 441, 0, 0,
	0, 0, 255, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 685, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 622, 0, 0, 341, 342, 343, 344, 672,
	0, 273, 439, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 1713, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 433, 434, 299, 305, 452, 307, 272, 356,
	301, 418, 314, 0, 445, 0, 446, 0, 0, 0,
	0, 348, 310, 311, 382, 315, 326, 370, 417, 354,
	375, 270, 408, 383, 330, 0, 0, 694, 668, 693,
	695, 696, 692, 697, 698, 679, 578, 0, 626, 690,
	689, 691, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 248, 278, 279, 284,
	470, 467, 399, 471, 0, 252, 0, 324, 0, 365,
	298, 0, 0, 657, 633, 634, 635, 576, 636, 630,
	631, 632, 658, 624, 654, 655, 603, 627, 637, 653,
	638, 656, 659, 660, 699, 700, 644, 628, 220, 701,
	641, 661, 652, 651, 639, 625, 662, 663, 610, 605,
	642, 643, 629, 645, 646, 647, 577, 606, 607, 608,
	609, 0, 0, 0, 424, 425, 426, 448, 410, 0,
	468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 648, 0, 474, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 0, 0, 117, 0, 353, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 574,
	0, 0, 0, 293, 1552, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 458,
	0, 459, 0, 0, 611, 0, 463, 384, 337, 0,
	0, 0, 0, 673, 681, 0, 0, 0, 0, 0,
	0, 0, 1737, 0, 0, 567, 0, 0, 601, 650,
	649, 588, 598, 0, 0, 268, 197, 460, 0, 461,
	589, 0, 597, 590, 594, 593, 591, 592, 0, 665,
	0, 0, 0, 0, 0, 0, 558, 571, 0, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1713, 1713, 1713, 1713, 0, 0,
	0, 0, 0, 568, 569, 0, 1713, 0, 0, 621,
	0, 570, 0, 0, 1738, 595, 599, 0, 0, 0,
	0, 258, 389, 406, 269, 380, 419, 274, 387, 264,
	352, 376, 0, 0, 260, 404, 386, 334, 312, 313,
	259, 0, 371, 291, 304, 288, 350, 596, 619, 623,
	287, 687, 617, 414, 262, 0, 413, 349, 400, 405,
	335, 329, 261, 402, 333, 328, 316, 295, 688, 317,
	318, 308, 361, 327, 362, 309, 339, 338, 340, 0,
	0, 0, 0, 0, 442, 443, 0, 0, 0, 0,
	0, 117, 0, 0, 0, 0, 117, 0, 0, 614,
	0, 0, 0, 416, 0, 0, 671, 0, 0, 0,
	388, 0, 0, 319, 0, 0, 117, 618, 0, 374,
	355, 684, 559, 117, 372, 325, 401, 363, 407, 390,
	415, 368, 364, 253, 391, 290, 336, 265, 267, 285,
	292, 294, 296, 297, 345, 346, 358, 379, 392, 393,
	394, 289, 275, 373, 276, 306, 277, 254, 281, 280,
	282, 381, 283, 256, 359, 398, 0, 302, 369, 332,
	257, 331, 360, 397, 396, 266, 423, 429, 430, 0,
	0, 435, 0, 0, 0, 444, 449, 450, 451, 453,
	454, 455, 456, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 428, 320, 321, 322, 300,
	250, 251, 473, 669, 351, 0, 0, 0, 0, 683,
	664, 666, 667, 670, 674, 675, 676, 677, 678, 680,
	682, 686, 472, 0, 0, 0, 0, 0, 469, 357,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 409, 421, 438, 441, 0,
	0, 0, 0, 255, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 685, 0, 0, 0, 420, 0, 1713,
	0, 0, 0, 622, 0, 0, 341, 342, 343, 344,
	672, 0, 273, 439, 367, 0, 0, 117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 299, 305, 452, 307, 272,
	356, 301, 418, 314, 0, 445, 0, 446, 0, 0,
	0, 0, 348, 310, 311, 382, 315, 326, 370, 417,
	354, 375, 270, 408, 383, 330, 0, 0, 694, 668,
	693, 695, 696, 692, 697, 698, 679, 578, 0, 626,
	690, 689, 691, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 0, 248, 278, 279,
	284, 470, 467, 399, 471, 0, 252, 0, 324, 0,
	365, 298, 0, 0, 657, 633, 634, 635, 576, 636,
	630, 631, 632, 658, 624, 654, 655, 603, 627, 637,
	653, 638, 656, 659, 660, 699, 700, 644, 628, 220,
	701, 641, 661, 652, 651, 639, 625, 662, 663, 610,
	605, 642, 643, 629, 645, 646, 647, 577, 606, 607,
	608, 609, 0, 0, 0, 424, 425, 426, 448, 410,
	0, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 648, 0, 474,
	462, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 174, 620, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 574, 0,
	0, 0, 293, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 458, 0,
	459, 0, 0, 1044, 0, 463, 384, 337, 0, 0,
	0, 117, 673, 681, 0, 0, 0, 0, 117, 0,
	0, 117, 0, 0, 567, 0, 0, 601, 650, 649,
	588, 598, 0, 0, 268, 197, 460, 0, 461, 589,
	0, 597, 590, 594, 593, 591, 592, 0, 665, 0,
	0, 0, 0, 0, 0, 558, 571, 0, 575, 0,
	0, 0, 0, 0, 0, 0, 1713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 568, 569, 0, 0, 0, 0, 621, 0,
	570, 0, 0, 616, 595, 599, 0, 0, 0, 0,
	258, 389, 406, 269, 380, 419, 274, 387, 264, 352,
	376, 0, 0, 260, 404, 386, 334, 312, 313, 259,
	0, 371, 291, 304, 288, 350, 596, 619, 623, 287,
	687, 617, 414, 262, 0, 413, 349, 400, 405, 335,
	329, 261, 402, 333, 328, 316, 295, 688, 317, 318,
	308, 361, 327, 362, 309, 339, 338, 340, 0, 117,
	0, 0, 0, 442, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 416, 0, 0, 671, 0, 0, 0, 388,
	0, 0, 319, 0, 0, 0, 618, 0, 374, 355,
	684, 559, 0, 372, 325, 401, 363, 407, 390, 415,
	368, 364, 253, 391, 290, 336, 265, 267, 285, 292,
	294, 296, 297, 345, 346, 358, 379, 392, 393, 394,
	289, 275, 373, 276, 306, 277, 254, 281, 280, 282,
	381, 283, 256, 359, 398, 0, 302, 369, 332, 257,
	331, 360, 397, 396, 266, 423, 429, 430, 0, 0,
	435, 0, 0, 0, 444, 449, 450, 451, 453, 454,
	455, 456, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 428, 320, 321, 322, 300, 250,
	251, 473, 669, 351, 0, 0, 0, 0, 683, 664,
	666, 667, 670, 674, 675, 676, 677, 678, 680, 682,
	686, 472, 0, 0, 0, 0, 0, 469, 357, 0,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 409, 421, 438, 441, 0, 0,
	0, 0, 255, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 685, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 622, 0, 0, 341, 342, 343, 344, 672,
	0, 273, 439, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 299, 305, 452, 307, 272, 356,
	301, 418, 314, 0, 445, 0, 446, 0, 0, 0,
	0, 348, 310, 311, 382, 315, 326, 370, 417, 354,
	375, 270, 408, 383, 330, 0, 0, 694, 668, 693,
	695, 696, 692, 697, 698, 679, 578, 0, 626, 690,
	689, 691, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 248, 278, 279, 284,
	470, 467, 399, 471, 0, 252, 0, 324, 139, 365,
	298, 0, 0, 657, 633, 634, 635, 576, 636, 630,
	631, 632, 658, 624, 654, 655, 603, 627, 637, 653,
	638, 656, 659, 660, 699, 700, 644, 628, 220, 701,
	641, 661, 652, 651, 639, 625, 662, 663, 610, 605,
	642, 643, 629, 645, 646, 647, 577, 606, 607, 608,
	609, 0, 0, 0, 424, 425, 426, 448, 410, 620,
	468, 0, 0, 0, 0, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 0, 0, 648, 0, 474, 462,
	0, 574, 0, 0, 0, 293, 3413, 0, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 458, 0, 459, 0, 0, 611, 0, 463, 384,
	337, 0, 0, 0, 0, 673, 681, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 567, 0, 0,
	601, 650, 649, 588, 598, 0, 0, 268, 197, 460,
	0, 461, 589, 0, 597, 590, 594, 593, 591, 592,
	0, 665, 0, 0, 0, 0, 0, 0, 558, 571,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 569, 0, 0, 0,
	0, 621, 0, 570, 0, 0, 616, 595, 599, 0,
	0, 0, 0, 258, 389, 406, 269, 380, 419, 274,
	387, 264, 352, 376, 0, 0, 260, 404, 386, 334,
	312, 313, 259, 0, 371, 291, 304, 288, 350, 596,
	619, 623, 287, 687, 617, 414, 262, 0, 413, 349,
	400, 405, 335, 329, 261, 402, 333, 328, 316, 295,
	688, 317, 318, 308, 361, 327, 362, 309, 339, 338,
	340, 0, 0, 0, 0, 0, 442, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 416, 0, 0, 671, 0,
	0, 0, 388, 0, 0, 319, 0, 0, 0, 618,
	0, 374, 355, 684, 559, 0, 372, 325, 401, 363,
	407, 390, 415, 368, 364, 253, 391, 290, 336, 265,
	267, 285, 292, 294, 296, 297, 345, 346, 358, 379,
	392, 393, 394, 289, 275, 373, 276, 306, 277, 254,
	281, 280, 282, 381, 283, 256, 359, 398, 0, 302,
	369, 332, 257, 331, 360, 397, 396, 266, 423, 429,
	430, 0, 0, 435, 0, 0, 0, 444, 449, 450,
	451, 453, 454, 455, 456, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 428, 320, 321,
	322, 300, 250, 251, 473, 669, 351, 0, 0, 0,
	0, 683, 664, 666, 667, 670, 674, 675, 676, 677,
	678, 680, 682, 686, 472, 0, 0, 0, 0, 0,
	469, 357, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 409, 421, 438,
	441, 0, 0, 0, 0, 255, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 685, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 622, 0, 0, 341, 342,
	343, 344, 672, 0, 273, 439, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 299, 305, 452,
	307, 272, 356, 301, 418, 314, 0, 445, 0, 446,
	0, 0, 0, 0, 348, 310, 311, 382, 315, 326,
	370, 417, 354, 375, 270, 408, 383, 330, 0, 0,
	694, 668, 693, 695, 696, 692, 697, 698, 679, 578,
	0, 626, 690, 689, 691, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 0, 248,
	278, 279, 284, 470, 467, 399, 471, 0, 252, 0,
	324, 0, 365, 298, 0, 0, 657, 633, 634, 635,
	576, 636, 630, 631, 632, 658, 624, 654, 655, 603,
	627, 637, 653, 638, 656, 659, 660, 699, 700, 644,
	628, 220, 701, 641, 661, 652, 651, 639, 625, 662,
	663, 610, 605, 642, 643, 629, 645, 646, 647, 577,
	606, 607, 608, 609, 0, 0, 0, 424, 425, 426,
	448, 410, 620, 468, 0, 0, 0, 0, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 0, 0, 648,
	0, 474, 462, 0, 574, 0, 0, 0, 293, 1552,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 458, 0, 459, 0, 0, 611,
	0, 463, 384, 337, 0, 0, 0, 0, 673, 681,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	567, 0, 0, 601, 650, 649, 588, 598, 0, 0,
	268, 197, 460, 0, 461, 589, 0, 597, 590, 594,
	593, 591, 592, 0, 665, 0, 0, 0, 0, 0,
	0, 558, 571, 0, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 568, 569,
	0, 0, 0, 0, 621, 0, 570, 0, 0, 616,
	595, 599, 0, 0, 0, 0, 258, 389, 406, 269,
	380, 419, 274, 387, 264, 352, 376, 0, 0, 260,
	404, 386, 334, 312, 313, 259, 0, 371, 291, 304,
	288, 350, 596, 619, 623, 287, 687, 617, 414, 262,
	0, 413, 349, 400, 405, 335, 329, 261, 402, 333,
	328, 316, 295, 688, 317, 318, 308, 361, 327, 362,
	309, 339, 338, 340, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 416, 0,
	0, 671, 0, 0, 0, 388, 0, 0, 319, 0,
	0, 0, 618, 0, 374, 355, 684, 559, 0, 372,
	325, 401, 363, 407, 390, 415, 368, 364, 253, 391,
	290, 336, 265, 267, 285, 292, 294, 296, 297, 345,
	346, 358, 379, 392, 393, 394, 289, 275, 373, 276,
	306, 277, 254, 281, 280, 282, 381, 283, 256, 359,
	398, 0, 302, 369, 332, 257, 331, 360, 397, 396,
	266, 423, 429, 430, 0, 0, 435, 0, 0, 0,
	444, 449, 450, 451, 453, 454, 455, 456, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	428, 320, 321, 322, 300, 250, 251, 473, 669, 351,
	0, 0, 0, 0, 683, 664, 666, 667, 670, 674,
	675, 676, 677, 678, 680, 682, 686, 472, 0, 0,
	0, 0, 0, 469, 357, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	409, 421, 438, 441, 0, 0, 0, 0, 255, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 685, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 622, 0,
	0, 341, 342, 343, 344, 672, 0, 273, 439, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 694, 668, 693, 695, 696, 692, 697,
	698, 679, 578, 0, 626, 690, 689, 691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 470, 467, 399, 471,
	0, 252, 0, 324, 0, 365, 298, 0, 0, 657,
	633, 634, 635, 576, 636, 630, 631, 632, 658, 624,
	654, 655, 603, 627, 637, 653, 638, 656, 659, 660,
	699, 700, 644, 628, 220, 701, 641, 661, 652, 651,
	639, 625, 662, 663, 610, 605, 642, 643, 629, 645,
	646, 647, 577, 606, 607, 608, 609, 0, 0, 0,
	424, 425, 426, 448, 410, 620, 468, 0, 0, 0,
	0, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	0, 0, 648, 0, 474, 462, 0, 574, 0, 0,
	0, 293, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 458, 0, 459,
	0, 0, 611, 0, 463, 384, 337, 0, 0, 0,
	0, 673, 681, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 567, 0, 0, 601, 650, 649, 588,
	598, 0, 0, 268, 197, 460, 0, 461, 589, 0,
	597, 590, 594, 593, 591, 592, 0, 665, 0, 0,
	0, 0, 0, 0, 558, 571, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 568, 569, 1297, 0, 0, 0, 621, 0, 570,
	0, 0, 616, 595, 599, 0, 0, 0, 0, 258,
	389, 406, 269, 380, 419, 274, 387, 264, 352, 376,
	0, 0, 260, 404, 386, 334, 312, 313, 259, 0,
	371, 291, 304, 288, 350, 596, 619, 623, 287, 687,
	617, 414, 262, 0, 413, 349, 400, 405, 335, 329,
	261, 402, 333, 328, 316, 295, 688, 317, 318, 308,
	361, 327, 362, 309, 339, 338, 340, 0, 0, 0,
	0, 0, 442, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 416, 0, 0, 671, 0, 0, 0, 388, 0,
	0, 319, 0, 0, 0, 618, 0, 374, 355, 684,
	559, 0, 372, 325, 401, 363, 407, 390, 415, 368,
	364, 253, 391, 290, 336, 265, 267, 285, 292, 294,
	296, 297, 345, 346, 358, 379, 392, 393, 394, 289,
	275, 373, 276, 306, 277, 254, 281, 280, 282, 381,
	283, 256, 359, 398, 0, 302, 369, 332, 257, 331,
	360, 397, 396, 266, 423, 429, 430, 0, 0, 435,
	0, 0, 0, 444, 449, 450, 451, 453, 454, 455,
	456, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 428, 320, 321, 322, 300, 250, 251,
	473, 669, 351, 0, 0, 0, 0, 683, 664, 666,
	667, 670, 674, 675, 676, 677, 678, 680, 682, 686,
	472, 0, 0, 0, 0, 0, 469, 357, 0, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 409, 421, 438, 441, 0, 0, 0,
	0, 255, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 685, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 622, 0, 0, 341, 342, 343, 344, 672, 0,
	273, 439, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 299, 305, 452, 307, 272, 356, 301,
	418, 314, 0, 445, 0, 446, 0, 0, 0, 0,
	348, 310, 311, 382, 315, 326, 370, 417, 354, 375,
	270, 408, 383, 330, 0, 0, 694, 668, 693, 695,
	696, 692, 697, 698, 679, 578, 0, 626, 690, 689,
	691, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 0, 248, 278, 279, 284, 470,
	467, 399, 471, 0, 252, 0, 324, 0, 365, 298,
	0, 0, 657, 633, 634, 635, 576, 636, 630, 631,
	632, 658, 624, 654, 655, 603, 627, 637, 653, 638,
	656, 659, 660, 699, 700, 644, 628, 220, 701, 641,
	661, 652, 651, 639, 625, 662, 663, 610, 605, 642,
	643, 629, 645, 646, 647, 577, 606, 607, 608, 609,
	0, 0, 0, 424, 425, 426, 448, 410, 620, 468,
	0, 1897, 0, 0, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 0, 0, 648, 0, 474, 462, 0,
	574, 0, 0, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	458, 0, 459, 0, 0, 611, 0, 463, 384, 337,
	0, 0, 0, 0, 673, 681, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 567, 0, 0, 601,
	650, 649, 588, 598, 0, 0, 268, 197, 460, 0,
	461, 589, 0, 597, 590, 594, 593, 591, 592, 0,
	665, 0, 0, 0, 0, 0, 0, 558, 571, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 568, 569, 0, 0, 0, 0,
	621, 0, 570, 0, 0, 616, 595, 599, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 596, 619,
	623, 287, 687, 617, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 688,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 416, 0, 0, 671, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 618, 0,
	374, 355, 684, 559, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 669, 351, 0, 0, 0, 0,
	683, 664, 666, 667, 670, 674, 675, 676, 677, 678,
	680, 682, 686, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 685, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 622, 0, 0, 341, 342, 343,
	344, 672, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 694,
	668, 693, 695, 696, 692, 697, 698, 679, 578, 0,
	626, 690, 689, 691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 657, 633, 634, 635, 576,
	636, 630, 631, 632, 658, 624, 654, 655, 603, 627,
	637, 653, 638, 656, 659, 660, 699, 700, 644, 628,
	220, 701, 641, 661, 652, 651, 639, 625, 662, 663,
	610, 605, 642, 643, 629, 645, 646, 647, 577, 606,
	607, 608, 609, 0, 0, 0, 424, 425, 426, 448,
	410, 620, 468, 0, 0, 0, 0, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 0, 0, 648, 0,
	474, 462, 0, 574, 0, 0, 0, 293, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 458, 0, 459, 0, 0, 611, 0,
	463, 384, 337, 0, 0, 0, 0, 673, 681, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 567,
	0, 0, 601, 650, 649, 588, 598, 0, 0, 268,
	197, 460, 0, 461, 589, 0, 597, 590, 594, 593,
	591, 592, 0, 665, 0, 0, 0, 0, 0, 0,
	558, 571, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 568, 569, 0,
	0, 0, 0, 621, 0, 570, 0, 0, 616, 595,
	599, 0, 0, 0, 0, 258, 389, 406, 269, 380,
	419, 274, 387, 264, 352, 376, 0, 0, 260, 404,
	386, 334, 312, 313, 259, 0, 371, 291, 304, 288,
	350, 596, 619, 623, 287, 687, 617, 414, 262, 0,
	413, 349, 400, 405, 335, 329, 261, 402, 333, 328,
	316, 295, 688, 317, 318, 308, 361, 327, 362, 309,
	339, 338, 340, 0, 0, 0, 0, 0, 442, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 416, 0, 0,
	671, 0, 0, 0, 388, 0, 0, 319, 0, 0,
	0, 618, 0, 374, 355, 684, 559, 0, 372, 325,
	401, 363, 407, 390, 415, 368, 364, 253, 391, 290,
	336, 265, 267, 285, 292, 294, 296, 297, 345, 346,
	358, 379, 392, 393, 394, 289, 275, 373, 276, 306,
	277, 254, 281, 280, 282, 381, 283, 256, 359, 398,
	0, 302, 369, 332, 257, 331, 360, 397, 396, 266,
	423, 429, 430, 0, 0, 435, 0, 0, 0, 444,
	449, 450, 451, 453, 454, 455, 456, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 428,
	320, 321, 322, 300, 250, 251, 473, 669, 351, 0,
	0, 0, 0, 683, 664, 666, 667, 670, 674, 675,
	676, 677, 678, 680, 682, 686, 472, 0, 0, 0,
	0, 0, 469, 357, 0, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 409,
	421, 438, 441, 0, 0, 0, 0, 255, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 685, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 622, 0, 0,
	341, 342, 343, 344, 672, 0, 273, 439, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 299,
	305, 452, 307, 272, 356, 301, 418, 314, 0, 445,
	0, 446, 0, 0, 0, 0, 348, 310, 311, 382,
	315, 326, 370, 417, 354, 375, 270, 408, 383, 330,
	0, 0, 694, 668, 693, 695, 696, 692, 697, 698,
	679, 578, 0, 626, 690, 689, 691, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	0, 248, 278, 279, 284, 470, 467, 399, 471, 0,
	252, 0, 324, 0, 365, 298, 0, 0, 657, 633,
	634, 635, 576, 636, 630, 631, 632, 658, 624, 654,
	655, 603, 627, 637, 653, 638, 656, 659, 660, 699,
	700, 644, 628, 220, 701, 641, 661, 652, 651, 639,
	625, 662, 663, 610, 605, 642, 643, 629, 645, 646,
	647, 577, 606, 607, 608, 609, 0, 0, 0, 424,
	425, 426, 448, 410, 620, 468, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 0,
	0, 648, 0, 474, 462, 0, 574, 0, 0, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 458, 0, 459, 0,
	0, 611, 0, 463, 384, 337, 0, 0, 0, 0,
	673, 681, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 567, 0, 0, 601, 650, 649, 588, 598,
	0, 0, 268, 197, 460, 0, 461, 2314, 0, 597,
	2315, 594, 593, 591, 592, 0, 665, 0, 0, 0,
	0, 0, 0, 558, 571, 0, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 569, 0, 0, 0, 0, 621, 0, 570, 0,
	0, 616, 595, 599, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 596, 619, 623, 287, 687, 617,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 688, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	416, 0, 0, 671, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 618, 0, 374, 355, 684, 559,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	669, 351, 0, 0, 0, 0, 683, 664, 666, 667,
	670, 674, 675, 676, 677, 678, 680, 682, 686, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	685, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	622, 0, 0, 341, 342, 343, 344, 672, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 694, 668, 693, 695, 696,
	692, 697, 698, 679, 578, 0, 626, 690, 689, 691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 657, 633, 634, 635, 576, 636, 630, 631, 632,
	658, 624, 654, 655, 603, 627, 637, 653, 638, 656,
	659, 660, 699, 700, 644, 628, 220, 701, 641, 661,
	652, 651, 639, 625, 662, 663, 610, 605, 642, 643,
	629, 645, 646, 647, 577, 606, 607, 608, 609, 0,
	0, 0, 424, 425, 426, 448, 410, 620, 468, 0,
	0, 0, 0, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 0, 0, 648, 1426, 474, 462, 0, 574,
	0, 0, 0, 293, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 458,
	0, 459, 0, 0, 611, 0, 463, 384, 337, 0,
	0, 0, 0, 673, 681, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 567, 0, 0, 601, 650,
	649, 588, 598, 0, 0, 268, 197, 460, 0, 461,
	589, 0, 597, 590, 594, 593, 591, 592, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 571, 0, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 568, 569, 0, 0, 0, 0, 621,
	0, 570, 0, 0, 616, 595, 599, 0, 0, 0,
	0, 258, 389, 406, 269, 380, 419, 274, 387, 264,
	352, 376, 0, 0, 260, 404, 386, 334, 312, 313,
	259, 0, 371, 291, 304, 288, 350, 596, 619, 623,
	287, 687, 617, 414, 262, 0, 413, 349, 400, 405,
	335, 329, 261, 402, 333, 328, 316, 295, 688, 317,
	318, 308, 361, 327, 362, 309, 339, 338, 340, 0,
	0, 0, 0, 0, 442, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 416, 0, 0, 671, 0, 0, 0,
	388, 0, 0, 319, 0, 0, 0, 618, 0, 374,
	355, 684, 0, 0, 372, 325, 401, 363, 407, 390,
	415, 368, 364, 253, 391, 290, 336, 265, 267, 285,
	292, 294, 296, 297, 345, 346, 358, 379, 392, 393,
	394, 289, 275, 373, 276, 306, 277, 254, 281, 280,
	282, 381, 283, 256, 359, 398, 0, 302, 369, 332,
	257, 331, 360, 397, 396, 266, 423, 1427, 1428, 0,
	0, 435, 0, 0, 0, 444, 449, 450, 451, 453,
	454, 455, 456, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 428, 320, 321, 322, 300,
	250, 251, 473, 669, 351, 0, 0, 0, 0, 683,
	664, 666, 667, 670, 674, 675, 676, 677, 678, 680,
	682, 686, 472, 0, 0, 0, 0, 0, 469, 357,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 409, 421, 438, 441, 0,
	0, 0, 0, 255, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 685, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 622, 0, 0, 341, 342, 343, 344,
	672, 0, 273, 439, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 299, 305, 452, 307, 272,
	356, 301, 418, 314, 0, 445, 0, 446, 0, 0,
	0, 0, 348, 310, 311, 382, 315, 326, 370, 417,
	354, 375, 270, 408, 383, 330, 0, 0, 694, 668,
	693, 695, 696, 692, 697, 698, 679, 578, 0, 626,
	690, 689, 691, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 0, 248, 278, 279,
	284, 470, 467, 399, 471, 0, 252, 0, 324, 0,
	365, 298, 0, 0, 657, 633, 634, 635, 576, 636,
	630, 631, 632, 658, 624, 654, 655, 603, 627, 637,
	653, 638, 656, 659, 660, 699, 700, 644, 628, 220,
	701, 641, 661, 652, 651, 639, 625, 662, 663, 610,
	605, 642, 643, 629, 645, 646, 647, 577, 606, 607,
	608, 609, 0, 0, 0, 424, 425, 426, 448, 410,
	620, 468, 0, 0, 0, 0, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 0, 0, 648, 0, 474,
	462, 0, 574, 0, 0, 0, 293, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 458, 0, 459, 0, 0, 611, 0, 463,
	384, 337, 0, 0, 0, 0, 673, 681, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 601, 650, 649, 588, 598, 0, 0, 268, 197,
	460, 0, 461, 589, 0, 597, 590, 594, 593, 591,
	592, 0, 665, 0, 0, 0, 0, 0, 0, 558,
	571, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 568, 569, 0, 0,
	0, 0, 621, 0, 570, 0, 0, 616, 595, 599,
	0, 0, 0, 0, 258, 389, 406, 269, 380, 419,
	274, 387, 264, 352, 376, 0, 0, 260, 404, 386,
	334, 312, 313, 259, 0, 371, 291, 304, 288, 350,
	596, 619, 623, 287, 687, 617, 414, 262, 0, 413,
	349, 400, 405, 335, 329, 261, 402, 333, 328, 316,
	295, 688, 317, 318, 308, 361, 327, 362, 309, 339,
	338, 340, 0, 0, 0, 0, 0, 442, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 416, 0, 0, 671,
	0, 0, 0, 388, 0, 0, 319, 0, 0, 0,
	618, 0, 374, 355, 684, 559, 0, 372, 325, 401,
	363, 407, 390, 415, 368, 364, 253, 391, 290, 336,
	265, 267, 285, 292, 294, 296, 297, 345, 346, 358,
	379, 392, 393, 394, 289, 275, 373, 276, 306, 277,
	254, 281, 280, 282, 381, 283, 256, 359, 398, 0,
	302, 369, 332, 257, 331, 360, 397, 396, 266, 423,
	429, 430, 0, 0, 435, 0, 0, 0, 444, 449,
	450, 451, 453, 454, 455, 456, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 428, 320,
	321, 322, 300, 250, 251, 473, 669, 351, 0, 0,
	0, 0, 683, 664, 666, 667, 670, 674, 675, 676,
	677, 678, 680, 682, 686, 472, 0, 0, 0, 0,
	0, 469, 357, 0, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 409, 421,
	438, 441, 0, 0, 0, 0, 255, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 685, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 622, 0, 0, 341,
	342, 343, 344, 672, 0, 273, 439, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 299, 305,
	452, 307, 272, 356, 301, 418, 314, 0, 445, 0,
	446, 0, 0, 0, 0, 348, 310, 311, 382, 315,
	326, 370, 417, 354, 375, 270, 408, 383, 330, 0,
	0, 694, 668, 693, 695, 696, 692, 697, 698, 679,
	578, 0, 626, 690, 689, 691, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 0,
	248, 278, 279, 284, 470, 467, 399, 471, 0, 252,
	0, 324, 0, 365, 298, 0, 0, 657, 633, 634,
	635, 576, 636, 630, 631, 632, 658, 624, 654, 655,
	603, 627, 637, 653, 638, 656, 659, 660, 699, 700,
	644, 628, 220, 701, 641, 661, 652, 651, 639, 625,
	662, 663, 610, 605, 642, 643, 629, 645, 646, 647,
	577, 606, 607, 608, 609, 0, 0, 0, 424, 425,
	426, 448, 410, 620, 468, 0, 0, 0, 0, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 0, 0,
	648, 0, 474, 462, 0, 574, 0, 0, 0, 293,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 458, 0, 459, 0, 0,
	611, 0, 463, 384, 337, 0, 0, 0, 0, 673,
	681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 567, 0, 0, 601, 650, 649, 588, 598, 0,
	0, 268, 197, 460, 0, 461, 589, 0, 597, 590,
	594, 593, 591, 592, 0, 665, 0, 0, 0, 0,
	0, 0, 0, 571, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 568,
	569, 0, 0, 0, 0, 621, 0, 570, 0, 0,
	616, 595, 599, 0, 0, 0, 0, 258, 389, 406,
	269, 380, 419, 274, 387, 264, 352, 376, 0, 0,
	260, 404, 386, 334, 312, 313, 259, 0, 371, 291,
	304, 288, 350, 596, 619, 623, 287, 687, 617, 414,
	262, 0, 413, 349, 400, 405, 335, 329, 261, 402,
	333, 328, 316, 295, 688, 317, 318, 308, 361, 327,
	362, 309, 339, 338, 340, 0, 0, 0, 0, 0,
	442, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 416,
	0, 0, 671, 0, 0, 0, 388, 0, 0, 319,
	0, 0, 0, 618, 0, 374, 355, 684, 0, 0,
	372, 325, 401, 363, 407, 390, 415, 368, 364, 253,
	391, 290, 336, 265, 267, 285, 292, 294, 296, 297,
	345, 346, 358, 379, 392, 393, 394, 289, 275, 373,
	276, 306, 277, 254, 281, 280, 282, 381, 283, 256,
	359, 398, 0, 302, 369, 332, 257, 331, 360, 397,
	396, 266, 423, 429, 430, 0, 0, 435, 0, 0,
	0, 444, 449, 450, 451, 453, 454, 455, 456, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 428, 320, 321, 322, 300, 250, 251, 473, 669,
	351, 0, 0, 0, 0, 683, 664, 666, 667, 670,
	674, 675, 676, 677, 678, 680, 682, 686, 472, 0,
	0, 0, 0, 0, 469, 357, 0, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 409, 421, 438, 441, 0, 0, 0, 0, 255,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 685,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 622,
	0, 0, 341, 342, 343, 344, 672, 0, 273, 439,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 299, 305, 452, 307, 272, 356, 301, 418, 314,
	0, 445, 0, 446, 0, 0, 0, 0, 348, 310,
	311, 382, 315, 326, 370, 417, 354, 375, 270, 408,
	383, 330, 0, 0, 694, 668, 693, 695, 696, 692,
	697, 698, 679, 578, 0, 626, 690, 689, 691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 248, 278, 279, 284, 470, 467, 399,
	471, 0, 252, 0, 324, 0, 365, 298, 0, 0,
	657, 633, 634, 635, 576, 636, 630, 631, 632, 658,
	624, 654, 655, 603, 627, 637, 653, 638, 656, 659,
	660, 699, 700, 644, 628, 220, 701, 641, 661, 652,
	651, 639, 625, 662, 663, 610, 605, 642, 643, 629,
	645, 646, 647, 577, 606, 607, 608, 609, 0, 0,
	0, 424, 425, 426, 448, 410, 0, 468, 0, 174,
	51, 163, 138, 0, 0, 0, 0, 0, 0, 353,
	0, 0, 0, 648, 0, 474, 462, 164, 0, 0,
	0, 0, 0, 0, 156, 0, 293, 0, 165, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 458, 0, 459, 0, 0, 115, 0, 463,
	384, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 0, 0, 0, 0, 0, 168, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 268, 197,
	460, 0, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 389, 406, 269, 380, 419,
	274, 387, 264, 352, 376, 0, 0, 260, 404, 386,
	334, 312, 313, 259, 0, 371, 291, 304, 288, 350,
	0, 403, 431, 287, 422, 0, 414, 262, 0, 413,
	349, 400, 405, 335, 329, 261, 402, 333, 328, 316,
	295, 447, 317, 318, 308, 361, 327, 362, 309, 339,
	338, 340, 0, 0, 0, 0, 0, 442, 443, 0,
	0, 0, 0, 0, 0, 137, 162, 172, 0, 101,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 189,
	0, 0, 0, 388, 0, 0, 319, 161, 155, 154,
	432, 0, 374, 355, 57, 0, 0, 372, 325, 401,
	363, 407, 390, 415, 368, 364, 253, 391, 290, 336,
	265, 267, 285, 292, 294, 296, 297, 345, 346, 358,
	379, 392, 393, 394, 289, 275, 373, 276, 306, 277,
	254, 281, 280, 282, 381, 283, 256, 359, 398, 0,
	302, 369, 332, 257, 331, 360, 397, 396, 266, 423,
	429, 430, 0, 0, 435, 157, 158, 159, 444, 449,
	450, 451, 453, 454, 455, 456, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 428, 320,
	321, 322, 300, 250, 251, 411, 286, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	427, 192, 0, 0, 457, 200, 0, 0, 0, 160,
	0, 201, 357, 0, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 409, 421,
	438, 441, 0, 0, 0, 0, 255, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 436, 0, 0, 341,
	342, 343, 344, 303, 0, 273, 439, 367, 113, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 0, 0, 0, 0, 0, 433, 434, 299, 305,
	452, 307, 272, 356, 301, 418, 314, 0, 445, 0,
	446, 0, 0, 0, 0, 348, 310, 311, 382, 315,
	326, 370, 417, 354, 375, 270, 408, 383, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 0,
	248, 278, 279, 284, 366, 263, 399, 377, 0, 252,
	0, 324, 139, 365, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 0, 353, 0, 424, 425,
	426, 448, 410, 0, 202, 39, 190, 193, 195, 194,
	0, 49, 0, 293, 0, 5, 323, 0, 0, 0,
	0, 118, 203, 462, 0, 0, 0, 0, 0, 458,
	0, 459, 0, 0, 0, 0, 463, 384, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1077, 0, 0, 196, 0,
	0, 588, 598, 0, 0, 268, 197, 460, 0, 461,
	589, 0, 597, 590, 594, 593, 591, 592, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 595, 0, 0, 0, 0,
	0, 258, 389, 406, 269, 380, 419, 274, 387, 264,
	352, 376, 0, 0, 260, 404, 386, 334, 312, 313,
	259, 0, 371, 291, 304, 288, 350, 596, 403, 431,
	287, 422, 0, 414, 262, 0, 413, 349, 400, 405,
	335, 329, 261, 402, 333, 328, 316, 295, 447, 317,
	318, 308, 361, 327, 362, 309, 339, 338, 340, 0,
	0, 0, 0, 0, 442, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	388, 0, 0, 319, 0, 0, 0, 432, 0, 374,
	355, 0, 0, 0, 372, 325, 401, 363, 407, 390,
	415, 368, 364, 253, 391, 290, 336, 265, 267, 285,
	292, 294, 296, 297, 345, 346, 358, 379, 392, 393,
	394, 289, 275, 373, 276, 306, 277, 254, 281, 280,
	282, 381, 283, 256, 359, 398, 0, 302, 369, 332,
	257, 331, 360, 397, 396, 266, 423, 429, 430, 0,
	0, 435, 0, 0, 0, 444, 449, 450, 451, 453,
	454, 455, 456, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 428, 320, 321, 322, 300,
	250, 251, 473, 286, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 427, 0, 0,
	0, 457, 472, 0, 0, 0, 0, 0, 469, 357,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 409, 421, 438, 441, 0,
	0, 0, 0, 255, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 412, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 436, 0, 0, 341, 342, 343, 344,
	303, 0, 273, 439, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 299, 305, 452, 307, 272,
	356, 301, 418, 314, 0, 445, 0, 446, 0, 0,
	0, 0, 348, 310, 311, 382, 315, 326, 370, 417,
	354, 375, 270, 408, 383, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 0, 248, 278, 279,
	284, 470, 467, 399, 471, 0, 252, 0, 324, 0,
	365, 298, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 219, 220,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 0, 249, 244, 245,
	246, 247, 0, 0, 0, 424, 425, 426, 448, 410,
	0, 468, 174, 51, 163, 138, 0, 0, 0, 0,
	0, 0, 353, 491, 0, 0, 0, 0, 0, 474,
	462, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 458, 0, 459, 0, 0,
	0, 0, 463, 384, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 496, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 268, 197, 460, 0, 461, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 389, 406,
	269, 380, 419, 274, 387, 264, 352, 376, 0, 0,
	260, 404, 386, 334, 312, 313, 259, 0, 371, 291,
	304, 288, 350, 0, 403, 431, 287, 422, 0, 414,
	262, 0, 413, 349, 400, 405, 335, 329, 261, 402,
	333, 328, 316, 295, 447, 317, 318, 308, 361, 327,
	362, 309, 339, 338, 340, 0, 0, 0, 0, 0,
	442, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 319,
	0, 0, 0, 432, 0, 374, 355, 0, 0, 0,
	372, 325, 401, 363, 407, 390, 415, 368, 364, 253,
	391, 290, 336, 265, 267, 285, 292, 294, 296, 297,
	345, 346, 358, 379, 392, 393, 394, 289, 275, 373,
	276, 306, 277, 254, 281, 280, 282, 381, 283, 256,
	359, 398, 0, 302, 369, 332, 257, 331, 360, 397,
	396, 266, 423, 429, 430, 0, 0, 435, 0, 0,
	0, 444, 449, 450, 451, 453, 454, 455, 456, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 428, 320, 321, 322, 300, 250, 251, 473, 286,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 427, 0, 0, 0, 457, 472, 0,
	0, 0, 0, 0, 469, 357, 0, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 409, 421, 438, 441, 0, 0, 0, 0, 255,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 412,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 436,
	0, 0, 341, 342, 343, 344, 492, 494, 273, 439,
	367, 504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 299, 305, 452, 307, 272, 356, 301, 418, 314,
	0, 445, 0, 446, 0, 0, 0, 0, 348, 310,
	311, 382, 315, 326, 370, 417, 354, 375, 270, 408,
	383, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 248, 278, 279, 284, 470, 467, 399,
	471, 0, 252, 0, 324, 139, 365, 298, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 0, 249, 244, 245, 246, 247, 353, 0,
	0, 424, 425, 426, 448, 410, 903, 468, 0, 0,
	0, 0, 0, 0, 0, 293, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 474, 462, 0, 0, 0,
	0, 458, 0, 459, 0, 0, 0, 0, 463, 384,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 268, 197, 460,
	0, 461, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 889, 0, 0, 0,
	0, 0, 0, 258, 389, 406, 269, 380, 419, 274,
	387, 264, 352, 376, 0, 0, 2168, 2170, 2171, 2172,
	2173, 2174, 2175, 0, 2180, 2176, 2177, 2178, 2179, 0,
	2163, 2164, 2165, 2166, 887, 2147, 2169, 0, 2148, 349,
	2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2160,
	2161, 2158, 2159, 2167, 361, 327, 362, 309, 339, 338,
	340, 914, 916, 918, 920, 923, 442, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 319, 0, 0, 0, 2162,
	0, 374, 355, 0, 0, 0, 372, 325, 401, 363,
	407, 390, 415, 368, 364, 253, 391, 290, 336, 265,
	267, 285, 292, 294, 296, 297, 345, 346, 358, 379,
	392, 393, 394, 289, 275, 373, 276, 306, 277, 254,
	281, 280, 282, 381, 283, 256, 359, 398, 0, 302,
	369, 332, 257, 331, 360, 397, 396, 266, 423, 429,
	430, 0, 0, 435, 0, 0, 0, 444, 449, 450,
	451, 453, 454, 455, 456, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 428, 320, 321,
	322, 300, 250, 251, 473, 286, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 427,
	0, 0, 0, 457, 472, 0, 0, 0, 0, 0,
	469, 357, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 409, 421, 438,
	441, 0, 0, 0, 0, 255, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 436, 0, 0, 341, 342,
	343, 344, 303, 0, 273, 439, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 299, 305, 452,
	307, 272, 356, 301, 418, 314, 0, 445, 0, 446,
	0, 0, 0, 0, 348, 310, 311, 382, 315, 326,
	370, 417, 354, 375, 270, 408, 383, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 0, 248,
	278, 279, 284, 470, 467, 399, 471, 0, 252, 913,
	324, 0, 365, 298, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 0, 249,
	244, 245, 246, 247, 353, 0, 0, 424, 425, 426,
	448, 410, 0, 468, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 474, 462, 0, 0, 0, 0, 458, 0, 459,
	0, 0, 0, 0, 463, 384, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 268, 197, 460, 0, 461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 2022, 2025,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	389, 406, 269, 380, 419, 274, 387, 264, 352, 376,
	0, 0, 260, 404, 386, 334, 312, 313, 259, 0,
	371, 291, 304, 288, 350, 0, 403, 431, 287, 422,
	0, 414, 262, 0, 413, 349, 400, 405, 335, 329,
	261, 402, 333, 328, 316, 295, 447, 317, 318, 308,
	361, 327, 362, 309, 339, 338, 340, 0, 0, 0,
	0, 0, 442, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2026, 416, 0, 0, 0, 2021, 0, 2020, 388, 2018,
	2023, 319, 0, 0, 0, 432, 0, 374, 355, 0,
	0, 0, 372, 325, 401, 363, 407, 390, 415, 368,
	364, 253, 391, 290, 336, 265, 267, 285, 292, 294,
	296, 297, 345, 346, 358, 379, 392, 393, 394, 289,
	275, 373, 276, 306, 277, 254, 281, 280, 282, 381,
	283, 256, 359, 398, 2024, 302, 369, 332, 257, 331,
	360, 397, 396, 266, 423, 429, 430, 0, 0, 435,
	0, 0, 0, 444, 449, 450, 451, 453, 454, 455,
	456, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 428, 320, 321, 322, 300, 250, 251,
	473, 286, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 427, 0, 0, 0, 457,
	472, 0, 0, 0, 0, 0, 469, 357, 0, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 409, 421, 438, 441, 0, 0, 0,
	0, 255, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 436, 0, 0, 341, 342, 343, 344, 303, 0,
	273, 439, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 299, 305, 452, 307, 272, 356, 301,
	418, 314, 0, 445, 0, 446, 0, 0, 0, 0,
	348, 310, 311, 382, 315, 326, 370, 417, 354, 375,
	270, 408, 383, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 0, 248, 278, 279, 284, 470,
	467, 399, 471, 0, 252, 0, 324, 0, 365, 298,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 219, 220, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 0, 249, 244, 245, 246, 247,
	353, 0, 0, 424, 425, 426, 448, 410, 0, 468,
	0, 0, 1777, 0, 0, 0, 0, 293, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 474, 462, 0,
	0, 0, 0, 458, 0, 459, 0, 0, 0, 0,
	463, 384, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 1778, 0, 0, 0, 268,
	197, 460, 0, 461, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 1010, 1011, 1012, 1009,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 389, 406, 269, 380,
	419, 274, 387, 264, 352, 376, 0, 0, 260, 404,
	386, 334, 312, 313, 259, 0, 371, 291, 304, 288,
	350, 0, 403, 431, 287, 422, 0, 414, 262, 0,
	413, 349, 400, 405, 335, 329, 261, 402, 333, 328,
	316, 295, 447, 317, 318, 308, 361, 327, 362, 309,
	339, 338, 340, 0, 0, 0, 0, 0, 442, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 319, 0, 0,
	0, 432, 0, 374, 355, 0, 0, 0, 372, 325,
	401, 363, 407, 390, 415, 368, 364, 253, 391, 290,
	336, 265, 267, 285, 292, 294, 296, 297, 345, 346,
	358, 379, 392, 393, 394, 289, 275, 373, 276, 306,
	277, 254, 281, 280, 282, 381, 283, 256, 359, 398,
	0, 302, 369, 332, 257, 331, 360, 397, 396, 266,
	423, 429, 430, 0, 0, 435, 0, 0, 0, 444,
	449, 450, 451, 453, 454, 455, 456, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 428,
	320, 321, 322, 300, 250, 251, 473, 286, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 427, 0, 0, 0, 457, 472, 0, 0, 0,
	0, 0, 469, 357, 0, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 409,
	421, 438, 441, 0, 0, 0, 0, 255, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 436, 0, 0,
	341, 342, 343, 344, 303, 0, 273, 439, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 299,
	305, 452, 307, 272, 356, 301, 418, 314, 0, 445,
	0, 446, 0, 0, 0, 0, 348, 310, 311, 382,
	315, 326, 370, 417, 354, 375, 270, 408, 383, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	0, 248, 278, 279, 284, 470, 467, 399, 471, 0,
	252, 0, 324, 0, 365, 298, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 219, 220, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	0, 249, 244, 245, 246, 247, 353, 0, 0, 424,
	425, 426, 448, 410, 0, 468, 0, 0, 0, 0,
	0, 0, 0, 293, 820, 0, 323, 0, 0, 0,
	0, 0, 0, 474, 462, 0, 0, 0, 0, 458,
	0, 459, 0, 0, 0, 0, 463, 384, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 827,
	828, 0, 0, 0, 0, 268, 197, 460, 0, 461,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 389, 815, 269, 380, 419, 274, 387, 264,
	352, 376, 0, 0, 260, 404, 386, 334, 312, 313,
	259, 0, 371, 291, 304, 288, 350, 0, 403, 431,
	287, 422, 805, 414, 262, 804, 413, 349, 400, 405,
	335, 329, 261, 402, 333, 328, 316, 295, 447, 317,
	318, 308, 361, 327, 362, 309, 339, 338, 340, 0,
	0, 0, 0, 0, 442, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	388, 0, 0, 319, 0, 0, 0, 432, 0, 374,
	355, 0, 0, 0, 372, 325, 401, 363, 407, 390,
	415, 818, 364, 253, 391, 290, 336, 265, 267, 285,
	292, 294, 296, 297, 345, 346, 358, 379, 392, 393,
	394, 289, 275, 373, 276, 306, 277, 254, 281, 280,
	282, 381, 283, 256, 359, 398, 0, 302, 369, 332,
	257, 331, 360, 397, 396, 266, 423, 429, 430, 0,
	0, 435, 0, 0, 0, 444, 449, 450, 451, 453,
	454, 455, 456, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 428, 320, 321, 322, 300,
	250, 251, 473, 286, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 427, 0, 0,
	0, 457, 472, 0, 0, 0, 0, 0, 469, 357,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 409, 421, 438, 441, 0,
	0, 0, 0, 255, 440, 0, 0, 0, 0, 0,
	0, 819, 0, 412, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 822, 0, 0, 341, 342, 343, 344,
	303, 0, 273, 439, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 299, 305, 452, 307, 272,
	356, 301, 418, 314, 0, 445, 0, 446, 0, 0,
	0, 0, 829, 816, 825, 817, 315, 326, 370, 417,
	354, 375, 270, 408, 383, 826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 0, 248, 278, 279,
	284, 470, 467, 399, 471, 0, 252, 0, 324, 0,
	365, 298, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 219, 220,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 0, 249, 244, 245,
	246, 247, 353, 0, 0, 424, 425, 426, 448, 410,
	0, 468, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 474,
	462, 0, 0, 0, 0, 458, 0, 459, 0, 0,
	0, 0, 463, 384, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 268, 197, 460, 0, 461, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 2042, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 389, 406,
	269, 380, 419, 274, 387, 264, 352, 376, 0, 0,
	260, 404, 386, 334, 312, 313, 259, 0, 371, 291,
	304, 288, 350, 0, 403, 431, 287, 422, 0, 414,
	262, 0, 413, 349, 400, 405, 335, 329, 261, 402,
	333, 328, 316, 295, 447, 317, 318, 308, 361, 327,
	362, 309, 339, 338, 340, 0, 0, 0, 0, 0,
	442, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2041, 416,
	0, 0, 0, 2046, 2044, 0, 388, 0, 2045, 319,
	0, 0, 0, 432, 0, 374, 355, 0, 0, 0,
	372, 325, 401, 363, 407, 390, 415, 368, 364, 253,
	391, 290, 336, 265, 267, 285, 292, 294, 296, 297,
	345, 346, 358, 379, 392, 393, 394, 289, 275, 373,
	276, 306, 277, 254, 281, 280, 282, 381, 283, 256,
	359, 398, 0, 302, 369, 332, 257, 331, 360, 397,
	396, 266, 423, 429, 430, 0, 0, 435, 0, 0,
	0, 444, 449, 450, 451, 453, 454, 455, 456, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 428, 320, 321, 322, 300, 250, 251, 473, 286,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 427, 0, 0, 0, 457, 472, 0,
	0, 0, 0, 0, 469, 357, 0, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 409, 421, 438, 441, 0, 0, 0, 0, 255,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 412,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 436,
	0, 0, 341, 342, 343, 344, 303, 0, 273, 439,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 299, 305, 452, 307, 272, 356, 301, 418, 314,
	0, 445, 0, 446, 0, 0, 0, 0, 348, 310,
	311, 382, 315, 326, 370, 417, 354, 375, 270, 408,
	383, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 248, 278, 279, 284, 470, 467, 399,
	471, 0, 252, 0, 324, 0, 365, 298, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	174, 0, 0, 249, 244, 245, 246, 247, 0, 0,
	353, 424, 425, 426, 448, 410, 0, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 0,
	323, 0, 0, 0, 0, 474, 462, 0, 0, 0,
	0, 0, 0, 458, 0, 459, 0, 0, 115, 0,
	463, 384, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	1821, 0, 196, 0, 0, 0, 0, 0, 0, 268,
	197, 460, 0, 461, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 389, 406, 269, 380,
	419, 274, 387, 264, 352, 376, 0, 0, 260, 404,
	386, 334, 312, 313, 259, 0, 371, 291, 304, 288,
	350, 0, 403, 431, 287, 422, 0, 414, 262, 0,
	413, 349, 400, 405, 335, 329, 261, 402, 333, 328,
	316, 295, 447, 317, 318, 308, 361, 327, 362, 309,
	339, 338, 340, 0, 0, 0, 0, 0, 442, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 319, 0, 0,
	0, 432, 0, 374, 355, 0, 0, 0, 372, 325,
	401, 363, 407, 390, 415, 368, 364, 253, 391, 290,
	336, 265, 267, 285, 292, 294, 296, 297, 345, 346,
	358, 379, 392, 393, 394, 289, 275, 373, 276, 306,
	277, 254, 281, 280, 282, 381, 283, 256, 359, 398,
	0, 302, 369, 332, 257, 331, 360, 397, 396, 266,
	423, 429, 430, 0, 0, 435, 0, 0, 0, 444,
	449, 450, 451, 453, 454, 455, 456, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 428,
	320, 321, 322, 300, 250, 251, 473, 286, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 427, 0, 0, 0, 457, 472, 0, 0, 0,
	0, 0, 469, 357, 0, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 409,
	421, 438, 441, 0, 0, 0, 0, 255, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 436, 0, 0,
	341, 342, 343, 344, 303, 0, 273, 439, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 299,
	305, 452, 307, 272, 356, 301, 418, 314, 0, 445,
	0, 446, 0, 0, 0, 0, 348, 310, 311, 382,
	315, 326, 370, 417, 354, 375, 270, 408, 383, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	0, 248, 278, 279, 284, 470, 467, 399, 471, 0,
	252, 0, 324, 139, 365, 298, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 219, 220, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 174, 0,
	0, 249, 244, 245, 246, 247, 0, 0, 353, 424,
	425, 426, 448, 410, 0, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 0, 0, 323, 0,
	0, 0, 0, 474, 462, 0, 0, 0, 0, 0,
	0, 458, 0, 459, 0, 0, 115, 0, 463, 384,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 1812, 0,
	196, 0, 0, 0, 0, 0, 0, 268, 197, 460,
	0, 461, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 389, 406, 269, 380, 419, 274,
	387, 264, 352, 376, 0, 0, 260, 404, 386, 334,
	312, 313, 259, 0, 371, 291, 304, 288, 350, 0,
	403, 431, 287, 422, 0, 414, 262, 0, 413, 349,
	400, 405, 335, 329, 261, 402, 333, 328, 316, 295,
	447, 317, 318, 308, 361, 327, 362, 309, 339, 338,
	340, 0, 0, 0, 0, 0, 442, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 319, 0, 0, 0, 432,
	0, 374, 355, 0, 0, 0, 372, 325, 401, 363,
	407, 390, 415, 368, 364, 253, 391, 290, 336, 265,
	267, 285, 292, 294, 296, 297, 345, 346, 358, 379,
	392, 393, 394, 289, 275, 373, 276, 306, 277, 254,
	281, 280, 282, 381, 283, 256, 359, 398, 0, 302,
	369, 332, 257, 331, 360, 397, 396, 266, 423, 429,
	430, 0, 0, 435, 0, 0, 0, 444, 449, 450,
	451, 453, 454, 455, 456, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 428, 320, 321,
	322, 300, 250, 251, 473, 286, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 427,
	0, 0, 0, 457, 472, 0, 0, 0, 0, 0,
	469, 357, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 409, 421, 438,
	441, 0, 0, 0, 0, 255, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 436, 0, 0, 341, 342,
	343, 344, 303, 0, 273, 439, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 299, 305, 452,
	307, 272, 356, 301, 418, 314, 0, 445, 0, 446,
	0, 0, 0, 0, 348, 310, 311, 382, 315, 326,
	370, 417, 354, 375, 270, 408, 383, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 0, 248,
	278, 279, 284, 470, 467, 399, 471, 0, 252, 0,
	324, 139, 365, 298, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 174, 0, 0, 249,
	244, 245, 246, 247, 0, 0, 353, 424, 425, 426,
	448, 410, 0, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 0, 0, 323, 0, 0, 0,
	0, 474, 462, 0, 0, 0, 0, 0, 0, 458,
	0, 459, 0, 0, 115, 0, 463, 384, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1711, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 268, 197, 460, 0, 461,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 389, 406, 269, 380, 419, 274, 387, 264,
	352, 376, 0, 0, 260, 404, 386, 334, 312, 313,
	259, 0, 371, 291, 304, 288, 350, 0, 403, 431,
	287, 422, 0, 414, 262, 0, 413, 349, 400, 405,
	335, 329, 261, 402, 333, 328, 316, 295, 447, 317,
	318, 308, 361, 327, 362, 309, 339, 338, 340, 0,
	0, 0, 0, 0, 442, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	388, 0, 0, 319, 0, 0, 0, 432, 0, 374,
	355, 0, 0, 0, 372, 325, 401, 363, 407, 390,
	415, 368, 364, 253, 391, 290, 336, 265, 267, 285,
	292, 294, 296, 297, 345, 346, 358, 379, 392, 393,
	394, 289, 275, 373, 276, 306, 277, 254, 281, 280,
	282, 381, 283, 256, 359, 398, 0, 302, 369, 332,
	257, 331, 360, 397, 396, 266, 423, 429, 430, 0,
	0, 435, 0, 0, 0, 444, 449, 450, 451, 453,
	454, 455, 456, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 428, 320, 321, 322, 300,
	250, 251, 473, 286, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 427, 0, 0,
	0, 457, 472, 0, 0, 0, 0, 0, 469, 357,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 409, 421, 438, 441, 0,
	0, 0, 0, 255, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 412, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 436, 0, 0, 341, 342, 343, 344,
	303, 0, 273, 439, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 299, 305, 452, 307, 272,
	356, 301, 418, 314, 0, 445, 0, 446, 0, 0,
	0, 0, 348, 310, 311, 382, 315, 326, 370, 417,
	354, 375, 270, 408, 383, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 0, 248, 278, 279,
	284, 470, 467, 399, 471, 0, 252, 0, 324, 139,
	365, 298, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 219, 220,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 0, 249, 244, 245,
	246, 247, 353, 0, 0, 424, 425, 426, 448, 410,
	0, 468, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 474,
	462, 0, 0, 0, 0, 458, 0, 459, 0, 0,
	0, 0, 463, 384, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 827, 828, 0, 0, 0,
	0, 268, 197, 460, 0, 461, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 389, 406,
	269, 380, 419, 274, 387, 264, 352, 376, 0, 0,
	260, 404, 386, 334, 312, 313, 259, 0, 371, 291,
	304, 288, 350, 0, 403, 431, 287, 422, 805, 414,
	262, 804, 413, 349, 400, 405, 335, 329, 261, 402,
	333, 328, 316, 295, 447, 317, 318, 308, 361, 327,
	362, 309, 339, 338, 340, 0, 0, 0, 0, 0,
	442, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 319,
	0, 0, 0, 432, 0, 374, 355, 0, 0, 0,
	372, 325, 401, 363, 407, 390, 415, 368, 364, 253,
	391, 290, 336, 265, 267, 285, 292, 294, 296, 297,
	345, 346, 358, 379, 392, 393, 394, 289, 275, 373,
	276, 306, 277, 254, 281, 280, 282, 381, 283, 256,
	359, 398, 0, 302, 369, 332, 257, 331, 360, 397,
	396, 266, 423, 429, 430, 0, 0, 435, 0, 0,
	0, 444, 449, 450, 451, 453, 454, 455, 456, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 428, 320, 321, 322, 300, 250, 251, 473, 286,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 427, 0, 0, 0, 457, 472, 0,
	0, 0, 0, 0, 469, 357, 0, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 409, 421, 438, 441, 0, 0, 0, 0, 255,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 412,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 436,
	0, 0, 341, 342, 343, 344, 303, 0, 273, 439,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 299, 305, 452, 307, 272, 356, 301, 418, 314,
	0, 445, 0, 446, 0, 0, 0, 0, 829, 1730,
	825, 1731, 315, 326, 370, 417, 354, 375, 270, 408,
	383, 826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 248, 278, 279, 284, 470, 467, 399,
	471, 0, 252, 0, 324, 0, 365, 298, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 0, 249, 244, 245, 246, 247, 0, 353,
	0, 424, 425, 426, 448, 410, 0, 468, 2495, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 323,
	0, 0, 0, 0, 0, 474, 462, 0, 0, 0,
	0, 0, 458, 0, 459, 0, 0, 0, 0, 463,
	384, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 268, 197,
	460, 0, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 389, 406, 269, 380, 419,
	274, 387, 264, 352, 376, 0, 0, 260, 404, 386,
	334, 312, 313, 259, 0, 371, 291, 304, 288, 350,
	0, 403, 431, 287, 422, 0, 414, 262, 0, 413,
	349, 400, 405, 335, 329, 261, 402, 333, 328, 316,
	295, 447, 317, 318, 308, 361, 327, 362, 309, 339,
	338, 340, 0, 0, 0, 0, 0, 442, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 2498, 0, 0,
	2497, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 319, 0, 0, 0,
	432, 0, 374, 355, 0, 0, 0, 372, 325, 401,
	363, 407, 390, 415, 368, 364, 253, 391, 290, 336,
	265, 267, 285, 292, 294, 296, 297, 345, 346, 358,
	379, 392, 393, 394, 289, 275, 373, 276, 306, 277,
	254, 281, 280, 282, 381, 283, 256, 359, 398, 0,
	302, 369, 332, 257, 331, 360, 397, 396, 266, 423,
	429, 430, 0, 0, 435, 0, 0, 0, 444, 449,
	450, 451, 453, 454, 455, 456, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 428, 320,
	321, 322, 300, 250, 251, 473, 286, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	427, 0, 0, 0, 457, 472, 0, 0, 0, 0,
	0, 469, 357, 0, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 409, 421,
	438, 441, 0, 0, 0, 0, 255, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 436, 0, 0, 341,
	342, 343, 344, 303, 0, 273, 439, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 299, 305,
	452, 307, 272, 356, 301, 418, 314, 0, 445, 0,
	446, 0, 0, 0, 0, 348, 310, 311, 382, 315,
	326, 370, 417, 354, 375, 270, 408, 383, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 0,
	248, 278, 279, 284, 470, 467, 399, 471, 0, 252,
	0, 324, 0, 365, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 353, 0, 0, 424, 425,
	426, 448, 410, 0, 468, 0, 0, 0, 0, 0,
	0, 0, 293, 1264, 0, 323, 0, 0, 0, 0,
	0, 0, 474, 462, 0, 0, 0, 0, 458, 0,
	459, 0, 0, 0, 0, 463, 384, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	1262, 0, 0, 0, 268, 197, 460, 0, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1260, 0, 0, 0, 0, 0, 0,
	258, 389, 406, 269, 380, 419, 274, 387, 264, 352,
	376, 0, 0, 260, 404, 386, 334, 312, 313, 259,
	0, 371, 291, 304, 288, 350, 0, 403, 431, 287,
	422, 0, 414, 262, 0, 413, 349, 400, 405, 335,
	329, 261, 402, 333, 328, 316, 295, 447, 317, 318,
	308, 361, 327, 362, 309, 339, 338, 340, 0, 0,
	0, 0, 0, 442, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 319, 0, 0, 0, 432, 0, 374, 355,
	0, 0, 0, 372, 325, 401, 363, 407, 390, 415,
	368, 364, 253, 391, 290, 336, 265, 267, 285, 292,
	294, 296, 297, 345, 346, 358, 379, 392, 393, 394,
	289, 275, 373, 276, 306, 277, 254, 281, 280, 282,
	381, 283, 256, 359, 398, 0, 302, 369, 332, 257,
	331, 360, 397, 396, 266, 423, 429, 430, 0, 0,
	435, 0, 0, 0, 444, 449, 450, 451, 453, 454,
	455, 456, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 428, 320, 321, 322, 300, 250,
	251, 473, 286, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 427, 0, 0, 0,
	457, 472, 0, 0, 0, 0, 0, 469, 357, 0,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 409, 421, 438, 441, 0, 0,
	0, 0, 255, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 436, 0, 0, 341, 342, 343, 344, 303,
	0, 273, 439, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 299, 305, 452, 307, 272, 356,
	301, 418, 314, 0, 445, 0, 446, 0, 0, 0,
	0, 348, 310, 311, 382, 315, 326, 370, 417, 354,
	375, 270, 408, 383, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 248, 278, 279, 284,
	470, 467, 399, 471, 0, 252, 0, 324, 0, 365,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 0, 249, 244, 245, 246,
	247, 353, 0, 0, 424, 425, 426, 448, 410, 0,
	468, 0, 0, 0, 0, 0, 0, 0, 293, 1258,
	0, 323, 0, 0, 0, 0, 0, 0, 474, 462,
	0, 0, 0, 0, 458, 0, 459, 0, 0, 0,
	0, 463, 384, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 1262, 0, 0, 0,
	268, 197, 460, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1260,
	0, 0, 0, 0, 0, 0, 258, 389, 406, 269,
	380, 419, 274, 387, 264, 352, 376, 0, 0, 260,
	404, 386, 334, 312, 313, 259, 0, 371, 291, 304,
	288, 350, 0, 403, 431, 287, 422, 0, 414, 262,
	0, 413, 349, 400, 405, 335, 329, 261, 402, 333,
	328, 316, 295, 447, 317, 318, 308, 361, 327, 362,
	309, 339, 338, 340, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 319, 0,
	0, 0, 432, 0, 374, 355, 0, 0, 0, 372,
	325, 401, 363, 407, 390, 415, 368, 364, 253, 391,
	290, 336, 265, 267, 285, 292, 294, 296, 297, 345,
	346, 358, 379, 392, 393, 394, 289, 275, 373, 276,
	306, 277, 254, 281, 280, 282, 381, 283, 256, 359,
	398, 0, 302, 369, 332, 257, 331, 360, 397, 396,
	266, 423, 429, 430, 0, 0, 435, 0, 0, 0,
	444, 449, 450, 451, 453, 454, 455, 456, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	428, 320, 321, 322, 300, 250, 251, 473, 286, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 427, 0, 0, 0, 457, 472, 0, 0,
	0, 0, 0, 469, 357, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	409, 421, 438, 441, 0, 0, 0, 0, 255, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 436, 0,
	0, 341, 342, 343, 344, 303, 0, 273, 439, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 470, 467, 399, 471,
	0, 252, 0, 324, 0, 365, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 353, 0, 0,
	424, 425, 426, 448, 410, 0, 468, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 474, 462, 0, 0, 0, 0,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3325, 0, 196,
	650, 0, 0, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 0, 249, 244,
	245, 246, 247, 353, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	474, 462, 0, 0, 0, 0, 458, 0, 459, 0,
	0, 0, 0, 463, 384, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 1262, 0,
	0, 0, 268, 197, 460, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1260, 0, 0, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 0, 403, 431, 287, 422, 0,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 447, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 432, 0, 374, 355, 0, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	286, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 427, 0, 0, 0, 457, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	436, 0, 0, 341, 342, 343, 344, 303, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 0, 249, 244, 245, 246, 247, 353,
	0, 0, 424, 425, 426, 448, 410, 0, 468, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 474, 462, 0, 0,
	0, 0, 458, 0, 459, 0, 0, 0, 0, 463,
	384, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 1262, 0, 0, 0, 268, 197,
	460, 0, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3039, 0, 0,
	0, 0, 0, 0, 258, 389, 406, 269, 380, 419,
	274, 387, 264, 352, 376, 0, 0, 260, 404, 386,
	334, 312, 313, 259, 0, 371, 291, 304, 288, 350,
	0, 403, 431, 287, 422, 0, 414, 262, 0, 413,
	349, 400, 405, 335, 329, 261, 402, 333, 328, 316,
	295, 447, 317, 318, 308, 361, 327, 362, 309, 339,
	338, 340, 0, 0, 0, 0, 0, 442, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 319, 0, 0, 0,
	432, 0, 374, 355, 0, 0, 0, 372, 325, 401,
	363, 407, 390, 415, 368, 364, 253, 391, 290, 336,
	265, 267, 285, 292, 294, 296, 297, 345, 346, 358,
	379, 392, 393, 394, 289, 275, 373, 276, 306, 277,
	254, 281, 280, 282, 381, 283, 256, 359, 398, 0,
	302, 369, 332, 257, 331, 360, 397, 396, 266, 423,
	429, 430, 0, 0, 435, 0, 0, 0, 444, 449,
	450, 451, 453, 454, 455, 456, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 428, 320,
	321, 322, 300, 250, 251, 473, 286, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	427, 0, 0, 0, 457, 472, 0, 0, 0, 0,
	0, 469, 357, 0, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 409, 421,
	438, 441, 0, 0, 0, 0, 255, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 436, 0, 0, 341,
	342, 343, 344, 303, 0, 273, 439, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 299, 305,
	452, 307, 272, 356, 301, 418, 314, 0, 445, 0,
	446, 0, 0, 0, 0, 348, 310, 311, 382, 315,
	326, 370, 417, 354, 375, 270, 408, 383, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 0,
	248, 278, 279, 284, 470, 467, 399, 471, 0, 252,
	0, 324, 0, 365, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 353, 0, 0, 424, 425,
	426, 448, 410, 0, 468, 0, 0, 2111, 0, 0,
	0, 0, 293, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 474, 462, 0, 0, 0, 0, 458, 0,
	459, 0, 0, 0, 0, 463, 384, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	2113, 0, 0, 0, 268, 197, 460, 0, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 389, 406, 269, 380, 419, 274, 387, 264, 352,
	376, 0, 0, 260, 404, 386, 334, 312, 313, 259,
	0, 371, 291, 304, 288, 350, 0, 403, 431, 287,
	422, 0, 414, 262, 0, 413, 349, 400, 405, 335,
	329, 261, 402, 333, 328, 316, 295, 447, 317, 318,
	308, 361, 327, 362, 309, 339, 338, 340, 0, 0,
	0, 0, 0, 442, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 319, 0, 0, 0, 432, 0, 374, 355,
	0, 0, 0, 372, 325, 401, 363, 407, 390, 415,
	368, 364, 253, 391, 290, 336, 265, 267, 285, 292,
	294, 296, 297, 345, 346, 358, 379, 392, 393, 394,
	289, 275, 373, 276, 306, 277, 254, 281, 280, 282,
	381, 283, 256, 359, 398, 0, 302, 369, 332, 257,
	331, 360, 397, 396, 266, 423, 429, 430, 0, 0,
	435, 0, 0, 0, 444, 449, 450, 451, 453, 454,
	455, 456, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 428, 320, 321, 322, 300, 250,
	251, 473, 286, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 427, 0, 0, 0,
	457, 472, 0, 0, 0, 0, 0, 469, 357, 0,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 409, 421, 438, 441, 0, 0,
	0, 0, 255, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 436, 0, 0, 341, 342, 343, 344, 303,
	0, 273, 439, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 299, 305, 452, 307, 272, 356,
	301, 418, 314, 0, 445, 0, 446, 0, 0, 0,
	0, 348, 310, 311, 382, 315, 326, 370, 417, 354,
	375, 270, 408, 383, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 248, 278, 279, 284,
	470, 467, 399, 471, 0, 252, 0, 324, 0, 365,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 0, 249, 244, 245, 246,
	247, 353, 0, 0, 424, 425, 426, 448, 410, 0,
	468, 0, 0, 0, 0, 0, 0, 0, 293, 2132,
	0, 323, 0, 0, 0, 0, 0, 0, 474, 462,
	0, 0, 0, 0, 458, 0, 459, 0, 0, 0,
	0, 463, 384, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 1262, 0, 0, 0,
	268, 197, 460, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 389, 406, 269,
	380, 419, 274, 387, 264, 352, 376, 0, 0, 260,
	404, 386, 334, 312, 313, 259, 0, 371, 291, 304,
	288, 350, 0, 403, 431, 287, 422, 0, 414, 262,
	0, 413, 349, 400, 405, 335, 329, 261, 402, 333,
	328, 316, 295, 447, 317, 318, 308, 361, 327, 362,
	309, 339, 338, 340, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 319, 0,
	0, 0, 432, 0, 374, 355, 0, 0, 0, 372,
	325, 401, 363, 407, 390, 415, 368, 364, 253, 391,
	290, 336, 265, 267, 285, 292, 294, 296, 297, 345,
	346, 358, 379, 392, 393, 394, 289, 275, 373, 276,
	306, 277, 254, 281, 280, 282, 381, 283, 256, 359,
	398, 0, 302, 369, 332, 257, 331, 360, 397, 396,
	266, 423, 429, 430, 0, 0, 435, 0, 0, 0,
	444, 449, 450, 451, 453, 454, 455, 456, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	428, 320, 321, 322, 300, 250, 251, 473, 286, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 427, 0, 0, 0, 457, 472, 0, 0,
	0, 0, 0, 469, 357, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	409, 421, 438, 441, 0, 0, 0, 0, 255, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 436, 0,
	0, 341, 342, 343, 344, 303, 0, 273, 439, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 470, 467, 399, 471,
	0, 252, 0, 324, 0, 365, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 353, 0, 0,
	424, 425, 426, 448, 410, 0, 468, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 474, 462, 0, 0, 0, 0,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3422, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 0, 249, 244,
	245, 246, 247, 353, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	474, 462, 0, 0, 0, 0, 458, 0, 459, 0,
	0, 0, 0, 463, 384, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 650, 0, 0, 0,
	0, 0, 268, 197, 460, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 0, 403, 431, 287, 422, 0,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 447, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 432, 0, 374, 355, 0, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	286, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 427, 0, 0, 0, 457, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	436, 0, 0, 341, 342, 343, 344, 303, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 0, 249, 244, 245, 246, 247, 353,
	0, 0, 424, 425, 426, 448, 410, 0, 468, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 474, 462, 0, 0,
	0, 0, 458, 0, 459, 0, 0, 0, 0, 463,
	384, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3343, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 268, 197,
	460, 0, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 389, 406, 269, 380, 419,
	274, 387, 264, 352, 376, 0, 0, 260, 404, 386,
	334, 312, 313, 259, 0, 371, 291, 304, 288, 350,
	0, 403, 431, 287, 422, 0, 414, 262, 0, 413,
	349, 400, 405, 335, 329, 261, 402, 333, 328, 316,
	295, 447, 317, 318, 308, 361, 327, 362, 309, 339,
	338, 340, 0, 0, 0, 0, 0, 442, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 319, 0, 0, 0,
	432, 0, 374, 355, 0, 0, 0, 372, 325, 401,
	363, 407, 390, 415, 368, 364, 253, 391, 290, 336,
	265, 267, 285, 292, 294, 296, 297, 345, 346, 358,
	379, 392, 393, 394, 289, 275, 373, 276, 306, 277,
	254, 281, 280, 282, 381, 283, 256, 359, 398, 0,
	302, 369, 332, 257, 331, 360, 397, 396, 266, 423,
	429, 430, 0, 0, 435, 0, 0, 0, 444, 449,
	450, 451, 453, 454, 455, 456, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 428, 320,
	321, 322, 300, 250, 251, 473, 286, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	427, 0, 0, 0, 457, 472, 0, 0, 0, 0,
	0, 469, 357, 0, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 409, 421,
	438, 441, 0, 0, 0, 0, 255, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 436, 0, 0, 341,
	342, 343, 344, 303, 0, 273, 439, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 299, 305,
	452, 307, 272, 356, 301, 418, 314, 0, 445, 0,
	446, 0, 0, 0, 0, 348, 310, 311, 382, 315,
	326, 370, 417, 354, 375, 270, 408, 383, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 0,
	248, 278, 279, 284, 470, 467, 399, 471, 0, 252,
	0, 324, 0, 365, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 353, 0, 0, 424, 425,
	426, 448, 410, 0, 468, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 474, 462, 0, 0, 0, 0, 458, 0,
	459, 0, 0, 0, 0, 463, 384, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 460, 0, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 389, 406, 269, 380, 419, 274, 387, 264, 352,
	376, 0, 0, 260, 404, 386, 334, 312, 313, 259,
	0, 371, 291, 304, 288, 350, 0, 403, 431, 287,
	422, 0, 414, 262, 0, 413, 349, 400, 405, 335,
	329, 261, 402, 333, 328, 316, 295, 447, 317, 318,
	308, 361, 327, 362, 309, 339, 338, 340, 0, 0,
	0, 0, 0, 442, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 3265, 0, 0, 388,
	0, 0, 319, 0, 0, 0, 432, 0, 374, 355,
	0, 0, 0, 372, 325, 401, 363, 407, 390, 415,
	368, 364, 253, 391, 290, 336, 265, 267, 285, 292,
	294, 296, 297, 345, 346, 358, 379, 392, 393, 394,
	289, 275, 373, 276, 306, 277, 254, 281, 280, 282,
	381, 283, 256, 359, 398, 0, 302, 369, 332, 257,
	331, 360, 397, 396, 266, 423, 429, 430, 0, 0,
	435, 0, 0, 0, 444, 449, 450, 451, 453, 454,
	455, 456, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 428, 320, 321, 322, 300, 250,
	251, 473, 286, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 427, 0, 0, 0,
	457, 472, 0, 0, 0, 0, 0, 469, 357, 0,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 409, 421, 438, 441, 0, 0,
	0, 0, 255, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 436, 0, 0, 341, 342, 343, 344, 303,
	0, 273, 439, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 299, 305, 452, 307, 272, 356,
	301, 418, 314, 0, 445, 0, 446, 0, 0, 0,
	0, 348, 310, 311, 382, 315, 326, 370, 417, 354,
	375, 270, 408, 383, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 248, 278, 279, 284,
	470, 467, 399, 471, 0, 252, 0, 324, 0, 365,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 0, 249, 244, 245, 246,
	247, 353, 0, 0, 424, 425, 426, 448, 410, 0,
	468, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 474, 462,
	0, 0, 0, 0, 458, 0, 459, 0, 0, 0,
	0, 463, 384, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3035, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 460, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 389, 406, 269,
	380, 419, 274, 387, 264, 352, 376, 0, 0, 260,
	404, 386, 334, 312, 313, 259, 0, 371, 291, 304,
	288, 350, 0, 403, 431, 287, 422, 0, 414, 262,
	0, 413, 349, 400, 405, 335, 329, 261, 402, 333,
	328, 316, 295, 447, 317, 318, 308, 361, 327, 362,
	309, 339, 338, 340, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 319, 0,
	0, 0, 432, 0, 374, 355, 0, 0, 0, 372,
	325, 401, 363, 407, 390, 415, 368, 364, 253, 391,
	290, 336, 265, 267, 285, 292, 294, 296, 297, 345,
	346, 358, 379, 392, 393, 394, 289, 275, 373, 276,
	306, 277, 254, 281, 280, 282, 381, 283, 256, 359,
	398, 0, 302, 369, 332, 257, 331, 360, 397, 396,
	266, 423, 429, 430, 0, 0, 435, 0, 0, 0,
	444, 449, 450, 451, 453, 454, 455, 456, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	428, 320, 321, 322, 300, 250, 251, 473, 286, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 427, 0, 0, 0, 457, 472, 0, 0,
	0, 0, 0, 469, 357, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	409, 421, 438, 441, 0, 0, 0, 0, 255, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 436, 0,
	0, 341, 342, 343, 344, 303, 0, 273, 439, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 470, 467, 399, 471,
	0, 252, 0, 324, 0, 365, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 353, 0, 0,
	424, 425, 426, 448, 410, 0, 468, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 474, 462, 0, 0, 0, 0,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 2861, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 0, 249, 244,
	245, 246, 247, 353, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	474, 462, 0, 0, 0, 0, 458, 0, 459, 0,
	0, 0, 0, 463, 384, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 460, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 0, 403, 431, 287, 422, 0,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 447, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 3108, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 432, 0, 374, 355, 0, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	286, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 427, 0, 0, 0, 457, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	436, 0, 0, 341, 342, 343, 344, 303, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 0, 249, 244, 245, 246, 247, 353,
	0, 0, 424, 425, 426, 448, 410, 0, 468, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 474, 462, 0, 0,
	0, 0, 458, 0, 459, 0, 0, 0, 0, 463,
	384, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 2708, 0, 0, 0, 268, 197,
	460, 0, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 389, 406, 269, 380, 419,
	274, 387, 264, 352, 376, 0, 0, 260, 404, 386,
	334, 312, 313, 259, 0, 371, 291, 304, 288, 350,
	0, 403, 431, 287, 422, 0, 414, 262, 0, 413,
	349, 400, 405, 335, 329, 261, 402, 333, 328, 316,
	295, 447, 317, 318, 308, 361, 327, 362, 309, 339,
	338, 340, 0, 0, 0, 0, 0, 442, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 319, 0, 0, 0,
	432, 0, 374, 355, 0, 0, 0, 372, 325, 401,
	363, 407, 390, 415, 368, 364, 253, 391, 290, 336,
	265, 267, 285, 292, 294, 296, 297, 345, 346, 358,
	379, 392, 393, 394, 289, 275, 373, 276, 306, 277,
	254, 281, 280, 282, 381, 283, 256, 359, 398, 0,
	302, 369, 332, 257, 331, 360, 397, 396, 266, 423,
	429, 430, 0, 0, 435, 0, 0, 0, 444, 449,
	450, 451, 453, 454, 455, 456, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 428, 320,
	321, 322, 300, 250, 251, 473, 286, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	427, 0, 0, 0, 457, 472, 0, 0, 0, 0,
	0, 469, 357, 0, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 409, 421,
	438, 441, 0, 0, 0, 0, 255, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 436, 0, 0, 341,
	342, 343, 344, 303, 0, 273, 439, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 299, 305,
	452, 307, 272, 356, 301, 418, 314, 0, 445, 0,
	446, 0, 0, 0, 0, 348, 310, 311, 382, 315,
	326, 370, 417, 354, 375, 270, 408, 383, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 0,
	248, 278, 279, 284, 470, 467, 399, 471, 0, 252,
	0, 324, 0, 365, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 353, 0, 0, 424, 425,
	426, 448, 410, 0, 468, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 474, 462, 0, 0, 0, 0, 458, 0,
	459, 0, 0, 0, 0, 463, 384, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 460, 0, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2723, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 389, 406, 269, 380, 419, 274, 387, 264, 352,
	376, 0, 0, 260, 404, 386, 334, 312, 313, 259,
	0, 371, 291, 304, 288, 350, 0, 403, 431, 287,
	422, 0, 414, 262, 0, 413, 349, 400, 405, 335,
	329, 261, 402, 333, 328, 316, 295, 447, 317, 318,
	308, 361, 327, 362, 309, 339, 338, 340, 0, 0,
	0, 0, 0, 442, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 319, 0, 0, 0, 432, 0, 374, 355,
	0, 0, 0, 372, 325, 401, 363, 407, 390, 415,
	368, 364, 253, 391, 290, 336, 265, 267, 285, 292,
	294, 296, 297, 345, 346, 358, 379, 392, 393, 394,
	289, 275, 373, 276, 306, 277, 254, 281, 280, 282,
	381, 283, 256, 359, 398, 0, 302, 369, 332, 257,
	331, 360, 397, 396, 266, 423, 429, 430, 0, 0,
	435, 0, 0, 0, 444, 449, 450, 451, 453, 454,
	455, 456, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 428, 320, 321, 322, 300, 250,
	251, 473, 286, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 427, 0, 0, 0,
	457, 472, 0, 0, 0, 0, 0, 469, 357, 0,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 409, 421, 438, 441, 0, 0,
	0, 0, 255, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 436, 0, 0, 341, 342, 343, 344, 303,
	0, 273, 439, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 299, 305, 452, 307, 272, 356,
	301, 418, 314, 0, 445, 0, 446, 0, 0, 0,
	0, 348, 310, 311, 382, 315, 326, 370, 417, 354,
	375, 270, 408, 383, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 248, 278, 279, 284,
	470, 467, 399, 471, 0, 252, 0, 324, 0, 365,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 0, 249, 244, 245, 246,
	247, 353, 0, 0, 424, 425, 426, 448, 410, 0,
	468, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 474, 462,
	0, 0, 0, 0, 458, 0, 459, 0, 0, 0,
	0, 463, 384, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1711, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 460, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 389, 406, 269,
	380, 419, 274, 387, 264, 352, 376, 0, 0, 260,
	404, 386, 334, 312, 313, 259, 0, 371, 291, 304,
	288, 350, 0, 403, 431, 287, 422, 0, 414, 262,
	0, 413, 349, 400, 405, 335, 329, 261, 402, 333,
	328, 316, 295, 447, 317, 318, 308, 361, 327, 362,
	309, 339, 338, 340, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 319, 0,
	0, 0, 432, 0, 374, 355, 0, 0, 0, 372,
	325, 401, 363, 407, 390, 415, 368, 364, 253, 391,
	290, 336, 265, 267, 285, 292, 294, 296, 297, 345,
	346, 358, 379, 392, 393, 394, 289, 275, 373, 276,
	306, 277, 254, 281, 280, 282, 381, 283, 256, 359,
	398, 0, 302, 369, 332, 257, 331, 360, 397, 396,
	266, 423, 429, 430, 0, 0, 435, 0, 0, 0,
	444, 449, 450, 451, 453, 454, 455, 456, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	428, 320, 321, 322, 300, 250, 251, 473, 286, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 427, 0, 0, 0, 457, 472, 0, 0,
	0, 0, 0, 469, 357, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	409, 421, 438, 441, 0, 0, 0, 0, 255, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 436, 0,
	0, 341, 342, 343, 344, 303, 0, 273, 439, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 470, 467, 399, 471,
	0, 252, 0, 324, 0, 365, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 353, 0, 0,
	424, 425, 426, 448, 410, 0, 468, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 474, 462, 0, 0, 0, 0,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2808, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 0, 249, 244,
	245, 246, 247, 353, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	474, 462, 0, 0, 0, 0, 458, 0, 459, 0,
	0, 0, 0, 463, 384, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 2677, 0,
	0, 0, 268, 197, 460, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 0, 403, 431, 287, 422, 0,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 447, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 432, 0, 374, 355, 0, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	286, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 427, 0, 0, 0, 457, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	436, 0, 0, 341, 342, 343, 344, 303, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 0, 249, 244, 245, 246, 247, 353,
	0, 0, 424, 425, 426, 448, 410, 0, 468, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 474, 462, 0, 0,
	0, 0, 458, 0, 459, 0, 0, 0, 0, 463,
	384, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 268, 197,
	460, 0, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2591, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 389, 406, 269, 380, 419,
	274, 387, 264, 352, 376, 0, 0, 260, 404, 386,
	334, 312, 313, 259, 0, 371, 291, 304, 288, 350,
	0, 403, 431, 287, 422, 0, 414, 262, 0, 413,
	349, 400, 405, 335, 329, 261, 402, 333, 328, 316,
	295, 447, 317, 318, 308, 361, 327, 362, 309, 339,
	338, 340, 0, 0, 0, 0, 0, 442, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 319, 0, 0, 0,
	432, 0, 374, 355, 0, 0, 0, 372, 325, 401,
	363, 407, 390, 415, 368, 364, 253, 391, 290, 336,
	265, 267, 285, 292, 294, 296, 297, 345, 346, 358,
	379, 392, 393, 394, 289, 275, 373, 276, 306, 277,
	254, 281, 280, 282, 381, 283, 256, 359, 398, 0,
	302, 369, 332, 257, 331, 360, 397, 396, 266, 423,
	429, 430, 0, 0, 435, 0, 0, 0, 444, 449,
	450, 451, 453, 454, 455, 456, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 428, 320,
	321, 322, 300, 250, 251, 473, 286, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	427, 0, 0, 0, 457, 472, 0, 0, 0, 0,
	0, 469, 357, 0, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 409, 421,
	438, 441, 0, 0, 0, 0, 255, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 436, 0, 0, 341,
	342, 343, 344, 303, 0, 273, 439, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 299, 305,
	452, 307, 272, 356, 301, 418, 314, 0, 445, 0,
	446, 0, 0, 0, 0, 348, 310, 311, 382, 315,
	326, 370, 417, 354, 375, 270, 408, 383, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 0,
	248, 278, 279, 284, 470, 467, 399, 471, 0, 252,
	0, 324, 0, 365, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 353, 0, 0, 424, 425,
	426, 448, 410, 0, 468, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 474, 462, 0, 0, 0, 0, 458, 0,
	459, 0, 0, 0, 0, 463, 384, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	1262, 0, 0, 0, 268, 197, 460, 0, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 389, 406, 269, 380, 419, 274, 387, 264, 352,
	376, 0, 0, 260, 404, 386, 334, 312, 313, 259,
	0, 371, 291, 304, 288, 350, 0, 403, 431, 287,
	422, 0, 414, 262, 0, 413, 349, 400, 405, 335,
	329, 261, 402, 333, 328, 316, 295, 447, 317, 318,
	308, 361, 327, 362, 309, 339, 338, 340, 0, 0,
	0, 0, 0, 442, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 319, 0, 0, 0, 432, 0, 374, 355,
	0, 0, 0, 372, 325, 401, 363, 407, 390, 415,
	368, 364, 253, 391, 290, 336, 265, 267, 285, 292,
	294, 296, 297, 345, 346, 358, 379, 392, 393, 394,
	289, 275, 373, 276, 306, 277, 254, 281, 280, 282,
	381, 283, 256, 359, 398, 0, 302, 369, 332, 257,
	331, 360, 397, 396, 266, 423, 429, 430, 0, 0,
	435, 0, 0, 0, 444, 449, 450, 451, 453, 454,
	455, 456, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 428, 320, 321, 322, 300, 250,
	251, 473, 286, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 427, 0, 0, 0,
	457, 472, 0, 0, 0, 0, 0, 469, 357, 0,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 409, 421, 438, 441, 0, 0,
	0, 0, 255, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 436, 0, 0, 341, 342, 343, 344, 303,
	0, 273, 439, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 299, 305, 452, 307, 272, 356,
	301, 418, 314, 0, 445, 0, 446, 0, 0, 0,
	0, 348, 310, 311, 382, 315, 326, 370, 417, 354,
	375, 270, 408, 383, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 248, 278, 279, 284,
	470, 467, 399, 471, 0, 252, 0, 324, 0, 365,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 0, 249, 244, 245, 246,
	247, 353, 0, 0, 424, 425, 426, 448, 410, 0,
	468, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 474, 462,
	0, 0, 0, 0, 458, 0, 459, 0, 0, 0,
	0, 463, 384, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 2113, 0, 0, 0,
	268, 197, 460, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 389, 406, 269,
	380, 419, 274, 387, 264, 352, 376, 0, 0, 260,
	404, 386, 334, 312, 313, 259, 0, 371, 291, 304,
	288, 350, 0, 403, 431, 287, 422, 0, 414, 262,
	0, 413, 349, 400, 405, 335, 329, 261, 402, 333,
	328, 316, 295, 447, 317, 318, 308, 361, 327, 362,
	309, 339, 338, 340, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 319, 0,
	0, 0, 432, 0, 374, 355, 0, 0, 0, 372,
	325, 401, 363, 407, 390, 415, 368, 364, 253, 391,
	290, 336, 265, 267, 285, 292, 294, 296, 297, 345,
	346, 358, 379, 392, 393, 394, 289, 275, 373, 276,
	306, 277, 254, 281, 280, 282, 381, 283, 256, 359,
	398, 0, 302, 369, 332, 257, 331, 360, 397, 396,
	266, 423, 429, 430, 0, 0, 435, 0, 0, 0,
	444, 449, 450, 451, 453, 454, 455, 456, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	428, 320, 321, 322, 300, 250, 251, 473, 286, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 427, 0, 0, 0, 457, 472, 0, 0,
	0, 0, 0, 469, 357, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	409, 421, 438, 441, 0, 0, 0, 0, 255, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 436, 0,
	0, 341, 342, 343, 344, 303, 0, 273, 439, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 470, 467, 399, 471,
	0, 252, 0, 324, 0, 365, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 353, 0, 0,
	424, 425, 426, 448, 410, 0, 468, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 474, 462, 0, 0, 0, 0,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 0, 249, 244,
	245, 246, 247, 353, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	474, 462, 0, 0, 0, 0, 458, 0, 459, 0,
	0, 0, 0, 463, 384, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 460, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 0, 403, 431, 287, 422, 0,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 447, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 432, 0, 374, 355, 0, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	286, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 427, 0, 0, 0, 457, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	436, 0, 0, 341, 342, 343, 344, 303, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 0, 249, 244, 245, 246, 247, 353,
	0, 0, 424, 425, 426, 448, 410, 0, 468, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 474, 462, 0, 0,
	0, 0, 458, 0, 459, 0, 0, 0, 0, 463,
	384, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 2187, 0, 0, 0, 268, 197,
	460, 0, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 389, 406, 269, 380, 419,
	274, 387, 264, 352, 376, 0, 0, 260, 404, 386,
	334, 312, 313, 259, 0, 371, 291, 304, 288, 350,
	0, 403, 431, 287, 422, 0, 414, 262, 0, 413,
	349, 400, 405, 335, 329, 261, 402, 333, 328, 316,
	295, 447, 317, 318, 308, 361, 327, 362, 309, 339,
	338, 340, 0, 0, 0, 0, 0, 442, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 319, 0, 0, 0,
	432, 0, 374, 355, 0, 0, 0, 372, 325, 401,
	363, 407, 390, 415, 368, 364, 253, 391, 290, 336,
	265, 267, 285, 292, 294, 296, 297, 345, 346, 358,
	379, 392, 393, 394, 289, 275, 373, 276, 306, 277,
	254, 281, 280, 282, 381, 283, 256, 359, 398, 0,
	302, 369, 332, 257, 331, 360, 397, 396, 266, 423,
	429, 430, 0, 0, 435, 0, 0, 0, 444, 449,
	450, 451, 453, 454, 455, 456, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 428, 320,
	321, 322, 300, 250, 251, 473, 286, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	427, 0, 0, 0, 457, 472, 0, 0, 0, 0,
	0, 469, 357, 0, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 409, 421,
	438, 441, 0, 0, 0, 0, 255, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 436, 0, 0, 341,
	342, 343, 344, 303, 0, 273, 439, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 299, 305,
	452, 307, 272, 356, 301, 418, 314, 0, 445, 0,
	446, 0, 0, 0, 0, 348, 310, 311, 382, 315,
	326, 370, 417, 354, 375, 270, 408, 383, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 0,
	248, 278, 279, 284, 470, 467, 399, 471, 0, 252,
	0, 324, 0, 365, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 1982,
	249, 244, 245, 246, 247, 353, 0, 0, 424, 425,
	426, 448, 410, 0, 468, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 474, 462, 0, 0, 0, 0, 458, 0,
	459, 0, 0, 0, 0, 463, 384, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 460, 0, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 389, 406, 269, 380, 419, 274, 387, 264, 352,
	376, 0, 0, 260, 404, 386, 334, 312, 313, 259,
	0, 371, 291, 304, 288, 350, 0, 403, 431, 287,
	422, 0, 414, 262, 0, 413, 349, 400, 405, 335,
	329, 261, 402, 333, 328, 316, 295, 447, 317, 318,
	308, 361, 327, 362, 309, 339, 338, 340, 0, 0,
	0, 0, 0, 442, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 319, 0, 0, 0, 432, 0, 374, 355,
	0, 0, 0, 372, 325, 401, 363, 407, 390, 415,
	368, 364, 253, 391, 290, 336, 265, 267, 285, 292,
	294, 296, 297, 345, 346, 358, 379, 392, 393, 394,
	289, 275, 373, 276, 306, 277, 254, 281, 280, 282,
	381, 283, 256, 359, 398, 0, 302, 369, 332, 257,
	331, 360, 397, 396, 266, 423, 429, 430, 0, 0,
	435, 0, 0, 0, 444, 449, 450, 451, 453, 454,
	455, 456, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 428, 320, 321, 322, 300, 250,
	251, 473, 286, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 427, 0, 0, 0,
	457, 472, 0, 0, 0, 0, 0, 469, 357, 0,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 409, 421, 438, 441, 0, 0,
	0, 0, 255, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 436, 0, 0, 341, 342, 343, 344, 303,
	0, 273, 439, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 299, 305, 452, 307, 272, 356,
	301, 418, 314, 0, 445, 0, 446, 0, 0, 0,
	0, 348, 310, 311, 382, 315, 326, 370, 417, 354,
	375, 270, 408, 383, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 248, 278, 279, 284,
	470, 467, 399, 471, 0, 252, 0, 324, 0, 365,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 0, 249, 244, 245, 246,
	247, 353, 0, 0, 424, 425, 426, 448, 410, 1698,
	468, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 474, 462,
	0, 0, 0, 0, 458, 0, 459, 0, 0, 0,
	0, 463, 384, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 460, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 389, 406, 269,
	380, 419, 274, 387, 264, 352, 376, 0, 0, 260,
	404, 386, 334, 312, 313, 259, 0, 371, 291, 304,
	288, 350, 0, 403, 431, 287, 422, 0, 414, 262,
	0, 413, 349, 400, 405, 335, 329, 261, 402, 333,
	328, 316, 295, 447, 317, 318, 308, 361, 327, 362,
	309, 339, 338, 340, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 319, 0,
	0, 0, 432, 0, 374, 355, 0, 0, 0, 372,
	325, 401, 363, 407, 390, 415, 368, 364, 253, 391,
	290, 336, 265, 267, 285, 292, 294, 296, 297, 345,
	346, 358, 379, 392, 393, 394, 289, 275, 373, 276,
	306, 277, 254, 281, 280, 282, 381, 283, 256, 359,
	398, 0, 302, 369, 332, 257, 331, 360, 397, 396,
	266, 423, 429, 430, 0, 0, 435, 0, 0, 0,
	444, 449, 450, 451, 453, 454, 455, 456, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	428, 320, 321, 322, 300, 250, 251, 473, 286, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 427, 0, 0, 0, 457, 472, 0, 0,
	0, 0, 0, 469, 357, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	409, 421, 438, 441, 0, 0, 0, 0, 255, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 436, 0,
	0, 341, 342, 343, 344, 303, 0, 273, 439, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 470, 467, 399, 471,
	0, 252, 0, 324, 0, 365, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 353, 0, 0,
	424, 425, 426, 448, 410, 0, 468, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 474, 462, 0, 0, 0, 0,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 1262, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 1609, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 0, 249, 244,
	245, 246, 247, 353, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	474, 462, 0, 0, 0, 0, 458, 0, 459, 0,
	0, 0, 0, 463, 384, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 460, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 0, 403, 431, 287, 422, 0,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 447, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 1292, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 432, 0, 374, 355, 0, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	286, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 427, 0, 0, 0, 457, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	436, 0, 0, 341, 342, 343, 344, 303, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 0, 249, 244, 245, 246, 247, 353,
	0, 0, 424, 425, 426, 448, 410, 0, 468, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 474, 462, 0, 0,
	0, 0, 458, 0, 459, 0, 0, 0, 0, 463,
	384, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 268, 197,
	460, 0, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 389, 406, 269, 380, 419,
	274, 387, 264, 352, 376, 0, 0, 260, 404, 386,
	334, 312, 313, 259, 0, 371, 291, 304, 288, 350,
	0, 403, 431, 287, 422, 0, 414, 262, 0, 413,
	349, 400, 405, 335, 329, 261, 402, 333, 328, 316,
	295, 447, 317, 318, 308, 361, 327, 362, 309, 339,
	338, 340, 0, 0, 0, 0, 0, 442, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 319, 0, 0, 0,
	432, 0, 374, 355, 0, 0, 0, 372, 325, 401,
	363, 407, 390, 415, 368, 364, 253, 391, 290, 336,
	265, 267, 285, 292, 294, 296, 297, 345, 346, 358,
	379, 392, 393, 394, 289, 275, 373, 276, 306, 277,
	254, 281, 280, 282, 381, 283, 256, 359, 398, 0,
	302, 369, 332, 257, 331, 360, 397, 396, 266, 423,
	429, 430, 0, 0, 435, 0, 0, 0, 444, 449,
	450, 451, 453, 454, 455, 456, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 428, 320,
	321, 322, 300, 250, 251, 473, 286, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	427, 0, 0, 0, 457, 472, 0, 0, 0, 0,
	0, 469, 357, 0, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 409, 421,
	438, 441, 0, 0, 0, 0, 255, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 436, 0, 0, 341,
	342, 343, 344, 303, 0, 273, 439, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 299, 305,
	452, 307, 272, 356, 301, 418, 314, 0, 445, 0,
	446, 0, 0, 0, 0, 348, 310, 311, 382, 315,
	326, 370, 417, 354, 375, 270, 408, 383, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 759, 0, 0, 395, 0,
	248, 278, 279, 284, 470, 467, 399, 471, 0, 252,
	0, 324, 0, 365, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 353, 0, 0, 424, 425,
	426, 448, 410, 0, 468, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 474, 462, 0, 0, 0, 0, 458, 0,
	459, 0, 0, 0, 0, 463, 384, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 460, 0, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 389, 406, 269, 380, 419, 274, 387, 264, 352,
	376, 0, 0, 260, 404, 386, 334, 312, 313, 259,
	0, 371, 291, 304, 288, 350, 0, 403, 431, 287,
	422, 0, 414, 262, 0, 413, 349, 400, 405, 335,
	329, 261, 402, 333, 328, 316, 295, 447, 317, 318,
	308, 361, 327, 362, 309, 339, 338, 340, 0, 0,
	0, 0, 0, 442, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 319, 0, 0, 0, 432, 0, 374, 355,
	0, 0, 0, 372, 325, 401, 363, 407, 390, 415,
	512, 364, 253, 391, 290, 336, 265, 267, 285, 292,
	294, 296, 297, 345, 346, 358, 379, 392, 393, 394,
	289, 275, 373, 276, 306, 277, 254, 281, 280, 282,
	381, 283, 256, 359, 398, 0, 302, 369, 332, 257,
	331, 360, 397, 396, 266, 423, 429, 430, 0, 0,
	435, 0, 0, 0, 444, 449, 450, 451, 453, 454,
	455, 456, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 428, 320, 321, 322, 300, 250,
	251, 473, 286, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 427, 0, 0, 0,
	457, 472, 0, 0, 0, 0, 0, 469, 357, 0,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 409, 421, 438, 441, 0, 0,
	0, 0, 255, 440, 0, 0, 0, 0, 0, 0,
	513, 0, 412, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 436, 0, 0, 341, 342, 343, 344, 303,
	0, 273, 439, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 299, 305, 452, 307, 272, 356,
	301, 418, 314, 0, 445, 0, 446, 0, 0, 0,
	0, 348, 310, 311, 382, 315, 326, 370, 417, 354,
	375, 270, 408, 383, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 248, 278, 279, 284,
	470, 467, 399, 471, 0, 252, 0, 324, 0, 365,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 0, 249, 244, 245, 246,
	247, 353, 0, 0, 424, 425, 426, 448, 410, 0,
	468, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 474, 462,
	0, 0, 0, 0, 458, 0, 459, 0, 0, 0,
	0, 463, 384, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 460, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 389, 406, 269,
	380, 419, 274, 387, 264, 352, 376, 0, 0, 260,
	404, 386, 334, 312, 313, 259, 0, 371, 291, 304,
	288, 350, 0, 403, 431, 287, 422, 0, 414, 262,
	0, 413, 349, 400, 405, 335, 329, 261, 402, 333,
	328, 316, 295, 447, 317, 318, 308, 361, 327, 362,
	309, 339, 338, 340, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 319, 0,
	0, 0, 432, 0, 374, 355, 0, 0, 0, 372,
	325, 401, 363, 407, 390, 415, 368, 364, 253, 391,
	290, 336, 265, 267, 285, 292, 294, 296, 297, 345,
	346, 358, 379, 392, 393, 394, 289, 275, 373, 276,
	306, 277, 254, 281, 280, 282, 381, 283, 256, 359,
	398, 0, 302, 369, 332, 257, 331, 360, 397, 396,
	266, 423, 429, 430, 0, 0, 435, 0, 0, 0,
	444, 449, 450, 451, 453, 454, 455, 456, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	428, 320, 321, 322, 300, 250, 251, 473, 286, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 427, 0, 0, 0, 457, 472, 0, 0,
	0, 0, 0, 469, 357, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	409, 421, 438, 441, 0, 0, 0, 0, 255, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 436, 0,
	0, 341, 342, 343, 344, 303, 0, 273, 439, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 470, 467, 399, 471,
	0, 252, 0, 324, 0, 365, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 353, 0, 0,
	424, 425, 426, 448, 410, 0, 468, 0, 0, 0,
	0, 0, 0, 479, 293, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 474, 462, 0, 0, 0, 0,
	458, 0, 459, 0, 0, 0, 0, 463, 384, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 460, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 389, 406, 269, 380, 419, 274, 387,
	264, 352, 376, 0, 0, 260, 404, 386, 334, 312,
	313, 259, 0, 371, 291, 304, 288, 350, 0, 403,
	431, 287, 422, 0, 414, 262, 0, 413, 349, 400,
	405, 335, 329, 261, 402, 333, 328, 316, 295, 447,
	317, 318, 308, 361, 327, 362, 309, 339, 338, 340,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 319, 0, 0, 0, 432, 0,
	374, 355, 0, 0, 0, 372, 325, 401, 363, 407,
	390, 415, 368, 364, 253, 391, 290, 336, 265, 267,
	285, 292, 294, 296, 297, 345, 346, 358, 379, 392,
	393, 394, 289, 275, 373, 276, 306, 277, 254, 281,
	280, 282, 381, 283, 256, 359, 398, 0, 302, 369,
	332, 257, 331, 360, 397, 396, 266, 423, 429, 430,
	0, 0, 435, 0, 0, 0, 444, 449, 450, 451,
	453, 454, 455, 456, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 428, 320, 321, 322,
	300, 250, 251, 473, 286, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 427, 0,
	0, 0, 457, 472, 0, 0, 0, 0, 0, 469,
	357, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 409, 421, 438, 441,
	0, 0, 0, 0, 255, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 436, 0, 0, 341, 342, 343,
	344, 303, 0, 273, 439, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 299, 305, 452, 307,
	272, 356, 301, 418, 314, 0, 445, 0, 446, 0,
	0, 0, 0, 348, 310, 311, 382, 315, 326, 370,
	417, 354, 375, 270, 408, 383, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 248, 278,
	279, 284, 470, 467, 399, 471, 0, 252, 0, 324,
	0, 365, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 0, 249, 244,
	245, 246, 247, 353, 0, 0, 424, 425, 426, 448,
	410, 0, 468, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	474, 462, 0, 0, 0, 0, 458, 0, 459, 0,
	0, 0, 0, 463, 384, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 460, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 389,
	406, 269, 380, 419, 274, 387, 264, 352, 376, 0,
	0, 260, 404, 386, 334, 312, 313, 259, 0, 371,
	291, 304, 288, 350, 0, 403, 431, 287, 422, 0,
	414, 262, 0, 413, 349, 400, 405, 335, 329, 261,
	402, 333, 328, 316, 295, 447, 317, 318, 308, 361,
	327, 362, 309, 339, 338, 340, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	319, 0, 0, 0, 432, 0, 374, 355, 0, 0,
	0, 372, 325, 401, 363, 407, 390, 415, 368, 364,
	253, 391, 290, 336, 265, 267, 285, 292, 294, 296,
	297, 345, 346, 358, 379, 392, 393, 394, 289, 275,
	373, 276, 306, 277, 254, 281, 280, 282, 381, 283,
	256, 359, 398, 0, 302, 369, 332, 257, 331, 360,
	397, 396, 266, 423, 429, 430, 0, 0, 435, 0,
	0, 0, 444, 449, 450, 451, 453, 454, 455, 456,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 428, 320, 321, 322, 300, 250, 251, 473,
	286, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 427, 0, 0, 0, 457, 472,
	0, 0, 0, 0, 0, 469, 357, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 409, 421, 438, 441, 0, 0, 0, 0,
	255, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	436, 0, 0, 341, 342, 343, 344, 303, 0, 273,
	439, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 299, 305, 452, 307, 272, 356, 301, 418,
	314, 0, 445, 0, 446, 0, 0, 0, 0, 348,
	310, 311, 382, 315, 326, 370, 417, 354, 375, 270,
	408, 383, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 248, 278, 279, 284, 470, 467,
	399, 471, 0, 252, 0, 324, 0, 365, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 0, 249, 244, 245, 246, 247, 353,
	0, 0, 424, 425, 426, 448, 410, 0, 468, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 474, 462, 0, 0,
	0, 0, 458, 0, 459, 0, 0, 0, 0, 463,
	384, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 268, 197,
	460, 0, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 389, 1242, 269, 380, 419,
	274, 387, 264, 352, 376, 0, 0, 260, 404, 386,
	334, 312, 313, 259, 0, 371, 291, 304, 288, 350,
	0, 403, 431, 287, 422, 0, 414, 262, 0, 413,
	349, 400, 405, 335, 329, 261, 402, 333, 328, 316,
	295, 447, 317, 318, 308, 361, 327, 362, 309, 339,
	338, 340, 0, 0, 0, 0, 0, 442, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 319, 0, 0, 0,
	432, 0, 374, 355, 0, 0, 0, 372, 325, 401,
	363, 407, 390, 415, 368, 364, 253, 391, 290, 336,
	265, 267, 285, 292, 294, 296, 297, 345, 346, 358,
	379, 392, 393, 394, 289, 275, 373, 276, 306, 277,
	254, 281, 280, 282, 381, 283, 256, 359, 398, 0,
	302, 369, 332, 257, 331, 360, 397, 396, 266, 423,
	429, 430, 0, 0, 435, 0, 0, 0, 444, 449,
	450, 451, 453, 454, 455, 456, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 428, 320,
	321, 322, 300, 250, 251, 473, 286, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	427, 0, 0, 0, 457, 472, 0, 0, 0, 0,
	0, 469, 357, 0, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 409, 421,
	438, 441, 0, 0, 0, 0, 255, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 436, 0, 0, 341,
	342, 343, 344, 303, 0, 273, 439, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 299, 305,
	452, 307, 272, 356, 301, 418, 314, 0, 445, 0,
	446, 0, 0, 0, 0, 348, 310, 311, 382, 315,
	326, 370, 417, 354, 375, 270, 408, 383, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 0,
	248, 278, 279, 284, 470, 467, 399, 471, 0, 252,
	0, 324, 0, 365, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 353, 0, 0, 424, 425,
	426, 448, 410, 0, 468, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 474, 462, 0, 0, 0, 0, 458, 0,
	459, 0, 0, 0, 0, 463, 384, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 460, 0, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 389, 1240, 269, 380, 419, 274, 387, 264, 352,
	376, 0, 0, 260, 404, 386, 334, 312, 313, 259,
	0, 371, 291, 304, 288, 350, 0, 403, 431, 287,
	422, 0, 414, 262, 0, 413, 349, 400, 405, 335,
	329, 261, 402, 333, 328, 316, 295, 447, 317, 318,
	308, 361, 327, 362, 309, 339, 338, 340, 0, 0,
	0, 0, 0, 442, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 319, 0, 0, 0, 432, 0, 374, 355,
	0, 0, 0, 372, 325, 401, 363, 407, 390, 415,
	368, 364, 253, 391, 290, 336, 265, 267, 285, 292,
	294, 296, 297, 345, 346, 358, 379, 392, 393, 394,
	289, 275, 373, 276, 306, 277, 254, 281, 280, 282,
	381, 283, 256, 359, 398, 0, 302, 369, 332, 257,
	331, 360, 397, 396, 266, 423, 429, 430, 0, 0,
	435, 0, 0, 0, 444, 449, 450, 451, 453, 454,
	455, 456, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 428, 320, 321, 322, 300, 250,
	251, 473, 286, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 427, 0, 0, 0,
	457, 472, 0, 0, 0, 0, 0, 469, 357, 0,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 409, 421, 438, 441, 0, 0,
	0, 0, 255, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 436, 0, 0, 341, 342, 343, 344, 303,
	0, 273, 439, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 299, 305, 452, 307, 272, 356,
	301, 418, 314, 0, 445, 0, 446, 0, 0, 0,
	0, 348, 310, 311, 382, 315, 326, 370, 417, 354,
	375, 270, 408, 383, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 248, 278, 279, 284,
	470, 467, 399, 471, 0, 252, 0, 324, 0, 365,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 0, 249, 244, 245, 246,
	247, 353, 0, 0, 424, 425, 426, 448, 410, 0,
	468, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 474, 462,
	0, 0, 0, 0, 458, 0, 459, 0, 0, 0,
	0, 463, 384, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 460, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 389, 406, 269,
	380, 419, 274, 387, 264, 352, 376, 0, 0, 260,
	404, 386, 334, 312, 313, 259, 0, 371, 291, 304,
	288, 350, 0, 403, 431, 287, 422, 0, 414, 262,
	0, 413, 349, 400, 405, 335, 329, 261, 402, 333,
	328, 316, 295, 447, 317, 318, 308, 361, 327, 362,
	309, 339, 338, 340, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 319, 0,
	0, 0, 432, 0, 374, 355, 0, 0, 0, 372,
	325, 401, 363, 407, 390, 415, 368, 364, 253, 391,
	290, 336, 265, 267, 553, 292, 294, 296, 297, 345,
	346, 358, 379, 392, 393, 394, 289, 275, 373, 276,
	306, 277, 254, 281, 280, 282, 381, 283, 256, 359,
	398, 0, 302, 369, 332, 257, 331, 360, 397, 396,
	266, 423, 429, 430, 0, 0, 435, 0, 0, 0,
	444, 449, 450, 451, 453, 454, 455, 456, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	428, 320, 321, 322, 300, 250, 251, 473, 286, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 427, 0, 0, 0, 457, 472, 0, 0,
	0, 0, 0, 469, 357, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	409, 421, 438, 441, 0, 0, 0, 0, 255, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 436, 0,
	0, 341, 342, 343, 344, 303, 0, 273, 439, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	299, 305, 452, 307, 272, 356, 301, 418, 314, 0,
	445, 0, 446, 0, 0, 0, 0, 348, 310, 311,
	382, 315, 326, 370, 417, 354, 375, 270, 408, 383,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 248, 278, 279, 284, 470, 467, 399, 471,
	0, 252, 0, 324, 0, 365, 298, 0, 903, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 0, 0, 0,
	424, 425, 426, 448, 410, 0, 468, 0, 174, 51,
	163, 138, 0, 0, 0, 0, 0, 174, 51, 163,
	138, 0, 0, 0, 474, 462, 164, 0, 0, 0,
	0, 0, 0, 156, 0, 164, 0, 165, 0, 0,
	0, 0, 156, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 115, 0, 0, 0,
	0, 0, 0, 0, 0, 115, 0, 0, 889, 0,
	0, 103, 879, 0, 0, 0, 0, 168, 0, 0,
	103, 0, 0, 0, 0, 0, 168, 0, 911, 915,
	917, 919, 921, 922, 924, 0, 929, 925, 926, 927,
	928, 0, 906, 907, 908, 909, 887, 888, 912, 0,
	890, 0, 891, 892, 893, 894, 895, 896, 897, 898,
	899, 902, 904, 900, 901, 910, 0, 0, 0, 0,
	0, 0, 0, 914, 916, 918, 920, 923, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 120, 121, 0, 122, 123, 0, 0,
	0, 0, 120, 121, 0, 122, 123, 0, 0, 0,
	0, 905, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 162, 172, 0, 101, 0,
	0, 0, 0, 137, 162, 172, 0, 101, 0, 0,
	0, 0, 0, 903, 0, 0, 161, 155, 154, 0,
	0, 0, 0, 57, 0, 161, 155, 154, 0, 0,
	0, 0, 57, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1686, 0, 0, 0,
	0, 1648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 158, 159, 0, 0, 0,
	1688, 1657, 0, 157, 158, 159, 0, 0, 0, 0,
	1689, 1690, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 0, 166, 0, 0, 1656, 0, 0, 0,
	0, 0, 0, 889, 111, 0, 0, 0, 160, 0,
	112, 1663, 0, 111, 0, 0, 0, 160, 0, 112,
	0, 0, 0, 911, 915, 917, 919, 921, 922, 924,
	0, 929, 925, 926, 927, 928, 0, 906, 907, 908,
	909, 887, 888, 912, 0, 890, 0, 891, 892, 893,
	894, 895, 896, 897, 898, 899, 902, 904, 900, 901,
	910, 0, 0, 0, 0, 0, 0, 113, 914, 916,
	918, 920, 923, 0, 0, 0, 113, 0, 1679, 50,
	0, 0, 0, 0, 0, 0, 0, 0, 50, 0,
	0, 913, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1686, 0, 0, 0, 0, 905, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 0,
	0, 0, 0, 0, 0, 1688, 0, 52, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1647,
	1649, 1646, 0, 1643, 0, 0, 0, 0, 1667, 0,
	0, 0, 1686, 169, 170, 0, 171, 0, 0, 1673,
	0, 139, 169, 170, 0, 171, 3439, 0, 0, 0,
	139, 0, 0, 0, 0, 0, 1663, 0, 0, 1661,
	1695, 0, 0, 1662, 1664, 1666, 1688, 1668, 1669, 1670,
	1674, 1675, 1676, 1678, 1681, 1682, 1683, 0, 0, 0,
	0, 0, 0, 0, 1671, 1680, 1672, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1651, 0, 0, 0,
	0, 1686, 0, 114, 39, 0, 0, 0, 0, 0,
	49, 0, 114, 39, 5, 0, 0, 1663, 1687, 49,
	118, 119, 0, 1679, 0, 0, 0, 0, 0, 118,
	119, 0, 0, 0, 0, 1688, 0, 0, 0, 0,
	0, 0, 0, 1644, 1645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1660, 0,
	3163, 0, 0, 0, 1679, 1659, 1663, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1667, 0, 0, 0, 0, 0, 1677,
	0, 0, 0, 0, 1673, 0, 0, 0, 1665, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1692, 1691, 0, 1661, 1695, 0, 0, 1662, 1664,
	1666, 0, 1668, 1669, 1670, 1674, 1675, 1676, 1678, 1681,
	1682, 1683, 0, 1679, 0, 0, 913, 0, 0, 1671,
	1680, 1672, 0, 0, 1667, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1673, 0, 0, 0, 0,
	0, 0, 0, 1653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1687, 0, 1661, 1695, 0, 0, 1662,
	1664, 1666, 0, 1668, 1669, 1670, 1674, 1675, 1676, 1678,
	1681, 1682, 1683, 0, 0, 0, 0, 0, 0, 0,
	1671, 1680, 1672, 0, 0, 1694, 0, 0, 1693, 0,
	0, 0, 0, 1667, 0, 0, 1684, 0, 0, 0,
	0, 0, 0, 0, 1673, 0, 0, 0, 0, 0,
	0, 0, 0, 1660, 1687, 0, 0, 0, 0, 0,
	1659, 0, 0, 0, 1661, 1695, 0, 0, 1662, 1664,
	1666, 0, 1668, 1669, 1670, 1674, 1675, 1676, 1678, 1681,
	1682, 1683, 0, 0, 1677, 0, 0, 0, 0, 1671,
	1680, 1672, 0, 1665, 0, 0, 0, 1684, 0, 0,
	532, 531, 538, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 536, 1660, 537, 541, 0, 0, 523,
	0, 1659, 0, 1687, 532, 531, 538, 528, 0, 546,
	0, 0, 0, 0, 0, 0, 535, 536, 0, 537,
	541, 0, 0, 523, 0, 1677, 0, 0, 532, 531,
	538, 528, 0, 546, 1665, 0, 0, 0, 0, 0,
	535, 536, 0, 537, 541, 0, 1684, 523, 0, 0,
	0, 0, 550, 0, 0, 552, 0, 546, 0, 0,
	551, 0, 0, 1660, 0, 0, 0, 0, 0, 0,
	1659, 0, 0, 0, 0, 0, 550, 0, 0, 552,
	0, 0, 0, 0, 551, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1677, 0, 0, 0, 0, 0,
	0, 0, 0, 1665, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 524, 526, 525, 0,
	0, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 534, 0,
	524, 526, 525, 0, 0, 549, 0, 0, 0, 0,
	530, 0, 527, 0, 0, 0, 518, 0, 0, 0,
	0, 0, 534, 0, 524, 526, 525, 0, 0, 549,
	0, 0, 0, 0, 530, 0, 527, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 534, 0, 0, 0,
	0, 0, 0, 549, 0, 0, 0, 0, 0, 0,
	527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 533, 539, 0, 540, 542, 0, 0, 543, 544,
	545, 0, 0, 547, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 533, 539, 0, 540, 542,
	0, 0, 543, 544, 545, 0, 0, 547, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 529, 533,
	539, 0, 540, 542, 0, 0, 543, 544, 545, 0,
	0, 547, 548,
}

var yyPact = [...]int{
	39316, -1000, -1000, -1000, -340, 10967, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 37031,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 37031,
	-337, 36465, 36465, -1000, -1000, 2447, -1000, 35899, 12120, 37031,
	361, 339, 37031, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 724, -1000, 35333, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 653, 40198, 38729, 8048, -270, -1000, 1432, -103, 2209,
	872, 894, 967, 967, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 365, 739, 34767,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3250, 335, 739, 14384, 20, 19, 1432, 346, -161,
	-159, -163, 297, -1000, 1109, 39325, 155, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8048, 8048,
	10967, -366, 10967, 8048, 37031, 37031, -1000, -1000, -1000, -1000,
	653, 40198, 8048, 2209, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -159, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -161, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -163, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 19, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 39238, -1000, 1425, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2724, 1413, 2203, 563, 37031,
	-1000, 1386, 563, -1000, -1000, -1000, 1432, 3074, -1000, 37031,
	37031, 93, 1627, -1000, 362, 356, 371, 1385, -1000, -1000,
	-1000, -1000, -1000, -1000, 497, 3058, -1000, 37031, 37031, 2739,
	37031, -1000, 2050, 538, 40222, 2952, 1222, 765, 2758, -1000,
	-1000, 2718, -1000, 231, 209, 210, 565, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 224, -1000, 2993, -1000, -1000, 194,
	-1000, -1000, 226, -1000, -1000, -1000, 18, -1000, -1000, -1000,
	-1000, -1000, -1000, -83, -1000, -1000, 936, 1680, 8048, -1000,
	1872, -1000, 2475, -1000, -1000, -1000, -1000, 5133, 10380, 10380,
	10380, 10380, -1000, -1000, 2598, 8048, 2716, 2715, 2713, -1000,
	-1000, -1000, -1000, -1000, -1000, 1377, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1773, -1000, -1000, -1000, 9797,
	-1000, 2712, 2711, 2709, 2707, 2705, 2704, 2703, 2701, 2699,
	2697, 2695, 2694, 2693, 2692, 2449, 11534, 2691, 2199, 2198,
	2686, 2684, 2681, 2191, 2449, 2449, 2679, 2678, 2675, 2674,
	2673, 2664, 2663, 2656, 2655, 2654, 2652, 2651, 2650, 2648,
	2646, 2645, 2644, 2643, 2640, 2626, 2623, 2613, 2612, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1090, -1000, 2611, 3061, 2455, -1000, 2977, 2975,
	2973, 2971, -314, 2610, 1987, -1000, -1000, 59, -1000, -146,
	-1000, -1000, 933, -1000, 837, -1000, 37031, 37031, 146, 709,
	650, 650, 650, 650, 650, 699, 650, 3007, 719, 717,
	714, 650, -108, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1626, 1625, 2794, 802, -1000, -1000, -1000, -1000, 1244, 37031,
	-1000, 2548, 1569, 1569, 3004, 542, 541, 506, 1569, 432,
	-1000, 1596, 1596, 1596, 1596, 1569, 400, 537, 3014, 3014,
	6, 1596, -8, 1569, 1569, -8, 1569, 1569, 1569, 160,
	-321, -1000, -1000, -1000, -1000, 1596, 1596, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2988, 2987, 653, 653, 37031, 137,
	37031, 653, 653, 653, 660, -53, 38163, 37597, 2050, 529,
	527, 1256, 1612, -1000, 1510, 37031, 37031, 1510, 1510, 18919,
	18353, -1000, 37031, -1000, 3061, 2455, 2399, 1441, 2388, 2455,
	-167, -170, -181, 653, 653, 653, 653, 653, 169, 653,
	653, 653, 653, 653, 37031, 37031, 34201, 653, 653, 6882,
	6882, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	10967, 1805, 2098, 151, -71, -331, 198, -1000, -1000, 37031,
	2886, 206, -1000, -1000, -1000, 2459, -1000, 2510, 2510, 2510,
	2510, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2510, 2510, 2547, 2609, -1000, -1000, 2507, 2507, 2507, 2459,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2513, 2513, 2543, 2543, 2513,
	37031, 8048, 37031, 2932, 334, 2608, -1000, 37031, 312, 3061,
	2926, 3014, 3040, -1000, -1000, 1372, 1985, 2188, -1000, -1000,
	362, 1488, -1000, 1064, -1000, -1000, -1000, -1000, 37031, -83,
	337, -1000, -1000, 2173, 2605, -1000, 500, 1139, 1120, -1000,
	193, 40246, 29673, 2050, 29673, 37031, -1000, -1000, -1000, -1000,
	-1000, -1000, 17, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 201, -1000, 8048, 8048,
	8048, 8048, 8048, -1000, 586, 9214, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 10380, 10380, 10380, 10380, 10380, 10380, 10380,
	10380, 10380, 10380, 10380, 10380, 2596, 1761, 10380, 10380, 10380,
	10380, 1441, 2660, 1255, 235, -1000, -1000, -1000, -1000, -1000,
	1660, 1680, 8048, 8048, 8048, 37031, -1000, -1000, 3286, 8048,
	8048, 3305, 8048, 2966, 8048, 8048, 8048, 2376, 3873, 37031,
	8048, -1000, 2368, 2366, -1000, -1000, 1814, 8048, -1000, -1000,
	8048, -1000, -1000, 8048, 10380, 8048, -1000, -1000, -1000, 1799,
	2966, 2966, 2966, 1609, 8048, 8048, 2966, 2966, 2966, 1582,
	2966, 2966, 2966, 2966, 2966, 2966, 2966, 2966, 2364, 2361,
	2360, 8048, 3014, -270, -1000, 6299, 2926, 3014, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -316, 2603,
	37031, 2187, 2161, -352, -35, 865, 840, 849, -1000, 2962,
	-1000, 2602, 37031, 650, 650, -144, 650, -1000, 37031, 1681,
	29673, 37031, 37031, 2050, 37031, 37031, 37031, 650, 650, 650,
	37031, -1000, 2867, 29673, 2854, 660, -1000, 37031, 1244, 2961,
	37031, 3048, 10380, 10380, -1000, 33635, 1596, 1569, 1569, -1000,
	-1000, 37031, -1000, -1000, -1000, 1596, 37031, 1596, 1596, 3048,
	1596, -1000, -1000, -1000, 1569, 1569, -1000, -1000, 8048, -1000,
	-1000, 1596, 1596, -1000, -1000, 3048, 37031, 4, 3048, 3048,
	-4, -1000, -1000, -1000, 37031, 37031, 650, 37031, -1000, 37031,
	37031, -1000, -1000, 37031, 37031, 39600, 37031, 33069, 2986, -1000,
	29673, 37031, 37031, 27409, -1000, 1202, -1000, -47, -1000, -37,
	-53, 1510, -53, 1510, -1000, 499, 494, 17220, 451, 29673,
	4504, -1000, -1000, 1510, 1510, 4504, 4504, 1436, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1241, -1000, 176, 3014, -1000,
	-1000, -1000, -1000, -1000, 1971, 1970, 1967, 37031, 37031, 29673,
	2050, 37031, 653, 37031, 37031, 37031, 37031, 37031, -1000, 2599,
	1367, -1000, 2951, 37031, 37031, 1108, -1000, -1000, 13818, 1366,
	1108, -1000, 1663, -1000, 8048, 10967, -295, 8048, 10967, 10967,
	8048, 10967, -1000, 8048, 153, -1000, -1000, -1000, -1000, 1966,
	-1000, 1965, -1000, -1000, -1000, -1000, -1000, 2158, 2158, -1000,
	1962, -1000, -1000, -1000, -1000, 1958, -1000, -1000, 1956, -1000,
	-1000, -1000, 2353, 936, -1000, 2154, 2757, -271, -1000, 16086,
	37031, 37031, -1000, -1000, -271, -1000, 15518, 37031, 3014, -1000,
	-275, 2926, 8048, 37031, -1000, 3002, -1000, 362, 290, -1000,
	-1000, -1000, -1000, -1000, -1000, 1364, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1224, -1000, 37031, -1000, -1000,
	193, 29673, 30805, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	199, -1000, -1000, 168, -1000, 692, 132, 1485, -1000, -1000,
	147, 172, 97, 769, 1680, -1000, 1672, 1672, 1684, -1000,
	582, -1000, -1000, -1000, -1000, 2598, -1000, -1000, -1000, 2125,
	2521, -1000, 1576, 1576, 1328, 1328, 1328, 1328, 1328, 1482,
	1482, -1000, -1000, -1000, 5133, 2596, 10380, 10380, 10380, 10380,
	634, 634, 1934, 3546, -1000, 8048, 1644, -1000, 8048, 2330,
	2183, 1194, 1359, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2352, 2345, 2444, 3057, 2343, 8048, -1000,
	-1000, 1483, 1454, 1451, -1000, 2239, 7465, -1000, -1000, -1000,
	2342, 1357, 2338, -1000, -1000, -1000, 2337, 1445, 1043, 2334,
	1360, 2333, 1215, 8048, 8048, 8048, 8048, 2329, 1444, 1442,
	8048, 8048, 8048, 8048, 2326, 8048, 8048, 8048, 8048, 8048,
	8048, 8048, 8048, 45, 45, 45, 1214, -1000, -1000, 1429,
	-1000, 1680, -1000, -1000, 2926, -1000, 2594, 1955, 1209, -1000,
	-1000, -1000, 2118, -1000, -1000, 856, 813, 949, 37031, 962,
	2590, 37031, 37031, 650, 37031, 154, -1000, 2950, 1200, -1000,
	132, -98, 374, 991, 2738, 3052, -194, 37031, 37031, 37031,
	2960, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 32503,
	-1000, 2574, 1427, -1000, -1000, 8048, -1000, -1000, 2735, 37031,
	37031, 3048, 3048, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1596, 3048, 3048, 1275, 1569, 1596, -1000, -1000, 1596, -1000,
	-1000, 1596, -1000, 1354, -1000, 37031, -1000, -1000, -1000, 2959,
	2548, 1206, -1000, 1183, 596, 596, 866, 455, 3039, 14950,
	-1000, 1525, 1171, 682, 2865, 220, -1000, 1525, -218, 1525,
	1525, 1525, 1525, 1525, 1525, 1525, 479, 474, 1525, 1525,
	1525, 1525, 1525, 1525, 1525, 1525, 1525, 1525, 1525, 889,
	1525, 1525, 1525, 1525, 1525, -1000, 1525, 2573, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 517, 148, 2984, 269, 268,
	1200, 2983, 281, 2878, 1052, -1000, -1000, -1000, -1000, 21183,
	21183, 16654, 21183, -1000, 1493, -53, -72, -1000, -1000, 1202,
	4504, 1202, 4504, -1000, -1000, 681, -1000, -1000, 991, -1000,
	37031, 37031, -1000, -1000, 2572, 1619, -1000, -1000, 11534, -1000,
	4504, 4504, -1000, -1000, 21749, 37031, -1000, -84, -1000, -58,
	2926, -1000, -1000, -1000, 1181, -1000, -1000, 1187, 991, 2756,
	37031, 1181, 1181, 1181, -1000, -1000, 12686, 37031, 37031, -1000,
	-1000, 3048, 6882, -1000, 27409, -1000, -1000, 31937, -1000, 31371,
	3048, 1635, -1000, 10967, 2070, 149, -1000, 189, -342, 145,
	1730, 144, 1680, -1000, -1000, 2324, 2321, 1409, -1000, 1408,
	2318, 1406, 1405, -1000, -18, -1000, 2894, 992, -1000, 2571,
	-1000, 1404, 2795, -1000, 1159, -1000, 1616, 1395, -1000, 992,
	1394, 2786, 1159, 2926, 2152, -1000, 1157, -1000, 1996, 1331,
	92, -1000, -1000, 37031, 2173, 1390, 30805, 1030, -1000, 673,
	1325, 1316, -1000, 29673, 205, 29673, -1000, 29673, -1000, -1000,
	303, -1000, 37031, 2915, -1000, -1000, -1000, 2118, 1614, -359,
	37031, -1000, -1000, -1000, -1000, -1000, 1389, -1000, 634, 634,
	1934, 2734, -1000, 10380, -1000, 10380, 2641, 1633, -1000, 8048,
	1870, 3346, 3346, 1498, 20051, 37031, -1000, -1000, 8048, 8048,
	-1000, 2630, -1000, -1000, -1000, -1000, 8048, 8048, 2284, -1000,
	37031, -1000, -1000, -1000, -1000, 20051, -1000, 10380, -1000, 8048,
	1068, 1068, 2606, 1383, 45, 45, 45, 2600, 2592, 2588,
	1375, 45, 2540, 2522, 2469, 2463, 2457, 2451, 2415, 2408,
	-1000, 2566, -1000, -1000, 8631, 6299, -1000, -1000, 234, 1129,
	1954, 112, -1000, 1611, -1000, -1000, -1000, 810, 175, 2299,
	1110, -1000, -1000, 37031, -1000, -1000, -1000, 12686, 2548, 249,
	37031, 2548, 49, 1525, -1000, 510, 29673, 518, -1000, 37031,
	1826, 1608, 2750, 677, 2882, 37031, 2564, 2563, 2560, 2557,
	348, 39533, 37031, 1076, -1000, 1290, 39325, -1000, 37031, 1680,
	-1000, 2050, -1000, 1569, -1000, -1000, 3048, -1000, -1000, 8048,
	8048, 3048, 1569, 1569, 1596, 37031, -1000, 348, 39533, 2958,
	39600, -1000, 37031, -1000, -1000, -1000, 818, -1000, 839, 650,
	37031, 1743, 839, 1736, 2556, -1000, -1000, 37031, 37031, 37031,
	37031, -1000, -1000, 37031, -1000, 37031, 37031, 37031, 37031, 37031,
	-1000, 37031, 37031, -1000, 37031, 1735, 1729, 2883, -1000, 1525,
	1525, 778, -1000, -1000, 487, -1000, 1939, 1931, 1895, 1894,
	2149, 2146, 2139, 1525, 1525, 1892, 2137, 30239, 2136, 1063,
	1889, 1886, 1879, 1969, 2134, 902, -1000, 2132, 1929, 1908,
	1878, 37031, 2555, 2082, -1000, -1000, 49, 1525, 258, 37031,
	1607, 510, 357, 1993, 17787, 37031, 27409, 27409, 27409, 27409,
	-1000, 2773, 2772, -1000, 2818, 2817, 2825, 37031, 27409, 2548,
	-1000, 30239, -1000, -1000, -1000, 1441, 1362, 2792, 850, 8048,
	-1000, -1000, -51, -44, -1000, -1000, -1000, 29673, 2131, 451,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3000, 37031, 37031,
	646, 2297, 1101, -1000, -1000, -1000, 39533, 2510, 2510, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2510, 2510,
	2547, -1000, -1000, 2507, 2507, 2507, 2459, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2513, 2513, 2543, 2543,
	2513, -1000, -1000, 3046, -1000, 1091, -1000, -1000, 1289, -1000,
	3046, 1656, -343, 10967, 1639, 1487, -1000, 8048, 10967, 8048,
	-296, 245, -298, -1000, -1000, -1000, 2126, -1000, -1000, -1000,
	1876, -1000, 1861, 65, 80, 1728, -271, 6299, 344, 37031,
	-271, 37031, 6299, -1000, 37031, 331, -271, 3000, -18, 8048,
	2843, -1000, -1000, 37031, 1860, -1000, -1000, -1000, 3050, 29673,
	2050, 1465, 29107, -1000, 188, -1000, 180, 512, 2124, -1000,
	711, 111, 2123, 2118, -1000, -1000, -1000, -1000, 10380, -1000,
	-1000, -1000, -1000, 1680, 8048, 2296, -1000, 817, 817, 2294,
	2289, -1000, 2510, 2510, -1000, 2459, 2507, 2459, 817, 817,
	2281, -1000, 2120, 2369, -1000, 2363, 2346, 8048, -1000, 2280,
	3486, 1228, -112, -245, 45, 45, -1000, -1000, -1000, -1000,
	45, 45, 45, 45, -1000, 45, 45, 45, 45, 45,
	45, 45, 45, 564, -158, -328, -1000, 2276, 1089, -1000,
	-1000, -1000, -1000, -1000, 3305, 1058, -1000, 2118, 2114, -1000,
	2113, 2109, 962, 39533, 2263, 2956, 13252, 2955, 2505, 2504,
	2954, 2000, -1000, -1000, -1000, 28541, 504, -1000, -1000, -1000,
	595, 225, 1859, 462, -1000, 37031, 281, 2805, 1605, 2108,
	37031, -1000, -1000, -1000, -1000, -1000, -1000, 2882, -1000, 1023,
	315, 26277, 13252, 13252, 13252, 345, 1613, -1000, 563, 1069,
	1281, 27409, 37031, -1000, 26843, 2262, -1000, 991, 3048, -1000,
	1680, 1680, -1000, 3048, 3048, 1569, -1000, 345, -1000, 314,
	-1000, 2852, 39533, -1000, 37031, -1000, 37031, -1000, 37031, 37031,
	650, 8048, 2852, 37031, 662, -1000, -1000, 932, 323, 295,
	633, 633, 1040, -1000, 2904, -1000, -1000, -1000, 37031, -1000,
	-1000, -1000, -1000, -1000, -1000, 20051, 20051, 2982, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2106, 2105, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 37031, 1340, -1000, 1604, 2000, 28541, 1602, 1510, 2096,
	504, 1826, 1585, -1000, 2095, -1000, 1005, 37031, 37031, -1000,
	1127, -1000, 1580, 2728, 2748, 2728, -1000, -1000, -1000, -1000,
	2771, -1000, 2620, -1000, -1000, 1127, -1000, -1000, -1000, -1000,
	-1000, 850, -1000, 2997, 839, 839, 839, 2261, -1000, -1000,
	-1000, 1030, 2259, -1000, -1000, -1000, 3064, -1000, -1000, -1000,
	-1000, -1000, -1000, 12686, 2873, 3042, 3038, 27975, 3042, -1000,
	-343, 1496, -1000, 1854, 143, 1655, 37031, -1000, -1000, -1000,
	2257, 2256, -277, 85, 3035, 3034, 880, -1000, 2254, 1024,
	-271, -1000, -1000, 992, -1000, -1000, -1000, -271, -1000, 992,
	-1000, 65, -1000, -1000, 2872, -1000, -1000, 2050, -1000, 177,
	-1000, -1000, -1000, -1000, -1000, -1000, 118, -1000, 37031, -1000,
	1020, 103, -1000, 1680, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	8048, -1000, -1000, -1000, 2322, -1000, -1000, 8048, 2251, 2090,
	2246, 2088, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3061, -1000, 3033, 2244,
	2242, 2241, -1000, 8048, 2236, 3305, -1000, -1000, -1000, -1000,
	-1000, -1000, 727, 314, 2235, 1009, -1000, -1000, -1000, -1000,
	314, 25145, 13252, 314, -1000, 2087, 130, -1000, -1000, -1000,
	2085, 2084, 1855, -1000, -1000, 1850, 1310, 141, -1000, -1000,
	-1000, -1000, -1000, -1000, 1993, 1875, 1579, -361, -1000, 2503,
	-1000, 1525, 1525, 1525, 37031, 1329, -1000, 1525, 1525, 2226,
	2223, 2222, 571, 1566, 1565, -1000, 1851, 21183, 27409, 26843,
	1118, -1000, 1271, -1000, -1000, -1000, -1000, -1000, 3048, 571,
	-1000, -1000, -1000, 37031, 254, 2501, -1000, 2500, 2732, 380,
	2494, 2483, 37031, 2288, -1000, 2852, 37031, 604, 2871, -1000,
	-1000, -1000, 287, -1000, -1000, 435, -1000, 37031, -1000, -1000,
	1431, -1000, 20051, -1000, -1000, 1326, -1000, 2082, 2081, -1000,
	130, 2077, 4504, -1000, -1000, 2805, 2076, -1000, 37031, 1005,
	1005, 3061, 37031, 6299, -1000, -1000, 8048, 2468, -1000, 8048,
	-1000, -1000, -1000, -1000, -1000, 2466, 2888, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1841, -1000, 8048, 8048, -1000, -1000,
	648, 10967, -299, 243, -1000, -1000, -1000, -280, 2069, -1000,
	-1000, 3032, 2068, 2027, 37031, -1000, -1000, 992, 992, -277,
	-1000, -1000, 991, -1000, -1000, -4, 481, -1000, 2278, -1000,
	2258, 45, -1000, 45, -1000, 166, 8048, -1000, -1000, -1000,
	2172, -1000, 2219, 39533, -196, -202, 13252, -1000, 1321, -1000,
	1525, 1525, 2217, -196, -1000, -1000, 302, -1000, -1000, 275,
	-1000, -1000, 1831, 513, -1000, -1000, -1000, 1578, 1760, 2034,
	24579, 20051, 20617, 2066, -1000, -1000, 26277, 1841, 1841, 39905,
	201, 39905, 897, 1513, -1000, 1835, -1000, 1834, -1000, 3048,
	1118, 1271, -1000, -1000, 1463, -1000, 897, -1000, -1000, 254,
	-1000, -1000, 1751, 10380, -1000, -1000, 2063, 20617, 730, 1559,
	1553, 842, 2465, -1000, 444, 3063, -1000, -1000, -1000, 776,
	2461, -1000, 1723, 1700, -1000, 37031, -1000, 24579, 24579, 666,
	666, 24579, 24579, 2460, 633, -1000, -1000, 10380, -1000, -1000,
	1525, -1000, -1000, 1525, 1330, -1000, -1000, -1000, -1000, -1000,
	-1000, 1875, -1000, -1000, 3014, -1000, -1000, 1680, 37031, 1680,
	25711, -1000, 3029, 3028, -1000, 1680, 936, -1000, -343, 37031,
	37031, -282, 1813, -1000, 2059, 71, -1000, -1000, 984, -280,
	-284, 57, 66, 1530, -1000, -1000, -1000, -1000, 2215, -1000,
	550, -1000, -1000, -1000, 936, -1000, -1000, -190, -1000, -1000,
	333, -1000, -1000, -1000, 25145, 1841, 1841, -202, -1000, 496,
	2058, -1000, -1000, 274, -1000, -1000, 2057, -1000, -1000, 100,
	-1000, 1527, 1309, -1000, 2459, 8048, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 556, 39836, -1000, 1171, -1000, -4,
	556, 511, 233, -1000, 1812, -1000, -1000, 3061, -1000, 493,
	-1000, -1000, 1934, -1000, -1000, -1000, -1000, -1000, -1000, 2049,
	2045, -1000, -1000, -1000, -1000, -1000, 1809, 2454, -77, 2981,
	2044, -1000, -1000, 2453, 1305, 1279, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1263, 1216, 24579, -1000, -1000, 1934,
	1806, 20051, 1525, -1000, -1000, 1193, 1175, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2450, -1000, -1000, 3026, -282, -1000,
	2038, 657, 79, 66, -1000, 3025, 70, 3023, 3021, 2037,
	-1000, -1000, 566, -272, 39, 36, 27, -1000, -1000, -1000,
	8048, 37031, 441, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	107, -1000, -1000, -1000, -1000, 2034, 2033, -1000, 24579, 2904,
	1978, 385, 3020, 39905, -1000, 1525, -1000, 385, -1000, 338,
	-1000, 1505, -1000, 1791, -1000, 3014, -1000, 324, -1000, -1000,
	-1000, 2103, 8048, 2449, 1525, 2075, -184, 24579, 2730, 2729,
	2477, 2471, 1170, -1000, -1000, 20051, -1000, -1000, 24013, 37031,
	2027, -1000, -1000, 2448, 1788, 85, 60, 3019, -1000, 2027,
	3018, 2027, 2027, -1000, 1683, -1000, 41, 33, 29, -1000,
	-1000, -1000, -1000, 458, -1000, 186, -1000, -1000, -1000, 246,
	-1000, -1000, 2904, -1000, 3017, 471, -1000, 20051, -1000, -1000,
	-1000, 1785, -1000, -1000, -1000, -1000, 1825, -1000, 37031, -1000,
	2746, -1000, 164, 1169, 246, 666, 246, 666, 246, 666,
	246, 666, 183, -1000, -1000, -1000, 1167, -1000, -1000, 2969,
	19485, 54, -1000, -1000, -1000, 2031, -1000, 2027, -1000, -1000,
	566, -1000, -1000, -1000, 2015, -1000, -1000, -1000, -1000, 1525,
	1525, 2014, 2007, 308, -1000, -1000, -1000, 23447, 399, 431,
	381, -1000, 551, -1000, -1000, -1000, 633, -1000, -1000, 2745,
	2742, 3056, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 37031, -1000, 37031, -1000, 1137, -1000, -1000, -1000,
	1270, -1000, -1000, -1000, -1000, -1000, -325, 1784, 1783, -1000,
	-1000, 37031, -1000, 37031, 394, 1781, 10380, 2434, 10380, 2424,
	429, 2411, -1000, -1000, 3062, -1000, 3060, 762, 762, 246,
	246, 246, 246, -1000, 904, -1000, 1497, -1000, 22881, 37031,
	-1000, -1000, 2006, -1000, -1000, -1000, 1123, 2410, 3016, -1000,
	3447, 37031, 3031, 37031, 2407, 1473, 10380, -1000, -1000, -1000,
	1824, 453, -1000, 37031, 5716, -1000, 1267, -1000, -1000, -1000,
	554, 412, -1000, 1106, -1000, 1050, 22315, 1780, 1552, -1000,
	-1000, -1000, -1000, -1000, 1680, 37031, 1045, -1000, 37031, 387,
	-1000, -1000, -1000, 1044, -1000, -1000, -1000, -1000, 554, 2662,
	-1000, 1759, -1000, -1000, 39775, 696, -1000, -1000, 39775, 392,
	-1000, 546, 2405, -1000, -1000, 1041, -1000, 37031, 729, 8048,
	-1000, 392, 39905, -1000, 8048, 1029, -1000, 39905, 1027, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 164, 3086, 241, 162, 3661, 90, 242, 218, 214,
	240, 3659, 3658, 3656, 2928, 2888, 3655, 3652, 3651, 3650,
	3644, 3642, 3640, 3639, 3638, 3637, 3636, 3634, 3633, 3618,
	3617, 3616, 3615, 3614, 3613, 3612, 3611, 3610, 3609, 3607,
	3606, 3605, 3604, 3603, 3602, 3601, 239, 3600, 3598, 3596,
	3595, 3594, 3581, 3580, 3579, 3578, 3575, 3574, 3573, 3572,
	3571, 3570, 3569, 3567, 3566, 3560, 3559, 3558, 3557, 3556,
	3555, 3554, 3539, 3537, 3523, 3512, 3511, 3505, 3499, 209,
	3497, 2868, 3495, 3494, 3493, 3491, 3490, 3489, 3487, 234,
	3485, 3484, 3483, 3482, 3481, 3480, 3479, 3477, 3475, 3474,
	3471, 229, 3467, 3465, 3461, 3460, 3458, 3453, 226, 3452,
	160, 211, 3451, 3450, 3449, 3447, 3446, 3445, 232, 217,
	69, 3444, 42, 3443, 215, 3439, 136, 3437, 134, 3435,
	3433, 3432, 3431, 3428, 3427, 3425, 3424, 3423, 3422, 3421,
	3420, 3418, 3417, 3414, 3413, 86, 3412, 256, 3410, 73,
	3405, 3402, 118, 357, 185, 249, 2537, 244, 243, 179,
	169, 94, 3400, 2903, 3399, 152, 224, 144, 27, 3393,
	123, 3391, 248, 48, 45, 231, 132, 57, 151, 115,
	3389, 219, 103, 102, 3388, 3387, 127, 236, 172, 3383,
	99, 3381, 3380, 3379, 3378, 3375, 190, 176, 3374, 3371,
	120, 3368, 3367, 91, 3365, 70, 188, 153, 181, 3364,
	430, 110, 121, 113, 174, 3362, 129, 3361, 3359, 3357,
	3356, 171, 3354, 3353, 143, 68, 3351, 3350, 3349, 71,
	3348, 49, 3347, 47, 3346, 64, 3343, 3341, 3336, 3334,
	3333, 3330, 3327, 3325, 3322, 3321, 3320, 61, 3319, 3318,
	13, 15, 18, 3316, 26, 3315, 156, 3314, 3313, 3312,
	87, 79, 3311, 83, 1, 54, 67, 3310, 3309, 221,
	245, 97, 138, 3308, 400, 3307, 3304, 3303, 149, 3300,
	566, 3299, 3297, 3296, 3295, 3294, 3293, 19, 3292, 199,
	38, 3291, 119, 126, 3290, 36, 51, 197, 216, 3288,
	3283, 3281, 139, 183, 85, 32, 0, 3279, 148, 3278,
	3277, 3275, 250, 3274, 227, 222, 155, 194, 271, 230,
	3273, 3272, 65, 3269, 146, 46, 56, 131, 11, 21,
	170, 3268, 14, 177, 3267, 192, 3266, 175, 7, 137,
	3265, 3264, 29, 251, 3263, 3262, 3261, 117, 3259, 3258,
	109, 81, 3257, 3256, 3255, 3254, 34, 3253, 35, 20,
	3252, 93, 3251, 252, 3250, 166, 125, 178, 168, 145,
	212, 225, 75, 76, 3248, 1616, 142, 95, 22, 3247,
	220, 3246, 167, 111, 3245, 124, 3241, 238, 381, 201,
	3240, 186, 8, 43, 33, 3239, 9, 3232, 200, 198,
	3231, 3230, 25, 55, 3229, 31, 3227, 3226, 3225, 3223,
	5, 3220, 3219, 3218, 2, 4, 3217, 3, 205, 157,
	116, 89, 72, 3216, 3215, 44, 128, 3214, 141, 154,
	147, 3208, 74, 3206, 3205, 3204, 2656, 3203, 246, 3202,
	3198, 3195, 3193, 3191, 3190, 3189, 3186, 3185, 3184, 98,
	41, 3183, 3182, 3181, 3180, 80, 133, 3179, 3164, 3163,
	3160, 37, 130, 3158, 23, 3156, 28, 30, 39, 3153,
	96, 3152, 16, 173, 3151, 3150, 17, 3148, 3147, 10,
	12, 3144, 3143, 112, 3141, 84, 24, 150, 100, 3140,
	3139, 82, 206, 135, 3138, 3137, 92, 237, 187, 3136,
	158, 233, 247, 3135, 202, 3133, 3132, 3130, 3129, 3128,
	3127, 1022, 3126, 3125, 228, 66, 88, 108, 3124, 3123,
	3122, 78, 159, 106, 107, 62, 77, 3121, 105, 189,
	3119, 182, 3118, 3117, 101, 3115, 3114, 3112, 3111, 180,
	3110, 3109, 184, 223, 3108, 3107, 386, 3104, 3103, 3101,
	3100, 3098, 3096, 3095, 3091, 3089, 3088, 235, 290, 3084,
}

//line mysql_sql.y:10782
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) alterTypeOptionUnion() *tree.TypeOption {
	v, _ := st.union.(*tree.TypeOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionUnion() *tree.ConnectorOption {
	v, _ := st.union.(*tree.ConnectorOption)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) connectorOptionsUnion() []*tree.ConnectorOption {
	v, _ := st.union.([]*tree.ConnectorOption)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) cycleOptionUnion() *tree.CycleOption {
	v, _ := st.union.(*tree.CycleOption)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fillModeUnion() tree.FillMode {
	v, _ := st.union.(tree.FillMode)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) timeFillUnion() *tree.Fill {
	v, _ := st.union.(*tree.Fill)
	return v
}

func (st *yySymType) timeIntervalUnion() *tree.Interval {
	v, _ := st.union.(*tree.Interval)
	return v
}

func (st *yySymType) timeSlidingUnion() *tree.Sliding {
	v, _ := st.union.(*tree.Sliding)
	return v
}

func (st *yySymType) timeWindowUnion() *tree.TimeWindow {
	v, _ := st.union.(*tree.TimeWindow)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 552, 555, 555, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 116, 116, 115, 537, 537, 537, 538,
	538, 112, 133, 132, 135, 135, 134, 134, 131, 131,
	127, 130, 130, 129, 129, 128, 123, 125, 125, 124,
	126, 126, 113, 101, 114, 482, 482, 481, 481, 480,
	480, 433, 433, 479, 479, 479, 478, 478, 478, 477,
	477, 476, 476, 475, 475, 473, 473, 474, 472, 471,
	471, 471, 469, 469, 469, 465, 465, 467, 466, 466,
	468, 460, 460, 463, 463, 461, 461, 461, 461, 464,
	459, 459, 459, 458, 458, 100, 100, 100, 377, 377,
	99, 99, 391, 391, 391, 391, 391, 389, 389, 389,
	389, 389, 389, 388, 388, 387, 387, 392, 392, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 90,
	90, 90, 90, 90, 95, 95, 95, 543, 543, 542,
	542, 544, 544, 544, 544, 545, 545, 93, 93, 93,
	94, 386, 386, 386, 91, 92, 92, 376, 376, 381,
	381, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 385, 385, 385, 383, 383, 382,
	382, 384, 384, 84, 84, 84, 87, 86, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 85, 85, 85,
	85, 85, 85, 80, 80, 80, 80, 80, 79, 79,
	81, 81, 373, 373, 372, 96, 96, 97, 540, 540,
	539, 541, 541, 541, 541, 98, 104, 104, 104, 104,
	104, 104, 104, 103, 103, 106, 106, 105, 107, 89,
	89, 89, 89, 89, 89, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 507, 507, 507, 509, 509, 310,
	311, 556, 313, 309, 309, 309, 503, 503, 504, 505,
	506, 506, 506, 102, 11, 11, 11, 11, 11, 11,
	11, 11, 13, 78, 83, 255, 255, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 243,
	243, 243, 238, 238, 238, 238, 239, 239, 240, 240,
	241, 241, 241, 241, 242, 242, 303, 303, 260, 260,
	260, 262, 262, 261, 259, 257, 257, 257, 257, 257,
	257, 258, 258, 258, 258, 263, 263, 76, 82, 82,
	82, 520, 520, 77, 531, 531, 436, 436, 324, 324,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 441, 442, 320, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 53,
	56, 52, 52, 52, 362, 362, 51, 557, 557, 298,
	298, 64, 63, 55, 65, 66, 67, 68, 69, 70,
	50, 62, 62, 62, 62, 62, 62, 62, 62, 73,
	454, 454, 559, 559, 559, 71, 72, 435, 435, 435,
	61, 60, 59, 58, 57, 57, 49, 49, 48, 48,
	54, 139, 140, 317, 317, 317, 319, 319, 315, 558,
	558, 405, 405, 318, 318, 47, 47, 47, 47, 74,
	316, 316, 297, 314, 314, 314, 12, 12, 10, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 25, 26, 28, 370, 370, 367, 27,
	19, 18, 18, 22, 21, 17, 17, 20, 23, 24,
	24, 9, 9, 9, 9, 14, 14, 15, 160, 160,
	211, 211, 515, 515, 511, 511, 512, 512, 512, 513,
	513, 514, 514, 108, 448, 448, 448, 448, 448, 448,
	8, 182, 182, 447, 447, 447, 447, 447, 447, 374,
	374, 374, 492, 492, 492, 493, 181, 181, 176, 176,
	449, 449, 339, 494, 494, 457, 457, 456, 456, 455,
	455, 179, 179, 180, 180, 163, 163, 119, 119, 462,
	462, 462, 462, 470, 470, 432, 432, 247, 247, 290,
	290, 291, 291, 153, 153, 154, 154, 154, 154, 154,
	154, 546, 546, 547, 548, 549, 549, 550, 550, 550,
	551, 551, 551, 551, 551, 500, 500, 502, 502, 501,
	178, 178, 174, 174, 175, 175, 175, 173, 173, 172,
	171, 171, 170, 168, 168, 168, 169, 169, 169, 186,
	186, 156, 156, 156, 155, 155, 155, 155, 155, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 157, 157, 508, 508, 508, 437, 437, 437, 444,
	444, 271, 271, 272, 272, 270, 270, 158, 158, 159,
	159, 159, 159, 269, 269, 268, 161, 161, 167, 166,
	166, 162, 162, 162, 162, 279, 279, 278, 278, 278,
	278, 111, 117, 117, 118, 185, 185, 277, 276, 276,
	276, 184, 184, 183, 183, 177, 177, 165, 165, 165,
	165, 275, 164, 273, 536, 536, 535, 535, 534, 532,
	532, 532, 533, 533, 533, 533, 484, 484, 484, 484,
	484, 304, 304, 304, 308, 308, 307, 307, 307, 307,
	307, 312, 7, 7, 7, 7, 7, 7, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 38, 195, 196, 39, 197, 197, 198, 198, 199,
	199, 200, 201, 202, 202, 202, 202, 37, 187, 187,
	188, 188, 189, 189, 190, 191, 191, 191, 194, 192,
	193, 193, 554, 554, 553, 36, 36, 29, 146, 146,
	147, 147, 147, 149, 149, 244, 244, 244, 148, 148,
	150, 150, 150, 516, 519, 517, 517, 521, 521, 521,
	522, 522, 522, 522, 523, 523, 30, 136, 141, 526,
	526, 526, 525, 525, 527, 527, 528, 528, 294, 294,
	295, 295, 144, 145, 145, 143, 138, 152, 152, 152,
	152, 152, 137, 142, 518, 524, 524, 524, 371, 371,
	368, 369, 369, 366, 365, 365, 365, 530, 530, 529,
	529, 529, 305, 305, 31, 361, 361, 363, 364, 364,
	364, 355, 355, 355, 355, 35, 359, 359, 360, 360,
	360, 360, 360, 360, 360, 356, 356, 358, 358, 354,
	354, 354, 354, 354, 354, 34, 151, 151, 353, 353,
	350, 350, 348, 348, 349, 349, 347, 347, 347, 351,
	351, 42, 75, 43, 44, 45, 41, 41, 41, 352,
	352, 33, 33, 33, 121, 120, 120, 120, 120, 120,
	293, 293, 292, 292, 122, 40, 223, 223, 424, 424,
	419, 419, 419, 419, 419, 439, 439, 439, 420, 420,
	420, 421, 421, 421, 423, 423, 423, 422, 422, 422,
	422, 422, 438, 438, 440, 440, 440, 393, 393, 394,
	394, 394, 397, 397, 411, 411, 412, 412, 410, 410,
	417, 417, 416, 416, 415, 415, 414, 414, 413, 413,
	413, 413, 408, 408, 407, 407, 395, 395, 395, 395,
	395, 396, 396, 396, 406, 406, 409, 409, 267, 267,
	266, 266, 231, 231, 232, 232, 265, 265, 229, 229,
	230, 230, 230, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 490, 490,
	491, 234, 234, 245, 245, 245, 245, 245, 245, 233,
	233, 235, 235, 212, 212, 210, 210, 203, 203, 204,
	204, 205, 205, 205, 209, 209, 208, 208, 208, 208,
	206, 206, 207, 207, 207, 207, 207, 207, 379, 379,
	487, 487, 488, 488, 483, 483, 483, 486, 486, 486,
	486, 486, 486, 489, 489, 489, 485, 485, 213, 288,
	288, 288, 306, 306, 306, 306, 287, 287, 287, 228,
	228, 227, 227, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 378, 378, 321, 321, 322,
	322, 254, 253, 253, 253, 253, 253, 251, 252, 250,
	250, 250, 250, 250, 249, 249, 248, 248, 248, 357,
	357, 246, 246, 237, 237, 237, 236, 236, 236, 418,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 285, 285, 285, 286,
	286, 286, 331, 331, 336, 336, 499, 499, 498, 214,
	214, 214, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 224, 224, 224, 402, 402, 402, 402, 403, 403,
	403, 403, 404, 404, 404, 400, 400, 401, 401, 340,
	341, 341, 445, 445, 446, 446, 398, 398, 399, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 453,
	453, 453, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 510, 510,
	510, 495, 495, 495, 496, 496, 496, 496, 496, 496,
	496, 496, 496, 496, 496, 496, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 283, 283, 283, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 342, 342, 343, 343, 450, 450, 450, 450, 450,
	450, 451, 451, 452, 452, 452, 452, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 329, 280, 280, 280,
	344, 337, 337, 338, 338, 332, 332, 332, 332, 332,
	332, 332, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 333, 333, 335, 335, 346, 346,
	346, 345, 345, 345, 345, 345, 345, 345, 226, 226,
	226, 226, 326, 326, 326, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 216, 216, 216,
	216, 220, 220, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 221, 221, 221,
	221, 221, 219, 219, 219, 219, 219, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 109, 110, 110, 218, 289,
	289, 425, 425, 428, 428, 426, 426, 427, 429, 429,
	429, 430, 430, 430, 431, 431, 431, 434, 434, 296,
	296, 296, 302, 302, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 10, 7, 4, 1, 3, 2, 4, 5,
	5, 6, 5, 5, 3, 2, 2, 1, 3, 4,
	3, 7, 5, 8, 2, 2, 1, 3, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	2, 1, 3, 2, 1, 2, 2, 1, 2, 3,
	2, 3, 6, 3, 3, 1, 1, 7, 7, 8,
	8, 0, 4, 7, 0, 3, 0, 2, 0, 1,
	1, 1, 1, 4, 2, 2, 3, 3, 4, 5,
	3, 4, 4, 2, 2, 2, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 2, 5, 5, 0, 2, 7, 0, 1, 0,
	1, 5, 5, 3, 3, 2, 4, 4, 4, 4,
	4, 1, 1, 1, 3, 3, 1, 1, 1, 6,
	0, 1, 1, 1, 1, 5, 5, 0, 1, 1,
	3, 3, 3, 4, 6, 7, 4, 4, 7, 8,
	3, 3, 3, 0, 2, 2, 0, 2, 2, 1,
	1, 1, 1, 0, 1, 4, 4, 5, 4, 3,
	1, 3, 1, 1, 3, 5, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 4, 1, 3, 1, 4,
	6, 6, 4, 4, 4, 4, 4, 3, 6, 3,
	5, 1, 1, 2, 2, 11, 8, 9, 1, 3,
	2, 4, 0, 2, 0, 1, 1, 1, 1, 0,
	1, 0, 1, 4, 2, 1, 5, 4, 4, 2,
	5, 1, 3, 2, 1, 5, 4, 4, 2, 0,
	5, 4, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 6, 4, 5, 7, 4,
	5, 0, 1, 3, 8, 0, 6, 0, 4, 6,
	1, 1, 1, 1, 1, 2, 3, 1, 3, 6,
	0, 3, 0, 1, 2, 4, 4, 0, 1, 3,
	1, 3, 3, 0, 1, 1, 0, 2, 2, 0,
	2, 3, 3, 3, 1, 3, 3, 3, 3, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 7, 7, 1, 1, 1, 0, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 2, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 4, 4, 3, 2, 2, 2, 3, 2,
	3, 4, 1, 3, 4, 0, 2, 1, 1, 2,
	2, 0, 1, 2, 4, 1, 3, 1, 3, 2,
	3, 1, 4, 3, 0, 1, 1, 2, 5, 2,
	2, 2, 0, 2, 3, 3, 0, 1, 3, 1,
	3, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 7, 1, 1, 7, 1, 3, 0, 1, 1,
	3, 1, 3, 0, 1, 1, 1, 14, 1, 3,
	0, 1, 1, 3, 1, 1, 2, 4, 1, 1,
	1, 1, 0, 1, 2, 9, 9, 7, 1, 2,
	3, 3, 3, 0, 4, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 4, 1, 1, 3, 4, 3,
	0, 1, 1, 1, 0, 2, 7, 8, 8, 0,
	3, 3, 0, 3, 0, 3, 0, 5, 1, 3,
	0, 3, 3, 0, 2, 9, 6, 0, 2, 2,
	3, 3, 4, 4, 1, 0, 2, 2, 1, 3,
	2, 1, 3, 2, 1, 3, 2, 0, 1, 3,
	4, 3, 1, 1, 4, 1, 3, 1, 1, 1,
	1, 0, 1, 1, 1, 11, 0, 2, 3, 3,
	2, 2, 3, 1, 1, 1, 3, 3, 4, 0,
	2, 2, 2, 2, 2, 6, 0, 4, 1, 1,
	0, 3, 0, 1, 1, 2, 4, 4, 4, 0,
	1, 8, 2, 4, 4, 4, 9, 10, 8, 0,
	2, 11, 9, 11, 2, 2, 8, 4, 5, 3,
	1, 3, 0, 3, 5, 10, 0, 2, 0, 2,
	0, 3, 2, 4, 3, 0, 2, 1, 0, 2,
	3, 0, 2, 3, 0, 2, 1, 0, 3, 2,
	4, 3, 0, 1, 0, 1, 1, 0, 6, 0,
	3, 5, 0, 4, 0, 3, 1, 3, 4, 5,
	0, 3, 1, 3, 2, 3, 1, 2, 0, 4,
	6, 5, 0, 2, 0, 2, 4, 5, 4, 5,
	1, 5, 6, 5, 0, 3, 0, 1, 1, 3,
	3, 3, 0, 4, 1, 3, 3, 3, 0, 1,
	1, 3, 2, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 5, 4, 1, 3,
	3, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 0, 1, 1,
	3, 1, 1, 1, 1, 1, 7, 9, 7, 9,
	2, 1, 7, 9, 7, 9, 8, 5, 0, 1,
	0, 1, 1, 1, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 3, 1,
	3, 5, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 2, 1, 2, 2, 1, 1, 2, 2,
	2, 3, 3, 2, 2, 1, 5, 6, 4, 1,
	1, 1, 5, 4, 1, 1, 2, 0, 1, 1,
	2, 5, 0, 1, 1, 2, 2, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 2, 2, 2, 0,
	3, 0, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 3, 5, 2, 2,
	2, 2, 1, 1, 2, 5, 6, 6, 6, 6,
	1, 1, 1, 1, 1, 1, 4, 4, 4, 7,
	7, 7, 0, 2, 0, 1, 1, 2, 4, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 1, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 2, 5, 0, 1, 3,
	0, 1, 0, 2, 0, 2, 0, 1, 6, 8,
	8, 6, 6, 5, 5, 5, 6, 6, 6, 6,
	5, 6, 6, 6, 6, 6, 6, 6, 6, 1,
	1, 1, 4, 4, 6, 8, 6, 4, 5, 4,
	4, 4, 3, 4, 6, 6, 7, 4, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 8, 4, 2, 3, 2,
	4, 2, 2, 4, 6, 2, 2, 4, 6, 4,
	2, 0, 1, 2, 3, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 1,
	3, 0, 1, 1, 3, 3, 3, 3, 3, 2,
	1, 1, 3, 4, 3, 4, 3, 4, 3, 4,
	3, 4, 1, 3, 4, 4, 5, 4, 5, 3,
	4, 5, 6, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 1, 1, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 4, 4, 1, 2, 3, 5, 1, 1,
	3, 0, 1, 0, 3, 0, 3, 3, 0, 3,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -552, -555, -2, -5, 608, -1, -4, -110, -84,
	-7, -112, -113, -8, -108, -9, -10, -12, -88, -103,
	-105, -107, -106, -46, -11, -102, -79, -80, -90, -96,
	-99, -100, -101, -114, -109, -111, -153, -115, -116, 598,
	-85, -86, -87, -32, -31, -30, -29, -136, -141, 604,
	443, 13, 492, -14, -15, -500, -16, 257, -309, -310,
	-311, -313, -556, -47, -48, -49, -57, -58, -59, -60,
	-61, -71, -72, -73, -50, -51, -52, -55, -53, -64,
	-63, -65, -66, -67, -68, -69, -70, -54, -139, -140,
	-74, -56, -75, -77, -76, -82, -78, -83, -138, -143,
	-13, 232, -81, 75, -91, -92, -93, -94, -95, -97,
	-98, 368, 374, 431, 597, 60, -154, -156, 614, 615,
	157, 158, 160, 161, -33, -34, -35, -36, -37, -38,
	-40, -39, -41, -42, -43, -44, -45, 228, 15, 535,
	-17, -20, -18, -21, -19, -27, -28, -26, -23, -25,
	-137, -24, -142, -22, 252, 251, 37, 318, 319, 320,
	372, 250, 229, 14, 30, 41, 348, -155, 81, 527,
	528, 530, 230, -157, 12, 618, -6, -3, -2, -123,
	-127, -131, -134, -135, -132, -133, -4, -110, 115, 242,
	599, -306, 364, 600, 602, 601, 84, 92, -299, -301,
	368, 374, 597, 615, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 564,
	565, 555, 556, 557, 558, 559, 560, 561, 562, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 495, 584, 585, 586, 587, 523, 583,
	346, 347, 532, 269, 293, 399, 299, 306, 157, 176,
	170, 198, 190, 528, 165, 273, 311, 274, 91, 160,
	478, 105, 455, 428, 163, 288, 290, 292, 524, 525,
	295, 294, 296, 298, 526, 275, 349, 186, 181, 287,
	271, 179, 276, 39, 277, 203, 278, 279, 537, 451,
	345, 457, 303, 426, 180, 452, 291, 454, 207, 211,
	469, 470, 174, 175, 459, 472, 202, 205, 206, 249,
	342, 343, 344, 42, 534, 261, 473, 209, 201, 197,
	481, 307, 305, 200, 173, 196, 272, 64, 213, 212,
	214, 422, 423, 424, 425, 280, 281, 362, 468, 193,
	182, 350, 166, 22, 476, 256, 456, 375, 282, 300,
	308, 208, 210, 263, 268, 536, 527, 430, 267, 304,
	474, 178, 260, 289, 255, 477, 167, 530, 377, 283,
	161, 297, 471, 480, 63, 390, 172, 164, 246, 158,
	265, 270, 284, 285, 286, 521, 310, 309, 301, 529,
	194, 262, 199, 184, 171, 195, 159, 264, 479, 391,
	595, 348, 409, 192, 189, 266, 239, 475, 458, 162,
	413, 392, 187, 312, 591, 592, 593, 363, 341, 313,
	314, 185, 253, 449, 450, 317, 419, 333, 393, 429,
	400, 394, 220, 221, 321, 461, 463, 204, 594, 322,
	323, 324, 453, 325, 326, 327, 328, 367, 55, 57,
	93, 95, 616, 62, -384, -382, -306, 528, 597, 374,
	527, 530, 368, 348, 615, -197, -306, 617, -163, 38,
	-210, -306, -163, -81, -15, -14, -155, -156, -210, 236,
	-314, 23, 426, -89, 427, 232, 81, -306, -9, -101,
	-8, -108, -79, -153, 431, -312, -306, 318, 318, -312,
	236, -306, 267, 407, -436, 242, -388, -361, 268, -387,
	-363, -390, -364, 31, 228, 230, 229, 264, 15, 372,
	238, 13, 12, 373, 250, 24, 25, 27, 14, 374,
	376, 28, 377, 380, 381, 382, 41, 385, 386, 257,
	84, 92, 87, 275, -196, -306, -338, -332, 112, 258,
	-334, -327, -328, -330, -479, -473, -325, 81, 139, 140,
	147, 113, -329, -418, 35, 115, 544, 583, 493, -281,
	-282, -283, -284, -285, -286, -306, -474, -472, 87, 96,
	99, 102, 103, 101, 100, 151, 183, 98, 88, 152,
	-156, 84, -495, 553, -300, 576, 584, 585, 586, 587,
	575, 60, -443, -452, 235, -450, 150, 188, 253, 184,
	13, 145, 419, 185, 550, 572, 495, 554, 564, 579,
	546, 547, 548, 541, 542, 543, 545, 555, 557, 571,
	-453, 567, 577, 578, 563, 580, 581, 582, 613, 86,
	85, 570, 569, 556, 551, 552, 558, 540, 549, 559,
	560, 568, 573, 574, 356, 105, 357, 358, 485, 349,
	359, 242, 426, 69, 360, 361, 362, 363, 364, 492,
	365, 70, 366, 355, 257, 409, 367, 187, 204, 497,
	496, 498, 489, 486, 484, 487, 488, 490, 491, 561,
	562, 566, -117, -118, 589, -546, -274, -547, 6, 7,
	8, 9, -548, 152, -537, 428, 536, 87, 162, 159,
	-375, 162, 111, 167, 166, -375, 321, 263, -352, -146,
	346, 409, 325, 93, 267, -355, -353, 524, -438, 315,
	311, 237, 108, -147, 247, 246, 106, 485, 235, 383,
	306, 55, 57, -511, -512, 225, 226, 227, -502, 518,
	-501, -306, 358, 95, 26, 236, 369, 263, 463, 461,
	462, 464, 465, 466, 467, -62, -454, -435, 458, 457,
	-318, 450, 456, 448, 460, 451, 347, 327, 326, 228,
	609, 525, 519, -296, 393, 429, 482, 483, 370, 430,
	469, 471, 452, 105, 191, 188, 237, 239, 236, 346,
	485, 409, 93, 325, -511, 159, 469, 471, 267, 407,
	40, -381, 419, -380, -382, 470, 481, 85, 86, 468,
	-296, 105, 449, 449, -546, -274, -154, -156, -111, -500,
	526, 526, 526, 237, 346, 409, 267, 238, 236, 522,
	524, 239, 485, 235, 318, 369, 263, 325, 93, -437,
	-508, 31, -444, 222, 223, 224, 32, 33, -1, 119,
	618, -332, -332, -6, 621, -6, -332, -306, -306, 154,
	-216, -220, -217, -219, -218, -222, -221, 188, 189, 150,
	192, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	205, 206, 203, 30, 204, 253, 184, 185, 186, 187,
	207, 170, 190, 533, 215, 171, 216, 172, 217, 173,
	218, 174, 175, 219, 176, 179, 180, 181, 182, 178,
	153, 81, 153, 87, -179, 259, -210, 153, -179, -546,
	-172, -173, 11, -210, -287, -306, 428, 122, -89, -89,
	427, -503, -504, -505, -507, 232, 427, 426, 153, 275,
	16, -312, -312, 79, -210, -363, 267, -388, -361, 35,
	78, 154, 240, 154, 78, 81, 370, 346, 409, 371,
	485, 236, 383, 239, 267, 384, 346, 409, 236, 239,
	485, 267, 346, 236, 239, 409, 267, 384, 448, 449,
	239, 26, 375, 378, 379, 449, -458, 481, 154, 111,
	108, 109, 110, -332, 129, -345, 122, 123, 124, 125,
	126, 127, 128, 136, 135, 146, 139, 140, 141, 142,
	143, 144, 145, 137, 138, 132, 112, 130, 134, 131,
	114, -156, -332, -338, 60, -330, -330, -330, -330, -418,
	-336, -332, 81, 81, 81, 153, 100, 87, -332, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, -451, 81, 81, -342, -343, 81, 81, -325, -287,
	81, 87, 87, 81, 81, 81, 87, -343, -343, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, -173, 154, -172, 81, -172, -173, -157, -156,
	31, 32, 31, 32, 31, 32, 31, 32, -549, 606,
	81, 96, 616, 220, 474, 535, 165, 166, 167, -195,
	-306, -197, 369, 239, 522, 521, 239, -147, -350, 242,
	-350, -350, -350, -350, 238, -350, 23, 236, 236, 236,
	-350, 492, 122, 122, 58, -513, 169, 154, -502, -178,
	81, -317, 130, 134, -317, 23, 265, 265, 265, -317,
	305, -557, -558, 16, 132, -315, -558, -315, -315, -317,
	-559, 238, 459, 42, 266, 265, -174, -175, 21, -174,
	453, 449, -405, 454, 455, -319, -558, -318, -317, -317,
	-318, -317, -317, -317, 236, 239, 485, 325, 610, -557,
	-557, 30, 30, -436, -436, -210, -436, 519, -297, -306,
	-436, -436, -436, -514, 241, -543, -542, 472, -545, 474,
	159, -382, 159, -382, -363, 267, 267, 154, 122, 23,
	-383, 122, 133, -382, -382, -383, -383, -233, 40, -305,
	150, -306, 87, -233, 40, -540, -539, -210, -173, -157,
	-156, 82, 82, 82, 529, 529, 529, -436, -436, -436,
	-436, -436, -438, -436, -436, -436, -436, -436, -312, -187,
	-306, -197, 242, -436, -436, -158, -159, 141, -332, -306,
	-158, -3, -125, -124, 116, 117, 119, 600, 364, 599,
	603, 597, -382, 40, -431, 391, 390, -425, -427, 81,
	-426, 81, -426, -426, -426, -426, -426, 81, 81, -428,
	81, -428, -428, -425, -429, 81, -429, -430, 81, -430,
	-429, -306, -337, -338, -306, 38, -447, 60, -153, 81,
	30, 81, -306, -448, 60, -153, 81, 30, -173, -119,
	38, -175, 20, 153, 96, 87, -89, 82, 154, -506,
	102, 103, -509, 202, 194, -306, -104, 87, -7, -8,
	-9, -10, -46, -79, -153, -475, -473, 81, 31, 418,
	78, 16, -389, 236, 485, 369, 263, 239, 346, -387,
	-370, -367, -365, -305, -363, -366, -365, -392, -287, 449,
	-120, 433, 432, 317, -332, -332, -332, -332, -332, 101,
	112, 341, 102, 103, -327, -346, 31, 313, 314, -328,
	-328, -328, -328, -328, -328, -328, -328, -328, -328, -328,
	-328, -335, -344, -418, 81, 132, 130, 134, 131, 114,
	-330, -330, -328, -328, 82, 154, -499, -498, 116, -332,
	-332, -332, -306, -496, -497, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 360, 355, 361, 359,
	349, 367, 362, 363, 187, 516, 517, 510, 511, 512,
	513, 514, 515, -337, -337, -332, -496, -337, -280, 32,
	31, -338, -338, -338, 82, -332, -510, 339, 338, 340,
	-176, -306, -337, 82, 82, 82, 96, -338, -338, -337,
	-328, -337, -497, -280, -280, -280, -280, 141, -338, -338,
	-280, -280, -280, -280, 141, -280, -280, -280, -280, -280,
	-280, -280, -280, 82, 82, 82, -338, -174, -118, -456,
	-455, -332, 40, -119, -175, -550, 607, 81, -287, -538,
	87, 87, 619, 475, 476, 163, 166, 165, 34, 81,
	-187, -350, -350, 522, -350, -516, -306, 112, -371, -368,
	-365, -306, -306, -361, -306, -306, -210, -350, -350, -350,
	-210, -244, 52, 53, 54, -365, -148, 55, 56, -514,
	-501, 34, -177, -306, -270, 17, -330, -330, -365, 267,
	-557, -317, -317, -298, -297, -319, -314, -319, -319, -270,
	-315, -317, -317, -332, -319, -315, -270, -306, 449, -270,
	-270, -405, -316, -306, -316, -350, -297, -298, -298, -210,
	-210, -255, -256, 233, 353, 354, 231, 229, 11, 230,
	-264, 306, -351, 493, -239, -240, 76, 41, -242, 395,
	388, 269, 273, 91, 274, 428, 275, 238, 277, 278,
	279, 294, 296, 249, 280, 281, 282, 419, 283, 158,
	295, 284, 285, 286, 371, -234, 6, 328, 40, 50,
	51, 442, 441, 538, 535, 270, -516, -516, 30, 30,
	-371, -306, -306, -166, -161, -165, -162, -167, -273, -275,
	-164, 81, -210, -156, -306, 154, 473, 475, 476, -543,
	-383, -543, -383, 31, 418, -386, 418, 31, -361, -380,
	469, 471, -376, 87, 419, -366, -385, 78, 150, -455,
	-383, -383, -385, -385, 149, 154, -541, 474, 475, 225,
	-174, 96, 96, 96, -212, -210, -516, -370, -361, -306,
	-436, -212, -212, -212, -306, -306, 81, 153, 35, -306,
	-306, -269, 154, -268, 16, -307, -306, 34, 87, 153,
	-269, -126, -124, 118, -332, -6, 599, -332, -6, -6,
	-332, -6, -332, -434, 392, 96, 96, -289, 87, -289,
	96, 96, 96, 82, 87, -374, 78, -449, -339, -494,
	589, -181, 82, -176, -492, -493, -176, -180, -306, -449,
	-181, 82, -492, -174, 590, -119, -171, -170, -332, -306,
	23, -89, -504, 153, 154, -177, -389, -369, -366, -391,
	141, -306, -377, 154, 535, 622, 85, 240, -530, -529,
	410, 82, 154, -459, 241, 492, 87, 619, 426, 220,
	221, 101, 341, 102, 103, -418, -338, -335, -330, -330,
	-328, -328, -333, 254, -333, 111, -332, -331, -498, 118,
	-332, 34, 34, 154, 79, 153, 82, 82, 16, 16,
	82, -332, 82, 82, 82, 82, 16, 16, -332, 82,
	153, 82, 82, 82, 82, 79, 82, 154, 82, 154,
	-338, -338, -332, -338, 82, 82, 82, -332, -332, -332,
	-338, 82, -332, -332, -332, -332, -332, -332, -332, -332,
	-399, 444, -399, -399, 154, 154, 82, -119, 81, 96,
	154, -293, -292, 87, 164, 167, 167, 166, -196, -198,
	-199, -200, -201, -202, 132, 155, 156, 81, -210, -210,
	-350, -210, -519, 396, 35, -531, 154, 40, -529, 485,
	-144, 317, -354, 79, -151, 16, 535, -210, -210, -210,
	-223, 34, 16, -160, -211, -306, 81, 82, 154, -332,
	-362, 79, -306, -298, -270, -270, -319, -270, -270, 154,
	22, -317, -319, -319, -315, 153, -297, -424, 34, -178,
	154, -209, -303, -206, -208, 244, -322, -207, 247, -488,
	245, 243, 106, 248, 302, 107, 238, -303, -303, 244,
	-243, 240, 34, -303, -258, 238, 344, 302, 245, 20,
	-257, 238, 107, -306, 244, 248, 243, -302, 122, -296,
	149, 240, 42, 371, -302, 539, -302, -302, -302, -302,
	-302, -302, -302, 276, 276, -302, -302, -302, -302, -302,
	-302, -302, -302, -302, -302, -302, 159, -302, -302, -302,
	-302, -302, -302, 81, 271, 272, -520, 396, 30, 352,
	352, -531, 30, -152, 346, 30, -276, -277, -278, -279,
	67, 71, 73, 68, 69, 70, 74, 30, 154, -304,
	-308, 34, -306, 87, -304, -156, -161, -166, -304, 81,
	-542, -544, 477, 474, 480, -385, -385, 240, 81, 122,
	-385, -385, 40, -305, -539, 481, 475, -119, 154, 78,
	-212, -188, -189, -190, -191, -216, -287, 189, 192, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 205, 206,
	203, 204, 253, 184, 185, 186, 187, 207, 170, 190,
	171, 172, 173, 174, 175, 176, 179, 180, 181, 182,
	178, -306, -197, -270, -159, -161, -306, 87, -306, 141,
	-270, 119, -6, 117, -130, -129, -128, 120, 597, 603,
	119, 119, 119, 82, 82, 82, 154, 82, 82, 82,
	154, 82, 154, -462, 454, 39, 154, 81, 82, 154,
	60, 154, 122, 82, 154, 82, 60, -119, 87, 154,
	-168, 36, 37, 153, 428, -306, -473, 82, -391, 154,
	240, 153, 153, -367, 374, -305, -369, 20, 535, -287,
	38, -293, 122, 619, -306, 82, -333, -333, 111, -330,
	-327, 82, 119, -332, 117, -214, -216, 390, 391, -214,
	-215, -221, 150, 188, 253, 187, 186, 184, 390, 391,
	-233, -306, -332, -332, 82, -332, -332, 16, -306, -233,
	-328, -332, -173, -173, 82, 82, -398, -399, -398, -398,
	82, 82, 82, 82, -398, 82, 82, 82, 82, 82,
	82, 82, 82, 81, 96, 99, -455, -551, 62, 605,
	61, 418, 101, 307, 154, 96, 620, 154, 122, 167,
	382, 82, 154, -287, -188, -178, 81, -231, 535, -210,
	-178, -522, 456, 398, 408, -302, -324, -323, 348, 41,
	-441, 419, 404, 405, -368, 267, -306, -528, 94, 122,
	78, 332, 336, 333, 334, 335, -348, -349, -347, -351,
	-516, 81, 81, 81, 81, -419, 322, -216, -210, -160,
	-306, 16, 154, -515, 153, -1, -306, -361, -317, -270,
	-332, -332, -270, -317, -317, -319, -306, -419, -216, 34,
	-256, -213, -287, -207, -487, -488, -350, -306, 107, -487,
	107, 81, -213, -287, -287, -259, -316, -287, -306, -306,
	-306, -306, -262, -261, -287, -306, -306, -306, 107, 107,
	-238, 40, 47, 48, 49, -302, -302, 191, -241, 40,
	418, 420, 421, 96, 96, 96, 96, 87, 87, 87,
	-302, -302, 96, 87, -308, 87, -489, 166, 44, 45,
	96, 96, 96, 96, 40, 87, -245, 40, 287, 291,
	288, 289, 290, 87, 96, 40, 96, 40, 96, 40,
	-306, 81, -490, -491, 87, -522, -302, 352, -382, 122,
	-324, -527, 317, -145, 91, 31, -182, 233, 230, -516,
	-373, -372, -287, -165, -165, -165, -165, 67, 67, 67,
	72, 67, 72, 67, -278, -373, -167, -178, -308, 82,
	-536, -535, -534, -532, 75, 241, 76, -337, 474, 478,
	479, -369, -320, 87, -376, -186, 23, -210, -210, -440,
	297, 298, 82, 154, -216, -272, 18, 153, -272, 115,
	-6, -126, -128, -332, -6, -332, 599, 364, 600, 87,
	96, 96, -470, 439, 434, 436, 107, -339, -457, -456,
	60, -153, -176, -449, -493, -455, -306, 60, -153, -449,
	-186, -462, -170, -169, 43, -306, 96, 16, -366, -361,
	141, 141, -306, 375, -377, 87, 397, 87, 236, 620,
	87, -293, -327, -332, 82, -224, 175, 174, -224, 82,
	82, -426, -426, -425, -428, -425, -224, -224, 82, 82,
	23, 82, 82, 82, -332, 82, 82, 154, -445, 494,
	-446, 565, -398, -398, -398, -398, -398, -398, -398, -398,
	-398, -398, -398, -398, -398, -398, -341, -340, 259, 440,
	612, 612, 82, 154, -496, 154, -292, 87, 87, 87,
	-200, -216, 82, 34, -203, -204, -205, -213, -206, -208,
	34, 81, 81, 34, -523, 91, -517, 87, -306, -524,
	91, 399, 152, 350, 40, 400, 401, 416, 345, 96,
	96, 406, -518, -306, -152, -526, 51, 122, 87, -210,
	-347, -296, 149, 278, 325, -267, -266, -306, 87, -203,
	-203, -203, -420, 324, 20, 96, 140, -179, 79, 153,
	-161, -211, -306, 141, 82, -270, -270, -270, -317, -420,
	-153, -260, 44, 46, -216, -485, -306, -483, -485, -306,
	-483, -483, -350, -332, -260, -213, 240, 30, 230, -263,
	330, 331, 336, -378, 303, 112, -378, 154, -168, -306,
	-233, -233, 30, 87, 87, -212, 82, 154, 122, -523,
	-517, 122, -383, 87, -524, -528, 122, 87, 154, -182,
	-182, -270, 154, 122, -184, -183, 78, 79, -185, 78,
	-183, 67, 67, -270, -534, -533, 23, -488, -488, -488,
	82, 82, 14, -190, 40, -271, 19, 20, 141, -271,
	119, 117, 119, 119, -306, 82, 82, -432, 591, -466,
	-468, 434, 20, 20, 14, 241, 82, -449, -449, -470,
	44, 45, -361, -377, 419, -210, 154, 620, -332, 82,
	-332, 82, 87, 82, 87, -173, 20, 82, 82, 82,
	-332, 82, -496, 234, -153, 82, 154, -153, -232, -265,
	-306, 87, -203, -153, 87, -521, 410, 87, 87, 96,
	40, 96, 152, 402, -442, -145, -525, 91, 122, 619,
	81, -302, -302, -302, -306, 82, 154, -302, -302, 82,
	82, 82, -421, 258, 96, 140, 96, 140, 96, -304,
	-161, -306, -270, -515, 153, -270, -421, -287, -228, -227,
	-225, 101, 112, 40, 388, -226, 91, 149, 292, 295,
	294, 270, 293, -254, -321, 78, 394, 330, 331, -351,
	591, 523, 243, 106, 107, 376, -322, 81, 81, 79,
	312, 81, 81, -485, 82, -260, -287, 40, -263, 40,
	342, 303, -261, 149, -233, 82, -491, 87, -521, 87,
	-385, -526, 87, -516, -173, -372, -455, -332, 81, -332,
	81, 67, 11, 18, -325, -332, -338, 242, -6, 600,
	364, -247, 592, 87, 20, 87, -464, 87, -373, -432,
	-122, -460, -405, 275, 82, 82, -398, -398, -401, -400,
	-404, 440, 304, 447, -338, 82, 82, -192, -216, -149,
	535, -231, -205, 82, 154, -302, -302, 82, -149, 20,
	535, 349, 40, 96, 40, 403, 122, 102, 103, -294,
	-295, 87, -356, -358, -287, 81, -233, -235, -305, 150,
	87, -266, -325, -325, -229, -230, -264, -351, -121, -120,
	-229, -422, 158, 96, 140, 96, 96, -270, -270, -422,
	-225, 101, -328, 87, -235, -236, 40, 291, 287, 122,
	122, -237, 40, 271, 272, -246, 81, 302, 14, 191,
	81, 107, 107, -210, -356, -356, -486, 332, 333, 334,
	337, 336, 335, -486, -356, -356, 81, -379, -378, -328,
	-302, -302, 149, -525, -174, -177, -484, -306, 243, 20,
	20, -306, -306, -290, 593, 96, 87, 436, -247, -433,
	594, -469, 439, -463, -461, 434, 435, 436, 437, 122,
	82, -403, 114, 402, 406, -326, -329, 96, 99, 183,
	152, 534, -150, 59, 481, -265, -325, -325, -231, 87,
	397, 87, 349, 87, 620, 154, 122, 82, 154, -425,
	-332, -393, 259, 154, -264, -296, -122, -393, -439, 166,
	323, 535, 96, 140, 96, -173, -423, 166, 323, 87,
	87, 96, 81, -450, 30, 87, -357, 81, 82, 82,
	82, 82, -356, 96, -233, -302, 82, 82, 154, 81,
	20, -290, 87, -471, 241, -467, -468, 438, -461, 20,
	436, 20, 20, 87, -402, -403, 406, -326, -329, 589,
	445, 445, 445, -194, -306, 302, 419, -295, 87, -359,
	-358, -168, 82, -394, 311, 20, -264, -302, -394, 323,
	96, 140, 96, -174, 323, 82, -332, -342, -302, 82,
	-249, -248, 531, -356, -359, 79, -359, 79, -359, 79,
	-359, 79, 82, -233, -306, 243, -291, -306, -464, -478,
	81, 96, -466, -465, -467, 20, -464, 20, -464, -464,
	111, 446, 446, 446, -193, 34, 441, 375, -360, 249,
	342, 343, 91, 535, 330, 331, -168, 20, -395, 304,
	305, -396, -409, 307, -233, 96, 82, -306, -253, -251,
	-252, 78, 452, 300, 301, 82, -486, -486, -486, -486,
	-254, 82, 154, -482, 30, 82, -477, -476, -288, -472,
	-306, 439, 440, 87, -464, -402, 87, -302, -302, 87,
	87, 329, -287, 81, -407, 308, 81, -405, 81, -405,
	107, 333, -378, -252, 78, -251, 78, 15, 14, -359,
	-359, -359, -359, -306, -481, -480, -479, 82, 154, 153,
	-554, -553, 611, 96, 96, -306, -392, -397, 309, 96,
	-328, 81, -328, 81, -406, 306, 81, -250, 297, 298,
	30, 166, -250, 154, 122, -476, -306, 87, 82, -411,
	81, 20, 82, -392, 82, -392, 81, 122, -328, 101,
	40, 299, -480, 40, -332, 153, -412, -410, 259, -396,
	82, 82, 82, -392, 96, 82, -306, 82, 154, -306,
	-408, 310, 82, -410, -413, 60, 96, -417, -414, 81,
	-264, 261, 132, -417, -264, -416, -415, 309, 262, 81,
	82, 154, -306, 258, 81, -338, -415, -414, -338, 82,
	82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 842, 843, 844, 845, 846, 847, 0,
	0, 0, 0, 601, 602, 0, 568, 0, 0, 0,
	0, 0, 0, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 288, 284, 209, 210, 211, 212, 213, 295,
	296, 436, 0, 0, 0, 0, 683, -2, 56, 0,
	277, 0, 268, 268, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, -2, 614, 0,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 343, 344, 345, 339, 340, 342,
	341, -2, 0, 614, 0, 0, 0, 691, 0, 0,
	0, 0, 0, 734, 756, 23, 0, 7, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 0, 0,
	19, 0, 19, 0, 0, 0, 1232, 1233, 1234, 1235,
	-2, 1737, 1715, 1889, 1902, 1903, 1904, 1905, 1906, 1907,
	1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917,
	1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927,
	1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937,
	1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
	1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785,
	1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 1806,
	1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816,
	1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826,
	1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836,
	1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846,
	1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856,
	1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866,
	1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876,
	1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886,
	1887, 1888, 1890, 1891, 0, 261, 259, 1687, 1715, 1737,
	1792, 1803, 1804, 1838, 1889, 0, 865, 0, 661, 0,
	666, 1185, 661, 289, 603, 604, 691, 717, 566, 0,
	325, 0, 1728, 329, 0, 0, 0, 563, 319, 320,
	321, 322, 323, 324, 0, 0, 841, 0, 0, 315,
	0, 283, 1794, 0, 0, 0, 0, 0, 0, 153,
	975, 155, 977, 159, 166, 0, 0, 171, 172, 175,
	176, 177, 178, 179, 0, 183, 0, 185, 188, 0,
	190, 191, 0, 194, 195, 196, 0, 206, 207, 208,
	978, 979, 980, -2, 84, 863, 1645, 1533, 0, 1540,
	1541, 1552, 1563, 1312, 1313, 1314, 1315, 0, 0, 0,
	0, 0, 1322, 1323, 0, 1344, 1906, 1947, 0, 1330,
	1331, 1332, 1333, 1334, 1335, 93, 105, 106, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 0, 1593, 1594, 1595, 1506,
	1299, 1232, 0, 1915, 0, 1937, 1942, 1943, 1944, 1945,
	1936, 0, 0, 1491, 0, 1481, 0, 0, -2, -2,
	0, 0, 1863, -2, 1912, 1933, 1941, 1916, 1917, 1940,
	1908, 1909, 1910, 1903, 1904, 1905, 1907, 1919, 1921, 1932,
	0, 1928, 1938, 1939, 0, 0, 0, 0, 0, 107,
	108, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1497, -2, 1499, 1500, 1502, -2,
	1504, 1505, -2, 1508, 1509, 1510, -2, -2, 1513, 1514,
	1515, 1516, 1517, 1518, 1521, -2, -2, -2, -2, 1493,
	1494, 1495, 1496, 1485, 1486, 1487, 1488, 1489, 1490, -2,
	-2, -2, 717, 792, 0, 717, 0, 692, 739, 742,
	745, 748, 695, 0, 0, 57, 58, 0, 278, 279,
	267, 269, 0, 273, 0, 266, 0, 0, 0, 0,
	1010, 1010, 1010, 1010, 1010, 0, 1010, 0, 0, 0,
	0, 1010, 0, 898, 982, 983, 984, 1008, 1009, 1073,
	0, 0, 0, 619, 615, 616, 617, 618, 705, 0,
	707, 710, 543, 543, 491, 0, 0, 0, 543, 0,
	505, 497, 0, 0, 0, 543, 0, 0, 712, 712,
	0, 546, 553, 543, 543, -2, 543, 543, 543, 0,
	0, 1022, 511, 512, 513, 497, 497, 516, 517, 518,
	528, 529, 554, 1669, 0, 0, 436, 436, 0, 436,
	0, 436, 436, 436, 621, 1833, 1735, 1809, 1794, 0,
	0, 234, 1863, 239, 0, 1736, 1756, 0, 0, 1774,
	0, -2, 0, 305, 717, 0, 0, 691, 0, 0,
	0, 0, 0, 436, 436, 436, 436, 436, 1072, 436,
	436, 436, 436, 436, 0, 0, 0, 436, 436, 0,
	0, 757, 758, 753, 754, 755, 759, 760, 5, 6,
	19, 0, 0, 0, 0, 0, 0, 63, 62, 0,
	1646, 1664, 1598, 1599, 1600, 1651, 1602, 1655, 1655, 1655,
	1655, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1655, 1655, 0, 0, 1644, 1622, 1653, 1653, 1653, 1651,
	1648, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1658, 1658, 1661, 1661, 1658,
	0, 1531, 0, 0, 0, 0, 665, 0, 0, 717,
	-2, 0, 0, 567, 326, 1236, 0, 0, 330, 331,
	0, 0, 346, 0, 349, 334, 335, 336, 0, 133,
	0, 317, 318, 0, 0, 285, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 163, 160, 167, 170,
	180, 187, 0, 199, 201, 204, 161, 168, 173, 174,
	181, 202, 162, 164, 165, 169, 203, 205, 182, 186,
	200, 184, 189, 192, 193, 198, 0, 134, 0, 0,
	0, 0, 0, 1539, 0, 0, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 1533, 0, 0, 1318, 1319, 1320, 1321, 1324,
	0, 1345, 0, 0, 0, 0, 1592, 1596, 0, 1531,
	1531, 0, 1531, 1527, 0, 0, 0, 0, 0, 0,
	1531, 1467, 0, 0, 1469, 1482, 0, 0, 1471, 1472,
	0, 1475, 1476, 1531, 0, 1531, 1480, 1463, 1464, 0,
	1527, 1527, 1527, 1527, 0, 0, 1527, 1527, 1527, 1527,
	1527, 1527, 1527, 1527, 1527, 1527, 1527, 1527, 0, 0,
	0, 0, 712, 0, 718, 0, -2, 0, 736, 738,
	740, 741, 743, 744, 746, 747, 749, 750, 697, 0,
	0, 59, 0, 0, 0, 0, 271, 0, 276, 0,
	862, 0, 0, 1010, 1010, 0, 1010, 899, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1010, 1010, 1010,
	0, 1030, 0, 0, 0, 621, 620, 0, 706, 0,
	0, 765, 0, 0, 490, 0, 497, 543, 543, 503,
	504, 499, 498, 549, 550, 546, 0, 546, 546, 765,
	0, 522, 523, 524, 543, 543, 530, 713, 0, 531,
	532, 546, 0, 551, 552, 765, 0, 0, 765, 765,
	0, 540, 541, 542, 0, 0, 1010, 0, 559, 499,
	499, 1670, 1671, 0, 0, 1019, 0, 0, 0, 562,
	0, 0, 0, 0, 622, 214, 217, 0, 220, 0,
	1833, 0, 1833, 0, 227, 0, 0, 0, 0, 0,
	0, 257, 258, 0, 0, 0, 0, 248, 251, 1179,
	1180, 972, 973, 252, 253, 297, 298, 0, 712, 735,
	737, 731, 732, 733, 0, 0, 0, 0, 0, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 597, 0,
	878, 599, 0, 0, 0, 773, 767, 769, 836, 93,
	773, 8, 80, 77, 0, 19, 0, 0, 19, 19,
	0, 19, 262, 0, 1667, 1665, 1666, 1601, 1652, 0,
	1627, 0, 1628, 1629, 1630, 1640, 1641, 0, 0, 1623,
	0, 1624, 1625, 1626, 1617, 0, 1618, 1619, 0, 1620,
	1621, 260, 0, 1532, 866, 0, 639, 653, 634, 0,
	642, 0, 1186, 623, 653, 625, 0, 642, 712, 689,
	0, 667, 0, 0, 327, 0, 332, 0, 0, 348,
	350, 351, 352, 337, 338, 564, 313, 314, 306, 307,
	308, 309, 310, 311, 312, 316, 103, 0, 286, 287,
	0, 0, 0, 147, 148, 149, 150, 151, 152, 154,
	138, 586, 588, 964, 976, 0, 967, 0, 157, 197,
	130, 0, 0, 0, 1534, 1535, 1536, 1537, 1538, 1542,
	0, 1544, 1546, 1548, 1550, 0, 1568, -2, -2, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1553, 1566, 1567, 0, 0, 0, 0, 0, 0,
	1564, 1564, 1559, 0, 1316, 0, 1342, 1346, 0, 0,
	0, 0, 94, 1526, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 0, 0, 1533, 0, 0, 0, 1528,
	1529, 0, 0, 0, 1422, 0, 0, 1428, 1429, 1430,
	0, 648, 0, 1492, 1468, 1483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 791, 793, 0,
	657, 659, 660, 686, 667, 693, 0, 0, 0, 55,
	60, 53, 1042, 280, 281, 0, 0, 275, 0, -2,
	0, 0, 0, 1010, 0, 0, 913, 0, 434, 958,
	0, 0, 0, 974, 999, 1006, 0, 0, 0, 0,
	1046, 900, 905, 906, 907, 901, 902, 908, 909, 0,
	708, 0, 0, 805, 489, 0, 544, 545, 494, 1794,
	499, 765, 765, 506, 500, 507, 548, 508, 509, 510,
	546, 765, 765, 714, 543, 546, 533, 547, 546, 536,
	537, 0, 555, 560, 556, 0, 558, 514, 515, 1048,
	710, 364, 365, 406, 406, 406, 389, 406, 0, 0,
	377, 1672, 0, 0, 0, 0, 386, 1672, 0, 1672,
	1672, 1672, 1672, 1672, 1672, 1672, 0, 0, 1672, 1672,
	1672, 1672, 1672, 1672, 1672, 1672, 1672, 1672, 1672, 0,
	1672, 1672, 1672, 1672, 1672, 1165, 1672, 0, 1020, 396,
	397, 398, 399, 404, 405, 0, 431, 0, 0, 0,
	434, 0, 947, 778, 0, 779, 780, 776, 807, 831,
	831, 0, 831, 811, 1185, 0, 0, 225, 226, 215,
	0, 216, 0, 228, 229, 0, 231, 232, 233, 240,
	1735, 1809, 235, 237, 0, 0, 241, 254, 255, 256,
	0, 0, 246, 247, 0, 0, 300, 301, 303, 0,
	667, 1023, 1024, 1025, 583, 1183, 584, 585, 589, 0,
	0, 592, 593, 594, 595, 596, 880, 0, 0, 952,
	953, 765, 0, 774, 0, 770, 837, 0, 839, 0,
	765, 0, 78, 19, 0, 71, 68, 0, 0, 0,
	0, 0, 1647, 1597, 1668, 0, 0, 0, 1649, 0,
	0, 0, 0, 61, 669, 630, 0, 633, 650, 0,
	654, 0, 0, 646, 638, 643, 0, 0, 663, 624,
	0, 0, 629, 667, 0, 690, 719, 720, 723, 1237,
	0, 333, 347, 0, 0, 0, 0, 141, 961, 0,
	142, 146, 136, 0, 0, 0, 966, 0, 963, 968,
	0, 156, 0, 0, 131, 132, 1035, 1042, 0, 0,
	0, 1543, 1545, 1547, 1549, 1551, 0, 1554, 1564, 1564,
	1560, 0, 1555, 0, 1557, 0, 1534, 0, 1347, 0,
	0, 0, 0, 0, 0, 0, 1412, 1413, 0, 0,
	1417, 0, 1419, 1420, 1421, 1423, 0, 0, 0, 1427,
	0, 1466, 1484, 1470, 1473, 0, 1477, 0, 1479, 0,
	717, 717, 0, 0, 1386, 1386, 1386, 0, 0, 0,
	0, 1386, 0, 0, 0, 0, 0, 0, 0, 0,
	1336, 0, 1337, 1338, 0, 0, 794, 687, 0, 0,
	0, 0, 1040, 0, 282, 270, 272, 0, 0, 0,
	868, 869, 871, 0, 874, 875, 876, 880, 710, 1122,
	0, 710, 920, 1672, 1011, 438, 0, 0, 960, 0,
	936, 0, 0, 0, -2, 0, 0, 0, 0, 0,
	1050, 0, 0, 0, 608, 612, 23, 711, 0, 766,
	492, 0, 493, 543, 501, 502, 765, 525, 526, 0,
	0, 765, 543, 543, 546, 0, 557, 1050, 0, 0,
	1019, 367, 0, 1194, 1195, 407, 0, 1201, 1210, 1010,
	1269, 0, 1210, 0, 0, 1212, 1213, 0, 0, 0,
	0, 390, 391, 0, 376, 0, 0, 0, 0, 0,
	375, 0, 0, 417, 0, 0, 0, 0, 1673, 1672,
	1672, 0, 384, 385, 0, 388, 0, 0, 0, 0,
	0, 0, 0, 1672, 1672, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1156, 0, 0, 0,
	0, 0, 0, 0, 1171, 1172, 920, 1672, 0, 0,
	0, 438, 934, 943, 0, 0, 0, 0, 0, 0,
	798, 0, 0, 797, 0, 0, 0, 0, 0, 710,
	832, 0, 834, 835, 809, -2, 0, 778, 814, 1531,
	218, 219, 0, 0, 224, 242, 244, 0, 0, 0,
	243, 245, 249, 250, 299, 302, 304, 729, 0, 0,
	1074, 0, 881, 882, 884, 885, 0, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1720, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 879, 600, 763, 768, 775, 838, 840, 94, 771,
	763, 0, 81, 19, 80, 72, 73, 0, 19, 0,
	0, 0, 0, 1657, 1656, 1642, 0, 1643, 1654, 1659,
	0, 1662, 0, 673, 0, 0, 653, 655, 0, 0,
	653, 0, 0, 662, 0, 0, 653, 729, 669, 0,
	726, 724, 725, 0, 0, 565, 104, 353, 0, 0,
	0, 0, 0, 587, 0, 965, 138, 0, 0, 158,
	0, 0, 0, 1042, 1039, 1530, 1556, 1558, 0, 1565,
	1561, 1317, 1325, 1343, 0, 0, 1349, 1361, 1361, 0,
	0, 1352, 1655, 1655, 1355, 1651, 1653, 1651, 1361, 1361,
	0, 95, 0, 0, 1418, 0, 0, 0, 649, 0,
	0, 0, 1382, 1384, 1386, 1386, 1393, 1387, 1394, 1395,
	1386, 1386, 1386, 1386, 1400, 1386, 1386, 1386, 1386, 1386,
	1386, 1386, 1386, 1380, 1586, 1587, 658, 0, 0, 700,
	701, 702, 703, 704, 0, 0, 54, 1042, 0, 274,
	0, 0, 873, 0, 0, 0, 1187, 0, 0, 0,
	0, 924, 921, 922, 923, 0, 955, 439, 440, 441,
	442, 0, 0, 0, 959, 0, 947, 929, 0, 0,
	0, 1000, 1001, 1002, 1003, 1004, 1005, -2, 1014, 0,
	0, 0, 1187, 1187, 1187, 1058, 0, 1047, 661, 0,
	-2, 0, 0, 610, 0, 0, 806, 495, 765, 519,
	715, 716, 534, 765, 765, 543, 561, 1058, 1049, 0,
	366, 408, 0, 1200, 1226, 1211, 1226, 1270, 1226, 1226,
	1010, 0, 408, 0, 0, 378, 414, 0, 0, 0,
	0, 0, 374, 411, 723, 415, 416, 418, 0, 420,
	380, 392, 393, 394, 395, 0, 0, 0, 387, 400,
	401, 402, 403, 1133, 1134, 1135, 1138, 1139, 1140, 1141,
	0, 0, 1144, 1145, 1146, 1147, 1148, 1223, 1224, 1225,
	1149, 1150, 1151, 1152, 1153, 1154, 1155, 1173, 1174, 1175,
	1176, 1177, 1178, 1157, 1158, 1159, 1160, 1161, 1162, 1163,
	1164, 0, 0, 1168, 0, 924, 0, 0, 0, 0,
	955, 936, 0, 946, 0, 948, 949, 0, 0, 631,
	765, 292, 0, 801, 795, 0, 784, 799, 800, 787,
	0, 789, 0, 785, 786, 765, 777, 808, 833, 810,
	813, 815, 816, 822, 0, 0, 0, 0, 221, 222,
	223, 230, 0, 458, 236, 685, 0, 1184, 590, 591,
	1075, 1076, 598, 0, 886, 761, 0, 0, 761, 76,
	79, 0, 74, 0, 0, 0, 0, 66, 64, 1650,
	0, 0, 675, 118, 0, 0, 0, 651, 0, 656,
	653, 637, 647, 636, 644, 645, 664, 653, 628, 627,
	688, 673, 721, 722, 0, 1238, 328, 0, 962, 138,
	143, 144, 145, 139, 137, 969, 0, 971, 0, 1037,
	0, 0, 1562, 1348, 1326, 1350, 1362, 1363, 1351, 1327,
	1328, 1353, 1354, 1356, 1357, 1358, 1359, 1360, 1329, 1414,
	0, 1416, 1424, 1425, 0, 1474, 1478, 0, 0, 0,
	0, 0, 1391, 1392, 1396, 1397, 1398, 1399, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 717, 1381, 0, 0,
	0, 0, 698, 0, 0, 0, 1041, 1043, 861, 864,
	870, 872, 0, 0, 0, 1188, 1189, 1191, 1192, 1193,
	0, 0, 1187, 0, 897, 0, 0, 915, 916, 926,
	0, 0, 0, 444, 445, 0, 0, 0, 457, 453,
	454, 455, 435, 954, 943, 932, 0, 0, 942, 0,
	1015, 1672, 1672, 1672, 0, 0, 1118, 1672, 1672, 0,
	0, 0, 1061, 0, 0, 1052, 0, 831, 0, 0,
	765, 609, 612, 613, 709, 496, 538, 535, 765, 1061,
	363, 379, 409, 0, -2, 0, 1227, 0, 1214, 1227,
	0, 0, 1226, 0, 368, 408, 0, 0, 0, 421,
	425, 426, 0, 423, 1265, 0, 424, 0, 413, 419,
	1136, 1137, 0, 1142, 1143, 0, 1167, 0, 0, 427,
	0, 0, 0, 428, 433, 929, 0, 944, 0, 950,
	951, 717, 0, 0, 781, 802, 0, 0, 782, 0,
	783, 788, 790, 291, 817, 0, 0, 819, 820, 821,
	812, 238, 730, 883, 0, 751, 0, 0, 772, 752,
	0, 19, 0, 0, 69, 1660, 1663, 677, 0, 674,
	119, 0, 0, 0, 0, 641, 652, 635, 626, 675,
	727, 728, 140, 135, 970, 121, 0, 1038, 0, 1426,
	0, 1386, 1383, 1386, 1385, 1377, 0, 1339, 1340, 1341,
	0, 696, 0, 0, 903, 1122, 0, 1028, 0, 1124,
	1672, 1672, 0, 903, 925, 914, 0, 956, 957, 0,
	446, 447, 0, 450, 456, 927, 928, 0, 0, 940,
	0, 0, 0, 0, 1007, 1021, 0, 0, 0, -2,
	0, -2, 1067, 0, 1059, 0, 1051, 0, 1054, 765,
	765, -2, 606, 611, 0, 539, 1067, 410, 1228, -2,
	1241, 1243, 0, 1020, 1246, 1247, 0, 0, 0, 0,
	0, 0, 1291, 1255, 0, 0, 1259, 1260, 1261, 0,
	0, 1264, 0, 1580, 1581, 0, 1268, 0, 0, 0,
	0, 0, 0, 0, 1208, 369, 370, 0, 372, 373,
	1672, 1266, 412, 1672, 382, 1166, 1169, 1170, 432, 429,
	430, 932, 935, 632, 712, 293, 294, 803, 0, 796,
	826, 823, 0, 0, 887, 762, 764, 70, 75, 0,
	0, 679, 0, 676, 0, 670, 672, 129, 640, 677,
	91, 112, 0, 0, 1415, 1465, 1389, 1390, 0, 1378,
	0, 1372, 1373, 1374, 1379, 699, 694, 0, 889, 896,
	910, 1026, 1190, 1123, 0, 0, 0, 1122, 895, 0,
	0, 443, 448, 0, 451, 452, 0, 930, 931, 0,
	938, 0, 0, 995, 1651, 0, 1016, 1017, 1181, 1182,
	1018, 1119, 1120, 1121, 1077, -2, 1130, 0, 1032, 121,
	1077, 1055, 0, 1062, 0, 1060, 1053, 717, 607, 1064,
	1242, 1244, 1245, 1248, 1249, 1250, 1296, 1297, 1298, 0,
	0, 1253, 1293, 1294, 1295, 1254, 0, 0, 0, 0,
	0, 1578, 1579, 1289, 0, 0, 1215, 1217, 1218, 1219,
	1220, 1221, 1222, 1216, 0, 0, 0, 1207, 1209, 371,
	0, 0, 1672, 945, 290, 0, 0, 827, 829, 824,
	825, 65, 67, 82, 0, 678, 120, 0, 679, 83,
	0, 109, 0, 122, 123, 0, 0, 0, 0, 0,
	1388, 1375, 0, 0, 0, 0, 0, 1582, 1583, 1584,
	0, 0, 0, 911, 912, 1125, 1126, 1127, 1027, 917,
	0, 919, 449, 933, 937, 940, 0, 986, 0, 723,
	0, 1079, 0, 1019, 1132, 1672, 1034, 1079, 1045, 0,
	1057, 0, 1069, 0, 1063, 712, 362, 0, 1066, 1251,
	1252, 0, 0, 1481, 1672, 0, 1284, 0, 986, 986,
	986, 986, 0, 422, 381, 0, 804, 818, 0, 0,
	0, 668, 92, 96, 0, 118, 115, 0, 124, 0,
	0, 0, 0, 1036, 0, 1364, 0, 0, 0, 1368,
	1369, 1370, 1371, 0, 888, 0, 918, 939, 941, 985,
	996, 997, 723, 1031, 0, 1116, 1131, 0, 1033, 1056,
	1068, 0, 1071, 605, 1065, 1292, 0, 1258, 0, 1263,
	1272, 1285, 0, 0, 1196, 0, 1198, 0, 1202, 0,
	1204, 0, 0, 383, 828, 830, 0, 681, 671, 85,
	0, 0, 113, 114, 116, 0, 125, 0, 127, 128,
	0, 1365, 1366, 1367, 0, 890, 891, 904, 987, 1672,
	1672, 0, 0, 0, 993, 994, 998, 0, 1104, 0,
	0, 1110, 0, 1117, 1136, 1070, 1256, 1262, 1271, 1273,
	1274, 0, 1286, 1287, 1288, 1290, 986, 986, 986, 986,
	1206, 680, 0, 1044, 0, 97, 0, 99, 101, 102,
	1229, 110, 111, 117, 126, 1376, 892, 0, 0, 990,
	991, 0, 1080, 0, 1082, 0, 0, 0, 0, 0,
	1114, 0, 1257, 1275, 0, 1276, 0, 0, 0, 1197,
	1199, 1203, 1205, 682, 86, 87, 0, 98, 0, 0,
	877, 893, 0, 988, 989, 992, 0, 1084, 0, 1105,
	0, 0, 0, 0, 0, 0, 0, 1277, 1279, 1280,
	0, 0, 1278, 0, 0, 100, 1230, 894, 1081, 1078,
	0, 1116, 1106, 0, 1108, 0, 0, 0, 0, 1281,
	1283, 1282, 88, 89, 90, 0, 0, 1086, 0, 1102,
	1107, 1109, 1111, 0, 1115, 1113, 1231, 1085, 0, 1098,
	1083, 0, 1112, 1087, -2, 0, 1103, 1088, -2, 0,
	1096, 0, 0, 1089, 1097, 0, 1092, 0, 0, 0,
	1091, 0, -2, 1099, 0, 0, 1093, -2, 0, 1101,
	1100,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 621, 618,
	123, 122, 124, 3, 622, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 619, 135, 620, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:788
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:795
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:801
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:809
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:815
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:819
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:834
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:838
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:844
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:849
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:853
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:885
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:893
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:901
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:911
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:931
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:937
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:944
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:952
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:958
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:967
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:977
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:985
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:993
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1001
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1011
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1019
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1029
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1036
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1045
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1055
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1059
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1065
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1069
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1075
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1084
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1094
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1098
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1104
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1113
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1117
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1123
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1144
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1157
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1164
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1168
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1174
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1178
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1184
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1191
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1199
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1203
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1217
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1221
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1225
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1230
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1234
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1238
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1244
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1253
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1264
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1268
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1274
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1278
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1284
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1288
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1294
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1318
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1337
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1341
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1345
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1350
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1354
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1361
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1369
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1376
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1381
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1388
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1397
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1421
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1425
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1431
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1437
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1455
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1472
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1495
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1499
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1503
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1508
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1512
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1518
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1531
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1542
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1555
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1559
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1569
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1582
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1595
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1601
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1607
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1614
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1622
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1631
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1635
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1639
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1643
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1647
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1651
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1658
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1662
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1668
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1675
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1684
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1688
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1694
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1698
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1702
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1706
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1710
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1714
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1718
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1722
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1726
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1730
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1734
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1738
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1742
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1746
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1750
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1754
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1758
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1762
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1766
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1770
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1774
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1778
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1782
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1786
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1790
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1794
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1798
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1802
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1806
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1810
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1814
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1818
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1822
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1826
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1830
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1834
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1838
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1842
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1846
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1850
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1854
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1858
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1862
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1866
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1870
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1874
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1878
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1882
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1886
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1890
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1903
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1910
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1917
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1927
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1931
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1937
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1944
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1952
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1956
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1960
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1964
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1970
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1974
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1980
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1987
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1994
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2003
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2033
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2037
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2041
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2047
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2053
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2057
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2064
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2070
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2074
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2080
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2088
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2097
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2106
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2114
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2122
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2145
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2168
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2175
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2182
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2190
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2197
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2204
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2213
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2217
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2221
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2227
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2231
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2237
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2241
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2247
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2251
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2262
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2268
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2273
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2277
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2281
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2285
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2289
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2293
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2297
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2301
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2305
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2311
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2315
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2319
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2323
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2328
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2333
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2339
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2346
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2352
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2359
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2366
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2376
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2383
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2394
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2405
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2409
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2415
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2425
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2431
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2435
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2441
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2447
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2451
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2455
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2459
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2465
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2477
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2483
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2487
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2493
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2497
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2503
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2509
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2520
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2526
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2530
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2534
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2538
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2542
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2546
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2554
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2562
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2572
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2613
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2617
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2623
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2629
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2634
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2635
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2636
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2641
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2658
		{
			yyLOCAL = &tree.AlterSequence{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].alterTypeOptionUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].cycleOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2674
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2685
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2694
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2698
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2704
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2711
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2720
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2730
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2739
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2749
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2759
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2768
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2776
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2780
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2784
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2788
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2792
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2801
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2807
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2811
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2815
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2819
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2823
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2827
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2831
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2835
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2840
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2871
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2875
		{
			yyVAL.str = string("COLUMN")
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2880
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2886
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2892
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2901
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2905
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2911
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2918
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2926
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2933
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2940
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2947
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2954
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2961
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2969
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2976
		{
			yyLOCAL = &tree.AlterOptionAlterReIndex{
				KeyType:       tree.INDEX_TYPE_IVFFLAT,
				AlgoParamList: int64(yyDollar[6].item.(int64)),
				Name:          tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2984
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2991
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:3000
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:3004
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3011
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3023
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3031
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3039
		{
			assignments := []*tree.VarAssignmentExpr{
				{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3052
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3058
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3069
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3080
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3084
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3089
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3093
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3098
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3102
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3118
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3122
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3126
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3130
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3134
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3138
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3142
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3146
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3150
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3154
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3158
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3162
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3166
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3170
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3174
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3178
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3184
		{
			yyVAL.item = nil
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3189
		{
			yyVAL.item = nil
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3230
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3236
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3244
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3248
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3252
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3261
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3265
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3271
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3276
		{
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3280
		{
		}
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3285
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3295
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3305
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3313
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3319
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3325
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3331
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3337
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3343
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3349
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3358
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3362
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3366
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3370
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3374
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3378
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3382
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3386
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3392
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: yyDollar[4].unresolvedObjectNameUnion(),
				DbName:    yyDollar[5].str,
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3401
		{
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3403
		{
		}
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3412
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3422
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3431
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3435
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3439
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3445
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3451
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3457
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3463
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3472
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3482
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3494
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3498
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3504
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3516
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3530
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3536
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3543
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3548
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3552
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3556
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3561
		{
			yyVAL.str = ""
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3565
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3571
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3584
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3588
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3594
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3599
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3603
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3607
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3613
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3619
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3623
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3629
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3635
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3639
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3643
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3649
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3653
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3678
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3687
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3696
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3705
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3709
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3715
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3724
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3733
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3743
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3747
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3753
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3759
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3765
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3769
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3775
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3781
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3790
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3797
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3808
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3813
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3820
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3836
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3849
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3860
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3864
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3870
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3875
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3882
		{
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3884
		{
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3887
		{
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3896
		{
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3900
		{
		}
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3905
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3914
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3921
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3927
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3935
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3942
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3949
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3969
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3979
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3983
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3989
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3996
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4002
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4010
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4017
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4024
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4043
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4047
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4051
		{
			yyLOCAL = []*tree.UpdateExpr{nil}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4056
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4060
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4064
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4070
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4079
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4083
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4089
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4093
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4099
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4103
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4109
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4114
		{
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4118
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4125
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4129
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4136
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4141
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4145
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4151
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4155
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4161
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4165
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4170
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4174
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4187
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4194
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4201
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4219
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4238
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4244
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4251
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4255
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4268
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4272
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4277
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4281
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4288
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4293
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4300
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4306
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4310
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4314
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4318
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), TimeWindow: yyDollar[3].timeWindowUnion(), OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Ep: yyDollar[6].exportParmUnion(), SelectLockInfo: yyDollar[7].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4322
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4326
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4331
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4335
		{
			yyLOCAL = yyDollar[1].timeWindowUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4341
		{
			yyLOCAL = &tree.TimeWindow{
				Interval: yyDollar[1].timeIntervalUnion(),
				Sliding:  yyDollar[2].timeSlidingUnion(),
				Fill:     yyDollar[3].timeFillUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.Interval
//line mysql_sql.y:4351
		{
			str := fmt.Sprintf("%v", yyDollar[5].item)
			v, errStr := util.GetInt64(yyDollar[5].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			yyLOCAL = &tree.Interval{
				Col:  yyDollar[3].unresolvedNameUnion(),
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Sliding
//line mysql_sql.y:4366
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Sliding
//line mysql_sql.y:4370
		{
			str := fmt.Sprintf("%v", yyDollar[3].item)
			v, errStr := util.GetInt64(yyDollar[3].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			yyLOCAL = &tree.Sliding{
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[5].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4384
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4388
		{
			yyLOCAL = &tree.Fill{
				Mode: yyDollar[3].fillModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4394
		{
			yyLOCAL = &tree.Fill{
				Mode: tree.FillValue,
				Val:  yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4403
		{
			yyLOCAL = tree.FillPrev
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4407
		{
			yyLOCAL = tree.FillNext
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4411
		{
			yyLOCAL = tree.FillNone
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4415
		{
			yyLOCAL = tree.FillNull
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4419
		{
			yyLOCAL = tree.FillLinear
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4425
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4432
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4441
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4445
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4451
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4459
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4463
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4468
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4472
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4478
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4482
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4486
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4491
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4495
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4501
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4507
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4511
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4517
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4522
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4526
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4530
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4535
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4539
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4543
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4548
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4552
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4560
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4564
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4568
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4582
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4586
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4596
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4606
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4616
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4628
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4636
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4644
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4653
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4661
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4669
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4677
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4685
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4693
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4701
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4709
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4717
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4727
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4738
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4752
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4756
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4760
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4765
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4769
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4773
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4782
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4786
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4791
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4795
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4800
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4804
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4810
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4814
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4820
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4824
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4829
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4833
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4838
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4846
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4852
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4860
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4868
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4878
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4884
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4893
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4902
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4911
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4921
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4925
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4935
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4939
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4943
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4947
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4953
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4963
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4967
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4973
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4979
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4983
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4989
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4995
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4999
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5003
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5009
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5013
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5019
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5023
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:5029
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:5033
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5039
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5043
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5053
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5066
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:5072
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5078
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:5091
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5102
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5109
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5113
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:5119
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5129
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5133
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5137
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5142
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5146
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5150
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5154
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5159
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5163
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5167
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5171
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5175
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5180
		{
			yyVAL.str = ""
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5184
		{
			yyVAL.str = yyDollar[1].str
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5188
		{
			yyVAL.str = yyDollar[2].str
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5194
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5200
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5204
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5208
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5212
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5216
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5222
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 861:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5261
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5271
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5277
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 864:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5283
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5293
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5298
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5304
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5311
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5315
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5321
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5327
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5332
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5336
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5340
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5344
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5351
		{
			if yyDollar[13].str == "" {
				yylex.Error("no function body error")
				return 1
			}
			if yyDollar[11].str == "python" && yyDollar[14].str == "" {
				yylex.Error("no handler error")
				return 1
			}

			yyLOCAL = &tree.CreateFunction{
				Replace:    yyDollar[2].streamOptionalUnion(),
				Name:       yyDollar[4].functionNameUnion(),
				Args:       yyDollar[6].funcArgsUnion(),
				ReturnType: yyDollar[9].funcReturnUnion(),
				Language:   yyDollar[11].str,
				Import:     yyDollar[12].boolValUnion(),
				Body:       yyDollar[13].str,
				Handler:    yyDollar[14].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5375
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5380
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5386
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5393
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5397
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5403
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5409
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5413
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5417
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5423
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5429
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5435
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5439
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5445
		{
			yyVAL.str = ""
		}
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5452
		{
			yyVAL.str = yyDollar[2].str
		}
	case 895:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5458
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5467
		{
			yyLOCAL = &tree.CreateView{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5479
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5491
		{
			yyVAL.str = yyDollar[1].str
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5495
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5501
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5505
		{
			yyVAL.str = "DEFINER = "
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5509
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5514
		{
			yyVAL.str = ""
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5518
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5532
		{
			yyVAL.str = ""
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5540
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 914:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5546
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5556
		{
			yyVAL.str = yyDollar[1].str
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5560
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5566
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5573
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5579
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5587
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5593
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5600
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5607
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5615
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5621
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5630
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5642
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5654
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5666
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5672
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5679
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5687
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5693
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5701
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5707
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5715
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5721
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5730
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5734
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5739
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5743
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5750
		{
			yyVAL.str = yyDollar[3].str
		}
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5755
		{
			yyVAL.str = ""
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5759
		{
			yyVAL.str = yyDollar[2].str
		}
	case 945:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5765
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5779
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5789
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5793
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5799
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5805
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5811
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5820
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5829
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5838
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5843
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5849
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5857
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5963
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5967
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5973
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5983
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5987
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5993
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:6003
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:6007
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:6011
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6016
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6020
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6026
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6033
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6039
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6048
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6055
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:6064
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:6068
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:6074
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6088
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6092
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6096
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6101
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6105
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6109
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6113
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6119
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			} else {
				io = &tree.IndexOption{IType: tree.INDEX_TYPE_INVALID}
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6140
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6144
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				} else if opt2.AlgoParamList > 0 {
					opt1.AlgoParamList = opt2.AlgoParamList
				} else if len(opt2.AlgoParamVectorOpType) > 0 {
					opt1.AlgoParamVectorOpType = opt2.AlgoParamVectorOpType
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6170
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6174
		{
			yyLOCAL = &tree.IndexOption{AlgoParamList: int64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6178
		{
			yyLOCAL = &tree.IndexOption{AlgoParamVectorOpType: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6182
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6186
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6190
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6194
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6200
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6204
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6210
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6215
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6220
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6224
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6228
		{
			yyLOCAL = tree.INDEX_TYPE_IVFFLAT
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6232
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6236
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6240
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6246
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6257
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6261
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6271
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6275
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6280
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6284
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6290
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6294
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6300
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6304
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6308
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6313
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6317
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6323
		{
			yyLOCAL = &tree.CreateConnector{
				TableName: yyDollar[4].tableNameUnion(),
				Options:   yyDollar[7].connectorOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6332
		{
			yyLOCAL = &tree.ShowConnectors{}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6338
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.PauseDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6356
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.CancelDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6374
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.ResumeDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6392
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6403
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6414
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6425
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6429
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6435
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6447
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6456
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6469
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6476
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6486
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6496
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6504
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6513
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					StageName: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6523
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6527
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6532
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6536
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6543
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6554
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6567
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6581
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6585
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6589
		{
			yyLOCAL = &tree.TypeOption{
				Type: yyDollar[2].columnTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6595
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6599
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6606
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6613
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6620
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6627
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6631
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6635
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6639
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6643
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6650
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6657
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6661
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6668
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6675
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6679
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6685
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6691
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6695
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6702
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6709
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6716
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6723
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6727
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6732
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6736
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6740
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6745
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6749
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6759
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6763
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6770
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6777
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6781
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6794
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6800
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6804
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6810
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6819
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6829
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6833
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6839
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6843
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6849
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6856
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6865
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6869
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6874
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6878
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6883
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6887
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6892
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6896
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6906
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6910
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6921
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6929
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6937
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6945
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6956
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6965
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6975
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6985
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6989
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6994
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6998
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:7004
		{
			yyLOCAL = []*tree.ConnectorOption{yyDollar[1].connectorOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:7008
		{
			yyLOCAL = append(yyDollar[1].connectorOptionsUnion(), yyDollar[3].connectorOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:7014
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:7018
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7023
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7027
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7033
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7037
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7043
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7047
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7052
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7056
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7062
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7066
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7070
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7076
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7080
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7084
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7088
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7092
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7096
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7100
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7105
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7109
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7113
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7117
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7121
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7125
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7129
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7133
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7137
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7141
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7145
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7149
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7153
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7157
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7161
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7165
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7169
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7173
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7177
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7181
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7185
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7189
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7193
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7197
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7201
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7205
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7209
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7213
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7219
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7223
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:7229
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7235
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7239
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7245
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7249
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7253
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7257
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7261
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7265
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7279
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7283
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7292
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7297
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7303
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7310
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7314
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7320
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7324
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7328
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7334
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7338
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7344
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7353
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7362
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "ivfflat":
					keyTyp = tree.INDEX_TYPE_IVFFLAT
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invalid the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7393
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "ivfflat":
					keyTyp = tree.INDEX_TYPE_IVFFLAT
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invalid type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7426
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7440
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7446
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7455
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7464
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7473
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7482
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7492
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7500
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7506
		{
			yyVAL.str = ""
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7510
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7520
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7526
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7532
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7552
		{
			yyVAL.str = ""
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7556
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7562
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7568
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7572
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7576
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7582
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7586
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7590
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7594
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7600
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7604
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7608
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7613
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7617
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7623
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7627
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7633
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7637
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7641
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7645
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7649
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7653
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7658
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7662
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7666
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7670
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7674
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7678
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7682
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7686
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7690
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7694
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7707
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7711
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7715
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7719
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7723
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7727
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7733
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7737
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7742
		{
			yyVAL.str = ""
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7746
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7752
		{
			yyVAL.str = ""
		}
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7756
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7762
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7774
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7781
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7788
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7795
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7802
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7811
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7817
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7823
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7827
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7831
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7835
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7839
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7844
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7851
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7855
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7859
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7864
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7868
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7873
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7877
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7893
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7899
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7903
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7907
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7911
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7915
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7919
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7923
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7927
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7931
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7935
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7939
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7943
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7947
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7953
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7957
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7961
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7965
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7969
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7973
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7977
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7981
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7985
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7989
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7993
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7997
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8002
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8010
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8014
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8018
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8022
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8031
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8035
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8039
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8043
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8047
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8051
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8057
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8065
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8073
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8083
		{
			v := int(yyDollar[5].item.(int64))
			val, err := tree.NewSampleRowsFuncExpression(v, yyDollar[3].exprsUnion())
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8093
		{
			val, err := tree.NewSamplePercentFuncExpression1(yyDollar[5].item.(int64), yyDollar[3].exprsUnion())
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8102
		{
			val, err := tree.NewSamplePercentFuncExpression2(yyDollar[5].item.(float64), yyDollar[3].exprsUnion())
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8112
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8116
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8121
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8125
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:8131
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:8135
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:8141
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8150
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8162
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8179
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8196
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8209
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8222
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8234
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8248
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8263
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8278
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8295
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8310
		{
		}
	case 1365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8317
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8321
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8325
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8331
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8335
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8339
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8343
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8349
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8353
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8357
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8363
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8371
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8381
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8385
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8392
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8397
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8401
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8406
		{
			yyVAL.str = ","
		}
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8410
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8415
		{
			yyVAL.str = "1,vector_l2_ops"
		}
	case 1385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8419
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1386:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8424
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8431
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8457
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8468
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8479
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8489
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8499
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8509
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8518
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8527
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8537
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8547
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8557
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8567
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8577
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8587
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8597
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8607
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8617
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8627
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8637
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8647
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8666
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8674
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8682
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8690
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8698
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8708
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8716
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8725
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8733
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8741
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8749
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8757
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8768
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8778
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8790
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8801
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8823
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8859
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8871
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8883
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8894
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8902
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8909
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8916
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8928
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8936
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8946
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8956
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8964
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8975
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8984
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8993
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9001
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9011
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9019
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9029
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9033
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9039
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9043
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9062
		{
		}
	case 1492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:9064
		{
		}
	case 1526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9105
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9116
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9120
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9124
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:9130
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9135
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9139
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9145
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9149
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9156
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9160
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9164
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9172
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9176
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9180
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9184
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9190
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9194
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9198
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9202
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9206
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9210
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9214
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9218
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9222
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9226
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9234
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9238
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9242
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9246
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9250
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9254
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9258
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9262
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9266
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9270
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9276
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9280
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9286
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9290
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9297
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9301
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9305
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9311
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9315
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9319
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9323
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9327
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9331
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9335
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9341
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9345
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9349
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9353
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9359
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9372
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9377
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9383
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9387
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9400
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9405
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9409
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9413
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9417
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9421
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9428
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9432
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9446
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9450
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9457
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9468
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9473
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9479
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9491
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9503
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9515
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9528
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9541
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9554
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9567
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9580
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9593
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9606
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9619
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9632
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9645
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9660
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9687
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9729
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9765
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9801
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9818
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9830
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9850
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9870
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9890
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9906
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9919
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9932
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9945
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9958
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9970
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9982
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9994
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10006
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10018
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10030
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10042
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10054
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10066
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10079
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10092
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10105
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10118
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10133
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10141
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10150
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10160
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:10183
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:10188
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10194
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1653:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10201
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10205
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10210
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10214
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10220
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10226
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10233
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1660:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10240
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10249
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10256
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1663:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10263
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10272
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10276
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10280
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1667:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10286
		{
		}
	case 1668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10288
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10298
		{
			yyVAL.str = ""
		}
	case 1673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:10302
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
