// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const VECF32 = 57530
const VECF64 = 57531
const GEOMETRY = 57532
const POINT = 57533
const LINESTRING = 57534
const POLYGON = 57535
const GEOMETRYCOLLECTION = 57536
const MULTIPOINT = 57537
const MULTILINESTRING = 57538
const MULTIPOLYGON = 57539
const INT1 = 57540
const INT2 = 57541
const INT3 = 57542
const INT4 = 57543
const INT8 = 57544
const S3OPTION = 57545
const SQL_SMALL_RESULT = 57546
const SQL_BIG_RESULT = 57547
const SQL_BUFFER_RESULT = 57548
const LOW_PRIORITY = 57549
const HIGH_PRIORITY = 57550
const DELAYED = 57551
const CREATE = 57552
const ALTER = 57553
const DROP = 57554
const RENAME = 57555
const ANALYZE = 57556
const ADD = 57557
const RETURNS = 57558
const SCHEMA = 57559
const TABLE = 57560
const SEQUENCE = 57561
const INDEX = 57562
const VIEW = 57563
const TO = 57564
const IGNORE = 57565
const IF = 57566
const PRIMARY = 57567
const COLUMN = 57568
const CONSTRAINT = 57569
const SPATIAL = 57570
const FULLTEXT = 57571
const FOREIGN = 57572
const KEY_BLOCK_SIZE = 57573
const SHOW = 57574
const DESCRIBE = 57575
const EXPLAIN = 57576
const DATE = 57577
const ESCAPE = 57578
const REPAIR = 57579
const OPTIMIZE = 57580
const TRUNCATE = 57581
const MAXVALUE = 57582
const PARTITION = 57583
const REORGANIZE = 57584
const LESS = 57585
const THAN = 57586
const PROCEDURE = 57587
const TRIGGER = 57588
const STATUS = 57589
const VARIABLES = 57590
const ROLE = 57591
const PROXY = 57592
const AVG_ROW_LENGTH = 57593
const STORAGE = 57594
const DISK = 57595
const MEMORY = 57596
const CHECKSUM = 57597
const COMPRESSION = 57598
const DATA = 57599
const DIRECTORY = 57600
const DELAY_KEY_WRITE = 57601
const ENCRYPTION = 57602
const ENGINE = 57603
const MAX_ROWS = 57604
const MIN_ROWS = 57605
const PACK_KEYS = 57606
const ROW_FORMAT = 57607
const STATS_AUTO_RECALC = 57608
const STATS_PERSISTENT = 57609
const STATS_SAMPLE_PAGES = 57610
const DYNAMIC = 57611
const COMPRESSED = 57612
const REDUNDANT = 57613
const COMPACT = 57614
const FIXED = 57615
const COLUMN_FORMAT = 57616
const AUTO_RANDOM = 57617
const ENGINE_ATTRIBUTE = 57618
const SECONDARY_ENGINE_ATTRIBUTE = 57619
const INSERT_METHOD = 57620
const RESTRICT = 57621
const CASCADE = 57622
const ACTION = 57623
const PARTIAL = 57624
const SIMPLE = 57625
const CHECK = 57626
const ENFORCED = 57627
const RANGE = 57628
const LIST = 57629
const ALGORITHM = 57630
const LINEAR = 57631
const PARTITIONS = 57632
const SUBPARTITION = 57633
const SUBPARTITIONS = 57634
const CLUSTER = 57635
const TYPE = 57636
const ANY = 57637
const SOME = 57638
const EXTERNAL = 57639
const LOCALFILE = 57640
const URL = 57641
const PREPARE = 57642
const DEALLOCATE = 57643
const RESET = 57644
const EXTENSION = 57645
const INCREMENT = 57646
const CYCLE = 57647
const MINVALUE = 57648
const PUBLICATION = 57649
const SUBSCRIPTIONS = 57650
const PUBLICATIONS = 57651
const PROPERTIES = 57652
const PARSER = 57653
const VISIBLE = 57654
const INVISIBLE = 57655
const BTREE = 57656
const HASH = 57657
const RTREE = 57658
const BSI = 57659
const IVFFLAT = 57660
const REINDEX = 57661
const ZONEMAP = 57662
const LEADING = 57663
const BOTH = 57664
const TRAILING = 57665
const UNKNOWN = 57666
const EXPIRE = 57667
const ACCOUNT = 57668
const ACCOUNTS = 57669
const UNLOCK = 57670
const DAY = 57671
const NEVER = 57672
const PUMP = 57673
const MYSQL_COMPATIBILITY_MODE = 57674
const MODIFY = 57675
const CHANGE = 57676
const SECOND = 57677
const ASCII = 57678
const COALESCE = 57679
const COLLATION = 57680
const HOUR = 57681
const MICROSECOND = 57682
const MINUTE = 57683
const MONTH = 57684
const QUARTER = 57685
const REPEAT = 57686
const REVERSE = 57687
const ROW_COUNT = 57688
const WEEK = 57689
const REVOKE = 57690
const FUNCTION = 57691
const PRIVILEGES = 57692
const TABLESPACE = 57693
const EXECUTE = 57694
const SUPER = 57695
const GRANT = 57696
const OPTION = 57697
const REFERENCES = 57698
const REPLICATION = 57699
const SLAVE = 57700
const CLIENT = 57701
const USAGE = 57702
const RELOAD = 57703
const FILE = 57704
const TEMPORARY = 57705
const ROUTINE = 57706
const EVENT = 57707
const SHUTDOWN = 57708
const NULLX = 57709
const AUTO_INCREMENT = 57710
const APPROXNUM = 57711
const SIGNED = 57712
const UNSIGNED = 57713
const ZEROFILL = 57714
const ENGINES = 57715
const LOW_CARDINALITY = 57716
const AUTOEXTEND_SIZE = 57717
const ADMIN_NAME = 57718
const RANDOM = 57719
const SUSPEND = 57720
const ATTRIBUTE = 57721
const HISTORY = 57722
const REUSE = 57723
const CURRENT = 57724
const OPTIONAL = 57725
const FAILED_LOGIN_ATTEMPTS = 57726
const PASSWORD_LOCK_TIME = 57727
const UNBOUNDED = 57728
const SECONDARY = 57729
const RESTRICTED = 57730
const USER = 57731
const IDENTIFIED = 57732
const CIPHER = 57733
const ISSUER = 57734
const X509 = 57735
const SUBJECT = 57736
const SAN = 57737
const REQUIRE = 57738
const SSL = 57739
const NONE = 57740
const PASSWORD = 57741
const SHARED = 57742
const EXCLUSIVE = 57743
const MAX_QUERIES_PER_HOUR = 57744
const MAX_UPDATES_PER_HOUR = 57745
const MAX_CONNECTIONS_PER_HOUR = 57746
const MAX_USER_CONNECTIONS = 57747
const FORMAT = 57748
const VERBOSE = 57749
const CONNECTION = 57750
const TRIGGERS = 57751
const PROFILES = 57752
const LOAD = 57753
const INLINE = 57754
const INFILE = 57755
const TERMINATED = 57756
const OPTIONALLY = 57757
const ENCLOSED = 57758
const ESCAPED = 57759
const STARTING = 57760
const LINES = 57761
const ROWS = 57762
const IMPORT = 57763
const DISCARD = 57764
const MODUMP = 57765
const OVER = 57766
const PRECEDING = 57767
const FOLLOWING = 57768
const GROUPS = 57769
const DATABASES = 57770
const TABLES = 57771
const SEQUENCES = 57772
const EXTENDED = 57773
const FULL = 57774
const PROCESSLIST = 57775
const FIELDS = 57776
const COLUMNS = 57777
const OPEN = 57778
const ERRORS = 57779
const WARNINGS = 57780
const INDEXES = 57781
const SCHEMAS = 57782
const NODE = 57783
const LOCKS = 57784
const ROLES = 57785
const TABLE_NUMBER = 57786
const COLUMN_NUMBER = 57787
const TABLE_VALUES = 57788
const TABLE_SIZE = 57789
const NAMES = 57790
const GLOBAL = 57791
const PERSIST = 57792
const SESSION = 57793
const ISOLATION = 57794
const LEVEL = 57795
const READ = 57796
const WRITE = 57797
const ONLY = 57798
const REPEATABLE = 57799
const COMMITTED = 57800
const UNCOMMITTED = 57801
const SERIALIZABLE = 57802
const LOCAL = 57803
const EVENTS = 57804
const PLUGINS = 57805
const CURRENT_TIMESTAMP = 57806
const DATABASE = 57807
const CURRENT_TIME = 57808
const LOCALTIME = 57809
const LOCALTIMESTAMP = 57810
const UTC_DATE = 57811
const UTC_TIME = 57812
const UTC_TIMESTAMP = 57813
const REPLACE = 57814
const CONVERT = 57815
const SEPARATOR = 57816
const TIMESTAMPDIFF = 57817
const CURRENT_DATE = 57818
const CURRENT_USER = 57819
const CURRENT_ROLE = 57820
const SECOND_MICROSECOND = 57821
const MINUTE_MICROSECOND = 57822
const MINUTE_SECOND = 57823
const HOUR_MICROSECOND = 57824
const HOUR_SECOND = 57825
const HOUR_MINUTE = 57826
const DAY_MICROSECOND = 57827
const DAY_SECOND = 57828
const DAY_MINUTE = 57829
const DAY_HOUR = 57830
const YEAR_MONTH = 57831
const SQL_TSI_HOUR = 57832
const SQL_TSI_DAY = 57833
const SQL_TSI_WEEK = 57834
const SQL_TSI_MONTH = 57835
const SQL_TSI_QUARTER = 57836
const SQL_TSI_YEAR = 57837
const SQL_TSI_SECOND = 57838
const SQL_TSI_MINUTE = 57839
const RECURSIVE = 57840
const CONFIG = 57841
const DRAINER = 57842
const SOURCE = 57843
const STREAM = 57844
const HEADERS = 57845
const CONNECTOR = 57846
const MATCH = 57847
const AGAINST = 57848
const BOOLEAN = 57849
const LANGUAGE = 57850
const WITH = 57851
const QUERY = 57852
const EXPANSION = 57853
const WITHOUT = 57854
const VALIDATION = 57855
const ADDDATE = 57856
const BIT_AND = 57857
const BIT_OR = 57858
const BIT_XOR = 57859
const CAST = 57860
const COUNT = 57861
const APPROX_COUNT = 57862
const APPROX_COUNT_DISTINCT = 57863
const APPROX_PERCENTILE = 57864
const CURDATE = 57865
const CURTIME = 57866
const DATE_ADD = 57867
const DATE_SUB = 57868
const EXTRACT = 57869
const GROUP_CONCAT = 57870
const MAX = 57871
const MID = 57872
const MIN = 57873
const NOW = 57874
const POSITION = 57875
const SESSION_USER = 57876
const STD = 57877
const STDDEV = 57878
const MEDIAN = 57879
const STDDEV_POP = 57880
const STDDEV_SAMP = 57881
const SUBDATE = 57882
const SUBSTR = 57883
const SUBSTRING = 57884
const SUM = 57885
const SYSDATE = 57886
const SYSTEM_USER = 57887
const TRANSLATE = 57888
const TRIM = 57889
const VARIANCE = 57890
const VAR_POP = 57891
const VAR_SAMP = 57892
const AVG = 57893
const RANK = 57894
const ROW_NUMBER = 57895
const DENSE_RANK = 57896
const BIT_CAST = 57897
const NEXTVAL = 57898
const SETVAL = 57899
const CURRVAL = 57900
const LASTVAL = 57901
const ARROW = 57902
const ROW = 57903
const OUTFILE = 57904
const HEADER = 57905
const MAX_FILE_SIZE = 57906
const FORCE_QUOTE = 57907
const PARALLEL = 57908
const UNUSED = 57909
const BINDINGS = 57910
const DO = 57911
const DECLARE = 57912
const LOOP = 57913
const WHILE = 57914
const LEAVE = 57915
const ITERATE = 57916
const UNTIL = 57917
const CALL = 57918
const SPBEGIN = 57919
const BACKEND = 57920
const SERVERS = 57921
const KILL = 57922
const BACKUP = 57923
const FILESYSTEM = 57924
const QUERY_RESULT = 57925

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"IVFFLAT",
	"REINDEX",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10463

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 116,
	21, 701,
	-2, 682,
	-1, 133,
	235, 1036,
	237, 957,
	-2, 999,
	-1, 156,
	42, 520,
	237, 520,
	264, 527,
	265, 527,
	456, 520,
	-2, 553,
	-1, 192,
	604, 1753,
	-2, 436,
	-1, 529,
	316, 133,
	429, 133,
	430, 133,
	-2, 1663,
	-1, 593,
	81, 1458,
	-2, 1807,
	-1, 594,
	81, 1476,
	-2, 1778,
	-1, 598,
	81, 1477,
	-2, 1806,
	-1, 624,
	81, 1388,
	-2, 1875,
	-1, 625,
	81, 1389,
	-2, 1874,
	-1, 626,
	81, 1390,
	-2, 1864,
	-1, 627,
	81, 1838,
	-2, 1859,
	-1, 628,
	81, 1839,
	-2, 1860,
	-1, 629,
	81, 1840,
	-2, 1866,
	-1, 630,
	81, 1841,
	-2, 1848,
	-1, 631,
	81, 1842,
	-2, 1857,
	-1, 632,
	81, 1843,
	-2, 1867,
	-1, 633,
	81, 1844,
	-2, 1868,
	-1, 634,
	81, 1845,
	-2, 1873,
	-1, 635,
	81, 1846,
	-2, 1878,
	-1, 636,
	81, 1847,
	-2, 1879,
	-1, 638,
	81, 1455,
	-2, 1651,
	-1, 642,
	81, 1460,
	-2, 1664,
	-1, 645,
	81, 1464,
	-2, 1682,
	-1, 649,
	81, 1468,
	-2, 1724,
	-1, 650,
	81, 1469,
	-2, 1802,
	-1, 658,
	81, 1479,
	-2, 1787,
	-1, 659,
	81, 1480,
	-2, 1831,
	-1, 660,
	81, 1481,
	-2, 1797,
	-1, 661,
	81, 1482,
	-2, 1821,
	-1, 672,
	81, 1366,
	-2, 1869,
	-1, 673,
	81, 1367,
	-2, 1870,
	-1, 674,
	81, 1368,
	-2, 1871,
	-1, 678,
	21, 702,
	-2, 665,
	-1, 758,
	451, 553,
	452, 553,
	-2, 521,
	-1, 803,
	122, 1651,
	133, 1651,
	153, 1651,
	-2, 1626,
	-1, 909,
	21, 702,
	-2, 665,
	-1, 1009,
	21, 701,
	-2, 1263,
	-1, 1385,
	81, 1526,
	-2, 1804,
	-1, 1386,
	81, 1527,
	-2, 1805,
	-1, 1525,
	82, 848,
	-2, 854,
	-1, 1911,
	82, 1612,
	154, 1612,
	-2, 1789,
	-1, 1912,
	82, 1612,
	154, 1612,
	-2, 1788,
	-1, 1913,
	82, 1588,
	154, 1588,
	-2, 1775,
	-1, 1914,
	82, 1589,
	154, 1589,
	-2, 1780,
	-1, 1915,
	82, 1590,
	154, 1590,
	-2, 1712,
	-1, 1916,
	82, 1591,
	154, 1591,
	-2, 1706,
	-1, 1917,
	82, 1592,
	154, 1592,
	-2, 1642,
	-1, 1918,
	82, 1593,
	154, 1593,
	-2, 1777,
	-1, 1919,
	82, 1594,
	154, 1594,
	-2, 1710,
	-1, 1920,
	82, 1595,
	154, 1595,
	-2, 1705,
	-1, 1921,
	82, 1596,
	154, 1596,
	-2, 1696,
	-1, 1922,
	82, 1612,
	154, 1612,
	-2, 1697,
	-1, 1923,
	82, 1612,
	154, 1612,
	-2, 1698,
	-1, 1925,
	82, 1601,
	154, 1601,
	-2, 1821,
	-1, 1926,
	82, 1579,
	154, 1579,
	-2, 1807,
	-1, 1927,
	82, 1610,
	154, 1610,
	-2, 1778,
	-1, 1928,
	82, 1610,
	154, 1610,
	-2, 1806,
	-1, 1929,
	82, 1610,
	154, 1610,
	-2, 1665,
	-1, 1930,
	82, 1608,
	154, 1608,
	-2, 1797,
	-1, 1931,
	82, 1605,
	154, 1605,
	-2, 1687,
	-1, 1932,
	81, 1560,
	82, 1560,
	154, 1560,
	387, 1560,
	388, 1560,
	389, 1560,
	-2, 1641,
	-1, 1933,
	81, 1561,
	82, 1561,
	154, 1561,
	387, 1561,
	388, 1561,
	389, 1561,
	-2, 1643,
	-1, 1934,
	81, 1564,
	82, 1564,
	154, 1564,
	387, 1564,
	388, 1564,
	389, 1564,
	-2, 1779,
	-1, 1935,
	81, 1566,
	82, 1566,
	154, 1566,
	387, 1566,
	388, 1566,
	389, 1566,
	-2, 1762,
	-1, 1936,
	81, 1568,
	82, 1568,
	154, 1568,
	387, 1568,
	388, 1568,
	389, 1568,
	-2, 1711,
	-1, 1937,
	81, 1570,
	82, 1570,
	154, 1570,
	387, 1570,
	388, 1570,
	389, 1570,
	-2, 1692,
	-1, 1938,
	81, 1571,
	82, 1571,
	154, 1571,
	387, 1571,
	388, 1571,
	389, 1571,
	-2, 1693,
	-1, 1939,
	81, 1573,
	82, 1573,
	154, 1573,
	387, 1573,
	388, 1573,
	389, 1573,
	-2, 1640,
	-1, 1940,
	82, 1615,
	154, 1615,
	387, 1615,
	388, 1615,
	389, 1615,
	-2, 1670,
	-1, 1941,
	82, 1615,
	154, 1615,
	387, 1615,
	388, 1615,
	389, 1615,
	-2, 1683,
	-1, 1942,
	82, 1618,
	154, 1618,
	387, 1618,
	388, 1618,
	389, 1618,
	-2, 1666,
	-1, 1943,
	82, 1618,
	154, 1618,
	387, 1618,
	388, 1618,
	389, 1618,
	-2, 1727,
	-1, 1944,
	82, 1615,
	154, 1615,
	387, 1615,
	388, 1615,
	389, 1615,
	-2, 1747,
	-1, 1962,
	105, 993,
	149, 993,
	188, 993,
	191, 993,
	277, 993,
	-2, 986,
	-1, 2107,
	21, 701,
	-2, 795,
	-1, 2310,
	105, 993,
	149, 993,
	188, 993,
	191, 993,
	277, 993,
	-2, 987,
	-1, 2326,
	79, 611,
	154, 611,
	-2, 1149,
	-1, 2667,
	191, 993,
	301, 1231,
	-2, 1203,
	-1, 2809,
	105, 993,
	149, 993,
	188, 993,
	191, 993,
	-2, 1092,
	-1, 2811,
	105, 993,
	149, 993,
	188, 993,
	191, 993,
	-2, 1092,
	-1, 2821,
	79, 611,
	154, 611,
	-2, 1150,
	-1, 2830,
	191, 993,
	301, 1231,
	-2, 1204,
	-1, 2957,
	105, 993,
	149, 993,
	188, 993,
	191, 993,
	-2, 1093,
	-1, 3321,
	82, 1054,
	154, 1054,
	-2, 993,
	-1, 3325,
	82, 1054,
	154, 1054,
	-2, 993,
	-1, 3339,
	82, 1058,
	154, 1058,
	-2, 993,
	-1, 3344,
	82, 1059,
	154, 1059,
	-2, 993,
}

const yyPrivate = 57344

const yyLast = 38956

var yyAct = [...]int{
	560, 3325, 1607, 3324, 3333, 3304, 183, 1365, 538, 3196,
	540, 3257, 562, 533, 3222, 3275, 3204, 2686, 3205, 2910,
	3115, 1886, 2844, 548, 2013, 1042, 2948, 3106, 1222, 2749,
	3133, 2905, 2945, 2947, 3028, 590, 2750, 3073, 3129, 3066,
	445, 1162, 1303, 2908, 1293, 679, 2781, 3018, 1361, 542,
	452, 2281, 457, 457, 802, 3116, 3118, 1559, 457, 473,
	482, 2797, 2963, 482, 2952, 1368, 2329, 2002, 2956, 2599,
	2924, 2831, 2900, 1696, 2786, 168, 2445, 2627, 1693, 2444,
	2427, 2367, 2683, 2959, 2101, 2671, 2812, 2443, 2664, 2315,
	2437, 55, 1661, 2597, 2747, 2735, 493, 1790, 1759, 2718,
	2466, 2440, 2005, 487, 2300, 2644, 2611, 2608, 1708, 2606,
	2600, 2670, 1215, 531, 903, 2085, 2346, 1899, 1972, 2311,
	1907, 1786, 1889, 1890, 2503, 1768, 537, 1909, 1767, 2541,
	1505, 2149, 1760, 1689, 1733, 2486, 734, 808, 2102, 1664,
	2090, 2284, 2289, 1588, 1998, 1785, 2348, 2003, 6, 1170,
	1971, 1114, 1598, 1536, 1289, 1282, 532, 1294, 1135, 2321,
	445, 36, 1662, 1513, 2166, 179, 8, 178, 7, 1297,
	855, 1819, 1302, 2212, 1359, 1787, 541, 2129, 2602, 1256,
	1905, 1231, 115, 183, 2601, 183, 1201, 846, 847, 1953,
	1968, 1171, 451, 530, 840, 841, 1571, 1570, 539, 845,
	1415, 1797, 549, 2242, 2243, 35, 1399, 1350, 806, 1151,
	1364, 765, 1137, 1081, 26, 1749, 15, 920, 1766, 1263,
	479, 1763, 14, 1723, 1358, 32, 795, 2109, 1200, 1535,
	733, 466, 1422, 13, 1198, 676, 496, 532, 469, 495,
	23, 1421, 16, 169, 10, 1163, 481, 1107, 1561, 1255,
	162, 1147, 731, 715, 678, 812, 1794, 3060, 842, 711,
	844, 843, 1804, 2268, 2268, 165, 2268, 2800, 2742, 2201,
	2155, 2152, 2153, 478, 753, 474, 2150, 1518, 1270, 1266,
	839, 477, 838, 1043, 475, 839, 167, 839, 453, 1183,
	1098, 1268, 476, 978, 979, 980, 977, 796, 2898, 2499,
	978, 979, 980, 977, 2039, 2497, 462, 1738, 3024, 485,
	3019, 2901, 2748, 1509, 1037, 3120, 837, 1762, 677, 166,
	51, 158, 134, 166, 51, 158, 134, 2047, 3077, 687,
	2934, 166, 166, 8, 2282, 7, 1099, 444, 166, 166,
	2280, 159, 941, 2925, 2187, 1791, 809, 1543, 151, 1317,
	1310, 166, 160, 827, 166, 166, 3187, 2195, 166, 51,
	158, 134, 2923, 3151, 166, 51, 158, 134, 1111, 811,
	1531, 114, 3078, 2565, 1127, 491, 492, 1957, 1802, 1314,
	1307, 2127, 3049, 975, 2473, 2474, 102, 2518, 163, 1456,
	1179, 1100, 163, 1180, 1335, 2128, 1706, 1674, 1675, 114,
	1316, 1309, 2511, 114, 1519, 1520, 2472, 163, 163, 667,
	1673, 666, 668, 669, 1159, 670, 671, 680, 2167, 2115,
	163, 774, 2114, 163, 163, 2116, 1202, 163, 1204, 1584,
	1166, 688, 2286, 163, 1165, 1168, 1169, 1351, 1168, 1169,
	1355, 1367, 2287, 956, 3240, 949, 957, 3238, 951, 3208,
	3209, 968, 973, 805, 804, 2919, 457, 3123, 3182, 3122,
	3181, 3121, 3180, 3123, 1354, 3122, 457, 913, 119, 120,
	3121, 121, 122, 1877, 959, 3026, 952, 3226, 3227, 1182,
	3029, 3030, 3031, 3032, 482, 482, 2504, 457, 2751, 3108,
	2285, 2505, 3108, 2506, 822, 818, 813, 817, 820, 3111,
	3022, 2182, 2751, 914, 1806, 1371, 3126, 2760, 908, 910,
	923, 2383, 2787, 3186, 1798, 2292, 2794, 1680, 1269, 1267,
	3041, 2939, 825, 3042, 2079, 1690, 816, 1346, 1951, 1746,
	2856, 2622, 3055, 2271, 133, 2192, 164, 2531, 133, 157,
	164, 722, 100, 944, 1684, 1356, 1276, 1275, 981, 3184,
	2612, 954, 2529, 945, 971, 972, 156, 1010, 970, 2899,
	156, 150, 149, 2045, 812, 1019, 2498, 57, 1353, 2620,
	923, 849, 2431, 907, 2082, 2081, 3044, 823, 947, 3242,
	807, 3058, 2936, 912, 826, 2086, 1011, 936, 1026, 2918,
	950, 953, 913, 2636, 3189, 3190, 2920, 526, 3233, 3207,
	528, 909, 3139, 814, 2868, 527, 2645, 3043, 2322, 1157,
	2616, 2684, 2685, 3074, 955, 1669, 946, 484, 1370, 1369,
	1377, 1380, 1381, 483, 2617, 2618, 824, 1803, 152, 153,
	154, 1378, 479, 479, 2436, 812, 2861, 1181, 1959, 3318,
	2619, 1046, 3134, 1704, 1705, 1808, 1810, 1811, 1113, 1112,
	1192, 2871, 3334, 3266, 3237, 809, 161, 3198, 966, 967,
	2304, 2305, 2306, 2307, 2308, 784, 815, 456, 456, 1097,
	3273, 3194, 3195, 464, 3198, 1146, 110, 3125, 811, 724,
	155, 725, 111, 2688, 1352, 478, 478, 474, 474, 2989,
	958, 3298, 948, 477, 477, 2056, 475, 475, 2055, 1105,
	452, 1108, 925, 924, 476, 476, 3059, 2911, 1047, 916,
	917, 457, 2763, 2535, 1792, 2267, 1792, 1792, 927, 2076,
	2077, 1078, 2614, 2298, 961, 933, 809, 962, 1211, 1210,
	929, 930, 2984, 734, 2014, 2015, 2016, 2018, 2019, 112,
	2017, 934, 821, 1013, 1014, 1015, 1016, 1161, 1160, 811,
	839, 50, 839, 1017, 839, 964, 1144, 839, 3076, 1143,
	3335, 839, 925, 924, 839, 1142, 3341, 3305, 3067, 3075,
	918, 2151, 904, 1167, 480, 3329, 1793, 1805, 1271, 819,
	480, 457, 2008, 1194, 2582, 2282, 2813, 1820, 2001, 445,
	445, 3188, 2131, 2896, 1164, 1115, 491, 2411, 445, 445,
	52, 3050, 1226, 1226, 3243, 457, 3105, 780, 778, 490,
	779, 677, 2978, 1199, 1168, 1169, 2680, 1168, 1169, 2291,
	2188, 2468, 2470, 3037, 482, 1108, 452, 3117, 1158, 1259,
	1259, 1228, 960, 135, 941, 52, 2935, 135, 2623, 3056,
	183, 52, 1258, 1258, 2532, 135, 135, 3278, 1233, 445,
	1224, 1224, 135, 135, 1691, 2613, 1116, 1117, 1118, 1119,
	1379, 1121, 1109, 2196, 2119, 135, 1126, 935, 135, 135,
	965, 2043, 135, 2687, 1795, 2295, 2296, 1120, 135, 2534,
	807, 2940, 1125, 1055, 1056, 1809, 2384, 1124, 2385, 2386,
	2294, 2011, 1106, 2684, 2685, 963, 785, 113, 39, 1277,
	1301, 1681, 1304, 3328, 49, 5, 1123, 1312, 117, 118,
	486, 1347, 1220, 1221, 2592, 781, 1807, 2615, 2007, 940,
	2025, 2991, 2381, 2009, 1132, 1083, 2270, 1333, 1683, 723,
	1188, 1893, 2681, 694, 2483, 2484, 1148, 1152, 1152, 1152,
	1103, 1226, 3340, 1226, 913, 1522, 1085, 1523, 678, 1140,
	1318, 728, 729, 730, 1145, 1110, 1153, 1154, 2028, 1148,
	1148, 1155, 2985, 2986, 2001, 2030, 2543, 2542, 1892, 1173,
	1174, 1521, 1176, 1177, 1178, 1895, 1894, 2010, 783, 1193,
	690, 2402, 2403, 3279, 693, 1134, 2469, 2068, 696, 695,
	1372, 1373, 1374, 1375, 1376, 812, 691, 1328, 1329, 812,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1280, 2964, 1283, 1284, 1410, 1411, 1251, 1184,
	1185, 2012, 2029, 681, 1420, 1285, 1286, 1209, 1101, 1102,
	1172, 1291, 1292, 1175, 1417, 1418, 1419, 1852, 1469, 3347,
	1851, 3281, 1453, 2412, 2414, 2415, 2416, 2413, 976, 726,
	1463, 2715, 2099, 1296, 782, 941, 1300, 1562, 2980, 2169,
	1366, 1478, 2979, 462, 1363, 1308, 2711, 1299, 2778, 1315,
	1249, 905, 1250, 1234, 2762, 1459, 1460, 1461, 1244, 1260,
	479, 911, 1880, 1261, 2187, 681, 1206, 1208, 1475, 1332,
	1342, 1476, 2690, 3346, 1507, 1218, 1219, 1331, 1511, 2650,
	2100, 1514, 932, 2401, 1485, 1486, 1562, 2327, 1344, 2276,
	1382, 976, 976, 3276, 3277, 1533, 1902, 1226, 1538, 1539,
	1503, 1541, 1542, 1319, 775, 2024, 775, 457, 2273, 2022,
	1226, 2682, 2174, 478, 734, 474, 1149, 1560, 3302, 1903,
	1904, 477, 1226, 1341, 475, 1338, 1272, 678, 1194, 3337,
	1884, 1360, 476, 473, 1506, 3319, 1320, 1324, 3314, 3308,
	3307, 3285, 1337, 1468, 3041, 976, 976, 3042, 2634, 1340,
	2042, 1339, 1583, 1336, 2328, 3007, 2100, 2131, 1362, 1357,
	1589, 1589, 3036, 1194, 3259, 1194, 1194, 1791, 3216, 457,
	457, 1955, 1533, 1533, 2100, 1587, 1226, 1658, 1659, 1671,
	1451, 1452, 1532, 1455, 1408, 1409, 1401, 777, 786, 777,
	776, 1470, 776, 445, 3210, 1226, 1540, 3161, 1672, 3099,
	3044, 3338, 3098, 3094, 1477, 1726, 1479, 1800, 1079, 1507,
	3315, 1800, 1800, 1800, 1507, 1507, 978, 979, 980, 977,
	457, 1533, 1226, 2715, 1713, 2328, 457, 457, 1717, 1718,
	1996, 3043, 1150, 3093, 1721, 1722, 3260, 3092, 3091, 1728,
	3217, 1528, 1885, 1529, 1530, 1856, 183, 1348, 1782, 183,
	183, 1454, 183, 906, 1609, 1544, 1545, 1546, 1736, 1653,
	1654, 1739, 1883, 1702, 1742, 938, 3063, 1744, 3062, 3063,
	1480, 3100, 1133, 2929, 1976, 3063, 2635, 1510, 1413, 1699,
	1700, 1572, 1212, 1574, 1575, 1954, 2875, 3261, 1685, 2699,
	1469, 1469, 1770, 2637, 2463, 1504, 1580, 1469, 1469, 1677,
	2249, 1679, 1777, 2241, 1590, 3063, 1122, 1537, 1710, 3063,
	3063, 1697, 1698, 1591, 1148, 2202, 1692, 1563, 1564, 1712,
	1552, 1737, 2185, 939, 1740, 1741, 1560, 1743, 1577, 2178,
	1226, 1789, 1565, 2824, 1715, 1716, 1568, 1569, 1831, 1152,
	3063, 939, 2793, 1724, 1557, 2930, 1556, 1349, 2176, 2171,
	830, 835, 836, 1578, 1579, 2651, 2488, 1581, 2131, 1592,
	993, 2700, 1593, 1594, 1573, 2638, 2100, 978, 979, 980,
	977, 2873, 976, 2164, 1567, 976, 1190, 978, 979, 980,
	977, 812, 2162, 1783, 1576, 2160, 1537, 976, 812, 2330,
	2190, 2158, 2189, 1771, 1976, 1817, 1818, 1975, 1881, 1582,
	1232, 2172, 1585, 1586, 2181, 1657, 1660, 1823, 1862, 1992,
	1827, 1847, 1701, 1830, 1676, 1765, 1678, 1832, 1781, 1686,
	2177, 2172, 1765, 2563, 1861, 1813, 1850, 1707, 1481, 1482,
	1483, 1841, 1360, 1487, 1488, 1489, 1490, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 2165, 1711, 3037, 1731, 1840,
	1838, 3038, 1527, 3140, 2163, 1321, 2646, 2159, 1845, 1023,
	2008, 2011, 1734, 2159, 1732, 926, 1839, 479, 2655, 1976,
	1880, 1799, 809, 1325, 812, 906, 1858, 2111, 901, 809,
	976, 1863, 1864, 1865, 1751, 941, 1868, 1869, 1870, 1871,
	1872, 1873, 1874, 1875, 899, 811, 976, 3141, 976, 2526,
	1214, 3294, 811, 976, 1857, 531, 1859, 913, 1945, 457,
	457, 457, 1775, 1866, 1776, 2965, 1774, 3282, 1772, 2040,
	478, 976, 474, 2816, 1780, 457, 457, 457, 477, 1149,
	1138, 475, 2647, 2814, 1139, 1216, 1784, 1973, 976, 476,
	832, 833, 834, 1800, 1779, 1326, 1217, 1980, 1194, 906,
	996, 997, 998, 999, 1000, 993, 1977, 3061, 1985, 2966,
	3033, 1821, 1458, 1457, 2982, 809, 1812, 2817, 2981, 1189,
	692, 1191, 1194, 1195, 1196, 1197, 2648, 2815, 1458, 1457,
	2799, 2716, 2709, 1815, 1816, 2704, 1401, 2035, 811, 2701,
	1814, 2012, 2629, 2433, 2302, 1825, 2007, 2001, 2006, 1213,
	2004, 2009, 2269, 1239, 1240, 1241, 1242, 1243, 2200, 1245,
	1246, 1247, 1248, 563, 573, 2175, 1253, 1254, 2121, 2740,
	1129, 1128, 564, 1910, 572, 565, 569, 568, 566, 567,
	915, 2150, 992, 991, 1001, 1002, 994, 995, 996, 997,
	998, 999, 1000, 993, 2041, 1150, 2209, 2104, 2104, 1671,
	2104, 1854, 2144, 1735, 1416, 2010, 978, 979, 980, 977,
	1416, 2490, 1826, 1949, 980, 977, 3179, 2743, 445, 445,
	1534, 1507, 1491, 1507, 977, 2994, 913, 570, 978, 979,
	980, 977, 1226, 457, 2993, 1876, 1878, 1879, 1484, 2154,
	2507, 1507, 1507, 697, 1264, 457, 1735, 2373, 1896, 2372,
	913, 452, 2354, 2352, 2973, 1259, 3297, 1671, 3323, 571,
	2139, 1989, 2141, 2937, 1990, 1025, 183, 1473, 1258, 1956,
	2942, 2943, 1547, 2791, 2423, 1046, 2020, 2021, 1024, 2026,
	2125, 1474, 2106, 2421, 2110, 1995, 2117, 3311, 2118, 3267,
	812, 2108, 3262, 3200, 2419, 1981, 1001, 1002, 994, 995,
	996, 997, 998, 999, 1000, 993, 2122, 2123, 2000, 1152,
	3170, 2408, 2183, 3142, 1999, 1789, 1994, 3296, 1993, 2938,
	1407, 3084, 1226, 1988, 1226, 3079, 1226, 1991, 3020, 2792,
	2422, 913, 2968, 2967, 1595, 1596, 1404, 1406, 1403, 2420,
	1405, 2145, 1047, 978, 979, 980, 977, 1982, 1983, 2138,
	2418, 2818, 2741, 2133, 2725, 2790, 2621, 1986, 1987, 2522,
	2502, 2301, 1226, 2228, 2501, 2406, 1910, 2407, 2405, 2404,
	2210, 2396, 2193, 978, 979, 980, 977, 2083, 2235, 2229,
	2230, 809, 2211, 1226, 2390, 1709, 2389, 2232, 2233, 2112,
	2227, 1709, 1709, 2237, 978, 979, 980, 977, 2388, 2387,
	2238, 1754, 1753, 2146, 811, 1752, 1748, 1747, 2219, 1322,
	1224, 2236, 1096, 2798, 2126, 994, 995, 996, 997, 998,
	999, 1000, 993, 2438, 1507, 2607, 3232, 2262, 2263, 1514,
	2134, 1224, 913, 2239, 2137, 2906, 898, 894, 895, 896,
	897, 3228, 2224, 2135, 2223, 2222, 2220, 2197, 3183, 2046,
	3128, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2199, 2946,
	2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2194, 2069, 2070, 2071, 2072, 2073, 3114, 2074, 2207,
	457, 3103, 3088, 2180, 2260, 1226, 2213, 2213, 2299, 2184,
	2186, 3083, 3082, 3057, 1533, 2316, 2191, 978, 979, 980,
	977, 2326, 2136, 3160, 3021, 2975, 1265, 2332, 2955, 2941,
	2221, 2143, 2904, 1887, 1888, 1206, 1208, 2203, 2204, 978,
	979, 980, 977, 2341, 2902, 2882, 2879, 1264, 2877, 913,
	2428, 2218, 1360, 2216, 2789, 2788, 2785, 2351, 984, 985,
	986, 987, 988, 989, 990, 982, 3201, 526, 2274, 2206,
	528, 913, 913, 913, 1589, 527, 2768, 913, 2710, 2363,
	2364, 2365, 913, 2706, 2369, 2370, 2697, 2371, 2277, 2556,
	3148, 2696, 978, 979, 980, 977, 2312, 2261, 2630, 2264,
	2589, 2313, 2588, 2587, 1714, 978, 979, 980, 977, 1891,
	2104, 978, 979, 980, 977, 2244, 2245, 3132, 1284, 2536,
	2533, 2250, 3144, 2500, 2424, 2477, 2333, 2234, 1285, 1286,
	1609, 2417, 445, 1291, 1292, 2409, 2399, 1533, 913, 1671,
	1671, 1671, 1671, 978, 979, 980, 977, 2323, 2555, 1296,
	913, 1671, 1300, 3034, 2104, 2278, 2279, 2349, 2297, 2345,
	2397, 2349, 2393, 1299, 2392, 2225, 2226, 2391, 623, 622,
	1226, 2325, 1882, 2331, 978, 979, 980, 977, 1756, 1750,
	1517, 2357, 457, 457, 1516, 1323, 1835, 1054, 2358, 2359,
	8, 2340, 7, 2362, 1946, 1947, 1948, 183, 2368, 2344,
	2347, 1050, 183, 1049, 2342, 2353, 2933, 2350, 2356, 902,
	1965, 1966, 1967, 689, 2494, 1537, 2496, 2361, 2811, 978,
	979, 980, 977, 1469, 2810, 1469, 2809, 2336, 2517, 2459,
	2777, 1843, 2521, 2767, 1507, 2755, 2746, 2745, 1226, 1507,
	2734, 2528, 2733, 1984, 2334, 2656, 2561, 166, 2398, 158,
	134, 2554, 2338, 2339, 2446, 991, 1001, 1002, 994, 995,
	996, 997, 998, 999, 1000, 993, 2446, 2546, 2545, 2540,
	2429, 2485, 2491, 2275, 2272, 2539, 2434, 2495, 978, 979,
	980, 977, 2161, 2335, 2157, 2156, 1867, 2337, 1860, 2458,
	2460, 1855, 2462, 3336, 1506, 678, 1853, 1842, 2560, 2516,
	1849, 2447, 2448, 2449, 2450, 2478, 2288, 1848, 1846, 1837,
	2461, 1834, 1833, 812, 1755, 2475, 163, 2549, 2913, 2551,
	812, 1502, 2514, 978, 979, 980, 977, 913, 2520, 2489,
	2493, 913, 2492, 1501, 2471, 2525, 2912, 1500, 1472, 2610,
	1471, 1462, 2530, 1238, 978, 979, 980, 977, 2513, 2625,
	1236, 2510, 2508, 2515, 457, 166, 3293, 3287, 3274, 2524,
	3271, 3269, 978, 979, 980, 977, 3169, 1044, 1232, 913,
	913, 913, 3101, 3090, 2537, 3085, 1279, 3002, 1671, 1973,
	1709, 2654, 2538, 2512, 2992, 3158, 2865, 2658, 2988, 2890,
	2519, 2888, 1829, 2863, 2862, 2544, 2379, 2380, 1442, 2669,
	2859, 2672, 2858, 2672, 2672, 2552, 2553, 913, 2801, 913,
	2394, 2395, 978, 979, 980, 977, 2605, 2633, 2604, 2676,
	1290, 3156, 2765, 2692, 163, 2547, 2548, 2559, 2550, 2432,
	1226, 1226, 1281, 2689, 2430, 1136, 2583, 2425, 2355, 3154,
	2691, 2590, 2586, 1910, 2312, 2558, 2320, 2593, 978, 979,
	980, 977, 2591, 978, 979, 980, 977, 2319, 2693, 2694,
	1828, 2318, 2641, 2642, 2643, 2626, 978, 979, 980, 977,
	2652, 978, 979, 980, 977, 1295, 457, 1298, 1224, 1224,
	2632, 2610, 1287, 2259, 2668, 812, 2170, 2120, 2075, 2649,
	1974, 1964, 1533, 1533, 2566, 2567, 2678, 2653, 2662, 1402,
	2568, 2569, 2570, 2571, 163, 2572, 2573, 2574, 2575, 2576,
	2577, 2578, 2579, 1719, 2673, 2674, 2557, 1526, 1525, 2679,
	1345, 1311, 1288, 2677, 2667, 2258, 1080, 575, 116, 1077,
	1076, 2860, 2257, 116, 978, 979, 980, 977, 1075, 2228,
	1074, 1073, 978, 979, 980, 977, 1072, 1071, 2744, 1979,
	2256, 978, 979, 980, 977, 2663, 2675, 1438, 978, 979,
	980, 977, 1070, 1435, 1069, 1068, 1067, 1437, 1434, 1436,
	1440, 1441, 1066, 1065, 1064, 1439, 978, 979, 980, 977,
	2255, 1063, 1062, 463, 2698, 457, 116, 3312, 2703, 2702,
	2708, 2707, 1061, 2712, 2713, 2705, 1060, 1059, 1058, 2723,
	1057, 1961, 2254, 2661, 1053, 1052, 978, 979, 980, 977,
	1051, 1048, 1041, 1040, 1038, 2283, 2727, 1037, 1036, 1035,
	2764, 2730, 2731, 2732, 1034, 1033, 1032, 2766, 978, 979,
	980, 977, 1031, 2657, 1030, 2739, 2324, 2659, 2660, 1029,
	992, 991, 1001, 1002, 994, 995, 996, 997, 998, 999,
	1000, 993, 2253, 1028, 1027, 2782, 913, 2252, 1022, 1021,
	2756, 1020, 943, 900, 2719, 2720, 931, 2757, 3248, 3246,
	2758, 2639, 2640, 2759, 3206, 2722, 2769, 2251, 978, 979,
	980, 977, 2303, 978, 979, 980, 977, 2805, 2132, 2316,
	1758, 810, 942, 2455, 2774, 116, 2724, 2452, 2456, 2451,
	2104, 1671, 2821, 978, 979, 980, 977, 2248, 2453, 2892,
	116, 3322, 116, 2454, 2179, 2173, 2893, 913, 1445, 1446,
	1447, 1448, 1449, 1450, 1443, 1444, 2669, 2247, 2771, 1130,
	2665, 913, 2666, 978, 979, 980, 977, 812, 812, 2807,
	2808, 913, 454, 2714, 2628, 812, 1226, 101, 2457, 2784,
	2096, 2097, 2266, 978, 979, 980, 977, 54, 2726, 1554,
	1555, 2246, 1533, 53, 2044, 2891, 913, 2796, 2168, 1507,
	2773, 2823, 2584, 2585, 2874, 1549, 1550, 1551, 2806, 2870,
	1507, 1645, 2594, 2887, 2819, 2857, 2889, 978, 979, 980,
	977, 1273, 183, 2820, 1224, 458, 2198, 2480, 2481, 2827,
	2894, 2850, 1082, 459, 1952, 913, 1305, 2775, 2776, 1720,
	2884, 2864, 937, 460, 2869, 2779, 2375, 2240, 2866, 461,
	1887, 1888, 2872, 2376, 2377, 2378, 3124, 2603, 2878, 913,
	2895, 2876, 2231, 2828, 2880, 2596, 2881, 2595, 2343, 1969,
	2886, 1558, 2885, 978, 979, 980, 977, 2867, 2208, 2883,
	1524, 3219, 913, 1226, 1226, 1458, 1457, 2368, 978, 979,
	980, 977, 2958, 2921, 2958, 1094, 1095, 2897, 682, 683,
	684, 685, 3087, 681, 978, 979, 980, 977, 2695, 2927,
	2084, 2951, 2446, 2080, 2907, 1092, 1093, 1090, 1091, 1226,
	1412, 1088, 1089, 2974, 2922, 1656, 1187, 2926, 2928, 1186,
	969, 1224, 2953, 2729, 2130, 1778, 1141, 457, 1084, 913,
	913, 3288, 3192, 913, 913, 3176, 978, 979, 980, 977,
	3174, 2446, 3135, 3113, 3112, 3110, 2961, 3005, 3102, 3015,
	2962, 3014, 2903, 3004, 2770, 2998, 2999, 2953, 2823, 1560,
	2971, 3012, 2996, 2997, 1237, 2753, 3000, 3001, 2857, 3016,
	3017, 2822, 2972, 2976, 2752, 2487, 2737, 2825, 2031, 1087,
	2826, 2736, 1562, 2523, 2850, 2087, 3250, 3249, 2949, 2631,
	1963, 1836, 928, 3250, 3047, 3249, 3009, 682, 683, 684,
	685, 2782, 681, 1156, 2990, 681, 2754, 2479, 2802, 2803,
	2804, 3040, 62, 3008, 170, 3, 3010, 2, 116, 116,
	810, 1203, 2092, 2095, 2096, 2097, 2093, 2113, 2094, 2098,
	3069, 1703, 1230, 1, 3065, 1515, 686, 2464, 2465, 2728,
	3045, 2914, 2467, 3035, 3039, 2949, 2949, 3051, 1796, 2949,
	2949, 3052, 3053, 2435, 2078, 3054, 2092, 2095, 2096, 2097,
	2093, 1950, 2094, 2098, 3064, 2624, 1131, 727, 1464, 1330,
	829, 922, 3072, 913, 1327, 3071, 921, 1226, 919, 3081,
	1414, 577, 1761, 2426, 3070, 3080, 2400, 3011, 3218, 3291,
	1004, 1009, 1008, 3256, 3168, 3221, 3086, 1343, 561, 3104,
	3025, 3172, 3027, 2909, 1801, 3096, 3095, 974, 1005, 1007,
	1003, 1709, 1006, 992, 991, 1001, 1002, 994, 995, 996,
	997, 998, 999, 1000, 993, 1224, 2509, 749, 1026, 614,
	3119, 588, 3109, 3107, 913, 1039, 1313, 1306, 2969, 2970,
	2564, 3136, 992, 991, 1001, 1002, 994, 995, 996, 997,
	998, 999, 1000, 993, 831, 587, 3131, 2931, 2932, 2795,
	3130, 913, 2293, 3127, 2482, 828, 750, 1745, 1226, 3145,
	3023, 3163, 3166, 3138, 1274, 1278, 3332, 3321, 3303, 3286,
	3197, 3317, 3146, 3236, 3272, 2917, 2915, 2916, 3265, 2949,
	3193, 497, 3143, 1682, 3152, 443, 3162, 793, 3003, 1757,
	3153, 3155, 3157, 3159, 3167, 3173, 3171, 737, 1226, 498,
	1978, 3185, 3175, 3089, 3177, 3178, 1224, 708, 3202, 1960,
	2761, 709, 702, 2310, 3191, 2309, 1383, 983, 1086, 1400,
	2834, 2580, 2581, 1018, 536, 1824, 3199, 2290, 2845, 2476,
	3225, 61, 60, 59, 58, 1727, 191, 579, 3006, 3211,
	2949, 3212, 3224, 3213, 3215, 3214, 1224, 190, 2944, 3165,
	3223, 559, 558, 913, 557, 556, 555, 2091, 2846, 2089,
	3230, 2088, 1666, 3119, 1665, 1725, 736, 2949, 3229, 2366,
	2360, 2837, 2027, 2032, 3239, 3241, 775, 1597, 3255, 3244,
	3203, 2832, 3247, 3245, 3149, 3150, 2854, 2855, 2987, 2410,
	3258, 1548, 2833, 2023, 3263, 1615, 913, 2382, 1612, 1611,
	2374, 2983, 2977, 3264, 1642, 2314, 2780, 3268, 2957, 3270,
	3251, 3252, 3253, 3254, 2829, 2830, 2836, 854, 850, 852,
	853, 3225, 3284, 851, 2217, 1997, 3280, 2598, 1901, 2838,
	913, 1900, 913, 3224, 1898, 3283, 1897, 3290, 1104, 3292,
	3046, 2772, 1908, 3295, 1906, 1235, 2721, 2717, 1769, 1512,
	463, 2265, 3258, 3299, 913, 1667, 3301, 1663, 3306, 777,
	1962, 3310, 776, 3313, 3048, 1553, 3316, 701, 1958, 3234,
	98, 148, 3097, 48, 89, 88, 97, 116, 146, 47,
	175, 3320, 174, 177, 3327, 176, 173, 2147, 3331, 3330,
	2148, 172, 1262, 171, 2960, 3339, 675, 38, 762, 37,
	33, 3344, 3327, 3343, 12, 11, 738, 3331, 34, 21,
	22, 20, 1366, 1334, 19, 25, 31, 30, 109, 108,
	29, 107, 2853, 106, 2006, 105, 104, 103, 28, 18,
	42, 41, 40, 740, 9, 3137, 96, 94, 27, 3342,
	95, 116, 1643, 92, 3345, 116, 1366, 1605, 1366, 2842,
	93, 90, 3147, 73, 72, 71, 116, 86, 85, 84,
	83, 82, 81, 79, 80, 748, 116, 70, 69, 68,
	1366, 2839, 2843, 2841, 2840, 67, 1645, 1614, 66, 91,
	77, 87, 78, 76, 75, 74, 1646, 1647, 65, 64,
	63, 132, 131, 129, 130, 128, 761, 760, 127, 126,
	125, 124, 123, 43, 44, 45, 46, 142, 141, 2848,
	2849, 143, 1613, 145, 147, 759, 144, 139, 137, 3289,
	140, 138, 136, 56, 99, 17, 735, 1620, 24, 4,
	0, 0, 2995, 0, 0, 0, 0, 739, 770, 0,
	0, 0, 0, 0, 0, 0, 2562, 0, 0, 0,
	0, 3231, 0, 2856, 0, 0, 0, 0, 0, 0,
	0, 766, 0, 0, 0, 2835, 0, 0, 0, 0,
	0, 2847, 992, 991, 1001, 1002, 994, 995, 996, 997,
	998, 999, 1000, 993, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1636, 0, 0, 767, 771, 992,
	991, 1001, 1002, 994, 995, 996, 997, 998, 999, 1000,
	993, 0, 0, 0, 0, 0, 756, 0, 754, 758,
	774, 0, 0, 0, 755, 752, 751, 0, 757, 742,
	743, 741, 744, 745, 746, 747, 0, 772, 0, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	768, 769, 992, 991, 1001, 1002, 994, 995, 996, 997,
	998, 999, 1000, 993, 1604, 1606, 1603, 0, 1599, 0,
	0, 0, 0, 1624, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 0, 0, 764, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2852, 0, 0, 0, 1618, 1652, 0, 0, 1619, 1621,
	1623, 0, 1625, 1626, 1627, 1631, 1632, 1633, 1635, 1638,
	1639, 1640, 2205, 0, 0, 0, 0, 0, 0, 1628,
	1637, 1629, 0, 0, 0, 0, 1670, 0, 0, 0,
	0, 1608, 0, 0, 0, 0, 992, 991, 1001, 1002,
	994, 995, 996, 997, 998, 999, 1000, 993, 0, 0,
	2851, 0, 0, 1644, 1822, 0, 763, 0, 0, 0,
	0, 0, 1600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1601, 1602, 992, 991,
	1001, 1002, 994, 995, 996, 997, 998, 999, 1000, 993,
	0, 0, 0, 116, 1641, 0, 116, 116, 0, 116,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1617, 0, 0, 0, 0, 0, 0, 1616, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 595, 0, 0, 0, 0, 810, 0, 0,
	0, 337, 1634, 0, 810, 0, 0, 0, 0, 0,
	0, 1622, 0, 116, 550, 0, 0, 0, 280, 0,
	0, 307, 0, 0, 1649, 1648, 0, 0, 0, 0,
	0, 0, 0, 0, 438, 0, 439, 0, 0, 586,
	0, 0, 366, 321, 0, 0, 0, 0, 646, 654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	543, 0, 0, 576, 623, 622, 563, 573, 0, 0,
	257, 189, 440, 0, 441, 564, 1610, 572, 565, 569,
	568, 566, 567, 0, 638, 0, 0, 0, 0, 0,
	1009, 534, 547, 0, 551, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1651, 0, 0, 1650, 0, 0, 544, 545,
	0, 0, 0, 0, 596, 0, 546, 0, 0, 591,
	570, 574, 0, 0, 0, 0, 248, 371, 387, 258,
	362, 400, 263, 369, 253, 336, 359, 0, 0, 250,
	385, 368, 318, 299, 300, 249, 0, 354, 278, 291,
	275, 334, 571, 594, 598, 274, 660, 592, 395, 252,
	0, 394, 333, 381, 386, 319, 313, 251, 383, 317,
	312, 303, 282, 661, 304, 305, 295, 345, 311, 346,
	296, 323, 322, 324, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 589, 0, 0, 0, 397, 0, 0,
	644, 0, 0, 0, 370, 0, 0, 306, 0, 0,
	0, 593, 0, 357, 339, 657, 535, 0, 355, 309,
	382, 347, 388, 372, 396, 351, 348, 243, 373, 277,
	320, 254, 256, 272, 279, 281, 283, 284, 329, 330,
	342, 361, 374, 375, 376, 276, 264, 356, 265, 293,
	266, 244, 269, 268, 270, 363, 271, 246, 343, 380,
	0, 289, 352, 316, 247, 315, 344, 379, 378, 255,
	404, 410, 411, 0, 0, 416, 0, 0, 0, 424,
	429, 430, 431, 433, 434, 435, 436, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 1466, 1465, 1467,
	409, 287, 240, 241, 449, 642, 335, 0, 0, 0,
	0, 656, 637, 639, 640, 643, 647, 648, 649, 650,
	651, 653, 655, 659, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 2107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 658, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 597, 0, 0, 325, 326,
	327, 328, 645, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 1670, 0, 0, 0, 0, 0,
	0, 0, 0, 116, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 332, 297, 298, 364, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 314, 0, 872,
	667, 641, 666, 668, 669, 665, 670, 671, 652, 554,
	0, 601, 663, 662, 664, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 238,
	267, 0, 242, 0, 308, 0, 349, 285, 0, 0,
	630, 607, 608, 609, 552, 610, 604, 605, 606, 631,
	599, 627, 628, 578, 602, 611, 626, 612, 629, 632,
	633, 672, 673, 618, 674, 615, 634, 625, 624, 613,
	600, 635, 636, 585, 580, 616, 617, 603, 619, 620,
	621, 553, 581, 582, 583, 584, 0, 0, 872, 405,
	406, 407, 428, 391, 0, 446, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 880,
	884, 886, 888, 890, 891, 893, 0, 898, 894, 895,
	896, 897, 0, 875, 876, 877, 878, 856, 857, 881,
	0, 859, 0, 860, 861, 862, 863, 864, 865, 866,
	867, 868, 871, 873, 869, 870, 879, 0, 0, 0,
	0, 0, 0, 1438, 883, 885, 887, 889, 892, 1435,
	0, 0, 0, 1437, 1434, 1436, 1440, 1441, 0, 0,
	0, 1439, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 858, 0,
	0, 874, 848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 880, 884,
	886, 888, 890, 891, 893, 0, 898, 894, 895, 896,
	897, 0, 875, 876, 877, 878, 856, 857, 881, 0,
	859, 0, 860, 861, 862, 863, 864, 865, 866, 867,
	868, 871, 873, 869, 870, 879, 0, 0, 0, 0,
	0, 0, 0, 883, 885, 887, 889, 892, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1670, 1670, 1670, 1670,
	874, 0, 0, 0, 0, 0, 0, 0, 1670, 0,
	0, 0, 0, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1445, 1446, 1447, 1448, 1449, 1450,
	1443, 1444, 0, 0, 0, 0, 2214, 2215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 116, 0, 0, 0, 0, 116,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 116,
	0, 0, 0, 0, 0, 0, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 595, 0, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 550, 0, 0, 0, 280, 1508,
	0, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 882, 438, 0, 439, 0, 0, 586,
	0, 0, 366, 321, 0, 0, 0, 0, 646, 654,
	0, 0, 0, 0, 0, 0, 0, 1694, 0, 0,
	543, 0, 0, 576, 623, 622, 563, 573, 0, 0,
	257, 189, 440, 0, 441, 564, 0, 572, 565, 569,
	568, 566, 567, 0, 638, 0, 0, 0, 0, 0,
	0, 534, 547, 0, 551, 1670, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 116, 0, 0, 0, 0, 0, 0, 544, 545,
	0, 0, 0, 0, 596, 0, 546, 0, 0, 1695,
	570, 574, 882, 0, 0, 0, 248, 371, 387, 258,
	362, 400, 263, 369, 253, 336, 359, 0, 0, 250,
	385, 368, 318, 299, 300, 249, 0, 354, 278, 291,
	275, 334, 571, 594, 598, 274, 660, 592, 395, 252,
	0, 394, 333, 381, 386, 319, 313, 251, 383, 317,
	312, 303, 282, 661, 304, 305, 295, 345, 311, 346,
	296, 323, 322, 324, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 589, 0, 0, 0, 397, 0, 0,
	644, 0, 0, 0, 370, 0, 0, 306, 0, 0,
	0, 593, 0, 357, 339, 657, 535, 0, 355, 309,
	382, 347, 388, 372, 396, 351, 348, 243, 373, 277,
	320, 254, 256, 272, 279, 281, 283, 284, 329, 330,
	342, 361, 374, 375, 376, 276, 264, 356, 265, 293,
	266, 244, 269, 268, 270, 363, 271, 246, 343, 380,
	0, 289, 352, 316, 247, 315, 344, 379, 378, 255,
	404, 410, 411, 0, 0, 416, 0, 0, 0, 424,
	429, 430, 431, 433, 434, 435, 436, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 642, 335, 0, 0, 0,
	0, 656, 637, 639, 640, 643, 647, 648, 649, 650,
	651, 653, 655, 659, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 116, 116, 0, 367, 390, 402, 419,
	422, 116, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 658, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 597, 0, 0, 325, 326,
	327, 328, 645, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1670, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 332, 297, 298, 364, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 314, 0, 0,
	667, 641, 666, 668, 669, 665, 670, 671, 652, 554,
	0, 601, 663, 662, 664, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 238,
	267, 0, 242, 0, 308, 0, 349, 285, 0, 116,
	630, 607, 608, 609, 552, 610, 604, 605, 606, 631,
	599, 627, 628, 578, 602, 611, 626, 612, 629, 632,
	633, 672, 673, 618, 674, 615, 634, 625, 624, 613,
	600, 635, 636, 585, 580, 616, 617, 603, 619, 620,
	621, 553, 581, 582, 583, 584, 166, 595, 0, 405,
	406, 407, 428, 391, 0, 446, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 550,
	0, 0, 0, 280, 0, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 438,
	0, 439, 0, 0, 1012, 0, 0, 366, 321, 0,
	0, 0, 0, 646, 654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 0, 0, 576, 623,
	622, 563, 573, 0, 0, 257, 189, 440, 0, 441,
	564, 0, 572, 565, 569, 568, 566, 567, 0, 638,
	0, 0, 0, 0, 0, 0, 534, 547, 0, 551,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 544, 545, 0, 0, 0, 0, 596,
	0, 546, 0, 0, 591, 570, 574, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 571, 594, 598,
	274, 660, 592, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 661, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 589, 0,
	0, 0, 397, 0, 0, 644, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 593, 0, 357, 339,
	657, 535, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	642, 335, 0, 0, 0, 0, 656, 637, 639, 640,
	643, 647, 648, 649, 650, 651, 653, 655, 659, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	658, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	597, 0, 0, 325, 326, 327, 328, 645, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 667, 641, 666, 668, 669,
	665, 670, 671, 652, 554, 0, 601, 663, 662, 664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 238, 267, 0, 242, 0, 308,
	135, 349, 285, 0, 0, 630, 607, 608, 609, 552,
	610, 604, 605, 606, 631, 599, 627, 628, 578, 602,
	611, 626, 612, 629, 632, 633, 672, 673, 618, 674,
	615, 634, 625, 624, 613, 600, 635, 636, 585, 580,
	616, 617, 603, 619, 620, 621, 553, 581, 582, 583,
	584, 0, 595, 0, 405, 406, 407, 428, 391, 0,
	446, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 550, 0, 0, 0, 280, 3300,
	0, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 438, 0, 439, 0, 0, 586,
	0, 0, 366, 321, 0, 0, 0, 0, 646, 654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	543, 0, 0, 576, 623, 622, 563, 573, 0, 0,
	257, 189, 440, 0, 441, 564, 0, 572, 565, 569,
	568, 566, 567, 0, 638, 0, 0, 0, 0, 0,
	0, 534, 547, 0, 551, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 544, 545,
	0, 0, 0, 0, 596, 0, 546, 0, 0, 591,
	570, 574, 0, 0, 0, 0, 248, 371, 387, 258,
	362, 400, 263, 369, 253, 336, 359, 0, 0, 250,
	385, 368, 318, 299, 300, 249, 0, 354, 278, 291,
	275, 334, 571, 594, 598, 274, 660, 592, 395, 252,
	0, 394, 333, 381, 386, 319, 313, 251, 383, 317,
	312, 303, 282, 661, 304, 305, 295, 345, 311, 346,
	296, 323, 322, 324, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 589, 0, 0, 0, 397, 0, 0,
	644, 0, 0, 0, 370, 0, 0, 306, 0, 0,
	0, 593, 0, 357, 339, 657, 535, 0, 355, 309,
	382, 347, 388, 372, 396, 351, 348, 243, 373, 277,
	320, 254, 256, 272, 279, 281, 283, 284, 329, 330,
	342, 361, 374, 375, 376, 276, 264, 356, 265, 293,
	266, 244, 269, 268, 270, 363, 271, 246, 343, 380,
	0, 289, 352, 316, 247, 315, 344, 379, 378, 255,
	404, 410, 411, 0, 0, 416, 0, 0, 0, 424,
	429, 430, 431, 433, 434, 435, 436, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 642, 335, 0, 0, 0,
	0, 656, 637, 639, 640, 643, 647, 648, 649, 650,
	651, 653, 655, 659, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 658, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 597, 0, 0, 325, 326,
	327, 328, 645, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 332, 297, 298, 364, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 314, 0, 0,
	667, 641, 666, 668, 669, 665, 670, 671, 652, 554,
	0, 601, 663, 662, 664, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 238,
	267, 0, 242, 0, 308, 0, 349, 285, 0, 0,
	630, 607, 608, 609, 552, 610, 604, 605, 606, 631,
	599, 627, 628, 578, 602, 611, 626, 612, 629, 632,
	633, 672, 673, 618, 674, 615, 634, 625, 624, 613,
	600, 635, 636, 585, 580, 616, 617, 603, 619, 620,
	621, 553, 581, 582, 583, 584, 0, 595, 0, 405,
	406, 407, 428, 391, 0, 446, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 550,
	0, 0, 0, 280, 1508, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 438,
	0, 439, 0, 0, 586, 0, 0, 366, 321, 0,
	0, 0, 0, 646, 654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 0, 0, 576, 623,
	622, 563, 573, 0, 0, 257, 189, 440, 0, 441,
	564, 0, 572, 565, 569, 568, 566, 567, 0, 638,
	0, 0, 0, 0, 0, 0, 534, 547, 0, 551,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 544, 545, 0, 0, 0, 0, 596,
	0, 546, 0, 0, 591, 570, 574, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 571, 594, 598,
	274, 660, 592, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 661, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 589, 0,
	0, 0, 397, 0, 0, 644, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 593, 0, 357, 339,
	657, 535, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	642, 335, 0, 0, 0, 0, 656, 637, 639, 640,
	643, 647, 648, 649, 650, 651, 653, 655, 659, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	658, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	597, 0, 0, 325, 326, 327, 328, 645, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 667, 641, 666, 668, 669,
	665, 670, 671, 652, 554, 0, 601, 663, 662, 664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 238, 267, 0, 242, 0, 308,
	0, 349, 285, 0, 0, 630, 607, 608, 609, 552,
	610, 604, 605, 606, 631, 599, 627, 628, 578, 602,
	611, 626, 612, 629, 632, 633, 672, 673, 618, 674,
	615, 634, 625, 624, 613, 600, 635, 636, 585, 580,
	616, 617, 603, 619, 620, 621, 553, 581, 582, 583,
	584, 0, 595, 0, 405, 406, 407, 428, 391, 0,
	446, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 550, 0, 0, 0, 280, 0,
	0, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 438, 0, 439, 0, 0, 586,
	0, 0, 366, 321, 0, 0, 0, 0, 646, 654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	543, 0, 0, 576, 623, 622, 563, 573, 0, 0,
	257, 189, 440, 0, 441, 564, 0, 572, 565, 569,
	568, 566, 567, 0, 638, 0, 0, 0, 0, 0,
	0, 534, 547, 0, 551, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 544, 545,
	1257, 0, 0, 0, 596, 0, 546, 0, 0, 591,
	570, 574, 0, 0, 0, 0, 248, 371, 387, 258,
	362, 400, 263, 369, 253, 336, 359, 0, 0, 250,
	385, 368, 318, 299, 300, 249, 0, 354, 278, 291,
	275, 334, 571, 594, 598, 274, 660, 592, 395, 252,
	0, 394, 333, 381, 386, 319, 313, 251, 383, 317,
	312, 303, 282, 661, 304, 305, 295, 345, 311, 346,
	296, 323, 322, 324, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 589, 0, 0, 0, 397, 0, 0,
	644, 0, 0, 0, 370, 0, 0, 306, 0, 0,
	0, 593, 0, 357, 339, 657, 535, 0, 355, 309,
	382, 347, 388, 372, 396, 351, 348, 243, 373, 277,
	320, 254, 256, 272, 279, 281, 283, 284, 329, 330,
	342, 361, 374, 375, 376, 276, 264, 356, 265, 293,
	266, 244, 269, 268, 270, 363, 271, 246, 343, 380,
	0, 289, 352, 316, 247, 315, 344, 379, 378, 255,
	404, 410, 411, 0, 0, 416, 0, 0, 0, 424,
	429, 430, 431, 433, 434, 435, 436, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 642, 335, 0, 0, 0,
	0, 656, 637, 639, 640, 643, 647, 648, 649, 650,
	651, 653, 655, 659, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 658, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 597, 0, 0, 325, 326,
	327, 328, 645, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 332, 297, 298, 364, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 314, 0, 0,
	667, 641, 666, 668, 669, 665, 670, 671, 652, 554,
	0, 601, 663, 662, 664, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 238,
	267, 0, 242, 0, 308, 0, 349, 285, 0, 0,
	630, 607, 608, 609, 552, 610, 604, 605, 606, 631,
	599, 627, 628, 578, 602, 611, 626, 612, 629, 632,
	633, 672, 673, 618, 674, 615, 634, 625, 624, 613,
	600, 635, 636, 585, 580, 616, 617, 603, 619, 620,
	621, 553, 581, 582, 583, 584, 0, 0, 0, 405,
	406, 407, 428, 391, 595, 446, 0, 1844, 0, 0,
	0, 0, 0, 337, 0, 0, 0, 450, 442, 0,
	0, 0, 0, 0, 0, 0, 550, 0, 0, 0,
	280, 0, 0, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 438, 0, 439, 0,
	0, 586, 0, 0, 366, 321, 0, 0, 0, 0,
	646, 654, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 0, 0, 576, 623, 622, 563, 573,
	0, 0, 257, 189, 440, 0, 441, 564, 0, 572,
	565, 569, 568, 566, 567, 0, 638, 0, 0, 0,
	0, 0, 0, 534, 547, 0, 551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	544, 545, 0, 0, 0, 0, 596, 0, 546, 0,
	0, 591, 570, 574, 0, 0, 0, 0, 248, 371,
	387, 258, 362, 400, 263, 369, 253, 336, 359, 0,
	0, 250, 385, 368, 318, 299, 300, 249, 0, 354,
	278, 291, 275, 334, 571, 594, 598, 274, 660, 592,
	395, 252, 0, 394, 333, 381, 386, 319, 313, 251,
	383, 317, 312, 303, 282, 661, 304, 305, 295, 345,
	311, 346, 296, 323, 322, 324, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 589, 0, 0, 0, 397,
	0, 0, 644, 0, 0, 0, 370, 0, 0, 306,
	0, 0, 0, 593, 0, 357, 339, 657, 535, 0,
	355, 309, 382, 347, 388, 372, 396, 351, 348, 243,
	373, 277, 320, 254, 256, 272, 279, 281, 283, 284,
	329, 330, 342, 361, 374, 375, 376, 276, 264, 356,
	265, 293, 266, 244, 269, 268, 270, 363, 271, 246,
	343, 380, 0, 289, 352, 316, 247, 315, 344, 379,
	378, 255, 404, 410, 411, 0, 0, 416, 0, 0,
	0, 424, 429, 430, 431, 433, 434, 435, 436, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 287, 240, 241, 449, 642, 335, 0,
	0, 0, 0, 656, 637, 639, 640, 643, 647, 648,
	649, 650, 651, 653, 655, 659, 448, 0, 0, 0,
	0, 0, 447, 341, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 390,
	402, 419, 422, 0, 0, 0, 0, 245, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 658, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 597, 0, 0,
	325, 326, 327, 328, 645, 0, 262, 420, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 415, 286,
	292, 432, 294, 261, 340, 288, 399, 301, 0, 425,
	0, 426, 0, 0, 0, 0, 332, 297, 298, 364,
	302, 310, 353, 398, 338, 358, 259, 389, 365, 314,
	0, 0, 667, 641, 666, 668, 669, 665, 670, 671,
	652, 554, 0, 601, 663, 662, 664, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 238, 267, 0, 242, 0, 308, 0, 349, 285,
	0, 0, 630, 607, 608, 609, 552, 610, 604, 605,
	606, 631, 599, 627, 628, 578, 602, 611, 626, 612,
	629, 632, 633, 672, 673, 618, 674, 615, 634, 625,
	624, 613, 600, 635, 636, 585, 580, 616, 617, 603,
	619, 620, 621, 553, 581, 582, 583, 584, 0, 595,
	0, 405, 406, 407, 428, 391, 0, 446, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 450,
	442, 550, 0, 0, 0, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 438, 0, 439, 0, 0, 586, 0, 0, 366,
	321, 0, 0, 0, 0, 646, 654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 0, 0,
	576, 623, 622, 563, 573, 0, 0, 257, 189, 440,
	0, 441, 564, 0, 572, 565, 569, 568, 566, 567,
	0, 638, 0, 0, 0, 0, 0, 0, 534, 547,
	0, 551, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 544, 545, 0, 0, 0,
	0, 596, 0, 546, 0, 0, 591, 570, 574, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 571,
	594, 598, 274, 660, 592, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	661, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	589, 0, 0, 0, 397, 0, 0, 644, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 593, 0,
	357, 339, 657, 535, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 642, 335, 0, 0, 0, 0, 656, 637,
	639, 640, 643, 647, 648, 649, 650, 651, 653, 655,
	659, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 658, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 597, 0, 0, 325, 326, 327, 328, 645,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 667, 641, 666,
	668, 669, 665, 670, 671, 652, 554, 0, 601, 663,
	662, 664, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 238, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 630, 607, 608,
	609, 552, 610, 604, 605, 606, 631, 599, 627, 628,
	578, 602, 611, 626, 612, 629, 632, 633, 672, 673,
	618, 674, 615, 634, 625, 624, 613, 600, 635, 636,
	585, 580, 616, 617, 603, 619, 620, 621, 553, 581,
	582, 583, 584, 0, 595, 0, 405, 406, 407, 428,
	391, 0, 446, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 1384, 0, 450, 442, 550, 0, 0, 0,
	280, 0, 0, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 438, 0, 439, 0,
	0, 586, 0, 0, 366, 321, 0, 0, 0, 0,
	646, 654, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 0, 0, 576, 623, 622, 563, 573,
	0, 0, 257, 189, 440, 0, 441, 564, 0, 572,
	565, 569, 568, 566, 567, 0, 638, 0, 0, 0,
	0, 0, 0, 0, 547, 0, 551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	544, 545, 0, 0, 0, 0, 596, 0, 546, 0,
	0, 591, 570, 574, 0, 0, 0, 0, 248, 371,
	387, 258, 362, 400, 263, 369, 253, 336, 359, 0,
	0, 250, 385, 368, 318, 299, 300, 249, 0, 354,
	278, 291, 275, 334, 571, 594, 598, 274, 660, 592,
	395, 252, 0, 394, 333, 381, 386, 319, 313, 251,
	383, 317, 312, 303, 282, 661, 304, 305, 295, 345,
	311, 346, 296, 323, 322, 324, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 589, 0, 0, 0, 397,
	0, 0, 644, 0, 0, 0, 370, 0, 0, 306,
	0, 0, 0, 593, 0, 357, 339, 657, 0, 0,
	355, 309, 382, 347, 388, 372, 396, 351, 348, 243,
	373, 277, 320, 254, 256, 272, 279, 281, 283, 284,
	329, 330, 342, 361, 374, 375, 376, 276, 264, 356,
	265, 293, 266, 244, 269, 268, 270, 363, 271, 246,
	343, 380, 0, 289, 352, 316, 247, 315, 344, 379,
	378, 255, 404, 1385, 1386, 0, 0, 416, 0, 0,
	0, 424, 429, 430, 431, 433, 434, 435, 436, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 287, 240, 241, 449, 642, 335, 0,
	0, 0, 0, 656, 637, 639, 640, 643, 647, 648,
	649, 650, 651, 653, 655, 659, 448, 0, 0, 0,
	0, 0, 447, 341, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 390,
	402, 419, 422, 0, 0, 0, 0, 245, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 658, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 597, 0, 0,
	325, 326, 327, 328, 645, 0, 262, 420, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 415, 286,
	292, 432, 294, 261, 340, 288, 399, 301, 0, 425,
	0, 426, 0, 0, 0, 0, 332, 297, 298, 364,
	302, 310, 353, 398, 338, 358, 259, 389, 365, 314,
	0, 0, 667, 641, 666, 668, 669, 665, 670, 671,
	652, 554, 0, 601, 663, 662, 664, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 238, 267, 0, 242, 0, 308, 0, 349, 285,
	0, 0, 630, 607, 608, 609, 552, 610, 604, 605,
	606, 631, 599, 627, 628, 578, 602, 611, 626, 612,
	629, 632, 633, 672, 673, 618, 674, 615, 634, 625,
	624, 613, 600, 635, 636, 585, 580, 616, 617, 603,
	619, 620, 621, 553, 581, 582, 583, 584, 0, 595,
	0, 405, 406, 407, 428, 391, 0, 446, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 450,
	442, 550, 0, 0, 0, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 438, 0, 439, 0, 0, 586, 0, 0, 366,
	321, 0, 0, 0, 0, 646, 654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	576, 623, 622, 563, 573, 0, 0, 257, 189, 440,
	0, 441, 564, 0, 572, 565, 569, 568, 566, 567,
	0, 638, 0, 0, 0, 0, 0, 0, 534, 547,
	0, 551, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 544, 545, 0, 0, 0,
	0, 596, 0, 546, 0, 0, 591, 570, 574, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 571,
	594, 598, 274, 660, 592, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	661, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	589, 0, 0, 0, 397, 0, 0, 644, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 593, 0,
	357, 339, 657, 535, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 642, 335, 0, 0, 0, 0, 656, 637,
	639, 640, 643, 647, 648, 649, 650, 651, 653, 655,
	659, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 658, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 597, 0, 0, 325, 326, 327, 328, 645,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 667, 641, 666,
	668, 669, 665, 670, 671, 652, 554, 0, 601, 663,
	662, 664, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 238, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 630, 607, 608,
	609, 552, 610, 604, 605, 606, 631, 599, 627, 628,
	578, 602, 611, 626, 612, 629, 632, 633, 672, 673,
	618, 674, 615, 634, 625, 624, 613, 600, 635, 636,
	585, 580, 616, 617, 603, 619, 620, 621, 553, 581,
	582, 583, 584, 0, 595, 0, 405, 406, 407, 428,
	391, 0, 446, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 450, 442, 550, 0, 0, 0,
	280, 0, 0, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 438, 0, 439, 0,
	0, 586, 0, 0, 366, 321, 0, 0, 0, 0,
	646, 654, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 0, 0, 576, 623, 622, 563, 573,
	0, 0, 257, 189, 440, 0, 441, 564, 0, 572,
	565, 569, 568, 566, 567, 0, 638, 0, 0, 0,
	0, 0, 0, 0, 547, 0, 551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	544, 545, 0, 0, 0, 0, 596, 0, 546, 0,
	0, 591, 570, 574, 0, 0, 0, 0, 248, 371,
	387, 258, 362, 400, 263, 369, 253, 336, 359, 0,
	0, 250, 385, 368, 318, 299, 300, 249, 0, 354,
	278, 291, 275, 334, 571, 594, 598, 274, 660, 592,
	395, 252, 0, 394, 333, 381, 386, 319, 313, 251,
	383, 317, 312, 303, 282, 661, 304, 305, 295, 345,
	311, 346, 296, 323, 322, 324, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 589, 0, 0, 0, 397,
	0, 0, 644, 0, 0, 0, 370, 0, 0, 306,
	0, 0, 0, 593, 0, 357, 339, 657, 0, 0,
	355, 309, 382, 347, 388, 372, 396, 351, 348, 243,
	373, 277, 320, 254, 256, 272, 279, 281, 283, 284,
	329, 330, 342, 361, 374, 375, 376, 276, 264, 356,
	265, 293, 266, 244, 269, 268, 270, 363, 271, 246,
	343, 380, 0, 289, 352, 316, 247, 315, 344, 379,
	378, 255, 404, 410, 411, 0, 0, 416, 0, 0,
	0, 424, 429, 430, 431, 433, 434, 435, 436, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 287, 240, 241, 449, 642, 335, 0,
	0, 0, 0, 656, 637, 639, 640, 643, 647, 648,
	649, 650, 651, 653, 655, 659, 448, 0, 0, 0,
	0, 0, 447, 341, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 390,
	402, 419, 422, 0, 0, 0, 0, 245, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 658, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 597, 0, 0,
	325, 326, 327, 328, 645, 0, 262, 420, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 415, 286,
	292, 432, 294, 261, 340, 288, 399, 301, 0, 425,
	0, 426, 0, 0, 0, 0, 332, 297, 298, 364,
	302, 310, 353, 398, 338, 358, 259, 389, 365, 314,
	0, 0, 667, 641, 666, 668, 669, 665, 670, 671,
	652, 554, 0, 601, 663, 662, 664, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 238, 267, 0, 242, 0, 308, 0, 349, 285,
	0, 0, 630, 607, 608, 609, 552, 610, 604, 605,
	606, 631, 599, 627, 628, 578, 602, 611, 626, 612,
	629, 632, 633, 672, 673, 618, 674, 615, 634, 625,
	624, 613, 600, 635, 636, 585, 580, 616, 617, 603,
	619, 620, 621, 553, 581, 582, 583, 584, 0, 0,
	0, 405, 406, 407, 428, 391, 0, 446, 166, 51,
	158, 134, 0, 0, 0, 0, 0, 0, 337, 450,
	442, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 151, 0, 280, 0, 160, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 438, 0, 439, 0, 0, 114, 0, 0, 366,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 102, 0, 0, 0, 0, 0, 163, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 257, 189, 440,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 0,
	384, 412, 274, 403, 0, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	427, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 133, 157, 164, 0, 100, 0, 0,
	0, 0, 0, 0, 397, 0, 0, 181, 0, 0,
	0, 370, 0, 0, 306, 156, 150, 149, 413, 0,
	357, 339, 57, 0, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 152, 153, 154, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 392, 273, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 408, 184, 0, 0,
	437, 192, 0, 0, 0, 155, 0, 193, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 417, 0, 0, 325, 326, 327, 328, 290,
	0, 262, 420, 350, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 50, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 238, 267, 0, 242,
	0, 308, 135, 349, 285, 0, 0, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	0, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 0, 0, 0, 239, 234,
	235, 236, 237, 0, 0, 0, 405, 406, 407, 428,
	391, 337, 194, 39, 182, 185, 187, 186, 0, 49,
	5, 0, 0, 117, 195, 442, 0, 0, 280, 0,
	0, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 438, 0, 439, 0, 0, 0,
	0, 0, 366, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1045, 0, 0, 188, 0, 0, 563, 573, 0, 0,
	257, 189, 440, 0, 441, 564, 0, 572, 565, 569,
	568, 566, 567, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	570, 0, 0, 0, 0, 0, 248, 371, 387, 258,
	362, 400, 263, 369, 253, 336, 359, 0, 0, 250,
	385, 368, 318, 299, 300, 249, 0, 354, 278, 291,
	275, 334, 571, 384, 412, 274, 403, 0, 395, 252,
	0, 394, 333, 381, 386, 319, 313, 251, 383, 317,
	312, 303, 282, 427, 304, 305, 295, 345, 311, 346,
	296, 323, 322, 324, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 306, 0, 0,
	0, 413, 0, 357, 339, 0, 0, 0, 355, 309,
	382, 347, 388, 372, 396, 351, 348, 243, 373, 277,
	320, 254, 256, 272, 279, 281, 283, 284, 329, 330,
	342, 361, 374, 375, 376, 276, 264, 356, 265, 293,
	266, 244, 269, 268, 270, 363, 271, 246, 343, 380,
	0, 289, 352, 316, 247, 315, 344, 379, 378, 255,
	404, 410, 411, 0, 0, 416, 0, 0, 0, 424,
	429, 430, 431, 433, 434, 435, 436, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 273, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 408,
	0, 0, 0, 437, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 417, 0, 0, 325, 326,
	327, 328, 290, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 332, 297, 298, 364, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 238,
	267, 0, 242, 0, 308, 0, 349, 285, 0, 0,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 0, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 0, 0,
	0, 239, 234, 235, 236, 237, 0, 0, 0, 405,
	406, 407, 428, 391, 0, 446, 0, 0, 0, 166,
	51, 158, 134, 0, 0, 0, 0, 450, 442, 337,
	467, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 0, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 438, 0, 439, 0, 0, 0, 0, 0,
	366, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 257, 189,
	440, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 371, 387, 258, 362, 400,
	263, 369, 253, 336, 359, 0, 0, 250, 385, 368,
	318, 299, 300, 249, 0, 354, 278, 291, 275, 334,
	0, 384, 412, 274, 403, 0, 395, 252, 0, 394,
	333, 381, 386, 319, 313, 251, 383, 317, 312, 303,
	282, 427, 304, 305, 295, 345, 311, 346, 296, 323,
	322, 324, 0, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 0,
	0, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 306, 0, 0, 0, 413,
	0, 357, 339, 0, 0, 0, 355, 309, 382, 347,
	388, 372, 396, 351, 348, 243, 373, 277, 320, 254,
	256, 272, 279, 281, 283, 284, 329, 330, 342, 361,
	374, 375, 376, 276, 264, 356, 265, 293, 266, 244,
	269, 268, 270, 363, 271, 246, 343, 380, 0, 289,
	352, 316, 247, 315, 344, 379, 378, 255, 404, 410,
	411, 0, 0, 416, 0, 0, 0, 424, 429, 430,
	431, 433, 434, 435, 436, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 287,
	240, 241, 449, 273, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 408, 0, 0,
	0, 437, 448, 0, 0, 0, 0, 0, 447, 341,
	0, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 390, 402, 419, 422, 0,
	0, 0, 0, 245, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 417, 0, 0, 325, 326, 327, 328,
	468, 470, 262, 420, 350, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 415, 286, 292, 432, 294, 261,
	340, 288, 399, 301, 0, 425, 0, 426, 0, 0,
	0, 0, 332, 297, 298, 364, 302, 310, 353, 398,
	338, 358, 259, 389, 365, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 238, 267, 0,
	242, 0, 308, 135, 349, 285, 0, 0, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 0, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 0, 337, 0, 239,
	234, 235, 236, 237, 0, 872, 0, 405, 406, 407,
	428, 391, 0, 446, 280, 0, 0, 307, 0, 0,
	0, 0, 0, 0, 0, 450, 442, 0, 0, 0,
	438, 0, 439, 0, 0, 0, 0, 0, 366, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 257, 189, 440, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 858, 0, 0, 0, 0,
	0, 0, 248, 371, 387, 258, 362, 400, 263, 369,
	253, 336, 359, 0, 0, 1932, 1934, 1935, 1936, 1937,
	1938, 1939, 0, 1944, 1940, 1941, 1942, 1943, 0, 1927,
	1928, 1929, 1930, 856, 1911, 1933, 0, 1912, 333, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1924, 1925,
	1922, 1923, 1931, 345, 311, 346, 296, 323, 322, 324,
	883, 885, 887, 889, 892, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 306, 0, 0, 0, 1926, 0, 357,
	339, 0, 0, 0, 355, 309, 382, 347, 388, 372,
	396, 351, 348, 243, 373, 277, 320, 254, 256, 272,
	279, 281, 283, 284, 329, 330, 342, 361, 374, 375,
	376, 276, 264, 356, 265, 293, 266, 244, 269, 268,
	270, 363, 271, 246, 343, 380, 0, 289, 352, 316,
	247, 315, 344, 379, 378, 255, 404, 410, 411, 0,
	0, 416, 0, 0, 0, 424, 429, 430, 431, 433,
	434, 435, 436, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 287, 240, 241,
	449, 273, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 408, 0, 0, 0, 437,
	448, 0, 0, 0, 0, 0, 447, 341, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 390, 402, 419, 422, 0, 0, 0,
	0, 245, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 417, 0, 0, 325, 326, 327, 328, 290, 0,
	262, 420, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 238, 267, 0, 242, 882,
	308, 0, 349, 285, 0, 0, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 0,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 0, 337, 0, 239, 234, 235,
	236, 237, 0, 0, 0, 405, 406, 407, 428, 391,
	0, 446, 280, 0, 0, 307, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 0, 0, 0, 438, 0,
	439, 0, 0, 0, 0, 0, 366, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 257, 189, 440, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 2008,
	2011, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 371, 387, 258, 362, 400, 263, 369, 253, 336,
	359, 0, 0, 250, 385, 368, 318, 299, 300, 249,
	0, 354, 278, 291, 275, 334, 0, 384, 412, 274,
	403, 0, 395, 252, 0, 394, 333, 381, 386, 319,
	313, 251, 383, 317, 312, 303, 282, 427, 304, 305,
	295, 345, 311, 346, 296, 323, 322, 324, 0, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2012, 397, 0, 0, 0, 2007, 0, 2006, 370, 2004,
	2009, 306, 0, 0, 0, 413, 0, 357, 339, 0,
	0, 0, 355, 309, 382, 347, 388, 372, 396, 351,
	348, 243, 373, 277, 320, 254, 256, 272, 279, 281,
	283, 284, 329, 330, 342, 361, 374, 375, 376, 276,
	264, 356, 265, 293, 266, 244, 269, 268, 270, 363,
	271, 246, 343, 380, 2010, 289, 352, 316, 247, 315,
	344, 379, 378, 255, 404, 410, 411, 0, 0, 416,
	0, 0, 0, 424, 429, 430, 431, 433, 434, 435,
	436, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 287, 240, 241, 449, 273,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 408, 0, 0, 0, 437, 448, 0,
	0, 0, 0, 0, 447, 341, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 390, 402, 419, 422, 0, 0, 0, 0, 245,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 417,
	0, 0, 325, 326, 327, 328, 290, 0, 262, 420,
	350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	415, 286, 292, 432, 294, 261, 340, 288, 399, 301,
	0, 425, 0, 426, 0, 0, 0, 0, 332, 297,
	298, 364, 302, 310, 353, 398, 338, 358, 259, 389,
	365, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 238, 267, 0, 242, 0, 308, 0,
	349, 285, 0, 0, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 0, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 0, 0, 0, 239, 234, 235, 236, 237,
	337, 0, 0, 405, 406, 407, 428, 391, 0, 446,
	0, 0, 1729, 0, 0, 0, 0, 280, 0, 0,
	307, 450, 442, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 438, 0, 439, 0, 0, 0, 0,
	0, 366, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 1730, 0, 0, 0, 257,
	189, 440, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 978, 979, 980, 977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 0, 384, 412, 274, 403, 0, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 427, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	413, 0, 357, 339, 0, 0, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	287, 240, 241, 449, 273, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 408, 0,
	0, 0, 437, 448, 0, 0, 0, 0, 0, 447,
	341, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 390, 402, 419, 422,
	0, 0, 0, 0, 245, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 417, 0, 0, 325, 326, 327,
	328, 290, 0, 262, 420, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 286, 292, 432, 294,
	261, 340, 288, 399, 301, 0, 425, 0, 426, 0,
	0, 0, 0, 332, 297, 298, 364, 302, 310, 353,
	398, 338, 358, 259, 389, 365, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 238, 267,
	0, 242, 0, 308, 0, 349, 285, 0, 0, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 0, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 0, 337, 0,
	239, 234, 235, 236, 237, 0, 0, 0, 405, 406,
	407, 428, 391, 0, 446, 280, 792, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 450, 442, 0, 0,
	0, 438, 0, 439, 0, 0, 0, 0, 0, 366,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 799, 800, 0, 0, 0, 0, 257, 189, 440,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 371, 787, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 0,
	384, 412, 274, 403, 777, 395, 252, 776, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	427, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 413, 0,
	357, 339, 0, 0, 0, 355, 309, 382, 347, 388,
	372, 396, 790, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 273, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 408, 0, 0, 0,
	437, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	791, 0, 393, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 794, 0, 0, 325, 326, 327, 328, 290,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 801, 788, 797, 789, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 798, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 238, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	0, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 0, 337, 0, 239, 234,
	235, 236, 237, 0, 0, 0, 405, 406, 407, 428,
	391, 0, 446, 280, 0, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 450, 442, 0, 0, 0, 438,
	0, 439, 0, 0, 0, 0, 0, 366, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 257, 189, 440, 0, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 2034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 0, 384, 412,
	274, 403, 0, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 427, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2033, 397, 0, 0, 0, 2038, 2036, 0, 370,
	0, 2037, 306, 0, 0, 0, 413, 0, 357, 339,
	0, 0, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	273, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 408, 0, 0, 0, 437, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	417, 0, 0, 325, 326, 327, 328, 290, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 238, 267, 0, 242, 0, 308,
	0, 349, 285, 0, 0, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 0, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 0, 0, 0, 239, 234, 235, 236,
	237, 166, 0, 0, 405, 406, 407, 428, 391, 0,
	446, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 0, 0, 0, 0, 280, 0,
	0, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 438, 0, 439, 0, 0, 114,
	0, 0, 366, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 1773, 0, 188, 0, 0, 0, 0, 0, 0,
	257, 189, 440, 0, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 371, 387, 258,
	362, 400, 263, 369, 253, 336, 359, 0, 0, 250,
	385, 368, 318, 299, 300, 249, 0, 354, 278, 291,
	275, 334, 0, 384, 412, 274, 403, 0, 395, 252,
	0, 394, 333, 381, 386, 319, 313, 251, 383, 317,
	312, 303, 282, 427, 304, 305, 295, 345, 311, 346,
	296, 323, 322, 324, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 306, 0, 0,
	0, 413, 0, 357, 339, 0, 0, 0, 355, 309,
	382, 347, 388, 372, 396, 351, 348, 243, 373, 277,
	320, 254, 256, 272, 279, 281, 283, 284, 329, 330,
	342, 361, 374, 375, 376, 276, 264, 356, 265, 293,
	266, 244, 269, 268, 270, 363, 271, 246, 343, 380,
	0, 289, 352, 316, 247, 315, 344, 379, 378, 255,
	404, 410, 411, 0, 0, 416, 0, 0, 0, 424,
	429, 430, 431, 433, 434, 435, 436, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 273, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 408,
	0, 0, 0, 437, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 417, 0, 0, 325, 326,
	327, 328, 290, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 332, 297, 298, 364, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 238,
	267, 0, 242, 0, 308, 135, 349, 285, 0, 0,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 0, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 0, 0,
	0, 239, 234, 235, 236, 237, 166, 0, 0, 405,
	406, 407, 428, 391, 0, 446, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 0,
	0, 0, 0, 280, 0, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 438,
	0, 439, 0, 0, 114, 0, 0, 366, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 1764, 0, 188, 0,
	0, 0, 0, 0, 0, 257, 189, 440, 0, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 0, 384, 412,
	274, 403, 0, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 427, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 413, 0, 357, 339,
	0, 0, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	273, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 408, 0, 0, 0, 437, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	417, 0, 0, 325, 326, 327, 328, 290, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 238, 267, 0, 242, 0, 308,
	135, 349, 285, 0, 0, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 0, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 0, 0, 0, 239, 234, 235, 236,
	237, 166, 0, 0, 405, 406, 407, 428, 391, 0,
	446, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 0, 0, 0, 0, 280, 0,
	0, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 438, 0, 439, 0, 0, 114,
	0, 0, 366, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1668, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	257, 189, 440, 0, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 371, 387, 258,
	362, 400, 263, 369, 253, 336, 359, 0, 0, 250,
	385, 368, 318, 299, 300, 249, 0, 354, 278, 291,
	275, 334, 0, 384, 412, 274, 403, 0, 395, 252,
	0, 394, 333, 381, 386, 319, 313, 251, 383, 317,
	312, 303, 282, 427, 304, 305, 295, 345, 311, 346,
	296, 323, 322, 324, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 306, 0, 0,
	0, 413, 0, 357, 339, 0, 0, 0, 355, 309,
	382, 347, 388, 372, 396, 351, 348, 243, 373, 277,
	320, 254, 256, 272, 279, 281, 283, 284, 329, 330,
	342, 361, 374, 375, 376, 276, 264, 356, 265, 293,
	266, 244, 269, 268, 270, 363, 271, 246, 343, 380,
	0, 289, 352, 316, 247, 315, 344, 379, 378, 255,
	404, 410, 411, 0, 0, 416, 0, 0, 0, 424,
	429, 430, 431, 433, 434, 435, 436, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 273, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 408,
	0, 0, 0, 437, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 417, 0, 0, 325, 326,
	327, 328, 290, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 332, 297, 298, 364, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 238,
	267, 0, 242, 0, 308, 135, 349, 285, 0, 0,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 0, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 0, 337,
	0, 239, 234, 235, 236, 237, 0, 0, 0, 405,
	406, 407, 428, 391, 0, 446, 280, 0, 0, 307,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 0,
	0, 0, 438, 0, 439, 0, 0, 0, 0, 0,
	366, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 799, 800, 0, 0, 0, 0, 257, 189,
	440, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 371, 387, 258, 362, 400,
	263, 369, 253, 336, 359, 0, 0, 250, 385, 368,
	318, 299, 300, 249, 0, 354, 278, 291, 275, 334,
	0, 384, 412, 274, 403, 777, 395, 252, 776, 394,
	333, 381, 386, 319, 313, 251, 383, 317, 312, 303,
	282, 427, 304, 305, 295, 345, 311, 346, 296, 323,
	322, 324, 0, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 306, 0, 0, 0, 413,
	0, 357, 339, 0, 0, 0, 355, 309, 382, 347,
	388, 372, 396, 351, 348, 243, 373, 277, 320, 254,
	256, 272, 279, 281, 283, 284, 329, 330, 342, 361,
	374, 375, 376, 276, 264, 356, 265, 293, 266, 244,
	269, 268, 270, 363, 271, 246, 343, 380, 0, 289,
	352, 316, 247, 315, 344, 379, 378, 255, 404, 410,
	411, 0, 0, 416, 0, 0, 0, 424, 429, 430,
	431, 433, 434, 435, 436, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 287,
	240, 241, 449, 273, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 408, 0, 0,
	0, 437, 448, 0, 0, 0, 0, 0, 447, 341,
	0, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 390, 402, 419, 422, 0,
	0, 0, 0, 245, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 417, 0, 0, 325, 326, 327, 328,
	290, 0, 262, 420, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 415, 286, 292, 432, 294, 261,
	340, 288, 399, 301, 0, 425, 0, 426, 0, 0,
	0, 0, 801, 1687, 797, 1688, 302, 310, 353, 398,
	338, 358, 259, 389, 365, 798, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 238, 267, 0,
	242, 0, 308, 0, 349, 285, 0, 0, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 0, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 0, 337, 0, 239,
	234, 235, 236, 237, 0, 0, 2439, 405, 406, 407,
	428, 391, 0, 446, 280, 0, 0, 307, 0, 0,
	0, 0, 0, 0, 0, 450, 442, 0, 0, 0,
	438, 0, 439, 0, 0, 0, 0, 0, 366, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 257, 189, 440, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 371, 387, 258, 362, 400, 263, 369,
	253, 336, 359, 0, 0, 250, 385, 368, 318, 299,
	300, 249, 0, 354, 278, 291, 275, 334, 0, 384,
	412, 274, 403, 0, 395, 252, 0, 394, 333, 381,
	386, 319, 313, 251, 383, 317, 312, 303, 282, 427,
	304, 305, 295, 345, 311, 346, 296, 323, 322, 324,
	0, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 2442, 0, 0, 2441, 0, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 306, 0, 0, 0, 413, 0, 357,
	339, 0, 0, 0, 355, 309, 382, 347, 388, 372,
	396, 351, 348, 243, 373, 277, 320, 254, 256, 272,
	279, 281, 283, 284, 329, 330, 342, 361, 374, 375,
	376, 276, 264, 356, 265, 293, 266, 244, 269, 268,
	270, 363, 271, 246, 343, 380, 0, 289, 352, 316,
	247, 315, 344, 379, 378, 255, 404, 410, 411, 0,
	0, 416, 0, 0, 0, 424, 429, 430, 431, 433,
	434, 435, 436, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 287, 240, 241,
	449, 273, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 408, 0, 0, 0, 437,
	448, 0, 0, 0, 0, 0, 447, 341, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 390, 402, 419, 422, 0, 0, 0,
	0, 245, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 417, 0, 0, 325, 326, 327, 328, 290, 0,
	262, 420, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 238, 267, 0, 242, 0,
	308, 0, 349, 285, 0, 0, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 0,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 0, 337, 0, 239, 234, 235,
	236, 237, 0, 0, 0, 405, 406, 407, 428, 391,
	0, 446, 280, 1229, 0, 307, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 0, 0, 0, 438, 0,
	439, 0, 0, 0, 0, 0, 366, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 0, 0,
	1227, 0, 0, 0, 257, 189, 440, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1225, 0, 0, 0, 0, 0, 0,
	248, 371, 387, 258, 362, 400, 263, 369, 253, 336,
	359, 0, 0, 250, 385, 368, 318, 299, 300, 249,
	0, 354, 278, 291, 275, 334, 0, 384, 412, 274,
	403, 0, 395, 252, 0, 394, 333, 381, 386, 319,
	313, 251, 383, 317, 312, 303, 282, 427, 304, 305,
	295, 345, 311, 346, 296, 323, 322, 324, 0, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 306, 0, 0, 0, 413, 0, 357, 339, 0,
	0, 0, 355, 309, 382, 347, 388, 372, 396, 351,
	348, 243, 373, 277, 320, 254, 256, 272, 279, 281,
	283, 284, 329, 330, 342, 361, 374, 375, 376, 276,
	264, 356, 265, 293, 266, 244, 269, 268, 270, 363,
	271, 246, 343, 380, 0, 289, 352, 316, 247, 315,
	344, 379, 378, 255, 404, 410, 411, 0, 0, 416,
	0, 0, 0, 424, 429, 430, 431, 433, 434, 435,
	436, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 287, 240, 241, 449, 273,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 408, 0, 0, 0, 437, 448, 0,
	0, 0, 0, 0, 447, 341, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 390, 402, 419, 422, 0, 0, 0, 0, 245,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 417,
	0, 0, 325, 326, 327, 328, 290, 0, 262, 420,
	350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	415, 286, 292, 432, 294, 261, 340, 288, 399, 301,
	0, 425, 0, 426, 0, 0, 0, 0, 332, 297,
	298, 364, 302, 310, 353, 398, 338, 358, 259, 389,
	365, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 238, 267, 0, 242, 0, 308, 0,
	349, 285, 0, 0, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 0, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 0, 337, 0, 239, 234, 235, 236, 237,
	0, 0, 0, 405, 406, 407, 428, 391, 0, 446,
	280, 1223, 0, 307, 0, 0, 0, 0, 0, 0,
	0, 450, 442, 0, 0, 0, 438, 0, 439, 0,
	0, 0, 0, 0, 366, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 0, 0, 1227, 0,
	0, 0, 257, 189, 440, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1225, 0, 0, 0, 0, 0, 0, 248, 371,
	387, 258, 362, 400, 263, 369, 253, 336, 359, 0,
	0, 250, 385, 368, 318, 299, 300, 249, 0, 354,
	278, 291, 275, 334, 0, 384, 412, 274, 403, 0,
	395, 252, 0, 394, 333, 381, 386, 319, 313, 251,
	383, 317, 312, 303, 282, 427, 304, 305, 295, 345,
	311, 346, 296, 323, 322, 324, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 306,
	0, 0, 0, 413, 0, 357, 339, 0, 0, 0,
	355, 309, 382, 347, 388, 372, 396, 351, 348, 243,
	373, 277, 320, 254, 256, 272, 279, 281, 283, 284,
	329, 330, 342, 361, 374, 375, 376, 276, 264, 356,
	265, 293, 266, 244, 269, 268, 270, 363, 271, 246,
	343, 380, 0, 289, 352, 316, 247, 315, 344, 379,
	378, 255, 404, 410, 411, 0, 0, 416, 0, 0,
	0, 424, 429, 430, 431, 433, 434, 435, 436, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 287, 240, 241, 449, 273, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 408, 0, 0, 0, 437, 448, 0, 0, 0,
	0, 0, 447, 341, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 390,
	402, 419, 422, 0, 0, 0, 0, 245, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 417, 0, 0,
	325, 326, 327, 328, 290, 0, 262, 420, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 415, 286,
	292, 432, 294, 261, 340, 288, 399, 301, 0, 425,
	0, 426, 0, 0, 0, 0, 332, 297, 298, 364,
	302, 310, 353, 398, 338, 358, 259, 389, 365, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 238, 267, 0, 242, 0, 308, 0, 349, 285,
	0, 0, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 0, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	0, 337, 0, 239, 234, 235, 236, 237, 0, 0,
	0, 405, 406, 407, 428, 391, 0, 446, 280, 0,
	0, 307, 0, 0, 0, 0, 0, 0, 0, 450,
	442, 0, 0, 0, 438, 0, 439, 0, 0, 0,
	0, 0, 366, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3220, 0, 188, 623, 0, 0, 0, 0, 0,
	257, 189, 440, 0, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 371, 387, 258,
	362, 400, 263, 369, 253, 336, 359, 0, 0, 250,
	385, 368, 318, 299, 300, 249, 0, 354, 278, 291,
	275, 334, 0, 384, 412, 274, 403, 0, 395, 252,
	0, 394, 333, 381, 386, 319, 313, 251, 383, 317,
	312, 303, 282, 427, 304, 305, 295, 345, 311, 346,
	296, 323, 322, 324, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 306, 0, 0,
	0, 413, 0, 357, 339, 0, 0, 0, 355, 309,
	382, 347, 388, 372, 396, 351, 348, 243, 373, 277,
	320, 254, 256, 272, 279, 281, 283, 284, 329, 330,
	342, 361, 374, 375, 376, 276, 264, 356, 265, 293,
	266, 244, 269, 268, 270, 363, 271, 246, 343, 380,
	0, 289, 352, 316, 247, 315, 344, 379, 378, 255,
	404, 410, 411, 0, 0, 416, 0, 0, 0, 424,
	429, 430, 431, 433, 434, 435, 436, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 273, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 408,
	0, 0, 0, 437, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 417, 0, 0, 325, 326,
	327, 328, 290, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 332, 297, 298, 364, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 238,
	267, 0, 242, 0, 308, 0, 349, 285, 0, 0,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 0, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 0, 337,
	0, 239, 234, 235, 236, 237, 0, 0, 0, 405,
	406, 407, 428, 391, 0, 446, 280, 0, 0, 307,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 0,
	0, 0, 438, 0, 439, 0, 0, 0, 0, 0,
	366, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 1227, 0, 0, 0, 257, 189,
	440, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1225, 0, 0,
	0, 0, 0, 0, 248, 371, 387, 258, 362, 400,
	263, 369, 253, 336, 359, 0, 0, 250, 385, 368,
	318, 299, 300, 249, 0, 354, 278, 291, 275, 334,
	0, 384, 412, 274, 403, 0, 395, 252, 0, 394,
	333, 381, 386, 319, 313, 251, 383, 317, 312, 303,
	282, 427, 304, 305, 295, 345, 311, 346, 296, 323,
	322, 324, 0, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 306, 0, 0, 0, 413,
	0, 357, 339, 0, 0, 0, 355, 309, 382, 347,
	388, 372, 396, 351, 348, 243, 373, 277, 320, 254,
	256, 272, 279, 281, 283, 284, 329, 330, 342, 361,
	374, 375, 376, 276, 264, 356, 265, 293, 266, 244,
	269, 268, 270, 363, 271, 246, 343, 380, 0, 289,
	352, 316, 247, 315, 344, 379, 378, 255, 404, 410,
	411, 0, 0, 416, 0, 0, 0, 424, 429, 430,
	431, 433, 434, 435, 436, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 287,
	240, 241, 449, 273, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 408, 0, 0,
	0, 437, 448, 0, 0, 0, 0, 0, 447, 341,
	0, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 390, 402, 419, 422, 0,
	0, 0, 0, 245, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 417, 0, 0, 325, 326, 327, 328,
	290, 0, 262, 420, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 415, 286, 292, 432, 294, 261,
	340, 288, 399, 301, 0, 425, 0, 426, 0, 0,
	0, 0, 332, 297, 298, 364, 302, 310, 353, 398,
	338, 358, 259, 389, 365, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 238, 267, 0,
	242, 0, 308, 0, 349, 285, 0, 0, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 0, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 0, 337, 0, 239,
	234, 235, 236, 237, 0, 0, 0, 405, 406, 407,
	428, 391, 0, 446, 280, 0, 0, 307, 0, 0,
	0, 0, 0, 0, 0, 450, 442, 0, 0, 0,
	438, 0, 439, 0, 0, 0, 0, 0, 366, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 1227, 0, 0, 0, 257, 189, 440, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2954, 0, 0, 0, 0,
	0, 0, 248, 371, 387, 258, 362, 400, 263, 369,
	253, 336, 359, 0, 0, 250, 385, 368, 318, 299,
	300, 249, 0, 354, 278, 291, 275, 334, 0, 384,
	412, 274, 403, 0, 395, 252, 0, 394, 333, 381,
	386, 319, 313, 251, 383, 317, 312, 303, 282, 427,
	304, 305, 295, 345, 311, 346, 296, 323, 322, 324,
	0, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 306, 0, 0, 0, 413, 0, 357,
	339, 0, 0, 0, 355, 309, 382, 347, 388, 372,
	396, 351, 348, 243, 373, 277, 320, 254, 256, 272,
	279, 281, 283, 284, 329, 330, 342, 361, 374, 375,
	376, 276, 264, 356, 265, 293, 266, 244, 269, 268,
	270, 363, 271, 246, 343, 380, 0, 289, 352, 316,
	247, 315, 344, 379, 378, 255, 404, 410, 411, 0,
	0, 416, 0, 0, 0, 424, 429, 430, 431, 433,
	434, 435, 436, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 287, 240, 241,
	449, 273, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 408, 0, 0, 0, 437,
	448, 0, 0, 0, 0, 0, 447, 341, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 390, 402, 419, 422, 0, 0, 0,
	0, 245, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 417, 0, 0, 325, 326, 327, 328, 290, 0,
	262, 420, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 238, 267, 0, 242, 0,
	308, 0, 349, 285, 0, 0, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 0,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 0, 0, 0, 239, 234, 235,
	236, 237, 337, 0, 0, 405, 406, 407, 428, 391,
	0, 446, 0, 0, 2103, 0, 0, 0, 0, 280,
	0, 0, 307, 450, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 438, 0, 439, 0, 0,
	0, 0, 0, 366, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 2105, 0, 0,
	0, 257, 189, 440, 0, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 371, 387,
	258, 362, 400, 263, 369, 253, 336, 359, 0, 0,
	250, 385, 368, 318, 299, 300, 249, 0, 354, 278,
	291, 275, 334, 0, 384, 412, 274, 403, 0, 395,
	252, 0, 394, 333, 381, 386, 319, 313, 251, 383,
	317, 312, 303, 282, 427, 304, 305, 295, 345, 311,
	346, 296, 323, 322, 324, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 306, 0,
	0, 0, 413, 0, 357, 339, 0, 0, 0, 355,
	309, 382, 347, 388, 372, 396, 351, 348, 243, 373,
	277, 320, 254, 256, 272, 279, 281, 283, 284, 329,
	330, 342, 361, 374, 375, 376, 276, 264, 356, 265,
	293, 266, 244, 269, 268, 270, 363, 271, 246, 343,
	380, 0, 289, 352, 316, 247, 315, 344, 379, 378,
	255, 404, 410, 411, 0, 0, 416, 0, 0, 0,
	424, 429, 430, 431, 433, 434, 435, 436, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 287, 240, 241, 449, 273, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	408, 0, 0, 0, 437, 448, 0, 0, 0, 0,
	0, 447, 341, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 390, 402,
	419, 422, 0, 0, 0, 0, 245, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 417, 0, 0, 325,
	326, 327, 328, 290, 0, 262, 420, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 415, 286, 292,
	432, 294, 261, 340, 288, 399, 301, 0, 425, 0,
	426, 0, 0, 0, 0, 332, 297, 298, 364, 302,
	310, 353, 398, 338, 358, 259, 389, 365, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	238, 267, 0, 242, 0, 308, 0, 349, 285, 0,
	0, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 0, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 232, 0,
	337, 0, 239, 234, 235, 236, 237, 0, 0, 0,
	405, 406, 407, 428, 391, 0, 446, 280, 2124, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 450, 442,
	0, 0, 0, 438, 0, 439, 0, 0, 0, 0,
	0, 366, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 1227, 0, 0, 0, 257,
	189, 440, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 0, 384, 412, 274, 403, 0, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 427, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	413, 0, 357, 339, 0, 0, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	287, 240, 241, 449, 273, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 408, 0,
	0, 0, 437, 448, 0, 0, 0, 0, 0, 447,
	341, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 390, 402, 419, 422,
	0, 0, 0, 0, 245, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 417, 0, 0, 325, 326, 327,
	328, 290, 0, 262, 420, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 286, 292, 432, 294,
	261, 340, 288, 399, 301, 0, 425, 0, 426, 0,
	0, 0, 0, 332, 297, 298, 364, 302, 310, 353,
	398, 338, 358, 259, 389, 365, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 238, 267,
	0, 242, 0, 308, 0, 349, 285, 0, 0, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 0, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 0, 337, 0,
	239, 234, 235, 236, 237, 0, 0, 0, 405, 406,
	407, 428, 391, 0, 446, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 450, 442, 0, 0,
	0, 438, 0, 439, 0, 0, 0, 0, 0, 366,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3309, 0,
	188, 0, 0, 0, 0, 0, 0, 257, 189, 440,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 0,
	384, 412, 274, 403, 0, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	427, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 413, 0,
	357, 339, 0, 0, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 273, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 408, 0, 0, 0,
	437, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 417, 0, 0, 325, 326, 327, 328, 290,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 238, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	0, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 0, 337, 0, 239, 234,
	235, 236, 237, 0, 0, 0, 405, 406, 407, 428,
	391, 0, 446, 280, 0, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 450, 442, 0, 0, 0, 438,
	0, 439, 0, 0, 0, 0, 0, 366, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 623,
	0, 0, 0, 0, 0, 257, 189, 440, 0, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 0, 384, 412,
	274, 403, 0, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 427, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 413, 0, 357, 339,
	0, 0, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	273, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 408, 0, 0, 0, 437, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	417, 0, 0, 325, 326, 327, 328, 290, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 238, 267, 0, 242, 0, 308,
	0, 349, 285, 0, 0, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 0, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 0, 337, 0, 239, 234, 235, 236,
	237, 0, 0, 0, 405, 406, 407, 428, 391, 0,
	446, 280, 0, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 0, 0, 0, 438, 0, 439,
	0, 0, 0, 0, 0, 366, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3235, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 257, 189, 440, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	371, 387, 258, 362, 400, 263, 369, 253, 336, 359,
	0, 0, 250, 385, 368, 318, 299, 300, 249, 0,
	354, 278, 291, 275, 334, 0, 384, 412, 274, 403,
	0, 395, 252, 0, 394, 333, 381, 386, 319, 313,
	251, 383, 317, 312, 303, 282, 427, 304, 305, 295,
	345, 311, 346, 296, 323, 322, 324, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	306, 0, 0, 0, 413, 0, 357, 339, 0, 0,
	0, 355, 309, 382, 347, 388, 372, 396, 351, 348,
	243, 373, 277, 320, 254, 256, 272, 279, 281, 283,
	284, 329, 330, 342, 361, 374, 375, 376, 276, 264,
	356, 265, 293, 266, 244, 269, 268, 270, 363, 271,
	246, 343, 380, 0, 289, 352, 316, 247, 315, 344,
	379, 378, 255, 404, 410, 411, 0, 0, 416, 0,
	0, 0, 424, 429, 430, 431, 433, 434, 435, 436,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 287, 240, 241, 449, 273, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 408, 0, 0, 0, 437, 448, 0, 0,
	0, 0, 0, 447, 341, 0, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	390, 402, 419, 422, 0, 0, 0, 0, 245, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 417, 0,
	0, 325, 326, 327, 328, 290, 0, 262, 420, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	286, 292, 432, 294, 261, 340, 288, 399, 301, 0,
	425, 0, 426, 0, 0, 0, 0, 332, 297, 298,
	364, 302, 310, 353, 398, 338, 358, 259, 389, 365,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 238, 267, 0, 242, 0, 308, 0, 349,
	285, 0, 0, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 0, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 0, 337, 0, 239, 234, 235, 236, 237, 0,
	0, 0, 405, 406, 407, 428, 391, 0, 446, 280,
	0, 0, 307, 0, 0, 0, 0, 0, 0, 0,
	450, 442, 0, 0, 0, 438, 0, 439, 0, 0,
	0, 0, 0, 366, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 257, 189, 440, 0, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 371, 387,
	258, 362, 400, 263, 369, 253, 336, 359, 0, 0,
	250, 385, 368, 318, 299, 300, 249, 0, 354, 278,
	291, 275, 334, 0, 384, 412, 274, 403, 0, 395,
	252, 0, 394, 333, 381, 386, 319, 313, 251, 383,
	317, 312, 303, 282, 427, 304, 305, 295, 345, 311,
	346, 296, 323, 322, 324, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 397, 0,
	0, 0, 3164, 0, 0, 370, 0, 0, 306, 0,
	0, 0, 413, 0, 357, 339, 0, 0, 0, 355,
	309, 382, 347, 388, 372, 396, 351, 348, 243, 373,
	277, 320, 254, 256, 272, 279, 281, 283, 284, 329,
	330, 342, 361, 374, 375, 376, 276, 264, 356, 265,
	293, 266, 244, 269, 268, 270, 363, 271, 246, 343,
	380, 0, 289, 352, 316, 247, 315, 344, 379, 378,
	255, 404, 410, 411, 0, 0, 416, 0, 0, 0,
	424, 429, 430, 431, 433, 434, 435, 436, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 287, 240, 241, 449, 273, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	408, 0, 0, 0, 437, 448, 0, 0, 0, 0,
	0, 447, 341, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 390, 402,
	419, 422, 0, 0, 0, 0, 245, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 417, 0, 0, 325,
	326, 327, 328, 290, 0, 262, 420, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 415, 286, 292,
	432, 294, 261, 340, 288, 399, 301, 0, 425, 0,
	426, 0, 0, 0, 0, 332, 297, 298, 364, 302,
	310, 353, 398, 338, 358, 259, 389, 365, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	238, 267, 0, 242, 0, 308, 0, 349, 285, 0,
	0, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 0, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 232, 0,
	337, 0, 239, 234, 235, 236, 237, 0, 0, 0,
	405, 406, 407, 428, 391, 0, 446, 280, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 450, 442,
	0, 0, 0, 438, 0, 439, 0, 0, 0, 0,
	0, 366, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2950,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 257,
	189, 440, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 0, 384, 412, 274, 403, 0, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 427, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	413, 0, 357, 339, 0, 0, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	287, 240, 241, 449, 273, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 408, 0,
	0, 0, 437, 448, 0, 0, 0, 0, 0, 447,
	341, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 390, 402, 419, 422,
	0, 0, 0, 0, 245, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 417, 0, 0, 325, 326, 327,
	328, 290, 0, 262, 420, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 286, 292, 432, 294,
	261, 340, 288, 399, 301, 0, 425, 0, 426, 0,
	0, 0, 0, 332, 297, 298, 364, 302, 310, 353,
	398, 338, 358, 259, 389, 365, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 238, 267,
	0, 242, 0, 308, 0, 349, 285, 0, 0, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 0, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 0, 337, 0,
	239, 234, 235, 236, 237, 0, 0, 0, 405, 406,
	407, 428, 391, 0, 446, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 450, 442, 0, 0,
	0, 438, 0, 439, 0, 0, 0, 0, 0, 366,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 2783, 0, 0, 0, 257, 189, 440,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 0,
	384, 412, 274, 403, 0, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	427, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 413, 0,
	357, 339, 0, 0, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 273, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 408, 0, 0, 0,
	437, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 417, 0, 0, 325, 326, 327, 328, 290,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 238, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	0, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 0, 337, 0, 239, 234,
	235, 236, 237, 0, 0, 0, 405, 406, 407, 428,
	391, 0, 446, 280, 0, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 450, 442, 0, 0, 0, 438,
	0, 439, 0, 0, 0, 0, 0, 366, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 257, 189, 440, 0, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 0, 384, 412,
	274, 403, 0, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 427, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 0, 0, 0, 3013, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 413, 0, 357, 339,
	0, 0, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	273, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 408, 0, 0, 0, 437, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	417, 0, 0, 325, 326, 327, 328, 290, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 238, 267, 0, 242, 0, 308,
	0, 349, 285, 0, 0, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 0, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 0, 337, 0, 239, 234, 235, 236,
	237, 0, 0, 0, 405, 406, 407, 428, 391, 0,
	446, 280, 0, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 0, 0, 0, 438, 0, 439,
	0, 0, 0, 0, 0, 366, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 257, 189, 440, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2655, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	371, 387, 258, 362, 400, 263, 369, 253, 336, 359,
	0, 0, 250, 385, 368, 318, 299, 300, 249, 0,
	354, 278, 291, 275, 334, 0, 384, 412, 274, 403,
	0, 395, 252, 0, 394, 333, 381, 386, 319, 313,
	251, 383, 317, 312, 303, 282, 427, 304, 305, 295,
	345, 311, 346, 296, 323, 322, 324, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	306, 0, 0, 0, 413, 0, 357, 339, 0, 0,
	0, 355, 309, 382, 347, 388, 372, 396, 351, 348,
	243, 373, 277, 320, 254, 256, 272, 279, 281, 283,
	284, 329, 330, 342, 361, 374, 375, 376, 276, 264,
	356, 265, 293, 266, 244, 269, 268, 270, 363, 271,
	246, 343, 380, 0, 289, 352, 316, 247, 315, 344,
	379, 378, 255, 404, 410, 411, 0, 0, 416, 0,
	0, 0, 424, 429, 430, 431, 433, 434, 435, 436,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 287, 240, 241, 449, 273, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 408, 0, 0, 0, 437, 448, 0, 0,
	0, 0, 0, 447, 341, 0, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	390, 402, 419, 422, 0, 0, 0, 0, 245, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 417, 0,
	0, 325, 326, 327, 328, 290, 0, 262, 420, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	286, 292, 432, 294, 261, 340, 288, 399, 301, 0,
	425, 0, 426, 0, 0, 0, 0, 332, 297, 298,
	364, 302, 310, 353, 398, 338, 358, 259, 389, 365,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 238, 267, 0, 242, 0, 308, 0, 349,
	285, 0, 0, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 0, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 0, 337, 0, 239, 234, 235, 236, 237, 0,
	0, 0, 405, 406, 407, 428, 391, 0, 446, 280,
	0, 0, 307, 0, 0, 0, 0, 0, 0, 0,
	450, 442, 0, 0, 0, 438, 0, 439, 0, 0,
	0, 0, 0, 366, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1668, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 257, 189, 440, 0, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 371, 387,
	258, 362, 400, 263, 369, 253, 336, 359, 0, 0,
	250, 385, 368, 318, 299, 300, 249, 0, 354, 278,
	291, 275, 334, 0, 384, 412, 274, 403, 0, 395,
	252, 0, 394, 333, 381, 386, 319, 313, 251, 383,
	317, 312, 303, 282, 427, 304, 305, 295, 345, 311,
	346, 296, 323, 322, 324, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 306, 0,
	0, 0, 413, 0, 357, 339, 0, 0, 0, 355,
	309, 382, 347, 388, 372, 396, 351, 348, 243, 373,
	277, 320, 254, 256, 272, 279, 281, 283, 284, 329,
	330, 342, 361, 374, 375, 376, 276, 264, 356, 265,
	293, 266, 244, 269, 268, 270, 363, 271, 246, 343,
	380, 0, 289, 352, 316, 247, 315, 344, 379, 378,
	255, 404, 410, 411, 0, 0, 416, 0, 0, 0,
	424, 429, 430, 431, 433, 434, 435, 436, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 287, 240, 241, 449, 273, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	408, 0, 0, 0, 437, 448, 0, 0, 0, 0,
	0, 447, 341, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 390, 402,
	419, 422, 0, 0, 0, 0, 245, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 417, 0, 0, 325,
	326, 327, 328, 290, 0, 262, 420, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 415, 286, 292,
	432, 294, 261, 340, 288, 399, 301, 0, 425, 0,
	426, 0, 0, 0, 0, 332, 297, 298, 364, 302,
	310, 353, 398, 338, 358, 259, 389, 365, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	238, 267, 0, 242, 0, 308, 0, 349, 285, 0,
	0, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 0, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 232, 0,
	337, 0, 239, 234, 235, 236, 237, 0, 0, 0,
	405, 406, 407, 428, 391, 0, 446, 280, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 450, 442,
	0, 0, 0, 438, 0, 439, 0, 0, 0, 0,
	0, 366, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 2317, 0, 0, 0, 257,
	189, 440, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 0, 384, 412, 274, 403, 0, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 427, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	413, 0, 357, 339, 0, 0, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	287, 240, 241, 449, 273, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 408, 0,
	0, 0, 437, 448, 0, 0, 0, 0, 0, 447,
	341, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 390, 402, 419, 422,
	0, 0, 0, 0, 245, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 417, 0, 0, 325, 326, 327,
	328, 290, 0, 262, 420, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 286, 292, 432, 294,
	261, 340, 288, 399, 301, 0, 425, 0, 426, 0,
	0, 0, 0, 332, 297, 298, 364, 302, 310, 353,
	398, 338, 358, 259, 389, 365, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 238, 267,
	0, 242, 0, 308, 0, 349, 285, 0, 0, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 0, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 0, 337, 0,
	239, 234, 235, 236, 237, 0, 0, 0, 405, 406,
	407, 428, 391, 0, 446, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 450, 442, 0, 0,
	0, 438, 0, 439, 0, 0, 0, 0, 0, 366,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 257, 189, 440,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 0,
	384, 412, 274, 403, 0, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	427, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 413, 0,
	357, 339, 0, 0, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 273, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 408, 0, 0, 0,
	437, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 417, 0, 0, 325, 326, 327, 328, 290,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 238, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	0, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 0, 337, 0, 239, 234,
	235, 236, 237, 0, 0, 0, 405, 406, 407, 428,
	391, 0, 446, 280, 0, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 450, 442, 0, 0, 0, 438,
	0, 439, 0, 0, 0, 0, 0, 366, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 0,
	0, 2609, 0, 0, 0, 257, 189, 440, 0, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 0, 384, 412,
	274, 403, 0, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 427, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 413, 0, 357, 339,
	0, 0, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	273, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 408, 0, 0, 0, 437, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	417, 0, 0, 325, 326, 327, 328, 290, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 238, 267, 0, 242, 0, 308,
	0, 349, 285, 0, 0, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 0, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 0, 337, 0, 239, 234, 235, 236,
	237, 0, 0, 0, 405, 406, 407, 428, 391, 0,
	446, 280, 0, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 0, 0, 0, 438, 0, 439,
	0, 0, 0, 0, 0, 366, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 257, 189, 440, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	371, 387, 258, 362, 400, 263, 369, 253, 336, 359,
	0, 0, 250, 385, 368, 318, 299, 300, 249, 0,
	354, 278, 291, 275, 334, 0, 384, 412, 274, 403,
	0, 395, 252, 0, 394, 333, 381, 386, 319, 313,
	251, 383, 317, 312, 303, 282, 427, 304, 305, 295,
	345, 311, 346, 296, 323, 322, 324, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	306, 0, 0, 0, 413, 0, 357, 339, 0, 0,
	0, 355, 309, 382, 347, 388, 372, 396, 351, 348,
	243, 373, 277, 320, 254, 256, 272, 279, 281, 283,
	284, 329, 330, 342, 361, 374, 375, 376, 276, 264,
	356, 265, 293, 266, 244, 269, 268, 270, 363, 271,
	246, 343, 380, 0, 289, 352, 316, 247, 315, 344,
	379, 378, 255, 404, 410, 411, 0, 0, 416, 0,
	0, 0, 424, 429, 430, 431, 433, 434, 435, 436,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 287, 240, 241, 449, 273, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 408, 0, 0, 0, 437, 448, 0, 0,
	0, 0, 0, 447, 341, 0, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	390, 402, 419, 422, 0, 0, 0, 0, 245, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 417, 0,
	0, 325, 326, 327, 328, 290, 0, 262, 420, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	286, 292, 432, 294, 261, 340, 288, 399, 301, 0,
	425, 0, 426, 0, 0, 0, 0, 332, 297, 298,
	364, 302, 310, 353, 398, 338, 358, 259, 389, 365,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 238, 267, 0, 242, 0, 308, 0, 349,
	285, 0, 0, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 0, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 0, 337, 0, 239, 234, 235, 236, 237, 0,
	0, 0, 405, 406, 407, 428, 391, 0, 446, 280,
	0, 0, 307, 0, 0, 0, 0, 0, 0, 0,
	450, 442, 0, 0, 0, 438, 0, 439, 0, 0,
	0, 0, 0, 366, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 1227, 0, 0,
	0, 257, 189, 440, 0, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 371, 387,
	258, 362, 400, 263, 369, 253, 336, 359, 0, 0,
	250, 385, 368, 318, 299, 300, 249, 0, 354, 278,
	291, 275, 334, 0, 384, 412, 274, 403, 0, 395,
	252, 0, 394, 333, 381, 386, 319, 313, 251, 383,
	317, 312, 303, 282, 427, 304, 305, 295, 345, 311,
	346, 296, 323, 322, 324, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 306, 0,
	0, 0, 413, 0, 357, 339, 0, 0, 0, 355,
	309, 382, 347, 388, 372, 396, 351, 348, 243, 373,
	277, 320, 254, 256, 272, 279, 281, 283, 284, 329,
	330, 342, 361, 374, 375, 376, 276, 264, 356, 265,
	293, 266, 244, 269, 268, 270, 363, 271, 246, 343,
	380, 0, 289, 352, 316, 247, 315, 344, 379, 378,
	255, 404, 410, 411, 0, 0, 416, 0, 0, 0,
	424, 429, 430, 431, 433, 434, 435, 436, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 287, 240, 241, 449, 273, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	408, 0, 0, 0, 437, 448, 0, 0, 0, 0,
	0, 447, 341, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 390, 402,
	419, 422, 0, 0, 0, 0, 245, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 417, 0, 0, 325,
	326, 327, 328, 290, 0, 262, 420, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 415, 286, 292,
	432, 294, 261, 340, 288, 399, 301, 0, 425, 0,
	426, 0, 0, 0, 0, 332, 297, 298, 364, 302,
	310, 353, 398, 338, 358, 259, 389, 365, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	238, 267, 0, 242, 0, 308, 0, 349, 285, 0,
	0, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 0, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 232, 0,
	337, 0, 239, 234, 235, 236, 237, 0, 0, 0,
	405, 406, 407, 428, 391, 0, 446, 280, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 450, 442,
	0, 0, 0, 438, 0, 439, 0, 0, 0, 0,
	0, 366, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 2105, 0, 0, 0, 257,
	189, 440, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 0, 384, 412, 274, 403, 0, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 427, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	413, 0, 357, 339, 0, 0, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	287, 240, 241, 449, 273, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 408, 0,
	0, 0, 437, 448, 0, 0, 0, 0, 0, 447,
	341, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 390, 402, 419, 422,
	0, 0, 0, 0, 245, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 417, 0, 0, 325, 326, 327,
	328, 290, 0, 262, 420, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 286, 292, 432, 294,
	261, 340, 288, 399, 301, 0, 425, 0, 426, 0,
	0, 0, 0, 332, 297, 298, 364, 302, 310, 353,
	398, 338, 358, 259, 389, 365, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 238, 267,
	0, 242, 0, 308, 0, 349, 285, 0, 0, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 0, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 0, 337, 0,
	239, 234, 235, 236, 237, 0, 0, 0, 405, 406,
	407, 428, 391, 0, 446, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 450, 442, 0, 0,
	0, 438, 0, 439, 0, 0, 0, 0, 0, 366,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 257, 189, 440,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1788, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 0,
	384, 412, 274, 403, 0, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	427, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 413, 0,
	357, 339, 0, 0, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 273, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 408, 0, 0, 0,
	437, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 417, 0, 0, 325, 326, 327, 328, 290,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 238, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	0, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 0, 337, 0, 239, 234,
	235, 236, 237, 0, 0, 0, 405, 406, 407, 428,
	391, 0, 446, 280, 0, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 450, 442, 0, 0, 0, 438,
	0, 439, 0, 0, 0, 0, 0, 366, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 257, 189, 440, 0, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 0, 384, 412,
	274, 403, 0, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 427, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 413, 0, 357, 339,
	0, 0, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	273, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 408, 0, 0, 0, 437, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	417, 0, 0, 325, 326, 327, 328, 290, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 238, 267, 0, 242, 0, 308,
	0, 349, 285, 0, 0, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 0, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 0, 337, 0, 239, 234, 235, 236,
	237, 0, 0, 0, 405, 406, 407, 428, 391, 0,
	446, 280, 0, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 0, 0, 0, 438, 0, 439,
	0, 0, 0, 0, 0, 366, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 2140,
	0, 0, 0, 257, 189, 440, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	371, 387, 258, 362, 400, 263, 369, 253, 336, 359,
	0, 0, 250, 385, 368, 318, 299, 300, 249, 0,
	354, 278, 291, 275, 334, 0, 384, 412, 274, 403,
	0, 395, 252, 0, 394, 333, 381, 386, 319, 313,
	251, 383, 317, 312, 303, 282, 427, 304, 305, 295,
	345, 311, 346, 296, 323, 322, 324, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	306, 0, 0, 0, 413, 0, 357, 339, 0, 0,
	0, 355, 309, 382, 347, 388, 372, 396, 351, 348,
	243, 373, 277, 320, 254, 256, 272, 279, 281, 283,
	284, 329, 330, 342, 361, 374, 375, 376, 276, 264,
	356, 265, 293, 266, 244, 269, 268, 270, 363, 271,
	246, 343, 380, 0, 289, 352, 316, 247, 315, 344,
	379, 378, 255, 404, 410, 411, 0, 0, 416, 0,
	0, 0, 424, 429, 430, 431, 433, 434, 435, 436,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 287, 240, 241, 449, 273, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 408, 0, 0, 0, 437, 448, 0, 0,
	0, 0, 0, 447, 341, 0, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	390, 402, 419, 422, 0, 0, 0, 0, 245, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 417, 0,
	0, 325, 326, 327, 328, 290, 0, 262, 420, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	286, 292, 432, 294, 261, 340, 288, 399, 301, 0,
	425, 0, 426, 0, 0, 0, 0, 332, 297, 298,
	364, 302, 310, 353, 398, 338, 358, 259, 389, 365,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 238, 267, 0, 242, 0, 308, 0, 349,
	285, 0, 0, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 0, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 0, 0, 1970, 239, 234, 235, 236, 237, 337,
	0, 0, 405, 406, 407, 428, 391, 0, 446, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 0, 307,
	450, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 438, 0, 439, 0, 0, 0, 0, 0,
	366, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 257, 189,
	440, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 371, 387, 258, 362, 400,
	263, 369, 253, 336, 359, 0, 0, 250, 385, 368,
	318, 299, 300, 249, 0, 354, 278, 291, 275, 334,
	0, 384, 412, 274, 403, 0, 395, 252, 0, 394,
	333, 381, 386, 319, 313, 251, 383, 317, 312, 303,
	282, 427, 304, 305, 295, 345, 311, 346, 296, 323,
	322, 324, 0, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 306, 0, 0, 0, 413,
	0, 357, 339, 0, 0, 0, 355, 309, 382, 347,
	388, 372, 396, 351, 348, 243, 373, 277, 320, 254,
	256, 272, 279, 281, 283, 284, 329, 330, 342, 361,
	374, 375, 376, 276, 264, 356, 265, 293, 266, 244,
	269, 268, 270, 363, 271, 246, 343, 380, 0, 289,
	352, 316, 247, 315, 344, 379, 378, 255, 404, 410,
	411, 0, 0, 416, 0, 0, 0, 424, 429, 430,
	431, 433, 434, 435, 436, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 287,
	240, 241, 449, 273, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 408, 0, 0,
	0, 437, 448, 0, 0, 0, 0, 0, 447, 341,
	0, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 390, 402, 419, 422, 0,
	0, 0, 0, 245, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 417, 0, 0, 325, 326, 327, 328,
	290, 0, 262, 420, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 415, 286, 292, 432, 294, 261,
	340, 288, 399, 301, 0, 425, 0, 426, 0, 0,
	0, 0, 332, 297, 298, 364, 302, 310, 353, 398,
	338, 358, 259, 389, 365, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 238, 267, 0,
	242, 0, 308, 0, 349, 285, 0, 0, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 0, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 0, 337, 0, 239,
	234, 235, 236, 237, 0, 1655, 0, 405, 406, 407,
	428, 391, 0, 446, 280, 0, 0, 307, 0, 0,
	0, 0, 0, 0, 0, 450, 442, 0, 0, 0,
	438, 0, 439, 0, 0, 0, 0, 0, 366, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 257, 189, 440, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 371, 387, 258, 362, 400, 263, 369,
	253, 336, 359, 0, 0, 250, 385, 368, 318, 299,
	300, 249, 0, 354, 278, 291, 275, 334, 0, 384,
	412, 274, 403, 0, 395, 252, 0, 394, 333, 381,
	386, 319, 313, 251, 383, 317, 312, 303, 282, 427,
	304, 305, 295, 345, 311, 346, 296, 323, 322, 324,
	0, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 306, 0, 0, 0, 413, 0, 357,
	339, 0, 0, 0, 355, 309, 382, 347, 388, 372,
	396, 351, 348, 243, 373, 277, 320, 254, 256, 272,
	279, 281, 283, 284, 329, 330, 342, 361, 374, 375,
	376, 276, 264, 356, 265, 293, 266, 244, 269, 268,
	270, 363, 271, 246, 343, 380, 0, 289, 352, 316,
	247, 315, 344, 379, 378, 255, 404, 410, 411, 0,
	0, 416, 0, 0, 0, 424, 429, 430, 431, 433,
	434, 435, 436, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 287, 240, 241,
	449, 273, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 408, 0, 0, 0, 437,
	448, 0, 0, 0, 0, 0, 447, 341, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 390, 402, 419, 422, 0, 0, 0,
	0, 245, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 417, 0, 0, 325, 326, 327, 328, 290, 0,
	262, 420, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 238, 267, 0, 242, 0,
	308, 0, 349, 285, 0, 0, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 0,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 0, 337, 0, 239, 234, 235,
	236, 237, 0, 0, 0, 405, 406, 407, 428, 391,
	0, 446, 280, 0, 0, 307, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 0, 0, 0, 438, 0,
	439, 0, 0, 0, 0, 0, 366, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 0, 0,
	1227, 0, 0, 0, 257, 189, 440, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 371, 387, 258, 362, 400, 263, 369, 253, 336,
	359, 0, 0, 250, 385, 368, 318, 299, 300, 249,
	0, 354, 278, 291, 275, 334, 0, 384, 412, 274,
	403, 0, 395, 252, 0, 394, 333, 381, 386, 319,
	313, 251, 383, 317, 312, 303, 282, 427, 304, 305,
	295, 345, 311, 346, 296, 323, 322, 324, 0, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 306, 0, 0, 0, 413, 0, 357, 339, 0,
	0, 0, 355, 309, 382, 347, 388, 372, 396, 1566,
	348, 243, 373, 277, 320, 254, 256, 272, 279, 281,
	283, 284, 329, 330, 342, 361, 374, 375, 376, 276,
	264, 356, 265, 293, 266, 244, 269, 268, 270, 363,
	271, 246, 343, 380, 0, 289, 352, 316, 247, 315,
	344, 379, 378, 255, 404, 410, 411, 0, 0, 416,
	0, 0, 0, 424, 429, 430, 431, 433, 434, 435,
	436, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 287, 240, 241, 449, 273,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 408, 0, 0, 0, 437, 448, 0,
	0, 0, 0, 0, 447, 341, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 390, 402, 419, 422, 0, 0, 0, 0, 245,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 417,
	0, 0, 325, 326, 327, 328, 290, 0, 262, 420,
	350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	415, 286, 292, 432, 294, 261, 340, 288, 399, 301,
	0, 425, 0, 426, 0, 0, 0, 0, 332, 297,
	298, 364, 302, 310, 353, 398, 338, 358, 259, 389,
	365, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 238, 267, 0, 242, 0, 308, 0,
	349, 285, 0, 0, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 0, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 0, 337, 0, 239, 234, 235, 236, 237,
	0, 0, 0, 405, 406, 407, 428, 391, 0, 446,
	280, 0, 0, 307, 0, 0, 0, 0, 0, 0,
	0, 450, 442, 0, 0, 0, 438, 0, 439, 0,
	0, 0, 0, 0, 366, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 257, 189, 440, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 371,
	387, 258, 362, 400, 263, 369, 253, 336, 359, 0,
	0, 250, 385, 368, 318, 299, 300, 249, 0, 354,
	278, 291, 275, 334, 0, 384, 412, 274, 403, 0,
	395, 252, 0, 394, 333, 381, 386, 319, 313, 251,
	383, 317, 312, 303, 282, 427, 304, 305, 295, 345,
	311, 346, 296, 323, 322, 324, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	0, 0, 1252, 0, 0, 0, 370, 0, 0, 306,
	0, 0, 0, 413, 0, 357, 339, 0, 0, 0,
	355, 309, 382, 347, 388, 372, 396, 351, 348, 243,
	373, 277, 320, 254, 256, 272, 279, 281, 283, 284,
	329, 330, 342, 361, 374, 375, 376, 276, 264, 356,
	265, 293, 266, 244, 269, 268, 270, 363, 271, 246,
	343, 380, 0, 289, 352, 316, 247, 315, 344, 379,
	378, 255, 404, 410, 411, 0, 0, 416, 0, 0,
	0, 424, 429, 430, 431, 433, 434, 435, 436, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 287, 240, 241, 449, 273, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 408, 0, 0, 0, 437, 448, 0, 0, 0,
	0, 0, 447, 341, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 390,
	402, 419, 422, 0, 0, 0, 0, 245, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 417, 0, 0,
	325, 326, 327, 328, 290, 0, 262, 420, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 415, 286,
	292, 432, 294, 261, 340, 288, 399, 301, 0, 425,
	0, 426, 0, 0, 0, 0, 332, 297, 298, 364,
	302, 310, 353, 398, 338, 358, 259, 389, 365, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 238, 267, 0, 242, 0, 308, 0, 349, 285,
	0, 0, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 0, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	0, 337, 0, 239, 234, 235, 236, 237, 0, 0,
	0, 405, 406, 407, 428, 391, 0, 446, 280, 0,
	0, 307, 0, 0, 0, 0, 0, 0, 0, 450,
	442, 0, 0, 0, 438, 0, 439, 0, 0, 0,
	0, 0, 366, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	257, 189, 440, 0, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 371, 387, 258,
	362, 400, 263, 369, 253, 336, 359, 0, 0, 250,
	385, 368, 318, 299, 300, 249, 0, 354, 278, 291,
	275, 334, 0, 384, 412, 274, 403, 0, 395, 252,
	0, 394, 333, 381, 386, 319, 313, 251, 383, 317,
	312, 303, 282, 427, 304, 305, 295, 345, 311, 346,
	296, 323, 322, 324, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 306, 0, 0,
	0, 413, 0, 357, 339, 0, 0, 0, 355, 309,
	382, 347, 388, 372, 396, 351, 348, 243, 373, 277,
	320, 254, 256, 272, 279, 281, 283, 284, 329, 330,
	342, 361, 374, 375, 376, 276, 264, 356, 265, 293,
	266, 244, 269, 268, 270, 363, 271, 246, 343, 380,
	0, 289, 352, 316, 247, 315, 344, 379, 378, 255,
	404, 410, 411, 0, 0, 416, 0, 0, 0, 424,
	429, 430, 431, 433, 434, 435, 436, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 273, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 408,
	0, 0, 0, 437, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 417, 0, 0, 325, 326,
	327, 328, 290, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 332, 297, 298, 364, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 732, 0, 0, 377, 0, 238,
	267, 0, 242, 0, 308, 0, 349, 285, 0, 0,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 0, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 0, 337,
	0, 239, 234, 235, 236, 237, 0, 0, 0, 405,
	406, 407, 428, 391, 0, 446, 280, 0, 0, 307,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 0,
	0, 0, 438, 0, 439, 0, 0, 0, 0, 0,
	366, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 257, 189,
	440, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 371, 387, 258, 362, 400,
	263, 369, 253, 336, 359, 0, 0, 250, 385, 368,
	318, 299, 300, 249, 0, 354, 278, 291, 275, 334,
	0, 384, 412, 274, 403, 0, 395, 252, 0, 394,
	333, 381, 386, 319, 313, 251, 383, 317, 312, 303,
	282, 427, 304, 305, 295, 345, 311, 346, 296, 323,
	322, 324, 0, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 306, 0, 0, 0, 413,
	0, 357, 339, 0, 0, 0, 355, 309, 382, 347,
	388, 372, 396, 488, 348, 243, 373, 277, 320, 254,
	256, 272, 279, 281, 283, 284, 329, 330, 342, 361,
	374, 375, 376, 276, 264, 356, 265, 293, 266, 244,
	269, 268, 270, 363, 271, 246, 343, 380, 0, 289,
	352, 316, 247, 315, 344, 379, 378, 255, 404, 410,
	411, 0, 0, 416, 0, 0, 0, 424, 429, 430,
	431, 433, 434, 435, 436, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 287,
	240, 241, 449, 273, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 408, 0, 0,
	0, 437, 448, 0, 0, 0, 0, 0, 447, 341,
	0, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 390, 402, 419, 422, 0,
	0, 0, 0, 245, 421, 0, 0, 0, 0, 0,
	0, 489, 0, 393, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 417, 0, 0, 325, 326, 327, 328,
	290, 0, 262, 420, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 415, 286, 292, 432, 294, 261,
	340, 288, 399, 301, 0, 425, 0, 426, 0, 0,
	0, 0, 332, 297, 298, 364, 302, 310, 353, 398,
	338, 358, 259, 389, 365, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 238, 267, 0,
	242, 0, 308, 0, 349, 285, 0, 0, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 0, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 0, 337, 0, 239,
	234, 235, 236, 237, 0, 0, 0, 405, 406, 407,
	428, 391, 0, 446, 280, 0, 0, 307, 0, 0,
	0, 0, 0, 0, 0, 450, 442, 0, 0, 0,
	438, 0, 439, 0, 0, 0, 0, 0, 366, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 257, 189, 440, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 371, 387, 258, 362, 400, 263, 369,
	253, 336, 359, 0, 0, 250, 385, 368, 318, 299,
	300, 249, 0, 354, 278, 291, 275, 334, 0, 384,
	412, 274, 403, 0, 395, 252, 0, 394, 333, 381,
	386, 319, 313, 251, 383, 317, 312, 303, 282, 427,
	304, 305, 295, 345, 311, 346, 296, 323, 322, 324,
	0, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 306, 0, 0, 0, 413, 0, 357,
	339, 0, 0, 0, 355, 309, 382, 347, 388, 372,
	396, 351, 348, 243, 373, 277, 320, 254, 256, 272,
	279, 281, 283, 284, 329, 330, 342, 361, 374, 375,
	376, 276, 264, 356, 265, 293, 266, 244, 269, 268,
	270, 363, 271, 246, 343, 380, 0, 289, 352, 316,
	247, 315, 344, 379, 378, 255, 404, 410, 411, 0,
	0, 416, 0, 0, 0, 424, 429, 430, 431, 433,
	434, 435, 436, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 287, 240, 241,
	449, 273, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 408, 0, 0, 0, 437,
	448, 0, 0, 0, 0, 0, 447, 341, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 390, 402, 419, 422, 0, 0, 0,
	0, 245, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 417, 0, 0, 325, 326, 327, 328, 290, 0,
	262, 420, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 238, 267, 0, 242, 0,
	308, 0, 349, 285, 0, 0, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 0,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 0, 0, 337, 239, 234, 235,
	236, 237, 0, 0, 0, 405, 406, 407, 428, 391,
	0, 446, 455, 280, 0, 0, 307, 0, 0, 0,
	0, 0, 0, 450, 442, 0, 0, 0, 0, 438,
	0, 439, 0, 0, 0, 0, 0, 366, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 257, 189, 440, 0, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 0, 384, 412,
	274, 403, 0, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 427, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 413, 0, 357, 339,
	0, 0, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	273, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 408, 0, 0, 0, 437, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	417, 0, 0, 325, 326, 327, 328, 290, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 238, 267, 0, 242, 0, 308,
	0, 349, 285, 0, 0, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 0, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 0, 337, 0, 239, 234, 235, 236,
	237, 0, 0, 0, 405, 406, 407, 428, 391, 0,
	446, 280, 0, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 0, 0, 0, 438, 0, 439,
	0, 0, 0, 0, 0, 366, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 257, 189, 440, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	371, 387, 258, 362, 400, 263, 369, 253, 336, 359,
	0, 0, 250, 385, 368, 318, 299, 300, 249, 0,
	354, 278, 291, 275, 334, 0, 384, 412, 274, 403,
	0, 395, 252, 0, 394, 333, 381, 386, 319, 313,
	251, 383, 317, 312, 303, 282, 427, 304, 305, 295,
	345, 311, 346, 296, 323, 322, 324, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	306, 0, 0, 0, 413, 0, 357, 339, 0, 0,
	0, 355, 309, 382, 347, 388, 372, 396, 351, 348,
	243, 373, 277, 320, 254, 256, 272, 279, 281, 283,
	284, 329, 330, 342, 361, 374, 375, 376, 276, 264,
	356, 265, 293, 266, 244, 269, 268, 270, 363, 271,
	246, 343, 380, 0, 289, 352, 316, 247, 315, 344,
	379, 378, 255, 404, 410, 411, 0, 0, 416, 0,
	0, 0, 424, 429, 430, 431, 433, 434, 435, 436,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 287, 240, 241, 449, 273, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 408, 0, 0, 0, 437, 448, 0, 0,
	0, 0, 0, 447, 341, 0, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	390, 402, 419, 422, 0, 0, 0, 0, 245, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 417, 0,
	0, 325, 326, 327, 328, 290, 0, 262, 420, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	286, 292, 432, 294, 261, 340, 288, 399, 301, 0,
	425, 0, 426, 0, 0, 0, 0, 332, 297, 298,
	364, 302, 310, 353, 398, 338, 358, 259, 389, 365,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 238, 267, 0, 242, 0, 308, 0, 349,
	285, 0, 0, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 0, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 0, 337, 0, 239, 234, 235, 236, 237, 0,
	0, 0, 405, 406, 407, 428, 391, 0, 446, 280,
	0, 0, 307, 0, 0, 0, 0, 0, 0, 0,
	450, 442, 0, 0, 0, 438, 0, 439, 0, 0,
	0, 0, 0, 366, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 257, 189, 440, 0, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 371, 1207,
	258, 362, 400, 263, 369, 253, 336, 359, 0, 0,
	250, 385, 368, 318, 299, 300, 249, 0, 354, 278,
	291, 275, 334, 0, 384, 412, 274, 403, 0, 395,
	252, 0, 394, 333, 381, 386, 319, 313, 251, 383,
	317, 312, 303, 282, 427, 304, 305, 295, 345, 311,
	346, 296, 323, 322, 324, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 306, 0,
	0, 0, 413, 0, 357, 339, 0, 0, 0, 355,
	309, 382, 347, 388, 372, 396, 351, 348, 243, 373,
	277, 320, 254, 256, 272, 279, 281, 283, 284, 329,
	330, 342, 361, 374, 375, 376, 276, 264, 356, 265,
	293, 266, 244, 269, 268, 270, 363, 271, 246, 343,
	380, 0, 289, 352, 316, 247, 315, 344, 379, 378,
	255, 404, 410, 411, 0, 0, 416, 0, 0, 0,
	424, 429, 430, 431, 433, 434, 435, 436, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 287, 240, 241, 449, 273, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	408, 0, 0, 0, 437, 448, 0, 0, 0, 0,
	0, 447, 341, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 390, 402,
	419, 422, 0, 0, 0, 0, 245, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 417, 0, 0, 325,
	326, 327, 328, 290, 0, 262, 420, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 415, 286, 292,
	432, 294, 261, 340, 288, 399, 301, 0, 425, 0,
	426, 0, 0, 0, 0, 332, 297, 298, 364, 302,
	310, 353, 398, 338, 358, 259, 389, 365, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	238, 267, 0, 242, 0, 308, 0, 349, 285, 0,
	0, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 0, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 232, 0,
	337, 0, 239, 234, 235, 236, 237, 0, 0, 0,
	405, 406, 407, 428, 391, 0, 446, 280, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 450, 442,
	0, 0, 0, 438, 0, 439, 0, 0, 0, 0,
	0, 366, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 257,
	189, 440, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 371, 1205, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 0, 384, 412, 274, 403, 0, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 427, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	413, 0, 357, 339, 0, 0, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	287, 240, 241, 449, 273, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 408, 0,
	0, 0, 437, 448, 0, 0, 0, 0, 0, 447,
	341, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 390, 402, 419, 422,
	0, 0, 0, 0, 245, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 417, 0, 0, 325, 326, 327,
	328, 290, 0, 262, 420, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 286, 292, 432, 294,
	261, 340, 288, 399, 301, 0, 425, 0, 426, 0,
	0, 0, 0, 332, 297, 298, 364, 302, 310, 353,
	398, 338, 358, 259, 389, 365, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 238, 267,
	0, 242, 0, 308, 0, 349, 285, 0, 0, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 0, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 0, 337, 0,
	239, 234, 235, 236, 237, 0, 0, 0, 405, 406,
	407, 428, 391, 0, 446, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 450, 442, 0, 0,
	0, 438, 0, 439, 0, 0, 0, 0, 0, 366,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 257, 189, 440,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 0,
	384, 412, 274, 403, 0, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	427, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 413, 0,
	357, 339, 0, 0, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	529, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 273, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 408, 0, 0, 0,
	437, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 417, 0, 0, 325, 326, 327, 328, 290,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 978, 979, 980, 977, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 166, 51, 158,
	134, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 159, 872, 0, 0, 0,
	0, 0, 151, 0, 0, 0, 160, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	1442, 0, 0, 0, 377, 0, 238, 267, 0, 242,
	102, 308, 0, 349, 285, 0, 163, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	0, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 0, 0, 0, 239, 234,
	235, 236, 237, 0, 0, 0, 405, 406, 407, 428,
	391, 0, 446, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 450, 442, 858, 0, 0, 0,
	0, 0, 119, 120, 0, 121, 122, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 880, 884, 886, 888,
	890, 891, 893, 0, 898, 894, 895, 896, 897, 0,
	875, 876, 877, 878, 856, 857, 881, 0, 859, 0,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 871,
	873, 869, 870, 879, 0, 0, 0, 0, 0, 0,
	0, 883, 885, 887, 889, 892, 0, 0, 724, 1438,
	725, 0, 133, 157, 164, 1435, 100, 0, 0, 1437,
	1434, 1436, 1440, 1441, 0, 0, 0, 1439, 0, 0,
	0, 0, 0, 0, 156, 150, 149, 0, 874, 0,
	0, 57, 0, 0, 0, 0, 706, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 719,
	0, 716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 153, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1643, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	110, 0, 1645, 0, 155, 0, 111, 0, 0, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1445, 1446, 1447, 1448, 1449, 1450, 1443, 1444, 0, 0,
	1643, 0, 0, 0, 0, 0, 0, 721, 0, 714,
	0, 0, 0, 3326, 0, 0, 0, 0, 718, 717,
	0, 0, 0, 1620, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 1645, 699, 0, 0, 0, 707,
	0, 0, 0, 0, 0, 50, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1643, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 723, 0,
	0, 0, 0, 713, 0, 1620, 0, 712, 0, 0,
	1636, 0, 0, 698, 52, 0, 0, 705, 0, 0,
	1645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 703, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	882, 135, 0, 0, 0, 0, 0, 0, 0, 700,
	0, 0, 0, 0, 0, 0, 0, 0, 3068, 0,
	0, 1620, 1636, 722, 0, 0, 0, 0, 508, 507,
	514, 504, 0, 0, 0, 0, 0, 0, 0, 1624,
	511, 512, 0, 513, 517, 0, 0, 499, 0, 704,
	1630, 0, 0, 0, 0, 0, 0, 522, 0, 0,
	0, 113, 39, 0, 0, 0, 0, 0, 49, 0,
	1618, 1652, 117, 118, 1619, 1621, 1623, 0, 1625, 1626,
	1627, 1631, 1632, 1633, 1635, 1638, 1639, 1640, 1636, 0,
	0, 0, 0, 0, 0, 1628, 1637, 1629, 0, 0,
	526, 1624, 0, 528, 0, 0, 0, 0, 527, 0,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 720, 0, 0, 0, 1644,
	0, 0, 1618, 1652, 0, 0, 1619, 1621, 1623, 0,
	1625, 1626, 1627, 1631, 1632, 1633, 1635, 1638, 1639, 1640,
	0, 0, 0, 0, 0, 0, 0, 1628, 1637, 1629,
	0, 0, 0, 0, 710, 0, 0, 1624, 0, 0,
	1641, 0, 0, 0, 0, 0, 0, 0, 1630, 0,
	0, 0, 0, 0, 0, 0, 0, 1617, 0, 0,
	0, 1644, 0, 0, 1616, 0, 0, 0, 1618, 1652,
	0, 0, 1619, 1621, 1623, 0, 1625, 1626, 1627, 1631,
	1632, 1633, 1635, 1638, 1639, 1640, 0, 0, 1634, 0,
	0, 0, 0, 1628, 1637, 1629, 0, 1622, 0, 0,
	0, 0, 1641, 0, 0, 0, 0, 0, 0, 508,
	507, 514, 504, 500, 502, 501, 0, 0, 0, 1617,
	0, 511, 512, 506, 513, 517, 1616, 1644, 499, 0,
	0, 0, 0, 0, 0, 510, 0, 0, 522, 0,
	0, 0, 525, 0, 0, 0, 0, 0, 0, 503,
	1634, 0, 0, 494, 508, 507, 514, 504, 0, 1622,
	0, 0, 0, 0, 0, 0, 511, 512, 1641, 513,
	517, 0, 0, 499, 0, 0, 0, 0, 0, 0,
	0, 526, 0, 522, 528, 1617, 0, 0, 0, 527,
	0, 0, 1616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1634, 0, 0, 0,
	0, 0, 0, 0, 0, 1622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 505, 509, 515, 0, 516,
	518, 0, 0, 519, 520, 521, 0, 0, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 500, 502, 501, 0, 0, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 510, 0, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 0, 0,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 500,
	502, 501, 0, 0, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 510, 0, 0, 0, 0, 0, 0, 525, 0,
	0, 0, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 505, 509, 515, 0,
	516, 518, 0, 0, 519, 520, 521, 0, 0, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 505, 509, 515, 0, 516, 518, 0, 0, 519,
	520, 521, 0, 0, 523, 524,
}

var yyPact = [...]int{
	311, -1000, -1000, -1000, -315, 10356, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35682,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35682,
	-312, 35134, 35134, -1000, -1000, 2185, -1000, 34585, 11497, 35682,
	306, 300, 35682, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	675, -1000, 34037, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	555, 38316, 37326, 8086, -260, -1000, 2921, -96, 2076, 818,
	837, 822, 822, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 37943, 727, 33489, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3111, 572, 727, 13696,
	8, 7, 2921, 343, 260, -1000, 1339, 37775, 163, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	8086, 8086, 10356, -343, 10356, 8086, 35682, 35682, -1000, -1000,
	-1000, -1000, 555, 38316, 8086, 2076, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 7, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 4318, -1000, 1361, -1000, -1000, -1000, -1000,
	-1000, 2532, 1345, 2072, 514, 35682, -1000, 1342, 514, -1000,
	-1000, -1000, 2921, 2921, -1000, 35682, 35682, 78, 1528, -1000,
	352, 346, 339, 1332, -1000, -1000, -1000, -1000, -1000, -1000,
	444, 2906, -1000, 35682, 35682, 2537, 35682, -1000, 1933, 475,
	38527, 2727, 1207, 680, 2564, -1000, -1000, 2531, -1000, 176,
	210, 208, 489, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	213, -1000, 2824, -1000, -1000, 186, -1000, -1000, 179, -1000,
	-1000, -1000, 6, -1000, -1000, -1000, -1000, -1000, -1000, -95,
	-1000, -1000, 894, 1953, 8086, -1000, 1886, -1000, 2908, -1000,
	-1000, -1000, -1000, 5254, 9781, 9781, 9781, 9781, -1000, -1000,
	2373, 8086, 2530, 2528, 2527, -1000, -1000, -1000, -1000, -1000,
	1326, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1648, -1000, -1000, -1000, 9216, -1000, 2523, 2522, 2508, 2503,
	2501, 2495, 2494, 2493, 2488, 2487, 2486, 2483, 2482, 2481,
	2236, 10919, 2480, 2066, 2064, 2479, 2474, 2473, 2050, 2236,
	2236, 2469, 2467, 2466, 2465, 2461, 2451, 2450, 2443, 2442,
	2441, 2435, 2434, 2433, 2431, 2416, 2415, 2410, 2409, 2407,
	2399, 2398, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1074, -1000, 2395, 2714, 2837,
	2293, 2889, 2810, 2806, 2804, 2784, 1786, -1000, -1000, 70,
	-1000, -135, -1000, -1000, 863, -1000, 773, -1000, 35682, 35682,
	35682, 624, 130, 554, 554, 554, 554, 554, 640, 554,
	35682, 671, 652, 647, 554, -1000, -115, -1000, -1000, -1000,
	-1000, -1000, -1000, 1519, 1518, 2621, 755, -1000, -1000, -1000,
	-1000, 1138, 35682, -1000, 2304, 1420, 1420, 2833, 501, 495,
	492, 1420, 371, -1000, 1533, 1533, 1533, 1533, 1420, 372,
	483, 2837, 2837, -16, 1533, -28, 1420, 1420, -28, 1420,
	1420, 1420, 155, -307, -1000, -1000, -1000, 1533, 1533, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2819, 2816, 554, 555,
	35682, 134, 35682, 555, 555, 555, 573, -43, 36778, 36230,
	1933, 463, 462, 1148, 1497, -1000, 1433, 35682, 35682, 1433,
	1433, 18131, 17583, -1000, 35682, -1000, 2837, 2293, -1000, 2218,
	2812, 2211, 2293, 555, 555, 555, 555, 555, 161, 555,
	555, 555, 555, 35682, 35682, 32941, 555, 555, 6949, 6949,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 10356,
	1881, 1859, 160, -70, -314, 192, -1000, -1000, 35682, 2701,
	159, -1000, -1000, -1000, 2245, -1000, 2301, 2301, 2301, 2301,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2301,
	2301, 2351, 2391, -1000, -1000, 2289, 2289, 2289, 2245, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2344, 2344, 2346, 2346, 2344, 35682,
	8086, 35682, 2718, 320, 2390, -1000, 35682, 319, 2837, 2714,
	2837, -1000, -1000, 1322, 1783, 2048, -1000, -1000, 352, 1411,
	-1000, 895, -1000, -1000, -1000, -1000, 35682, -95, 307, -1000,
	-1000, 2033, 2389, -1000, 496, 1189, 1351, -1000, 202, 38572,
	28550, 1933, 28550, 35682, -1000, -1000, -1000, -1000, -1000, -1000,
	-5, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 189, -1000, 8086, 8086, 8086, 8086,
	8086, -1000, 519, 8651, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 9781, 9781, 9781, 9781, 9781, 9781, 9781, 9781, 9781,
	9781, 9781, 9781, 2368, 1676, 9781, 9781, 9781, 9781, 2812,
	2758, 1144, 233, -1000, -1000, -1000, -1000, -1000, 1558, 1953,
	8086, 8086, 8086, 35682, -1000, -1000, 37653, 8086, 8086, 4087,
	8086, 2774, 8086, 8086, 8086, 2209, 3769, 35682, 8086, -1000,
	2208, 2206, -1000, -1000, 1655, 8086, -1000, -1000, 8086, -1000,
	-1000, 8086, 9781, 8086, -1000, -1000, -1000, 2161, 2774, 2774,
	1567, 8086, 8086, 2774, 2774, 2774, 1551, 2774, 2774, 2774,
	2774, 2774, 2774, 2774, 2774, 2205, 2201, 2189, 2837, -260,
	6384, -1000, -266, 2714, 8086, -1000, -1000, 8086, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2047, 2043, -325, -68,
	808, 779, 782, -1000, 2766, -1000, 2387, 2386, 1319, 554,
	-1000, 554, 554, -149, 35682, 1578, 28550, 35682, 35682, 1933,
	35682, 35682, -179, 554, 554, 554, 35682, -1000, 2673, 28550,
	2654, 573, -1000, 35682, 1138, 2757, 35682, 2895, 9781, 9781,
	-1000, 32393, 1533, 1420, 1420, -1000, -1000, 35682, -1000, -1000,
	-1000, 1533, 35682, 1533, 1533, 2895, 1533, -1000, -1000, -1000,
	1420, 1420, -1000, -1000, -1000, -1000, 1533, 1533, -1000, -1000,
	2895, 35682, -17, 2895, 2895, -13, -1000, -1000, -1000, 35682,
	35682, 554, 35682, -1000, 35682, 35682, -1000, -1000, 35682, 35682,
	3376, 35682, 31845, 2815, -1000, 28550, 35682, 35682, 25810, -1000,
	1064, -1000, -60, -1000, -75, -43, 1433, -43, 1433, -1000,
	486, 513, 16487, 438, 28550, 4689, -1000, -1000, 1433, 1433,
	4689, 4689, 1283, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1129, -1000, 172, 2714, -1000, -1000, -1000, -1000, -1000, 35682,
	35682, 28550, 1933, 35682, 555, 35682, 35682, 35682, 35682, -1000,
	2382, -1000, 2724, 35682, 35682, 1209, -1000, -1000, 13148, 1315,
	1209, -1000, 1598, -1000, 8086, 10356, -281, 8086, 10356, 10356,
	8086, 10356, -1000, 8086, 140, -1000, -1000, -1000, -1000, 1781,
	-1000, 1780, -1000, -1000, -1000, -1000, -1000, 2042, 2042, -1000,
	1779, -1000, -1000, -1000, -1000, 1776, -1000, -1000, 1775, -1000,
	-1000, -1000, 2182, 894, -1000, 2041, 2562, -261, -1000, 15374,
	35682, 35682, -1000, -1000, -261, -1000, 14809, 35682, 2714, -1000,
	2714, 35682, -1000, 2832, -1000, 352, 279, -1000, -1000, -1000,
	-1000, -1000, -1000, 1285, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1114, -1000, 35682, -1000, -1000, 202, 28550,
	29646, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 191, -1000,
	-1000, 171, -1000, 635, 107, 1409, -1000, -1000, 138, 175,
	81, 696, 1953, -1000, 1574, 1574, 1583, -1000, 544, -1000,
	-1000, -1000, -1000, 2373, -1000, -1000, -1000, 1629, 2069, -1000,
	1429, 1429, 1234, 1234, 1234, 1234, 1234, 1746, 1746, -1000,
	-1000, -1000, 5254, 2368, 9781, 9781, 9781, 9781, 534, 534,
	3457, 3593, -1000, 8086, 1564, -1000, 8086, 2376, 2308, 1279,
	1284, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2180, 2179, 2120, 2905, 2177, 8086, -1000, -1000, 1404,
	1387, 1369, -1000, 2165, 7521, -1000, -1000, -1000, 2176, 1278,
	2175, -1000, -1000, -1000, 2168, 1364, 958, 2164, 1517, 2159,
	1111, 8086, 8086, 8086, 2156, 1362, 1346, 8086, 8086, 8086,
	8086, 2154, 8086, 8086, 8086, 8086, 8086, 8086, 8086, 8086,
	32, 32, 32, -1000, -1000, 1336, -1000, 1953, -1000, 2035,
	-1000, 1128, 1108, -1000, 1947, -1000, -1000, -1000, 1972, -1000,
	-1000, 804, 764, 809, 35682, 984, 12045, 35682, 35682, 35682,
	35682, 554, 135, -1000, 2719, 1151, -1000, 107, -105, 322,
	901, 2472, 2904, 2360, 35682, 35682, 35682, 2755, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 31297, -1000, 2359, 1335,
	-1000, -1000, 8086, -1000, -1000, 2420, 35682, 35682, 2895, 2895,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 35682, 2895, 2895,
	1420, 1533, -1000, -1000, 1533, -1000, -1000, 1533, -1000, 1276,
	-1000, 35682, -1000, -1000, -1000, 2755, 2304, 1096, -1000, 1374,
	403, 545, 545, 886, 721, 2888, 14244, -1000, 1417, 1021,
	632, 2672, 195, -1000, 1417, -203, 1417, 1417, 1417, 1417,
	1417, 1417, 1417, 423, 420, 1417, 1417, 1417, 1417, 1417,
	1417, 1417, 1417, 1417, 1417, 1417, 828, 1417, 1417, 1417,
	1417, 1417, -1000, 1417, 2357, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 449, 131, 2803, 226, 225, 1151, 2800, 242,
	2885, 1022, -1000, -1000, -1000, -1000, 20330, 20330, 15939, 20330,
	-1000, 1416, -43, -52, -1000, -1000, 1064, 4689, 1064, 4689,
	-1000, -1000, 625, -1000, -1000, 901, -1000, 35682, 35682, -1000,
	-1000, 2356, 1516, -1000, -1000, 10919, -1000, 4689, 4689, -1000,
	-1000, 20878, 35682, -1000, -97, -1000, -77, 2831, 1023, -1000,
	-1000, 1033, 901, 2560, 35682, 1023, 1023, -1000, -1000, 12045,
	35682, -1000, -1000, 2895, 6949, -1000, 25810, -1000, -1000, 30742,
	-1000, 30194, 2895, 1553, -1000, 10356, 1756, 156, -1000, 185,
	-321, 153, 1590, 151, 1953, -1000, -1000, 2153, 2152, 1329,
	-1000, 1323, 2150, 1320, 1311, -1000, -33, -1000, 2679, 905,
	-1000, 2355, -1000, 1287, 2605, -1000, 978, -1000, 1513, 1286,
	-1000, 905, 1267, 2604, 978, 2831, -1000, 1271, 76, -1000,
	-1000, 35682, 2033, 1260, 29646, 930, -1000, 581, 1259, 1257,
	-1000, 28550, 164, 28550, -1000, 28550, -1000, -1000, 337, -1000,
	35682, 2708, -1000, -1000, -1000, 1972, 1506, -333, -1000, -1000,
	-1000, -1000, -1000, 1253, -1000, 534, 534, 3457, 3551, -1000,
	9781, -1000, 9781, 2716, 1547, -1000, 8086, 1735, 4219, 4219,
	1728, 19227, 35682, -1000, -1000, 8086, 8086, -1000, 2700, -1000,
	-1000, -1000, -1000, 8086, 8086, 2061, -1000, 35682, -1000, -1000,
	-1000, -1000, 19227, -1000, 9781, -1000, 8086, 1012, 2685, 1241,
	32, 32, 32, 2629, 2595, 2575, 1238, 32, 2545, 2525,
	2520, 2470, 2448, 2418, 2400, 2393, -1000, 2352, -1000, -1000,
	6384, -1000, -33, 8086, 8086, 8086, 2659, -1000, -1000, 112,
	-1000, 1500, -1000, -1000, -1000, 759, 154, 2142, 974, -1000,
	-1000, 35682, -1000, -1000, -1000, 2141, 955, -1000, -1000, -1000,
	37776, 2301, 2301, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2301, 2301, 2351, -1000, -1000, 2289, 2289, 2289,
	2245, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2344, 2344, 2346, 2346, 2344, -1000, 2304, 2304, 259, 35682,
	37, 1417, -1000, 474, 28550, 457, -1000, 35682, 1737, 1492,
	2554, 329, 2691, 35682, 26358, 2330, 2326, 2315, 287, 37776,
	35682, 1091, -1000, 1256, 37775, -1000, 35682, 1953, -1000, 1933,
	-1000, 1420, -1000, -1000, 2895, 1120, -1000, -1000, 2895, 1420,
	1420, 1533, 35682, -1000, 287, 2754, 3376, -1000, 35682, -1000,
	-1000, -1000, 676, -1000, 784, 554, 35682, 1616, 784, 1615,
	2307, -1000, -1000, 545, -1000, -1000, -1000, -1000, -1000, -1000,
	35682, 35682, 35682, 35682, -1000, -1000, 35682, -1000, 35682, 35682,
	35682, 35682, -1000, 35682, 35682, -1000, 35682, 1612, 1610, 2726,
	-1000, 1417, 1417, 731, -1000, -1000, 471, -1000, 1773, 1772,
	1760, 1758, 2030, 2027, 2025, 1417, 1417, 1745, 2023, 29098,
	1999, 937, 1743, 1742, 1739, 1741, 1998, 757, -1000, 1994,
	1724, 1713, 1704, 35682, 2306, 1913, -1000, -1000, 37, 1417,
	223, 35682, 1491, 474, 318, 1802, 17035, 35682, 25810, 25810,
	25810, 25810, -1000, 2582, 2580, -1000, 2591, 2576, 2631, 35682,
	25810, 2304, -1000, 29098, -1000, -1000, -1000, 2812, 1232, 2919,
	746, 8086, -1000, -1000, -65, -91, -1000, -1000, -1000, 28550,
	1988, 438, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2923, 35682, 35682, 638, 2139, -1000, 2887, -1000, 946, -1000,
	-1000, 1223, -1000, 2887, 1566, -316, 10356, 1555, 1531, -1000,
	8086, 10356, 8086, -283, 205, -290, -1000, -1000, -1000, 1986,
	-1000, -1000, -1000, 1738, -1000, 1734, 50, 60, 1603, -261,
	6384, 342, 35682, -261, 35682, 6384, -1000, 35682, 327, -261,
	-1000, 35682, 1733, -1000, -1000, -1000, 2897, 28550, 1933, 1378,
	28002, -1000, 180, -1000, 190, 450, 1983, -1000, 644, 110,
	1982, 1972, -1000, -1000, -1000, 9781, -1000, -1000, -1000, -1000,
	1953, 8086, 2137, -1000, 792, 792, 2136, 2135, -1000, 2301,
	2301, -1000, 2245, 2289, 2245, 792, 792, 2119, -1000, 2016,
	2384, -1000, 2313, 2295, 8086, -1000, 2114, 3404, 1289, -118,
	32, 32, -1000, -1000, -1000, -1000, 32, 32, 32, 32,
	-1000, 32, 32, 32, 32, 32, 32, 32, 32, 526,
	-1000, 50, 1953, 1953, -1000, -1000, 2678, -1000, 1972, 1966,
	-1000, 1965, 1963, 984, 37776, 681, 12045, 2692, 2753, 2751,
	12593, 2743, 2287, 2285, 1804, -1000, -1000, -1000, 27454, 459,
	-1000, -1000, -1000, 570, 227, 1730, 435, -1000, 35682, 242,
	2643, 1490, 1961, 35682, -1000, -1000, -1000, -1000, -1000, -1000,
	2691, -1000, 1019, 269, 1231, -1000, 1417, 1417, 12593, 12593,
	12593, 283, 1456, -1000, 514, 1020, 1222, 25810, 35682, -1000,
	25262, 2113, -1000, 901, 2895, -1000, 35682, -1000, 2895, 2895,
	1420, -1000, 283, 326, -1000, 2636, 37776, -1000, 35682, -1000,
	35682, -1000, 35682, 35682, 554, 8086, 35682, 2636, 35682, 577,
	-1000, -1000, 902, 282, 571, 571, 938, -1000, 2734, -1000,
	-1000, -1000, 35682, -1000, -1000, -1000, -1000, -1000, -1000, 19227,
	19227, 2798, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1954, 1949, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 35682, 1227, -1000, 1487, 1804,
	27454, 1483, 1433, 1946, 459, 1737, 1480, -1000, 1941, -1000,
	912, 35682, 35682, -1000, 1089, -1000, 1479, 2536, 2547, 2536,
	-1000, -1000, -1000, -1000, 2579, -1000, 1757, -1000, -1000, 1089,
	-1000, -1000, -1000, -1000, -1000, 746, -1000, 2830, 784, 784,
	784, 2110, -1000, -1000, -1000, 930, 2108, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2892, 2886, 26906, 2892,
	-1000, -316, 1520, -1000, 1705, 149, 1568, 35682, -1000, -1000,
	-1000, 2105, 2104, -268, 71, 2884, 2875, 2922, -1000, 2103,
	928, -261, -1000, -1000, 905, -1000, -1000, -1000, -261, -1000,
	905, -1000, -1000, 1933, -1000, 188, -1000, -1000, -1000, -1000,
	-1000, -1000, 91, -1000, 35682, -1000, 920, 109, -1000, 1953,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 8086, -1000, -1000, -1000,
	2290, -1000, -1000, 8086, 2101, 1939, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2924, -1000, 2864, -268, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 37776, -1000, 1546, 326, 326, 2098, 914, -1000,
	-1000, -1000, -1000, 326, 24166, 12593, -1000, 1919, 105, -1000,
	-1000, -1000, 1918, 1917, 1729, -1000, -1000, 1703, 1210, 117,
	-1000, -1000, -1000, -1000, -1000, -1000, 1802, 1792, 1478, -335,
	-1000, 2277, -1000, 1417, 1417, 1417, 35682, -1000, 26358, 1546,
	1546, 2094, 2092, 2086, 529, 1457, 1447, -1000, 1725, 20330,
	25810, 25262, 1040, -1000, 1200, -1000, -1000, -1000, 2895, -1000,
	-1000, 2895, 529, -1000, -1000, -1000, 35682, 3120, 2271, -1000,
	2269, 2402, 325, 2263, 2262, 35682, 2254, -1000, -1000, 2636,
	35682, 564, 2689, -1000, -1000, -1000, -1000, -1000, 349, -1000,
	35682, -1000, -1000, 1242, -1000, 19227, -1000, -1000, 1224, -1000,
	1913, 1911, -1000, 105, 1909, 4689, -1000, -1000, 2643, 1908,
	-1000, 35682, 912, 912, 2924, 35682, 6384, -1000, -1000, 8086,
	2260, -1000, 8086, -1000, -1000, -1000, -1000, -1000, 2258, 2648,
	-1000, -1000, -1000, -1000, -1000, -1000, 8086, 8086, -1000, -1000,
	552, 10356, -291, 198, -1000, -1000, -1000, -270, 1907, -1000,
	-1000, 2862, 1895, 1818, 35682, -1000, 905, 905, 901, -1000,
	-1000, -13, 433, -1000, 2204, -1000, 2186, 32, -1000, 152,
	8086, -270, -163, -1000, -1000, -183, -183, -192, 12593, -1000,
	1211, -1000, 1417, 1417, 2074, -1000, -1000, 310, -1000, -1000,
	236, -1000, -1000, 1693, 481, -1000, -1000, -1000, 1892, 1638,
	1842, 23618, 19227, 19775, 1891, -1000, -1000, -1000, -1000, 38230,
	189, 38230, 855, 1439, -1000, 1707, -1000, 1706, -1000, 2895,
	1040, 1200, -1000, -1000, 1347, -1000, -1000, 855, -1000, -1000,
	3120, -1000, -1000, 1623, 9781, -1000, -1000, 1888, 19775, 772,
	1466, 1462, 692, 2257, -1000, 388, 2920, -1000, -1000, -1000,
	730, 2253, -1000, 1597, 1588, -1000, 35682, -1000, 23618, 23618,
	403, 403, 23618, 23618, 2246, 571, -1000, -1000, 9781, -1000,
	-1000, -1000, -1000, 1417, 1026, -1000, -1000, -1000, -1000, -1000,
	-1000, 1792, -1000, -1000, 2837, -1000, -1000, 1953, 35682, 1953,
	24714, -1000, 2861, 2859, 1953, 894, -1000, -316, 35682, 35682,
	-272, 1702, -1000, 1887, 67, -1000, -1000, 897, -275, 39,
	49, 1458, -1000, -1000, -1000, 2021, -1000, 1068, -1000, -1000,
	-1000, 894, -272, 35682, -1000, 323, -1000, -1000, -1000, -1000,
	24166, 1546, 1546, -192, 445, 1876, -1000, -1000, 235, -1000,
	-1000, -1000, -1000, -1000, 103, -1000, 1455, 1206, -1000, 2245,
	8086, -1000, -1000, -1000, -1000, -1000, 510, 38164, -1000, 1021,
	-1000, -13, 510, 447, 232, -1000, 1699, -1000, -1000, 2924,
	-1000, 447, -1000, -1000, 3457, -1000, -1000, -1000, -1000, -1000,
	-1000, 1875, 1874, -1000, -1000, -1000, -1000, -1000, 1695, 2244,
	-72, 2792, 1865, -1000, -1000, 2242, 1176, 1175, -1000, -1000,
	1171, 1141, 23618, -1000, -1000, 3457, 19227, 1417, -1000, -1000,
	1140, 1137, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2241,
	-1000, -1000, 2858, -1000, 1864, 566, 57, 49, -1000, 2855,
	66, 2854, 2853, 1860, -1000, -1000, 424, -263, 28, 23,
	21, -1000, -1000, -1000, 8086, -1000, 2742, -1000, 376, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 90, -1000, -1000, -1000,
	1842, 1833, -1000, 23618, 2734, 1985, 332, 2852, 38230, -1000,
	1417, -1000, 332, -1000, 280, -1000, 1377, -1000, 1687, -1000,
	2837, -1000, -1000, -1000, 1990, 8086, 2236, 1417, 1958, -159,
	23618, 2310, 2292, 2256, 1894, 1135, -1000, 19227, -1000, -1000,
	23070, 35682, 1818, -1000, 2235, 1684, 71, 54, 2850, -1000,
	1818, 2845, 1818, 1818, -1000, 1575, -1000, 19, 17, 15,
	-1000, -1000, -1000, -1000, 1831, 177, -1000, -1000, -1000, 265,
	-1000, -1000, 2734, -1000, 2842, 368, -1000, 19227, -1000, -1000,
	-1000, 1667, -1000, -1000, -1000, 1934, -1000, 35682, -1000, 2546,
	-1000, 150, 1132, 265, 403, 265, 403, 265, 403, 265,
	403, 157, -1000, -1000, -1000, 1106, -1000, -1000, 2771, 18679,
	41, -1000, -1000, -1000, 1824, -1000, 1818, -1000, -1000, 424,
	-1000, -1000, -1000, -1000, -1000, -1000, 1417, 1809, 270, -1000,
	-1000, -1000, 22522, 347, 366, 363, -1000, 472, -1000, -1000,
	-1000, 571, -1000, -1000, 2541, 2540, 2902, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 35682, -1000, 35682,
	-1000, 1102, -1000, -1000, -1000, 1154, -1000, -1000, -1000, -1000,
	-1000, 1666, -1000, 35682, -1000, 35682, 345, 1663, 9781, 2230,
	9781, 2229, 365, 2227, -1000, -1000, 2909, -1000, 2910, 817,
	817, 265, 265, 265, 265, -1000, 887, -1000, 1415, -1000,
	21974, 35682, -1000, -1000, 1079, 2226, 2841, -1000, 3377, 35682,
	2937, 35682, 2225, 1399, 9781, -1000, -1000, -1000, 1686, 393,
	-1000, 35682, 5819, -1000, 985, -1000, -1000, 509, 351, -1000,
	1078, -1000, 1077, 21426, 1661, 2455, -1000, -1000, -1000, -1000,
	-1000, 1953, 35682, 1076, -1000, 35682, 330, -1000, -1000, -1000,
	1073, -1000, -1000, -1000, -1000, 509, 2601, -1000, 1632, -1000,
	-1000, 38102, 643, -1000, -1000, 38102, 344, -1000, 499, 2162,
	-1000, -1000, 1067, -1000, 35682, 685, 8086, -1000, 344, 38230,
	-1000, 8086, 1011, -1000, 38230, 957, -1000, -1000,
}

var yyPgo = [...]int{
	0, 148, 2944, 243, 167, 3469, 75, 244, 233, 216,
	242, 3468, 3465, 3464, 2713, 2707, 3463, 3462, 3461, 3460,
	3458, 3457, 3457, 3456, 3454, 3453, 3451, 3448, 3447, 3446,
	3445, 3444, 3443, 3442, 3441, 3440, 3439, 3438, 3435, 3434,
	3433, 3432, 3431, 240, 3430, 3429, 3428, 3425, 3424, 3423,
	3422, 3421, 3420, 3419, 3418, 3415, 3409, 3408, 3407, 3405,
	3404, 3403, 3402, 3401, 3400, 3399, 3398, 3397, 3395, 3394,
	3393, 3391, 3390, 3383, 3380, 214, 3378, 2697, 3377, 3376,
	3374, 3372, 3371, 3370, 3369, 238, 3368, 3367, 3366, 3365,
	3363, 3361, 3360, 3359, 3358, 3357, 3356, 225, 3355, 3354,
	3353, 3351, 3350, 3349, 222, 3348, 165, 205, 3345, 3344,
	3340, 3339, 3337, 3336, 235, 213, 65, 3334, 43, 3333,
	219, 3332, 134, 3331, 131, 3330, 3327, 3326, 3325, 3323,
	3322, 3320, 3319, 3318, 3316, 3315, 3314, 3313, 3311, 3310,
	3308, 90, 3307, 253, 3305, 70, 3304, 3300, 115, 161,
	182, 250, 2477, 265, 249, 179, 150, 92, 3297, 2692,
	3295, 162, 227, 139, 21, 3291, 163, 3289, 137, 45,
	41, 245, 125, 57, 158, 114, 3288, 221, 101, 99,
	3287, 3286, 177, 247, 180, 3284, 120, 3282, 3281, 3280,
	3278, 193, 192, 3276, 3274, 117, 3271, 3268, 93, 3267,
	69, 184, 147, 178, 3265, 615, 118, 108, 110, 173,
	3264, 127, 3263, 3260, 3259, 3258, 170, 3257, 190, 129,
	71, 3256, 3255, 3254, 68, 3248, 51, 3246, 3245, 28,
	3244, 64, 3242, 3241, 3240, 3239, 3238, 3237, 3235, 3233,
	3231, 3229, 3228, 72, 3225, 3224, 15, 16, 18, 3220,
	22, 3217, 152, 3213, 3212, 3210, 88, 81, 3209, 82,
	2, 46, 89, 3205, 223, 248, 95, 135, 3204, 417,
	3202, 3201, 3199, 140, 3197, 389, 3196, 3195, 3194, 3192,
	3191, 116, 3190, 215, 47, 3189, 123, 122, 3188, 32,
	54, 196, 197, 3187, 3177, 3176, 304, 144, 84, 48,
	0, 3175, 138, 3174, 3173, 3172, 246, 3171, 231, 209,
	143, 212, 274, 149, 3169, 3168, 67, 3167, 142, 49,
	56, 126, 8, 23, 198, 3165, 13, 171, 3164, 206,
	3163, 172, 42, 132, 3162, 3161, 25, 283, 3159, 3157,
	3156, 119, 3155, 3153, 151, 83, 3152, 3151, 3149, 3147,
	33, 3143, 26, 38, 3141, 96, 3140, 236, 3139, 210,
	121, 174, 153, 145, 224, 229, 76, 79, 3129, 1590,
	133, 97, 17, 3128, 226, 3127, 297, 112, 3125, 78,
	3123, 239, 376, 207, 3121, 175, 7, 39, 30, 3120,
	9, 3118, 203, 204, 3117, 3116, 20, 55, 3115, 19,
	3114, 3113, 3111, 3110, 5, 3109, 3108, 3107, 1, 4,
	3106, 3, 202, 159, 105, 86, 62, 44, 155, 3105,
	154, 157, 169, 3104, 94, 3100, 3097, 3096, 809, 3095,
	259, 37, 3094, 3092, 3089, 3085, 3084, 3070, 3067, 3066,
	98, 35, 3065, 3061, 3059, 3057, 73, 130, 3056, 3037,
	3034, 3033, 34, 164, 3032, 31, 3031, 29, 27, 36,
	3030, 124, 3029, 12, 176, 3028, 3027, 14, 3025, 3024,
	10, 11, 3023, 3018, 111, 3017, 85, 24, 146, 102,
	3016, 3013, 80, 218, 128, 3012, 3011, 241, 232, 200,
	3010, 91, 230, 252, 3008, 217, 3006, 3004, 3001, 3000,
	2999, 2998, 1049, 2997, 2996, 234, 66, 87, 107, 2995,
	2991, 2984, 74, 141, 109, 106, 61, 77, 2983, 104,
	201, 2978, 189, 2972, 2969, 100, 2968, 2967, 2966, 2965,
	2963, 181, 2962, 2961, 186, 228, 2957, 2951, 2947, 2942,
	251, 191, 2933,
}

//line mysql_sql.y:10463
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 530, 538, 538, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 112, 112, 111, 528, 528, 528, 529,
	529, 108, 129, 128, 131, 131, 130, 130, 127, 127,
	123, 126, 126, 125, 125, 124, 119, 121, 121, 120,
	122, 122, 109, 97, 110, 473, 473, 472, 472, 471,
	471, 425, 425, 470, 470, 470, 469, 469, 469, 468,
	468, 467, 467, 466, 466, 464, 464, 465, 463, 462,
	462, 462, 460, 460, 460, 456, 456, 458, 457, 457,
	459, 451, 451, 454, 454, 452, 452, 452, 452, 455,
	450, 450, 450, 449, 449, 96, 96, 96, 371, 371,
	95, 95, 385, 385, 385, 385, 385, 383, 383, 383,
	383, 383, 383, 382, 382, 381, 381, 386, 386, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 86,
	86, 86, 86, 86, 91, 91, 91, 535, 535, 534,
	534, 536, 536, 536, 536, 537, 537, 89, 89, 89,
	90, 380, 380, 380, 87, 88, 88, 370, 370, 375,
	375, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 379, 379, 379, 377, 377, 376,
	376, 378, 378, 80, 80, 80, 83, 82, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 81, 81, 81,
	81, 81, 81, 76, 76, 76, 76, 76, 75, 75,
	77, 77, 367, 367, 366, 92, 92, 93, 532, 532,
	531, 533, 533, 533, 533, 94, 100, 100, 100, 100,
	100, 100, 100, 99, 99, 102, 102, 101, 103, 85,
	85, 85, 85, 85, 85, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 498, 498, 498, 500, 500, 304,
	305, 539, 307, 303, 303, 303, 494, 494, 495, 496,
	497, 497, 497, 98, 11, 11, 11, 11, 11, 11,
	11, 11, 13, 74, 79, 251, 251, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	239, 239, 239, 234, 234, 234, 234, 235, 235, 236,
	236, 237, 237, 237, 237, 238, 238, 297, 297, 256,
	256, 256, 258, 258, 257, 255, 253, 253, 253, 253,
	253, 253, 254, 254, 254, 259, 259, 72, 78, 78,
	78, 511, 511, 73, 522, 522, 428, 428, 318, 318,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 433, 434, 314, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 50, 53,
	49, 49, 49, 356, 356, 48, 540, 540, 292, 292,
	61, 60, 52, 62, 63, 64, 65, 66, 67, 47,
	59, 59, 59, 59, 59, 59, 59, 59, 70, 70,
	445, 445, 542, 542, 542, 68, 69, 427, 427, 427,
	58, 57, 56, 55, 54, 54, 46, 46, 45, 45,
	51, 135, 136, 311, 311, 311, 313, 313, 309, 541,
	541, 399, 399, 312, 312, 44, 44, 44, 44, 71,
	310, 310, 291, 308, 308, 308, 12, 12, 10, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 25, 26, 28, 364, 364, 361, 27, 19,
	18, 18, 22, 21, 17, 17, 20, 23, 24, 24,
	9, 9, 9, 9, 14, 14, 15, 156, 156, 206,
	206, 506, 506, 502, 502, 503, 503, 503, 504, 504,
	505, 505, 104, 439, 439, 439, 439, 439, 439, 8,
	178, 178, 438, 438, 438, 438, 438, 438, 368, 368,
	483, 483, 483, 484, 177, 177, 172, 172, 440, 440,
	333, 485, 485, 448, 448, 447, 447, 446, 446, 175,
	175, 176, 176, 159, 159, 115, 115, 453, 453, 453,
	453, 461, 461, 424, 424, 243, 243, 284, 284, 285,
	285, 149, 149, 150, 150, 150, 150, 150, 150, 491,
	491, 493, 493, 492, 174, 174, 170, 170, 171, 171,
	171, 169, 169, 168, 167, 167, 166, 164, 164, 164,
	165, 165, 165, 182, 182, 152, 152, 152, 151, 151,
	151, 151, 151, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 153, 153, 499, 499, 499,
	429, 429, 429, 436, 436, 266, 266, 267, 267, 265,
	265, 154, 154, 155, 155, 155, 155, 264, 264, 263,
	157, 157, 163, 162, 162, 158, 158, 158, 158, 274,
	274, 273, 273, 273, 273, 107, 113, 113, 114, 181,
	181, 272, 271, 271, 271, 180, 180, 179, 179, 173,
	173, 161, 161, 161, 161, 270, 160, 268, 527, 527,
	526, 526, 525, 523, 523, 523, 524, 524, 524, 524,
	475, 475, 475, 475, 475, 298, 298, 298, 302, 302,
	301, 301, 301, 301, 301, 306, 7, 7, 7, 7,
	7, 7, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 38, 190, 191, 39, 192, 192, 193, 193,
	194, 194, 195, 196, 197, 197, 197, 197, 37, 183,
	183, 184, 184, 185, 185, 186, 187, 187, 187, 189,
	188, 36, 36, 29, 142, 142, 143, 143, 143, 145,
	145, 240, 240, 240, 144, 144, 146, 146, 146, 507,
	510, 508, 508, 512, 512, 512, 513, 513, 513, 513,
	514, 514, 30, 132, 137, 517, 517, 517, 516, 516,
	518, 518, 519, 519, 288, 288, 289, 289, 140, 141,
	141, 139, 134, 148, 148, 148, 148, 148, 133, 138,
	509, 515, 515, 515, 365, 365, 362, 363, 363, 360,
	359, 359, 359, 521, 521, 520, 520, 520, 299, 299,
	31, 355, 355, 357, 358, 358, 358, 349, 349, 349,
	349, 35, 353, 353, 354, 354, 354, 354, 354, 350,
	350, 352, 352, 348, 348, 348, 348, 348, 348, 34,
	147, 147, 347, 347, 344, 344, 342, 342, 343, 343,
	341, 341, 341, 345, 345, 42, 41, 41, 41, 346,
	346, 33, 33, 33, 117, 116, 116, 116, 116, 287,
	287, 286, 286, 118, 40, 218, 218, 413, 413, 413,
	413, 413, 431, 431, 431, 414, 414, 414, 415, 415,
	415, 416, 416, 416, 416, 416, 430, 430, 432, 432,
	432, 387, 387, 388, 388, 388, 391, 391, 405, 405,
	406, 406, 404, 404, 411, 411, 410, 410, 409, 409,
	408, 408, 407, 407, 407, 407, 402, 402, 401, 401,
	389, 389, 389, 389, 389, 390, 390, 390, 400, 400,
	403, 403, 228, 228, 262, 262, 226, 226, 227, 227,
	261, 261, 224, 224, 225, 225, 225, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 481, 481, 482, 230, 230, 241, 241, 241,
	241, 241, 241, 229, 229, 231, 231, 207, 207, 205,
	205, 198, 198, 199, 199, 200, 200, 200, 204, 204,
	203, 203, 203, 203, 201, 201, 202, 202, 202, 202,
	202, 202, 373, 373, 478, 478, 479, 479, 474, 474,
	474, 477, 477, 477, 477, 477, 477, 480, 480, 480,
	476, 476, 208, 282, 282, 282, 300, 300, 300, 300,
	281, 281, 281, 223, 223, 222, 222, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 372,
	372, 315, 315, 316, 316, 250, 249, 249, 249, 249,
	249, 247, 248, 246, 246, 246, 246, 246, 245, 245,
	244, 244, 244, 351, 351, 242, 242, 233, 233, 233,
	232, 232, 232, 412, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 280,
	280, 280, 325, 325, 330, 330, 490, 490, 489, 209,
	209, 209, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 219, 219, 219, 396, 396, 396, 396, 397, 397,
	397, 397, 398, 398, 398, 394, 394, 395, 395, 334,
	335, 335, 437, 437, 392, 392, 393, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 444, 444, 444, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 501, 501, 501, 486, 486,
	486, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	278, 278, 278, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 336, 336,
	337, 337, 441, 441, 441, 441, 441, 441, 442, 442,
	443, 443, 443, 443, 435, 435, 435, 435, 435, 435,
	435, 435, 435, 435, 435, 435, 435, 435, 435, 435,
	435, 435, 435, 435, 435, 435, 435, 435, 435, 435,
	435, 435, 435, 323, 275, 275, 275, 338, 331, 331,
	332, 332, 326, 326, 326, 326, 326, 326, 326, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 327, 327, 329, 329, 340, 340, 340, 339, 339,
	339, 339, 339, 339, 339, 221, 221, 221, 221, 320,
	320, 320, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 211, 211, 211, 211, 215, 215,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 216, 216, 216, 216, 216, 214,
	214, 214, 214, 214, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 105, 106, 106, 213, 283, 283, 417, 417,
	420, 420, 418, 418, 419, 421, 421, 421, 422, 422,
	422, 423, 423, 423, 426, 426, 290, 290, 290, 296,
	296, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 10, 7, 4, 1, 3, 2, 4, 4,
	5, 5, 6, 5, 5, 3, 2, 2, 1, 3,
	4, 3, 7, 5, 8, 2, 2, 1, 3, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 2, 1, 3, 2, 1, 2, 2, 1, 2,
	3, 2, 3, 3, 3, 1, 1, 7, 7, 8,
	8, 0, 4, 7, 0, 3, 0, 2, 0, 1,
	1, 1, 1, 4, 2, 2, 3, 3, 4, 5,
	3, 4, 4, 2, 2, 2, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	2, 5, 5, 0, 2, 7, 0, 1, 0, 1,
	5, 5, 3, 3, 2, 4, 4, 4, 4, 4,
	1, 1, 1, 3, 3, 1, 1, 1, 6, 8,
	0, 1, 1, 1, 1, 5, 5, 0, 1, 1,
	3, 3, 3, 4, 6, 7, 4, 4, 7, 8,
	3, 3, 3, 0, 2, 2, 0, 2, 2, 1,
	1, 1, 1, 0, 1, 4, 4, 5, 4, 3,
	1, 3, 1, 1, 3, 5, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 4, 1, 3, 1, 4, 6,
	6, 4, 4, 4, 4, 4, 3, 6, 3, 5,
	1, 1, 2, 2, 11, 8, 9, 1, 3, 2,
	4, 0, 2, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 4, 2, 1, 5, 4, 4, 2, 5,
	1, 3, 2, 1, 5, 4, 4, 2, 0, 5,
	0, 1, 3, 3, 1, 3, 1, 3, 1, 3,
	4, 0, 1, 0, 1, 1, 3, 1, 1, 0,
	4, 1, 3, 2, 1, 0, 8, 0, 4, 7,
	4, 0, 2, 0, 2, 0, 2, 0, 4, 1,
	3, 1, 1, 5, 3, 4, 6, 4, 5, 2,
	3, 1, 3, 6, 0, 3, 0, 1, 2, 4,
	4, 0, 1, 3, 1, 3, 3, 0, 1, 1,
	0, 2, 2, 0, 2, 3, 3, 3, 1, 3,
	3, 3, 3, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 7, 7, 1, 1, 1,
	0, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	2, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 4, 4, 3, 2,
	2, 2, 3, 2, 3, 4, 1, 3, 4, 0,
	2, 1, 1, 2, 2, 0, 1, 2, 4, 1,
	3, 1, 3, 2, 3, 1, 4, 3, 0, 1,
	1, 2, 5, 2, 2, 2, 0, 2, 3, 3,
	0, 1, 3, 1, 3, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 7, 1, 1, 7, 1, 3, 0, 1,
	1, 3, 1, 3, 0, 1, 1, 1, 12, 1,
	3, 0, 1, 1, 3, 1, 1, 2, 4, 1,
	1, 9, 9, 7, 1, 2, 3, 3, 3, 0,
	4, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	4, 1, 1, 3, 4, 3, 0, 1, 1, 1,
	0, 2, 7, 8, 8, 0, 3, 3, 0, 2,
	0, 3, 0, 5, 1, 3, 0, 3, 3, 0,
	2, 9, 6, 0, 2, 2, 3, 3, 4, 4,
	1, 0, 2, 2, 1, 3, 2, 1, 3, 2,
	1, 3, 2, 0, 1, 3, 4, 3, 1, 1,
	4, 1, 3, 1, 1, 1, 1, 0, 1, 1,
	1, 11, 0, 2, 3, 2, 3, 1, 1, 1,
	3, 3, 4, 0, 2, 2, 2, 2, 2, 6,
	0, 4, 1, 1, 0, 3, 0, 1, 1, 2,
	4, 4, 4, 0, 1, 7, 9, 10, 8, 0,
	2, 11, 9, 11, 2, 2, 8, 4, 5, 1,
	3, 0, 3, 5, 10, 0, 2, 0, 3, 2,
	4, 3, 0, 2, 1, 0, 2, 3, 0, 2,
	3, 0, 3, 2, 4, 3, 0, 1, 0, 1,
	1, 0, 6, 0, 3, 5, 0, 4, 0, 3,
	1, 3, 4, 5, 0, 3, 1, 3, 2, 3,
	1, 2, 0, 4, 6, 5, 0, 2, 0, 2,
	4, 5, 4, 5, 1, 5, 6, 5, 0, 3,
	0, 1, 1, 3, 3, 3, 0, 4, 1, 3,
	3, 3, 0, 1, 1, 3, 2, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	5, 4, 1, 3, 3, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 1, 1, 1, 1,
	7, 9, 7, 9, 2, 1, 7, 9, 7, 9,
	8, 5, 0, 1, 0, 1, 1, 1, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 3, 1, 3, 5, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 2, 1, 2, 2,
	1, 1, 2, 2, 2, 3, 3, 2, 2, 1,
	5, 6, 4, 1, 1, 1, 5, 4, 1, 1,
	2, 0, 1, 1, 2, 5, 0, 1, 1, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 2, 2, 0, 3, 0, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	3, 5, 2, 2, 2, 2, 1, 1, 2, 5,
	6, 6, 6, 6, 1, 1, 1, 1, 1, 4,
	4, 4, 0, 2, 0, 1, 1, 2, 4, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 1, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 2, 5, 0, 1, 3,
	0, 1, 0, 2, 0, 1, 6, 8, 6, 6,
	5, 5, 5, 6, 6, 6, 6, 5, 6, 6,
	6, 6, 6, 6, 6, 6, 1, 1, 1, 4,
	4, 6, 8, 6, 4, 5, 4, 4, 4, 3,
	4, 6, 6, 7, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 8, 4, 2, 3, 2, 4, 2, 2,
	4, 6, 2, 2, 4, 6, 4, 2, 0, 1,
	2, 3, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 1, 3, 0, 1,
	1, 3, 3, 3, 3, 3, 2, 1, 1, 3,
	4, 3, 4, 3, 4, 3, 4, 3, 4, 1,
	3, 4, 4, 5, 4, 5, 3, 4, 5, 6,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 1, 1, 2, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 4,
	4, 1, 2, 3, 5, 1, 1, 3, 0, 1,
	0, 3, 0, 3, 3, 0, 3, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 1, 2, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -530, -538, -2, -5, 594, -1, -4, -106, -80,
	-7, -108, -109, -8, -104, -9, -10, -12, -84, -99,
	-101, -103, -102, -43, -11, -98, -75, -76, -86, -92,
	-95, -96, -97, -110, -105, -107, -149, -111, -112, 587,
	-81, -82, -83, -32, -31, -30, -29, -132, -137, 593,
	440, 13, 489, -14, -15, -491, -16, 256, -303, -304,
	-305, -307, -539, -44, -45, -46, -54, -55, -56, -57,
	-58, -68, -69, -70, -47, -48, -49, -52, -50, -61,
	-60, -62, -63, -64, -65, -66, -67, -51, -135, -136,
	-71, -53, -73, -72, -78, -74, -79, -134, -139, -13,
	231, -77, 75, -87, -88, -89, -90, -91, -93, -94,
	365, 371, 428, 586, 60, -150, -152, 597, 598, 157,
	158, 160, 161, -33, -34, -35, -36, -37, -38, -40,
	-39, -41, -42, 227, 15, 526, -17, -20, -18, -21,
	-19, -27, -28, -26, -23, -25, -133, -24, -138, 251,
	250, 37, 317, 318, 319, 369, 249, 228, 14, 30,
	41, 345, -151, 81, 229, -153, 12, 601, -6, -3,
	-2, -119, -123, -127, -130, -131, -128, -129, -4, -106,
	115, 241, 588, -300, 361, 589, 591, 590, 84, 92,
	-293, -295, 365, 371, 586, 598, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 492, 573, 574, 575, 576, 520, 572,
	343, 344, 523, 268, 292, 396, 298, 305, 157, 176,
	170, 198, 190, 165, 272, 310, 273, 91, 160, 475,
	105, 452, 425, 163, 287, 289, 291, 521, 294, 293,
	295, 297, 274, 346, 186, 181, 286, 270, 179, 275,
	39, 276, 203, 277, 278, 528, 448, 342, 454, 302,
	423, 180, 449, 290, 451, 207, 211, 466, 467, 174,
	175, 456, 469, 202, 205, 206, 248, 42, 525, 260,
	470, 209, 201, 197, 478, 306, 304, 200, 173, 196,
	271, 64, 213, 212, 214, 419, 420, 421, 422, 279,
	280, 359, 465, 193, 182, 347, 166, 22, 473, 255,
	453, 372, 281, 299, 307, 208, 210, 262, 267, 527,
	427, 266, 303, 471, 178, 259, 288, 254, 474, 167,
	374, 282, 161, 296, 468, 477, 63, 387, 172, 164,
	245, 158, 264, 269, 283, 284, 285, 518, 309, 308,
	300, 194, 261, 199, 184, 171, 195, 159, 263, 476,
	388, 584, 345, 406, 192, 189, 265, 238, 472, 455,
	162, 410, 389, 187, 311, 580, 581, 582, 360, 341,
	312, 313, 185, 252, 446, 447, 316, 416, 332, 390,
	426, 397, 391, 220, 320, 458, 460, 204, 583, 321,
	322, 323, 450, 324, 325, 326, 327, 364, 55, 57,
	93, 95, 599, -378, -376, -300, 586, 371, 365, 345,
	598, -192, -300, 600, -159, 38, -205, -300, -159, -77,
	-15, -14, -151, -152, -205, 235, -308, 23, 423, -85,
	424, 231, 81, -300, -9, -97, -8, -104, -75, -149,
	428, -306, -300, 317, 317, -306, 235, -300, 266, 404,
	-428, 241, -382, -355, 267, -381, -357, -384, -358, 31,
	227, 229, 228, 263, 15, 369, 237, 13, 12, 370,
	249, 24, 25, 27, 14, 371, 373, 28, 374, 377,
	378, 379, 41, 382, 383, 256, 84, 92, 87, 274,
	-191, -300, -332, -326, 112, 257, -328, -321, -322, -324,
	-470, -464, -319, 81, 139, 140, 147, 113, -323, -412,
	35, 115, 535, 572, 490, -276, -277, -278, -279, -280,
	-300, -465, -463, 87, 96, 99, 102, 103, 101, 100,
	151, 183, 98, 88, 152, -152, 84, -486, 544, -294,
	565, 573, 574, 575, 576, 564, 60, -435, -443, 234,
	-441, 150, 188, 252, 184, 13, 145, 416, 185, 541,
	561, 492, 545, 568, 537, 538, 539, 532, 533, 534,
	536, 546, 548, 560, -444, 556, 566, 567, 554, 569,
	570, 571, 86, 85, 559, 558, 547, 542, 543, 549,
	531, 540, 550, 551, 557, 562, 563, 353, 105, 354,
	355, 482, 346, 356, 241, 423, 69, 357, 358, 359,
	360, 361, 489, 362, 70, 363, 352, 256, 406, 364,
	187, 204, 494, 493, 495, 486, 483, 481, 484, 485,
	487, 488, 552, 553, 555, -113, -114, 578, -168, -169,
	-269, 11, 6, 7, 8, 9, -528, 425, 527, 87,
	162, 159, -369, 162, 111, 167, 166, -369, 320, 262,
	366, -142, -346, 343, 406, 324, 93, 266, -349, -347,
	521, -430, 314, 310, 236, -143, 108, 246, 245, 106,
	482, 234, 380, 305, 55, 57, -502, -503, 224, 225,
	226, -493, 515, -492, -300, 355, 95, 26, 235, 366,
	262, 460, 458, 459, 461, 462, 463, 464, -59, -445,
	-427, 455, 454, -312, 447, 453, 445, 457, 448, 344,
	326, 325, 227, 595, 516, -290, 390, 426, 479, 480,
	367, 427, 466, 468, 449, 105, 191, 188, 236, 238,
	235, 343, 482, 406, 93, 324, -502, 159, 466, 468,
	266, 404, 40, -375, 416, -374, -376, 467, 478, 85,
	86, 465, -290, 105, 446, 446, -169, -269, -168, -150,
	-152, -107, -491, 236, 343, 406, 266, 237, 235, 519,
	238, 482, 234, 317, 366, 262, 324, 93, -429, -499,
	31, -436, 221, 222, 223, 32, 33, -1, 119, 601,
	-326, -326, -6, 604, -6, -326, -300, -300, 154, -211,
	-215, -212, -214, -213, -217, -216, 188, 189, 150, 192,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 205,
	206, 203, 30, 204, 252, 184, 185, 186, 187, 207,
	170, 190, 524, 215, 171, 216, 172, 217, 173, 218,
	174, 175, 219, 176, 179, 180, 181, 182, 178, 153,
	81, 153, 87, -175, 258, -205, 153, -175, -169, -168,
	-169, -205, -281, -300, 425, 122, -85, -85, 424, -494,
	-495, -496, -498, 231, 424, 423, 153, 274, 16, -306,
	-306, 79, -205, -357, 266, -382, -355, 35, 78, 154,
	239, 154, 78, 81, 367, 343, 406, 368, 482, 235,
	380, 238, 266, 381, 343, 406, 235, 238, 482, 266,
	343, 235, 238, 406, 266, 381, 445, 446, 238, 26,
	372, 375, 376, 446, -449, 478, 154, 111, 108, 109,
	110, -326, 129, -339, 122, 123, 124, 125, 126, 127,
	128, 136, 135, 146, 139, 140, 141, 142, 143, 144,
	145, 137, 138, 132, 112, 130, 134, 131, 114, -152,
	-326, -332, 60, -324, -324, -324, -324, -412, -330, -326,
	81, 81, 81, 153, 100, 87, -326, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, -442,
	81, 81, -336, -337, 81, 81, -319, -281, 81, 87,
	87, 81, 81, 81, 87, -337, -337, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, -169, 154,
	81, -115, 38, -171, 21, -153, -152, 20, 31, 32,
	31, 32, 31, 32, 31, 32, 96, 599, 220, 471,
	526, 165, 166, 167, -190, -300, -192, -183, -300, 238,
	-143, 238, 519, 518, -344, 241, -344, -344, -344, -344,
	237, -344, -205, 235, 235, 235, -344, 489, 122, 122,
	58, -504, 169, 154, -493, -174, 81, -311, 130, 134,
	-311, 23, 264, 264, 264, -311, 304, -540, -541, 16,
	132, -309, -541, -309, -309, -311, -542, 237, 456, 42,
	265, 264, -170, -171, -170, 450, 446, -399, 451, 452,
	-313, -541, -312, -311, -311, -312, -311, -311, -311, 235,
	238, 482, 324, 596, -540, -540, 30, 30, -344, -428,
	-205, -428, 516, -291, -300, -428, -428, -428, -505, 240,
	-535, -534, 469, -537, 471, 159, -376, 159, -376, -357,
	266, 266, 154, 122, 23, -377, 122, 133, -376, -376,
	-377, -377, -229, 40, -299, 150, -300, 87, -229, 40,
	-532, -531, -205, -170, -153, -152, 82, 82, 82, -428,
	-428, -428, -428, -428, -430, -428, -428, -428, -428, -306,
	-183, -192, 241, -428, -428, -154, -155, 141, -326, -300,
	-154, -3, -121, -120, 116, 117, 119, 589, 361, 588,
	592, 586, -376, 40, -423, 388, 387, -417, -419, 81,
	-418, 81, -418, -418, -418, -418, -418, 81, 81, -420,
	81, -420, -420, -417, -421, 81, -421, -422, 81, -422,
	-421, -300, -331, -332, -300, 38, -438, 60, -149, 81,
	30, 81, -300, -439, 60, -149, 81, 30, -170, -115,
	-171, 153, 96, 87, -85, 82, 154, -497, 102, 103,
	-500, 202, 194, -300, -100, 87, -7, -8, -9, -10,
	-43, -75, -149, -466, -464, 81, 31, 415, 78, 16,
	-383, 235, 482, 366, 262, 238, 343, -381, -364, -361,
	-359, -299, -357, -360, -359, -386, -281, 446, -116, 430,
	429, 316, -326, -326, -326, -326, -326, 101, 112, 341,
	102, 103, -321, -340, 31, 312, 313, -322, -322, -322,
	-322, -322, -322, -322, -322, -322, -322, -322, -322, -329,
	-338, -412, 81, 132, 130, 134, 131, 114, -324, -324,
	-322, -322, 82, 154, -490, -489, 116, -326, -326, -326,
	-300, -487, -488, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 357, 352, 358, 356, 346, 364,
	359, 360, 187, 513, 514, 507, 508, 509, 510, 511,
	512, -331, -331, -326, -487, -331, -275, 32, 31, -332,
	-332, -332, 82, -326, -501, 339, 338, 340, -172, -300,
	-331, 82, 82, 82, 96, -332, -332, -331, -322, -331,
	-488, -275, -275, -275, 141, -332, -332, -275, -275, -275,
	-275, 141, -275, -275, -275, -275, -275, -275, -275, -275,
	82, 82, 82, -170, -114, -447, -446, -326, 40, 579,
	-115, -326, -167, -166, -326, -529, 87, 87, 602, 472,
	473, 163, 166, 165, 34, 81, 81, 153, -344, -344,
	-344, 519, -507, -300, 112, -365, -362, -359, -300, -300,
	-355, -300, -300, 526, -344, -344, -344, -205, -240, 52,
	53, 54, -359, -144, 55, 56, -505, -492, 34, -173,
	-300, -265, 17, -324, -324, -359, 266, -540, -311, -311,
	-292, -291, -313, -308, -313, -313, -265, -541, -311, -311,
	-313, -309, -265, -300, 446, -265, -265, -399, -310, -300,
	-310, -344, -291, -292, -292, -205, -205, -251, -252, 232,
	336, 350, 351, 230, 228, 11, 229, -260, 305, -345,
	490, -235, -236, 76, 41, -238, 392, 385, 268, 272,
	91, 273, 425, 274, 237, 276, 277, 278, 293, 295,
	248, 279, 280, 281, 416, 282, 158, 294, 283, 284,
	285, 368, -230, 6, 327, 40, 50, 51, 439, 438,
	529, 526, 269, -507, -507, 30, 30, -365, -300, -300,
	-162, -157, -161, -158, -163, -268, -270, -160, 81, -205,
	-152, -300, 154, 470, 472, 473, -535, -377, -535, -377,
	31, 415, -380, 415, 31, -355, -374, 466, 468, -370,
	87, 416, -360, -379, 78, 150, -446, -377, -377, -379,
	-379, 149, 154, -533, 471, 472, 224, -115, -207, -205,
	-507, -364, -355, -300, -428, -207, -207, -300, -300, 81,
	35, -300, -300, -264, 154, -263, 16, -301, -300, 34,
	87, 153, -264, -122, -120, 118, -326, -6, 588, -326,
	-6, -6, -326, -6, -326, -426, 389, 96, 96, -283,
	87, -283, 96, 96, 96, 82, 87, -368, 78, -440,
	-333, -485, 578, -177, 82, -172, -483, -484, -172, -176,
	-300, -440, -177, 82, -483, -115, -115, -300, 23, -85,
	-495, 153, 154, -173, -383, -363, -360, -385, 141, -300,
	-371, 154, 526, 605, 85, 239, -521, -520, 407, 82,
	154, -450, 240, 489, 87, 602, 423, 220, 101, 341,
	102, 103, -412, -332, -329, -324, -324, -322, -322, -327,
	253, -327, 111, -326, -325, -489, 118, -326, 34, 34,
	154, 79, 153, 82, 82, 16, 16, 82, -326, 82,
	82, 82, 82, 16, 16, -326, 82, 153, 82, 82,
	82, 82, 79, 82, 154, 82, 154, -332, -326, -332,
	82, 82, 82, -326, -326, -326, -332, 82, -326, -326,
	-326, -326, -326, -326, -326, -326, -393, 441, -393, -393,
	154, 82, 87, 154, 22, 154, -164, 36, 37, -287,
	-286, 87, 164, 167, 167, 166, -191, -193, -194, -195,
	-196, -197, 132, 155, 156, -184, -185, -186, -187, -211,
	-281, 189, 192, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 205, 206, 203, 204, 252, 184, 185, 186,
	187, 207, 170, 190, 171, 172, 173, 174, 175, 176,
	179, 180, 181, 182, 178, -300, -205, -205, -205, -344,
	-510, 393, 35, -522, 154, 40, -520, 482, -140, 316,
	-348, 79, -147, 16, 81, -205, -205, -205, -218, 34,
	16, -156, -206, -300, 81, 82, 154, -326, -356, 79,
	-300, -292, -265, -265, -205, -300, -265, -265, -311, -313,
	-313, -309, 153, -291, -218, -174, 154, -204, -297, -201,
	-203, 243, -316, -202, 246, -479, 244, 242, 106, 247,
	301, 107, 237, -477, 331, 332, 333, 337, 334, 335,
	-297, -297, 243, -239, 239, 34, -297, -254, 237, 301,
	244, 20, -253, 237, 107, -300, 243, 247, 242, -296,
	122, -290, 149, 239, 42, 368, -296, 530, -296, -296,
	-296, -296, -296, -296, -296, 275, 275, -296, -296, -296,
	-296, -296, -296, -296, -296, -296, -296, -296, 159, -296,
	-296, -296, -296, -296, -296, 81, 270, 271, -511, 393,
	30, 349, 349, -522, 30, -148, 343, 30, -271, -272,
	-273, -274, 67, 71, 73, 68, 69, 70, 74, 30,
	154, -298, -302, 34, -300, 87, -298, -152, -157, -162,
	-298, 81, -534, -536, 474, 471, 477, -379, -379, 239,
	81, 122, -379, -379, 40, -299, -531, 478, 472, -182,
	23, 154, 78, -207, -184, -192, -265, -155, -157, -300,
	87, -300, 141, -265, 119, -6, 117, -126, -125, -124,
	120, 586, 592, 119, 119, 119, 82, 82, 82, 154,
	82, 82, 82, 154, 82, 154, -453, 451, 39, 154,
	81, 82, 154, 60, 154, 122, 82, 154, 82, 60,
	-182, 153, 425, -300, -464, 82, -385, 154, 239, 153,
	153, -361, 371, -299, -363, 20, 526, -281, 38, -287,
	122, 602, 82, -327, -327, 111, -324, -321, 82, 119,
	-326, 117, -209, -211, 387, 388, -209, -210, -216, 150,
	188, 252, 187, 186, 184, 387, 388, -229, -300, -326,
	-326, 82, -326, -326, 16, -300, -229, -322, -326, -169,
	82, 82, -392, -393, -392, -392, 82, 82, 82, 82,
	-392, 82, 82, 82, 82, 82, 82, 82, 82, 81,
	-446, -453, -326, -326, -166, -165, 43, 603, 154, 122,
	167, 379, 82, 154, -281, 82, 154, -211, -174, -174,
	81, -226, 526, -205, -513, 453, 395, 405, -296, -318,
	-317, 345, 41, -433, 416, 401, 402, -362, 266, -300,
	-519, 94, 122, 78, 331, 332, 333, 334, 335, -342,
	-343, -341, -345, -507, -228, -262, -300, 87, 81, 81,
	81, -413, 321, -211, -205, -156, -300, 16, 154, -506,
	153, -1, -300, -355, -311, -265, -541, -265, -311, -311,
	-313, -300, -413, 34, -252, -208, -281, -202, -478, -479,
	-344, -300, 107, -478, 107, 81, -297, -208, -281, -281,
	-255, -310, -281, -300, -300, -300, -258, -257, -281, -300,
	-300, -300, 107, 107, -234, 40, 47, 48, 49, -296,
	-296, 191, -237, 40, 415, 417, 418, 96, 96, 96,
	96, 87, 87, 87, -296, -296, 96, 87, -302, 87,
	-480, 166, 44, 45, 96, 96, 96, 96, 40, 87,
	-241, 40, 286, 290, 287, 288, 289, 87, 96, 40,
	96, 40, 96, 40, -300, 81, -481, -482, 87, -513,
	-296, 349, -376, 122, -318, -518, 316, -141, 91, 31,
	-178, 232, 229, -507, -367, -366, -281, -161, -161, -161,
	-161, 67, 67, 67, 72, 67, 72, 67, -273, -367,
	-163, -174, -302, 82, -527, -526, -525, -523, 75, 240,
	76, -331, 471, 475, 476, -363, -314, 87, -370, 14,
	-205, -205, -432, 296, 297, 82, -267, 18, 153, -267,
	115, -6, -122, -124, -326, -6, -326, 588, 361, 589,
	87, 96, 96, -461, 436, 431, 433, 107, -333, -448,
	-447, 60, -149, -172, -440, -484, -446, -300, 60, -149,
	-440, -300, 96, 16, -360, -355, 141, 141, -300, 372,
	-371, 87, 394, 87, 235, 603, 87, -287, -321, -326,
	82, -219, 175, 174, -219, 82, 82, -418, -418, -417,
	-420, -417, -219, -219, 82, 82, 23, 82, 82, 82,
	-326, 82, 82, 154, -437, 491, -392, -392, -392, -392,
	-392, -392, -392, -392, -392, -392, -392, -392, -392, -392,
	-335, -334, 258, -461, 44, 45, -286, 87, 87, 87,
	-195, -211, 233, -186, 40, 34, 34, -198, -199, -200,
	-208, -201, -203, 34, 81, 81, -514, 91, -508, 87,
	-300, -515, 91, 396, 152, 347, 40, 397, 398, 413,
	342, 96, 96, 403, -509, -300, -148, -517, 51, 122,
	87, -205, -341, -290, 149, 277, 324, 82, 154, -296,
	-296, -198, -198, -198, -414, 323, 20, 96, 140, -175,
	79, 153, -157, -206, -300, 141, 82, -265, -300, -265,
	-265, -311, -414, -149, -256, 44, 46, -211, -476, -300,
	-474, -476, -300, -474, -474, -344, -326, -281, -256, -208,
	239, 30, 229, -259, 329, 330, -372, 302, 112, -372,
	154, -164, -300, -229, -229, 30, 87, 87, -207, 82,
	154, 122, -514, -508, 122, -377, 87, -515, -519, 122,
	87, 154, -178, -178, -265, 154, 122, -180, -179, 78,
	79, -181, 78, -179, 67, 67, -265, -525, -524, 23,
	-479, -479, -479, 82, 82, -266, 19, 20, 141, -266,
	119, 117, 119, 119, -300, 82, 82, -424, 580, -457,
	-459, 431, 20, 20, 14, 82, -440, -440, -355, -371,
	416, -205, 154, 603, -326, 82, -326, 82, 87, -169,
	20, -424, -188, -211, -319, -149, -149, 82, 154, -149,
	-227, -261, -300, 87, -198, 87, -512, 407, 87, 87,
	96, 40, 96, 152, 399, -434, -141, -516, 91, 122,
	602, 81, -296, -296, -296, -300, -262, -319, -319, 82,
	82, 82, -415, 257, 96, 140, 96, 140, 96, -298,
	-157, -300, -265, -506, 153, -265, -265, -415, -281, -223,
	-222, -220, 101, 112, 40, 385, -221, 91, 149, 291,
	294, 293, 269, 292, -250, -315, 78, 391, 329, 330,
	-345, 580, 520, 242, 106, 107, 373, -316, 81, 81,
	79, 311, 81, 81, -476, 82, -256, -281, 40, -259,
	40, 302, -257, 149, -229, 82, -482, 87, -512, 87,
	-379, -517, 87, -507, -169, -366, -446, -326, 81, -326,
	81, 67, 11, 18, -326, -332, 241, -6, 589, 361,
	-243, 581, 87, 20, 87, -455, 87, -367, -118, -451,
	-399, 274, 82, 82, -392, -395, -394, -398, 437, 303,
	444, -332, -243, 525, -145, 526, -145, -226, -200, 82,
	154, -296, -296, 82, 20, 526, 346, 40, 96, 40,
	400, 87, 102, 103, -288, -289, 87, -350, -352, -281,
	81, -229, -231, -299, 150, 87, -224, -225, -260, -345,
	-117, -116, -224, -416, 158, 96, 140, 96, 96, -265,
	-265, -416, -220, 101, -322, 87, -231, -232, 40, 290,
	286, 122, 122, -233, 40, 270, 271, -242, 81, 301,
	14, 191, 81, 107, 107, -205, -350, -350, -477, -477,
	-350, -350, 81, -373, -372, -322, -296, 149, -516, -170,
	-173, -475, -300, 242, 20, 20, -300, -300, -284, 582,
	96, 87, 433, -425, 583, -460, 436, -454, -452, 431,
	432, 433, 434, 122, 82, -397, 114, 399, 403, -320,
	-323, 96, 99, 183, 152, -284, -189, -300, -146, 59,
	478, -261, -319, -319, -226, 87, 394, 87, 346, 603,
	154, 122, 82, 154, -417, -326, -387, 258, 154, -260,
	-290, -118, -387, -431, 166, 322, 526, 96, 140, 96,
	-169, -431, 87, 87, 96, 81, -441, 30, 87, -351,
	81, 82, 82, 82, 82, -350, -229, -296, 82, 82,
	154, 81, 20, 87, -462, 240, -458, -459, 435, -452,
	20, 433, 20, 20, 87, -396, -397, 403, -320, -323,
	578, 442, 442, 442, 34, 301, 416, -289, 87, -353,
	-352, -164, 82, -388, 310, 20, -260, -296, -388, 322,
	96, 140, 96, -170, 82, -326, -336, -296, 82, -245,
	-244, 522, -350, -353, 79, -353, 79, -353, 79, -353,
	79, 82, -229, -300, 242, -285, -300, -455, -469, 81,
	96, -457, -456, -458, 20, -455, 20, -455, -455, 111,
	443, 443, 443, 87, 372, -354, 248, 91, 526, 329,
	330, -164, 20, -389, 303, 304, -390, -403, 306, -229,
	96, 82, -300, -249, -247, -248, 78, 449, 299, 300,
	82, -477, -477, -477, -477, -250, 82, 154, -473, 30,
	82, -468, -467, -282, -463, -300, 436, 437, 87, -455,
	-396, -296, 87, 328, -281, 81, -401, 307, 81, -399,
	81, -399, 107, 332, -372, -248, 78, -247, 78, 15,
	14, -353, -353, -353, -353, -300, -472, -471, -470, 82,
	154, 153, 96, -300, -386, -391, 308, 96, -322, 81,
	-322, 81, -400, 305, 81, -246, 296, 297, 30, 166,
	-246, 154, 122, -467, -300, 82, -405, 81, 20, 82,
	-386, 82, -386, 81, 122, -322, 101, 40, 298, -471,
	40, -326, 153, -406, -404, 258, -390, 82, 82, 82,
	-386, 96, 82, -300, 82, 154, -300, -402, 309, 82,
	-404, -407, 60, 96, -411, -408, 81, -260, 260, 132,
	-411, -260, -410, -409, 308, 261, 81, 82, 154, -300,
	257, 81, -332, -409, -408, -332, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 826, 827, 828, 829, 830, 831, 0,
	0, 0, 0, 600, 601, 0, 568, 0, 0, 0,
	0, 0, 0, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 288, 284, 209, 210, 211, 212, 213, 295, 296,
	436, 0, 0, 0, 0, 681, -2, 56, 0, 277,
	0, 268, 268, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 841, -2, 613, 0, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 343,
	344, 345, 339, 340, 342, 341, -2, 0, 613, 0,
	0, 0, 701, 0, 0, 718, 740, 23, 0, 7,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	0, 0, 19, 0, 19, 0, 0, 0, 1196, 1197,
	1198, 1199, -2, 1691, 1669, 1836, 1848, 1849, 1850, 1851,
	1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861,
	1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871,
	1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881,
	1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702,
	1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722,
	1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732,
	1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1837, 0, 261, 259, 1669, 1691, 1753, 1786,
	1836, 0, 846, 0, 659, 0, 664, 1149, 659, 289,
	602, 603, 701, 701, 566, 0, 325, 0, 1682, 329,
	0, 0, 0, 563, 319, 320, 321, 322, 323, 324,
	0, 0, 825, 0, 0, 315, 0, 283, 1744, 0,
	0, 0, 0, 0, 0, 153, 951, 155, 953, 159,
	166, 0, 0, 171, 172, 175, 176, 177, 178, 179,
	0, 183, 0, 185, 188, 0, 190, 191, 0, 194,
	195, 196, 0, 206, 207, 208, 954, 955, 956, -2,
	84, 844, 1602, 1490, 0, 1497, 1498, 1509, 1520, 1276,
	1277, 1278, 1279, 0, 0, 0, 0, 0, 1286, 1287,
	0, 1304, 1852, 1891, 0, 1294, 1295, 1296, 1297, 1298,
	93, 105, 106, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	0, 1550, 1551, 1552, 1463, 1263, 1196, 0, 1861, 0,
	1881, 1886, 1887, 1888, 1889, 1880, 0, 0, 1448, 0,
	1438, 0, 0, -2, -2, 0, 0, 1811, -2, 1858,
	1877, 1885, 1862, 1884, 1854, 1855, 1856, 1849, 1850, 1851,
	1853, 1863, 1865, 1876, 0, 1872, 1882, 1883, 0, 0,
	0, 0, 107, 108, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1454, -2, 1456,
	1457, 1459, -2, 1461, 1462, -2, 1465, 1466, 1467, -2,
	-2, 1470, 1471, 1472, 1473, 1474, 1475, 1478, -2, -2,
	-2, -2, 1450, 1451, 1452, 1453, 1442, 1443, 1444, 1445,
	1446, 1447, -2, -2, -2, 701, 776, 0, -2, 0,
	0, 0, 723, 726, 729, 732, 0, 57, 58, 0,
	278, 279, 267, 269, 0, 273, 0, 266, 0, 0,
	0, 0, 0, 984, 984, 984, 984, 984, 0, 984,
	0, 0, 0, 0, 984, 874, 0, 958, 959, 960,
	982, 983, 1037, 0, 0, 0, 618, 614, 615, 616,
	617, 689, 0, 691, 694, 543, 543, 490, 0, 0,
	0, 543, 0, 504, 496, 0, 0, 0, 543, 0,
	0, 696, 696, 0, 546, 553, 543, 543, -2, 543,
	543, 543, 0, 0, 510, 511, 512, 496, 496, 515,
	516, 517, 528, 529, 554, 1626, 0, 0, 984, 436,
	0, 436, 0, 436, 436, 436, 620, 1781, 1689, 1758,
	1744, 0, 0, 234, 1811, 239, 0, 1690, 1707, 0,
	0, 1725, 0, -2, 0, 305, 696, 0, 702, 0,
	701, 0, 0, 436, 436, 436, 436, 436, 1036, 436,
	436, 436, 436, 0, 0, 0, 436, 436, 0, 0,
	741, 742, 737, 738, 739, 743, 744, 5, 6, 19,
	0, 0, 0, 0, 0, 0, 63, 62, 0, 1603,
	1621, 1555, 1556, 1557, 1608, 1559, 1612, 1612, 1612, 1612,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1612,
	1612, 0, 0, 1601, 1579, 1610, 1610, 1610, 1608, 1605,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1615, 1615, 1618, 1618, 1615, 0,
	1488, 0, 0, 0, 0, 663, 0, 0, 696, -2,
	0, 567, 326, 1200, 0, 0, 330, 331, 0, 0,
	346, 0, 349, 334, 335, 336, 0, 133, 0, 317,
	318, 0, 0, 285, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 163, 160, 167, 170, 180, 187,
	0, 199, 201, 204, 161, 168, 173, 174, 181, 202,
	162, 164, 165, 169, 203, 205, 182, 186, 200, 184,
	189, 192, 193, 198, 0, 134, 0, 0, 0, 0,
	0, 1496, 0, 0, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	1490, 0, 0, 1282, 1283, 1284, 1285, 1288, 0, 1305,
	0, 0, 0, 0, 1549, 1553, 0, 1488, 1488, 0,
	1488, 1484, 0, 0, 0, 0, 0, 0, 1488, 1424,
	0, 0, 1426, 1439, 0, 0, 1428, 1429, 0, 1432,
	1433, 1488, 0, 1488, 1437, 1420, 1421, 0, 1484, 1484,
	1484, 0, 0, 1484, 1484, 1484, 1484, 1484, 1484, 1484,
	1484, 1484, 1484, 1484, 1484, 0, 0, 0, 696, 0,
	0, 684, 0, 665, 0, 720, 722, 0, 724, 725,
	727, 728, 730, 731, 733, 734, 59, 0, 0, 0,
	0, 271, 0, 276, 0, 843, 0, 0, 859, 984,
	875, 984, 984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 984, 984, 984, 0, 1000, 0, 0,
	0, 620, 619, 0, 690, 0, 0, 749, 0, 0,
	489, 0, 496, 543, 543, 502, 503, 498, 497, 549,
	550, 546, 0, 546, 546, 749, 0, 522, 523, 524,
	543, 543, 530, 697, 531, 532, 546, 0, 551, 552,
	749, 0, 0, 749, 749, 0, 540, 541, 542, 0,
	0, 984, 0, 559, 498, 498, 1627, 1628, 0, 0,
	993, 0, 0, 0, 562, 0, 0, 0, 0, 621,
	214, 217, 0, 220, 0, 1781, 0, 1781, 0, 227,
	0, 0, 0, 0, 0, 0, 257, 258, 0, 0,
	0, 0, 248, 251, 1143, 1144, 948, 949, 252, 253,
	297, 298, 0, 665, 719, 721, 715, 716, 717, 0,
	0, 0, 0, 0, 436, 0, 0, 0, 0, 596,
	0, 598, 0, 0, 0, 757, 751, 753, 820, 93,
	757, 8, 80, 77, 0, 19, 0, 0, 19, 19,
	0, 19, 262, 0, 1624, 1622, 1623, 1558, 1609, 0,
	1584, 0, 1585, 1586, 1587, 1597, 1598, 0, 0, 1580,
	0, 1581, 1582, 1583, 1574, 0, 1575, 1576, 0, 1577,
	1578, 260, 0, 1489, 847, 0, 638, 651, 633, 0,
	640, 0, 1150, 622, 651, 624, 0, 640, 665, 687,
	665, 0, 327, 0, 332, 0, 0, 348, 350, 351,
	352, 337, 338, 564, 313, 314, 306, 307, 308, 309,
	310, 311, 312, 316, 103, 0, 286, 287, 0, 0,
	0, 147, 148, 149, 150, 151, 152, 154, 138, 585,
	587, 940, 952, 0, 943, 0, 157, 197, 130, 0,
	0, 0, 1491, 1492, 1493, 1494, 1495, 1499, 0, 1501,
	1503, 1505, 1507, 0, 1525, -2, -2, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1510,
	1523, 1524, 0, 0, 0, 0, 0, 0, 1521, 1521,
	1516, 0, 1280, 0, 1302, 1306, 0, 0, 0, 0,
	94, 1483, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 0, 0, 1490, 0, 0, 0, 1485, 1486, 0,
	0, 0, 1379, 0, 0, 1385, 1386, 1387, 0, 646,
	0, 1449, 1425, 1440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 775, 777, 0, 655, 657, 658, 0,
	685, 698, 703, 704, 707, 55, 60, 53, 1011, 280,
	281, 0, 0, 275, 0, -2, 861, 0, 0, 0,
	0, 984, 0, 889, 0, 434, 934, 0, 0, 0,
	950, 973, 980, 0, 0, 0, 0, 1015, 876, 881,
	882, 883, 877, 878, 884, 885, 0, 692, 0, 0,
	789, 488, 0, 544, 545, 493, 1744, 498, 749, 749,
	505, 499, 506, 548, 507, 508, 509, 0, 749, 749,
	543, 546, 533, 547, 546, 536, 537, 0, 555, 560,
	556, 0, 558, 513, 514, 1015, 694, 364, 365, 407,
	0, 407, 407, 390, 407, 0, 0, 378, 1629, 0,
	0, 0, 0, 387, 1629, 0, 1629, 1629, 1629, 1629,
	1629, 1629, 1629, 0, 0, 1629, 1629, 1629, 1629, 1629,
	1629, 1629, 1629, 1629, 1629, 1629, 0, 1629, 1629, 1629,
	1629, 1629, 1129, 1629, 0, 994, 397, 398, 399, 400,
	405, 406, 0, 431, 0, 0, 0, 434, 0, 923,
	762, 0, 763, 764, 760, 791, 815, 815, 0, 815,
	795, 1149, 0, 0, 225, 226, 215, 0, 216, 0,
	228, 229, 0, 231, 232, 233, 240, 1689, 1758, 235,
	237, 0, 0, 241, 254, 255, 256, 0, 0, 246,
	247, 0, 0, 300, 301, 303, 0, 713, 582, 1147,
	583, 584, 588, 0, 0, 591, 593, 594, 595, 861,
	0, 928, 929, 749, 0, 758, 0, 754, 821, 0,
	823, 0, 749, 0, 78, 19, 0, 71, 68, 0,
	0, 0, 0, 0, 1604, 1554, 1625, 0, 0, 0,
	1606, 0, 0, 0, 0, 61, 667, 629, 0, 632,
	648, 0, 652, 0, 0, 644, 637, 641, 0, 0,
	661, 623, 0, 0, 628, 713, 688, 1201, 0, 333,
	347, 0, 0, 0, 0, 141, 937, 0, 142, 146,
	136, 0, 0, 0, 942, 0, 939, 944, 0, 156,
	0, 0, 131, 132, 1005, 1011, 0, 0, 1500, 1502,
	1504, 1506, 1508, 0, 1511, 1521, 1521, 1517, 0, 1512,
	0, 1514, 0, 1491, 0, 1307, 0, 0, 0, 0,
	0, 0, 0, 1369, 1370, 0, 0, 1374, 0, 1376,
	1377, 1378, 1380, 0, 0, 0, 1384, 0, 1423, 1441,
	1427, 1430, 0, 1434, 0, 1436, 0, 701, 0, 0,
	1344, 1344, 1344, 0, 0, 0, 0, 1344, 0, 0,
	0, 0, 0, 0, 0, 0, 1299, 0, 1300, 1301,
	0, 778, 667, 0, 0, 0, 710, 708, 709, 0,
	1009, 0, 282, 270, 272, 0, 0, 0, 849, 850,
	852, 0, 855, 856, 857, 0, 862, 863, 865, 866,
	0, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1674, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 860, 694, 694, 1086, 0,
	896, 1629, 985, 438, 0, 0, 936, 0, 912, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 1017, 0,
	0, 0, 607, 611, 23, 695, 0, 750, 491, 0,
	492, 543, 500, 501, 749, 1149, 525, 526, 749, 543,
	543, 546, 0, 557, 1017, 0, 993, 367, 0, 1158,
	1159, 408, 0, 1165, 1174, 984, 1233, 0, 1174, 0,
	0, 1176, 1177, 407, 1181, 1182, 1183, 1184, 1185, 1186,
	0, 0, 0, 0, 391, 392, 0, 377, 0, 0,
	0, 0, 376, 0, 0, 418, 0, 0, 0, 0,
	1630, 1629, 1629, 0, 385, 386, 0, 389, 0, 0,
	0, 0, 0, 0, 0, 1629, 1629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1120, 0,
	0, 0, 0, 0, 0, 0, 1135, 1136, 896, 1629,
	0, 0, 0, 438, 910, 919, 0, 0, 0, 0,
	0, 0, 782, 0, 0, 781, 0, 0, 0, 0,
	0, 694, 816, 0, 818, 819, 793, -2, 0, 762,
	798, 1488, 218, 219, 0, 0, 224, 242, 244, 0,
	0, 0, 243, 245, 249, 250, 299, 302, 304, 683,
	0, 0, 0, 1038, 0, 599, 747, 752, 759, 822,
	824, 94, 755, 747, 0, 81, 19, 80, 72, 73,
	0, 19, 0, 0, 0, 0, 1614, 1613, 1599, 0,
	1600, 1611, 1616, 0, 1619, 0, 671, 0, 0, 651,
	653, 0, 0, 651, 0, 0, 660, 0, 0, 651,
	686, 0, 0, 565, 104, 353, 0, 0, 0, 0,
	0, 586, 0, 941, 138, 0, 0, 158, 0, 0,
	0, 1011, 1487, 1513, 1515, 0, 1522, 1518, 1281, 1289,
	1303, 0, 0, 1309, 1321, 1321, 0, 0, 1312, 1612,
	1612, 1315, 1608, 1610, 1608, 1321, 1321, 0, 95, 0,
	0, 1375, 0, 0, 0, 647, 0, 0, 0, 1342,
	1344, 1344, 1350, 1345, 1351, 1352, 1344, 1344, 1344, 1344,
	1357, 1344, 1344, 1344, 1344, 1344, 1344, 1344, 1344, 1340,
	656, 671, 699, 700, 705, 706, 0, 54, 1011, 0,
	274, 0, 0, 854, 0, 0, 0, 867, 0, 0,
	1151, 0, 0, 0, 900, 897, 898, 899, 0, 931,
	439, 440, 441, 442, 0, 0, 0, 935, 0, 923,
	905, 0, 0, 0, 974, 975, 976, 977, 978, 979,
	-2, 988, 0, 0, 0, 1082, 1629, 1629, 1151, 1151,
	1151, 1025, 0, 1016, 659, 0, -2, 0, 0, 609,
	0, 0, 790, 494, 749, 518, 0, 534, 749, 749,
	543, 561, 1025, 0, 366, 409, 0, 1164, 1190, 1175,
	1190, 1234, 1190, 1190, 984, 0, 0, 409, 0, 0,
	379, 415, 0, 0, 0, 0, 375, 412, 707, 416,
	417, 419, 0, 421, 381, 393, 394, 395, 396, 0,
	0, 0, 388, 401, 402, 403, 404, 1097, 1098, 1099,
	1102, 1103, 1104, 1105, 0, 0, 1108, 1109, 1110, 1111,
	1112, 1187, 1188, 1189, 1113, 1114, 1115, 1116, 1117, 1118,
	1119, 1137, 1138, 1139, 1140, 1141, 1142, 1121, 1122, 1123,
	1124, 1125, 1126, 1127, 1128, 0, 0, 1132, 0, 900,
	0, 0, 0, 0, 931, 912, 0, 922, 0, 924,
	925, 0, 0, 630, 749, 292, 0, 785, 779, 0,
	768, 783, 784, 771, 0, 773, 0, 769, 770, 749,
	761, 792, 817, 794, 797, 799, 800, 806, 0, 0,
	0, 0, 221, 222, 223, 230, 0, 458, 236, 714,
	1148, 589, 590, 1039, 1040, 597, 745, 0, 0, 745,
	76, 79, 0, 74, 0, 0, 0, 0, 66, 64,
	1607, 0, 0, 673, 118, 0, 0, 0, 649, 0,
	654, 651, 636, 645, 635, 642, 643, 662, 651, 627,
	626, 1202, 328, 0, 938, 138, 143, 144, 145, 139,
	137, 945, 0, 947, 0, 1007, 0, 0, 1519, 1308,
	1290, 1310, 1322, 1323, 1311, 1291, 1292, 1313, 1314, 1316,
	1317, 1318, 1319, 1320, 1293, 1371, 0, 1373, 1381, 1382,
	0, 1431, 1435, 0, 0, 0, 1348, 1349, 1353, 1354,
	1355, 1356, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365,
	701, 1341, 0, 673, 711, 712, 1010, 1012, 842, 845,
	851, 853, 0, 864, 0, 0, 0, 0, 1152, 1153,
	1155, 1156, 1157, 0, 0, 1151, 873, 0, 0, 891,
	892, 902, 0, 0, 0, 444, 445, 0, 0, 0,
	457, 453, 454, 455, 435, 930, 919, 908, 0, 0,
	918, 0, 989, 1629, 1629, 1629, 0, 995, 0, 0,
	0, 0, 0, 0, 1028, 0, 0, 1019, 0, 815,
	0, 0, 749, 608, 611, 612, 693, 495, 749, 538,
	535, 749, 1028, 363, 380, 410, 0, -2, 0, 1191,
	0, 1178, 1191, 0, 0, 1190, 0, 368, 369, 409,
	0, 0, 0, 422, 425, 426, 423, 1229, 0, 424,
	0, 414, 420, 1100, 1101, 0, 1106, 1107, 0, 1131,
	0, 0, 427, 0, 0, 0, 428, 433, 905, 0,
	920, 0, 926, 927, 701, 0, 0, 765, 786, 0,
	0, 766, 0, 767, 772, 774, 291, 801, 0, 0,
	803, 804, 805, 796, 238, 735, 0, 0, 756, 736,
	0, 19, 0, 0, 69, 1617, 1620, 675, 0, 672,
	119, 0, 0, 0, 0, 650, 634, 625, 140, 135,
	946, 121, 0, 1008, 0, 1383, 0, 1344, 1343, 1337,
	0, 675, 0, 870, 868, 879, 879, 1086, 0, 998,
	0, 1088, 1629, 1629, 0, 901, 890, 0, 932, 933,
	0, 446, 447, 0, 450, 456, 903, 904, 0, 0,
	916, 0, 0, 0, 0, 981, 1083, 1084, 1085, -2,
	0, -2, 1031, 0, 1026, 0, 1018, 0, 1021, 749,
	749, -2, 605, 610, 0, 519, 539, 1031, 411, 1192,
	-2, 1205, 1207, 0, 994, 1210, 1211, 0, 0, 0,
	0, 0, 0, 1255, 1219, 0, 0, 1223, 1224, 1225,
	0, 0, 1228, 0, 1537, 1538, 0, 1232, 0, 0,
	0, 0, 0, 0, 0, 1172, 370, 371, 0, 373,
	374, 1230, 413, 1629, 383, 1130, 1133, 1134, 432, 429,
	430, 908, 911, 631, 696, 293, 294, 787, 0, 780,
	810, 807, 0, 0, 746, 748, 70, 75, 0, 0,
	677, 0, 674, 0, 668, 670, 129, 639, 91, 112,
	0, 0, 1372, 1422, 1347, 0, 1338, 0, 1332, 1333,
	1334, 1339, 677, 0, 871, 886, 872, 996, 1154, 1087,
	0, 0, 0, 1086, 0, 0, 443, 448, 0, 451,
	452, 909, 906, 907, 0, 914, 0, 0, 969, 1608,
	0, 990, 991, 1145, 1146, 992, 1041, -2, 1094, 0,
	1002, 121, 1041, 1022, 0, 1029, 0, 1027, 1020, 701,
	606, 1022, 1206, 1208, 1209, 1212, 1213, 1214, 1260, 1261,
	1262, 0, 0, 1217, 1257, 1258, 1259, 1218, 0, 0,
	0, 0, 0, 1535, 1536, 1253, 0, 0, 1179, 1180,
	0, 0, 0, 1171, 1173, 372, 0, 1629, 921, 290,
	0, 0, 811, 813, 808, 809, 65, 67, 82, 0,
	676, 120, 0, 83, 0, 109, 0, 122, 123, 0,
	0, 0, 0, 0, 1346, 1335, 0, 0, 0, 0,
	0, 1539, 1540, 1541, 0, 666, 0, 869, 0, 887,
	888, 1089, 1090, 1091, 997, 893, 0, 895, 449, 913,
	916, 0, 962, 0, 707, 0, 1043, 0, 993, 1096,
	1629, 1004, 1043, 1014, 0, 1024, 0, 1033, 0, 1030,
	696, 362, 1215, 1216, 0, 0, 1438, 1629, 0, 1248,
	0, 962, 962, 962, 962, 0, 382, 0, 788, 802,
	0, 0, 0, 92, 96, 0, 118, 115, 0, 124,
	0, 0, 0, 0, 1006, 0, 1324, 0, 0, 0,
	1328, 1329, 1330, 1331, 0, 0, 894, 915, 917, 961,
	970, 971, 707, 1001, 0, 1080, 1095, 0, 1003, 1023,
	1032, 0, 1035, 604, 1256, 0, 1222, 0, 1227, 1236,
	1249, 0, 0, 1160, 0, 1162, 0, 1166, 0, 1168,
	0, 0, 384, 812, 814, 0, 679, 669, 85, 0,
	0, 113, 114, 116, 0, 125, 0, 127, 128, 0,
	1325, 1326, 1327, 858, 880, 963, 1629, 0, 0, 967,
	968, 972, 0, 1068, 0, 0, 1074, 0, 1081, 1100,
	1034, 1220, 1226, 1235, 1237, 1238, 0, 1250, 1251, 1252,
	1254, 962, 962, 962, 962, 1170, 678, 0, 1013, 0,
	97, 0, 99, 101, 102, 1193, 110, 111, 117, 126,
	1336, 0, 965, 0, 1044, 0, 1046, 0, 0, 0,
	0, 0, 1078, 0, 1221, 1239, 0, 1240, 0, 0,
	0, 1161, 1163, 1167, 1169, 680, 86, 87, 0, 98,
	0, 0, 964, 966, 0, 1048, 0, 1069, 0, 0,
	0, 0, 0, 0, 0, 1241, 1243, 1244, 0, 0,
	1242, 0, 0, 100, 1194, 1045, 1042, 0, 1080, 1070,
	0, 1072, 0, 0, 0, 0, 1245, 1247, 1246, 88,
	89, 90, 0, 0, 1050, 0, 1066, 1071, 1073, 1075,
	0, 1079, 1077, 1195, 1049, 0, 1062, 1047, 0, 1076,
	1051, -2, 0, 1067, 1052, -2, 0, 1060, 0, 0,
	1053, 1061, 0, 1056, 0, 0, 0, 1055, 0, -2,
	1063, 0, 0, 1057, -2, 0, 1065, 1064,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 604, 601,
	123, 122, 124, 3, 605, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 602, 135, 603, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:751
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:758
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:764
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:772
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:778
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:782
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:797
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:801
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:807
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:812
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:816
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:848
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:856
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:864
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:874
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:894
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:900
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:907
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:915
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:921
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:930
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:940
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:948
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:956
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:964
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:974
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:982
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:992
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:999
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1008
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1018
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1022
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1028
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1032
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1038
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1047
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1057
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1061
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1067
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1076
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1080
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1086
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1107
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1120
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1127
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1131
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1137
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1141
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1147
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1154
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1162
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1166
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1180
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1184
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1188
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1193
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1201
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1207
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1216
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1227
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1231
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1237
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1241
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1247
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1251
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1257
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1281
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1300
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1304
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1308
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1313
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1317
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1324
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1332
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1339
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1344
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1351
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1356
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1360
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1384
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1388
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1394
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1400
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1418
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1435
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1458
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1462
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1466
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1471
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1475
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1481
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1494
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1505
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1518
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1522
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1532
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1545
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1558
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1564
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1570
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1577
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1585
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1594
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1598
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1602
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1606
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1610
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1614
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1621
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1625
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1631
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1638
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1647
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1651
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1657
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1661
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1665
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1669
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1673
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1677
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1681
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1685
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1693
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1697
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1705
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1709
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1721
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1725
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1729
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1741
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1745
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1749
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1753
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1757
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1769
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1773
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1785
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1789
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1793
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1797
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1801
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1805
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1813
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1817
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1821
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1825
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1841
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1845
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1849
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1853
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1866
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1873
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1880
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1890
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1894
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1900
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1907
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1915
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1919
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1923
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1927
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1933
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1937
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1943
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1950
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1957
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1966
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1996
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2000
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2004
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2010
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2016
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2020
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2027
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2033
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2037
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2043
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2051
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2060
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2069
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2077
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2085
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2108
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2131
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2138
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2145
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2153
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2160
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2167
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2176
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2180
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2184
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2190
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2194
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2200
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2204
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2210
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2214
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2225
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2231
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2236
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2240
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2244
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2248
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2252
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2256
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2260
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2264
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2268
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2274
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2278
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2282
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2286
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2291
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2296
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2302
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2309
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2315
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2329
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2339
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2346
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2357
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2368
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2372
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2378
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2388
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2394
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2398
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2404
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2410
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2414
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2418
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2422
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2428
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2440
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2446
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2450
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2456
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2460
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2466
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2472
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2483
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2489
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2493
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2497
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2501
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2505
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2509
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2517
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2525
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2535
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2576
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2580
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2586
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2592
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2597
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2598
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2599
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2604
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2621
		{
			yyLOCAL = &tree.AlterSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2637
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2648
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2657
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2661
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2667
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2674
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[2].str != "" {
				t := strings.ToLower(yyDollar[2].str)
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				case "ivfflat":
					keyTyp = tree.INDEX_TYPE_IVFFLAT
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}

			opt := &tree.AlterOptionReindex{
				ColumnName: yyDollar[4].unresolvedNameUnion(),
				KeyType:    keyTyp,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2704
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2713
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2723
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2732
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2742
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2752
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2761
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2769
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2773
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2777
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2781
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2785
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2794
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2800
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2804
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2808
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2812
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2816
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2820
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2824
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2828
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2833
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2864
		{
			yyVAL.str = ""
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2868
		{
			yyVAL.str = string("COLUMN")
		}
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2873
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2879
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2885
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2894
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2898
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2904
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2911
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2919
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2926
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2933
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2940
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2947
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2954
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2962
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2969
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2976
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2985
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2989
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2996
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3008
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3016
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3024
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3037
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3043
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3054
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3065
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3069
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3074
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3078
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3083
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3087
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3103
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3107
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3111
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3115
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3119
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3123
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3127
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3131
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3135
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3139
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3143
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3147
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3151
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3155
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3159
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3163
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3169
		{
			yyVAL.item = nil
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3174
		{
			yyVAL.item = nil
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3214
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3220
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3228
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3232
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3236
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3245
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3249
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3255
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3260
		{
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3264
		{
		}
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3269
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3279
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3289
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3297
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3303
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3309
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3315
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3321
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3327
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3333
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3342
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3346
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3350
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3354
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3358
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3362
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3366
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3370
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3376
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3383
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3393
		{
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3395
		{
		}
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3404
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3414
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3423
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3427
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3431
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3437
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3443
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3449
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3455
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3464
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3474
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3486
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3490
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3496
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3508
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3522
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3528
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3535
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3540
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3544
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3548
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3553
		{
			yyVAL.str = ""
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3557
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3563
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3576
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3580
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3586
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3591
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3595
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3599
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3605
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3611
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3615
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3621
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3627
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3631
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3635
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3641
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3645
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3669
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3678
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3687
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3696
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3700
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3706
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3715
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3724
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3734
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3738
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3744
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3750
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3756
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3760
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3766
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3772
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3781
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3788
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3799
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3804
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3811
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3827
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3840
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3851
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3855
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3861
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3866
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3873
		{
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3875
		{
		}
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3878
		{
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3887
		{
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3891
		{
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3896
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3905
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3912
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3918
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3926
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3933
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3940
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3960
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3970
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3974
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3980
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3987
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3993
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4001
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4008
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4015
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4034
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4038
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4043
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4047
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4051
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4057
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4066
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4070
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4076
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4080
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4086
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4090
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4096
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4101
		{
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4105
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4112
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4116
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4123
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4128
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4132
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4138
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4142
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4148
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4152
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4157
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4161
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4174
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4181
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4188
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4206
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4225
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4231
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4238
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4242
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4255
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4259
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4264
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4268
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4275
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4280
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4287
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4293
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4297
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4301
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4305
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4309
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4313
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4319
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4326
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4335
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4339
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4345
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4353
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4357
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4362
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4366
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4372
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4376
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4380
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4385
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4389
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4395
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4401
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4405
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4411
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4416
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4420
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4424
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4429
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4433
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4437
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4442
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4446
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4454
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4458
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4462
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4476
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4480
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4490
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4500
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4510
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4522
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4530
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4538
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4547
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4555
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4563
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4571
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4579
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4587
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4595
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4603
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4611
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4621
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4632
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4646
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4650
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4654
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4659
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4663
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4667
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4676
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4680
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4685
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4689
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4694
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4698
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4704
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4708
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4714
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4718
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4723
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4727
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4732
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4740
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4746
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4754
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4762
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4772
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4778
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4787
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4796
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4805
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4815
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4819
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4829
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4833
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4837
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4841
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4847
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4857
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4861
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4867
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4873
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4877
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4883
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4889
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4893
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4897
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4907
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4913
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4917
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4923
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4927
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4933
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4937
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4947
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4960
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4966
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4972
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4985
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4996
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5003
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5007
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:5013
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5023
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5027
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5031
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5036
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5040
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5044
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5048
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5053
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5057
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5061
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5065
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5069
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5074
		{
			yyVAL.str = ""
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5078
		{
			yyVAL.str = yyDollar[1].str
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5082
		{
			yyVAL.str = yyDollar[2].str
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5088
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5094
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5098
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5102
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5106
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5110
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5116
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 842:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5152
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5162
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5168
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 845:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5174
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5184
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5189
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5195
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5202
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5206
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5212
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5218
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5223
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5227
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5231
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5235
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5242
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5254
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5259
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5265
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5272
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5276
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5282
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5288
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5292
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5296
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5302
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5308
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5314
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5323
		{
			yyLOCAL = &tree.CreateView{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5335
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5347
		{
			yyVAL.str = yyDollar[1].str
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5351
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5357
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5361
		{
			yyVAL.str = "DEFINER = "
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5365
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5370
		{
			yyVAL.str = ""
		}
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5374
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5388
		{
			yyVAL.str = ""
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5396
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5402
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5412
		{
			yyVAL.str = yyDollar[1].str
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5416
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5422
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5429
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5435
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5443
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5449
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5456
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5463
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5471
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5477
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5486
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5498
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5510
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5522
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5528
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5535
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5543
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5549
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5557
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5563
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5571
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5577
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5586
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5590
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5595
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5599
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5606
		{
			yyVAL.str = yyDollar[3].str
		}
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5611
		{
			yyVAL.str = ""
		}
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5615
		{
			yyVAL.str = yyDollar[2].str
		}
	case 921:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5621
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5635
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5645
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5649
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5655
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5661
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5667
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5676
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5685
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5694
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5699
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5705
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5713
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5819
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5823
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5829
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5839
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5843
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5849
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5859
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5863
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5867
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5872
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5876
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5882
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5889
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5895
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5904
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5911
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5920
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5924
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5930
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5944
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5948
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5952
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5957
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5961
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5965
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5969
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5975
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5994
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5998
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6020
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6024
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6028
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6032
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6036
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6042
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6046
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6052
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6057
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6062
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6066
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6070
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6074
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6078
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6082
		{
			yyLOCAL = tree.INDEX_TYPE_IVFFLAT
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6088
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6099
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6103
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6113
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6117
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6122
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6126
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6132
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6136
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6142
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6146
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6150
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6155
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6159
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6165
		{
			yyLOCAL = &tree.CreateConnector{
				ConnectorName: yyDollar[3].tableNameUnion(),
				Options:       yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6174
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6185
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6196
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6207
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6211
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6217
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6229
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6238
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6251
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6258
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6268
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6278
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6286
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6297
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6301
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6306
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6310
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6317
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6328
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6341
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6355
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6359
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6363
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6370
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6377
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6384
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6391
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6395
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6399
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6403
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6407
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6414
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6421
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6425
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6432
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6439
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6443
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6450
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6457
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6464
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6471
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6475
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6480
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6484
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6488
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6493
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6497
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6507
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6511
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6518
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6525
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6529
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6538
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6542
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6548
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6552
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6558
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6567
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6577
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6581
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6587
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6591
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6597
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6604
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6613
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6617
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6622
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6626
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6631
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6635
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6640
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6644
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6654
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6658
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6669
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6677
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6685
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6693
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6704
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6713
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6723
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6733
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6737
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6742
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6746
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6752
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6756
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6762
		{
			yyLOCAL = &tree.CreateConnectorWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6766
		{
			yyLOCAL = &tree.CreateConnectorWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6771
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6775
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6781
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6785
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6791
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6795
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6800
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6804
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6810
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6814
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6818
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6824
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6828
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6832
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6836
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6840
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6844
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6848
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6853
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6857
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6861
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6865
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6869
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6873
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6877
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6881
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6885
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6889
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6893
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6897
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6901
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6905
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6909
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6913
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6917
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6921
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6925
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6929
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6933
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6937
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6941
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6945
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6949
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6953
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6957
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6961
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6967
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6971
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6977
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6983
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6987
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6993
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6997
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7001
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7005
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7009
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7013
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7027
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7031
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7040
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7045
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7051
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7058
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7062
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7068
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7072
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7076
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7082
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7086
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7092
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7101
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7110
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				case "ivfflat":
					keyTyp = tree.INDEX_TYPE_IVFFLAT
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7141
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				case "ivfflat":
					keyTyp = tree.INDEX_TYPE_IVFFLAT
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7174
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7188
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7194
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7203
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7212
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7221
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7230
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7240
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7248
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7254
		{
			yyVAL.str = ""
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7258
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7268
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7274
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7280
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7300
		{
			yyVAL.str = ""
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7304
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7310
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7316
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7320
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7324
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7330
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7334
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7338
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7342
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7348
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7352
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7356
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7361
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7365
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7371
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7375
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7381
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7385
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7389
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7393
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7397
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7401
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7406
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7410
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7414
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7418
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7422
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7426
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7430
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7434
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7438
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7442
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7455
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7459
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7463
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7467
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7471
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7475
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7481
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7485
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7490
		{
			yyVAL.str = ""
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7494
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7500
		{
			yyVAL.str = ""
		}
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7504
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1235:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7510
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7522
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7529
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7536
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7543
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7550
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7559
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7565
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7571
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7575
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7579
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7583
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7587
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7592
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7599
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7603
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7607
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7612
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7616
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7621
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7625
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7641
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7647
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7651
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7655
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7659
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7663
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7667
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7671
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7675
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7679
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7683
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7687
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7691
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7695
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7701
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7705
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7709
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7713
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7717
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7721
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7725
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7729
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7733
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7737
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7741
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7745
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7750
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7758
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7762
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7766
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7770
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7779
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7783
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7787
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7791
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7795
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7801
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7809
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7817
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7826
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7830
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7835
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7839
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7845
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7849
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7855
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7864
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7876
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7893
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7910
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7923
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7936
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7948
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7962
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7977
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7992
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8009
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8024
		{
		}
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8031
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8035
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8039
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8045
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8049
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8053
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8057
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8063
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8067
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8071
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8077
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8085
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8095
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8099
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8106
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8111
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8115
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8120
		{
			yyVAL.str = ","
		}
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8124
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8129
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8136
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8162
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8173
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8183
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8193
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8203
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8212
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8221
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8231
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8241
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8251
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8261
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8271
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8281
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8291
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8301
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8311
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8321
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8331
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8341
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8360
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8368
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8376
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8384
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8392
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8402
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8410
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8419
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8427
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8435
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8443
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8451
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8462
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8472
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8484
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8495
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8517
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8553
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8565
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8577
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8588
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8596
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8603
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8610
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8622
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8630
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8640
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8650
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8658
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8669
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8678
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8687
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8695
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8705
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8713
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8723
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8727
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8733
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8737
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8756
		{
		}
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8758
		{
		}
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8799
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8810
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8814
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8818
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8824
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8829
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8833
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8839
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8843
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8850
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8854
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8858
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8866
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8870
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8874
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8878
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8884
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8888
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8892
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8896
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8900
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8904
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8908
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8912
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8916
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8920
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8928
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8932
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8936
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8940
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8944
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8948
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8952
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8956
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8960
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8964
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8970
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8974
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8980
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8984
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8991
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8995
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8999
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9005
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9009
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9013
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9017
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9021
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9025
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9029
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9035
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9039
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9043
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9047
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9053
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9066
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9071
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9077
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9081
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9094
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9099
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9103
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9107
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9111
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9115
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9122
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9126
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9140
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9144
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9151
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9162
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9167
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9173
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9185
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9197
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9209
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9222
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9235
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9248
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9261
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9274
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9287
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9300
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9313
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9326
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9339
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9354
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9381
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9423
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9459
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9495
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9512
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9524
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9544
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9564
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9584
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9600
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9613
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9626
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9639
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9652
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9664
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9676
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9688
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9700
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9712
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9724
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9736
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9748
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9760
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9773
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9786
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9799
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9812
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9827
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9835
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9844
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9854
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9877
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9882
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9888
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9895
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9899
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9904
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9908
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9914
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9920
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9927
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9934
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9943
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9950
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9957
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9966
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9970
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9974
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9980
		{
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9982
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9992
		{
			yyVAL.str = ""
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9996
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
